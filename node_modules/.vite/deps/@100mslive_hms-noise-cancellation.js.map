{
  "version": 3,
  "sources": ["../../@100mslive/hms-video-store/package.json", "../../@100mslive/hms-video-store/src/schema/room.ts", "../../@100mslive/hms-video-store/src/schema/schema.ts", "../../@100mslive/hms-video-store/src/schema/message.ts", "../../@100mslive/hms-video-store/src/schema/notification.ts", "../../@100mslive/hms-video-store/src/schema/playlist.ts", "../../@100mslive/hms-video-store/src/selectors/selectors.ts", "../../@100mslive/hms-video-store/src/selectors/selectorUtils.ts", "../../@100mslive/hms-video-store/src/utils/logger.ts", "../../@100mslive/hms-video-store/src/media/streams/HMSMediaStream.ts", "../../@100mslive/hms-video-store/src/utils/support.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsEvent.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsEventDomains.ts", "../../@100mslive/hms-video-store/src/analytics/domain-analytics.ts", "../../@100mslive/hms-video-store/src/utils/analytics-deviceId.ts", "../../@100mslive/hms-video-store/src/error/ErrorCodes.ts", "../../@100mslive/hms-video-store/src/error/HMSException.ts", "../../@100mslive/hms-video-store/src/error/HMSTrackException.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSTrackExceptionTrackType.ts", "../../@100mslive/hms-video-store/src/signal/jsonrpc/models.ts", "../../@100mslive/hms-video-store/src/error/ErrorFactory.ts", "../../@100mslive/hms-video-store/src/utils/local-storage-polyfill.ts", "../../@100mslive/hms-video-store/src/utils/local-storage.ts", "../../@100mslive/hms-video-store/src/utils/validations.ts", "../../@100mslive/hms-video-store/src/utils/user-agent.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsEventFactory.ts", "../../@100mslive/hms-video-store/src/utils/json.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSTrack.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSAudioTrack.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSLocalAudioTrack.ts", "../../@100mslive/hms-video-store/src/device-manager/DeviceStorage.ts", "../../@100mslive/hms-video-store/src/plugins/audio/HMSAudioPlugin.ts", "../../@100mslive/hms-video-store/src/analytics/MediaPluginsAnalyticsFactory.ts", "../../@100mslive/hms-video-store/src/plugins/audio/AudioPluginsAnalytics.ts", "../../@100mslive/hms-video-store/src/plugins/audio/HMSAudioPluginsManager.ts", "../../@100mslive/hms-video-store/src/error/utils.ts", "../../@100mslive/hms-video-store/src/utils/track.ts", "../../@100mslive/hms-video-store/src/utils/media.ts", "../../@100mslive/hms-video-store/src/utils/queue.ts", "../../@100mslive/hms-video-store/src/utils/timer-utils.ts", "../../@100mslive/hms-video-store/src/utils/track-audio-level-monitor.ts", "../../@100mslive/hms-video-store/src/interfaces/peer/hms-peer.ts", "../../@100mslive/hms-video-store/src/interfaces/room.ts", "../../@100mslive/hms-video-store/src/interfaces/simulcast-layers.ts", "../../@100mslive/hms-video-store/src/interfaces/track-settings.ts", "../../@100mslive/hms-video-store/src/interfaces/devices.ts", "../../@100mslive/hms-video-store/src/media/settings/HMSAudioTrackSettings.ts", "../../@100mslive/hms-video-store/src/media/settings/HMSVideoTrackSettings.ts", "../../@100mslive/hms-video-store/src/media/settings/HMSTrackSettings.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSRemoteAudioTrack.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSVideoTrack.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSLocalVideoTrack.ts", "../../@100mslive/hms-video-store/src/media/tracks/VideoElementManager.ts", "../../@100mslive/hms-video-store/src/media/tracks/trackUtils.ts", "../../@100mslive/hms-video-store/src/utils/intersection-observer.ts", "../../@100mslive/hms-video-store/src/utils/resize-observer.ts", "../../@100mslive/hms-video-store/src/plugins/video/HMSVideoPlugin.ts", "../../@100mslive/hms-video-store/src/utils/math.ts", "../../@100mslive/hms-video-store/src/plugins/video/VideoPluginsAnalytics.ts", "../../@100mslive/hms-video-store/src/plugins/video/HMSVideoPluginsManager.ts", "../../@100mslive/hms-video-store/src/plugins/video/HMSMediaStreamPluginsManager.ts", "../../@100mslive/hms-video-store/src/sdk/LocalTrackManager.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsTimer.ts", "../../@100mslive/hms-video-store/src/utils/constants.ts", "../../@100mslive/hms-video-store/src/media/tracks/HMSRemoteVideoTrack.ts", "../../@100mslive/hms-video-store/src/media/streams/HMSLocalStream.ts", "../../@100mslive/hms-video-store/src/media/streams/HMSRemoteStream.ts", "../../@100mslive/hms-video-store/src/rtc-stats/utils.ts", "../../@100mslive/hms-video-store/src/rtc-stats/HMSWebrtcStats.ts", "../../@100mslive/hms-video-store/src/rtc-stats/HMSWebrtcInternals.ts", "../../@100mslive/hms-video-store/src/sdk/models/peer/HMSPeer.ts", "../../@100mslive/hms-video-store/src/utils/id-factory.ts", "../../@100mslive/hms-video-store/src/sdk/models/peer/HMSLocalPeer.ts", "../../@100mslive/hms-video-store/src/sdk/models/peer/HMSRemotePeer.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/utils.ts", "../../@100mslive/hms-video-store/src/sdk/HMSPeerListIterator.ts", "../../@100mslive/hms-video-store/src/playlist-manager/AudioContextManager.ts", "../../@100mslive/hms-video-store/src/utils/typed-event-emitter.ts", "../../@100mslive/hms-video-store/src/playlist-manager/PlaylistAudioManager.ts", "../../@100mslive/hms-video-store/src/playlist-manager/PlaylistVideoManager.ts", "../../@100mslive/hms-video-store/src/playlist-manager/PlaylistManager.ts", "../../@100mslive/hms-video-store/src/selectors/playlistselectors.ts", "../../@100mslive/hms-video-store/src/selectors/selectorsByID.ts", "../../@100mslive/hms-video-store/src/selectors/common.ts", "../../@100mslive/hms-video-store/src/common/ui-logger.ts", "../../@100mslive/hms-video-store/src/selectors/derivedSelectors.ts", "../../@100mslive/hms-video-store/src/selectors/selectorsByReference.ts", "../../@100mslive/hms-video-store/src/reactive-store/HMSReactiveStore.ts", "../../@100mslive/hms-video-store/src/reactive-store/HMSNotifications.ts", "../../@100mslive/hms-video-store/src/reactive-store/common/mapping.ts", "../../@100mslive/hms-video-store/src/reactive-store/sdkUtils/ActionBatcher.ts", "../../@100mslive/hms-video-store/src/reactive-store/sdkUtils/sdkUtils.ts", "../../@100mslive/hms-video-store/src/reactive-store/sdkUtils/storeMergeUtils.ts", "../../@100mslive/hms-video-store/src/reactive-store/adapter.ts", "../../@100mslive/hms-video-store/src/reactive-store/HMSPlaylist.ts", "../../@100mslive/hms-video-store/src/reactive-store/HMSSessionStore.ts", "../../@100mslive/hms-video-store/src/controller/beam/BeamSpeakerLabelsLogger.ts", "../../@100mslive/hms-video-store/src/diagnostics/constants.ts", "../../@100mslive/hms-video-store/src/diagnostics/CQSCalculator.ts", "../../@100mslive/hms-video-store/src/diagnostics/DiagnosticsStatsCollector.ts", "../../@100mslive/hms-video-store/src/diagnostics/interfaces.ts", "../../@100mslive/hms-video-store/src/diagnostics/ConnectivityCheck.ts", "../../@100mslive/hms-video-store/src/sdk/models/HMSRoom.ts", "../../@100mslive/hms-video-store/src/utils/fetch.ts", "../../@100mslive/hms-video-store/src/diagnostics/HMSDiagnostics.ts", "../../@100mslive/hms-video-store/src/reactive-store/HMSSDKActions.ts", "../../@100mslive/hms-video-store/src/common/storeName.ts", "../../@100mslive/hms-video-store/src/sdk/NetworkTestManager.ts", "../../@100mslive/hms-video-store/src/sdk/RoleChangeManager.ts", "../../@100mslive/hms-video-store/src/analytics/HTTPAnalyticsTransport.ts", "../../@100mslive/hms-video-store/src/notification-manager/HMSNotifications.ts", "../../@100mslive/hms-video-store/src/sdk/store/Store.ts", "../../@100mslive/hms-video-store/src/sdk/WakeLockManager.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsEventsService.ts", "../../@100mslive/hms-video-store/src/audio-sink-manager/AudioSinkManager.ts", "../../@100mslive/hms-video-store/src/common/PluginUsageTracker.ts", "../../@100mslive/hms-video-store/src/device-manager/DeviceManager.ts", "../../@100mslive/hms-video-store/src/device-manager/AudioOutputManager.ts", "../../@100mslive/hms-video-store/src/end-call-feedback/feedback.ts", "../../@100mslive/hms-video-store/src/events/EventBus.ts", "../../@100mslive/hms-video-store/src/events/HMSInternalEvent.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/ActiveSpeakerManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/BroadcastManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/ConnectionQualityManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/TrackManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/onDemandTrackManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/PeerListManager.ts", "../../@100mslive/hms-video-store/src/utils/date.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/PeerManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/PolicyChangeManager.ts", "../../@100mslive/hms-video-store/src/signal/init/models.ts", "../../@100mslive/hms-video-store/src/utils/whiteboard.ts", "../../@100mslive/hms-video-store/src/session-store/interactivity-center/HMSWhiteboardCenter.ts", "../../@100mslive/hms-video-store/src/session-store/interactivity-center/HMSInteractivityCenter.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/PollsManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/RequestManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/RoomUpdateManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/SessionMetadataManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/managers/WhiteboardManager.ts", "../../@100mslive/hms-video-store/src/notification-manager/NotificationManager.ts", "../../@100mslive/hms-video-store/src/session-store/index.ts", "../../@100mslive/hms-video-store/src/transport/models/JoinParameters.ts", "../../@100mslive/hms-video-store/src/transport/models/TransportFailureCategory.ts", "../../@100mslive/hms-video-store/src/transport/models/TransportState.ts", "../../@100mslive/hms-video-store/src/utils/promise.ts", "../../@100mslive/hms-video-store/src/transport/RetryScheduler.ts", "../../@100mslive/hms-video-store/src/analytics/signal-transport/LocalStoageEvents.ts", "../../@100mslive/hms-video-store/src/analytics/AnalyticsTransport.ts", "../../@100mslive/hms-video-store/src/analytics/signal-transport/SignalAnalyticsTransport.ts", "../../@100mslive/hms-video-store/src/analytics/stats/BaseStatsAnalytics.ts", "../../@100mslive/hms-video-store/src/analytics/stats/PublishStatsAnalytics.ts", "../../@100mslive/hms-video-store/src/analytics/stats/SubscribeStatsAnalytics.ts", "../../@100mslive/hms-video-store/src/connection/model.ts", "../../@100mslive/hms-video-store/src/utils/session-description.ts", "../../@100mslive/hms-video-store/src/connection/HMSConnection.ts", "../../@100mslive/hms-video-store/src/connection/publish/publishConnection.ts", "../../@100mslive/hms-video-store/src/connection/subscribe/subscribeConnection.ts", "../../@100mslive/hms-video-store/src/connection/HMSDataChannel.ts", "../../@100mslive/hms-video-store/src/utils/ice-server-config.ts", "../../@100mslive/hms-video-store/src/signal/init/index.ts", "../../@100mslive/hms-video-store/src/signal/jsonrpc/index.ts", "../../@100mslive/hms-video-store/src/utils/network-info.ts", "../../@100mslive/hms-video-store/src/transport/index.ts", "../../@100mslive/hms-video-store/src/utils/jwt.ts", "../../@100mslive/hms-video-store/src/sdk/index.ts", "../../@100mslive/hms-video-store/src/webrtc-stats/webrtc-stats-store.ts", "../../@100mslive/hms-video-store/src/webrtc-stats/HMSStats.ts", "../../@100mslive/hms-video-store/src/webrtc-stats/selectors.ts", "../../@100mslive/hms-noise-cancellation/src/HMSKrispPlugin.ts", "../../@100mslive/hms-noise-cancellation/src/krisp/index.js", "../../@100mslive/hms-noise-cancellation/src/utils.ts"],
  "sourcesContent": ["{\n  \"version\": \"0.12.35\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/100mslive/web-sdks.git\",\n    \"directory\": \"packages/hms-video-store\"\n  },\n  \"main\": \"dist/index.cjs.js\",\n  \"module\": \"dist/index.js\",\n  \"typings\": \"dist/index.d.ts\",\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"engines\": {\n    \"node\": \">=12\"\n  },\n  \"exports\": {\n    \".\": {\n      \"require\": \"./dist/index.cjs.js\",\n      \"import\": \"./dist/index.js\",\n      \"default\": \"./dist/index.js\"\n    }\n  },\n  \"sideEffects\": false,\n  \"scripts\": {\n    \"prestart\": \"rm -rf dist && yarn types:build\",\n    \"start\": \"concurrently \\\"yarn dev\\\" \\\"yarn types\\\"\",\n    \"dev\": \"node ../../scripts/dev\",\n    \"build:only\": \"node ../../scripts/build\",\n    \"build\": \"yarn build:only && yarn types:build\",\n    \"types\": \"tsc -w\",\n    \"types:build\": \"tsc -p tsconfig.json\",\n    \"format\": \"prettier --write src/**/*.ts\",\n    \"test\": \"jest --maxWorkers=1\",\n    \"test:watch\": \"jest --watch\",\n    \"test:coverage\": \"jest --coverage\",\n    \"lint\": \"eslint -c ../../.eslintrc .\",\n    \"lint:fix\": \"yarn lint --fix\",\n    \"prepare\": \"yarn build\",\n    \"size\": \"size-limit\",\n    \"analyze\": \"size-limit --why\",\n    \"docs\": \"rm -rf ./docs && typedoc && rm -f ./docs/README.md && mkdir ./docs/home &&mv ./docs/modules.md ./docs/home/content.md && node ../../scripts/docs-store && npx prettier --write './docs/**/*'\"\n  },\n  \"name\": \"@100mslive/hms-video-store\",\n  \"author\": \"100ms\",\n  \"dependencies\": {\n    \"eventemitter2\": \"^6.4.9\",\n    \"immer\": \"^9.0.6\",\n    \"lodash.isequal\": \"^4.5.0\",\n    \"reselect\": \"4.0.0\",\n    \"sdp-transform\": \"^2.14.1\",\n    \"ua-parser-js\": \"^1.0.1\",\n    \"uuid\": \"^8.3.2\",\n    \"webrtc-adapter\": \"^8.0.0\",\n    \"zustand\": \"3.5.7\"\n  },\n  \"devDependencies\": {\n    \"@types/dom-screen-wake-lock\": \"^1.0.1\",\n    \"@types/lodash.isequal\": \"^4.5.8\",\n    \"@types/sdp-transform\": \"^2.4.4\",\n    \"@types/ua-parser-js\": \"^0.7.36\",\n    \"@types/uuid\": \"^8.3.0\",\n    \"jest-canvas-mock\": \"^2.3.1\",\n    \"jsdom-worker\": \"^0.3.0\",\n    \"tslib\": \"^2.2.0\"\n  },\n  \"description\": \"@100mslive Core SDK which abstracts the complexities of webRTC while providing a reactive store for data management with a unidirectional data flow\",\n  \"keywords\": [\n    \"video\",\n    \"webrtc\",\n    \"conferencing\",\n    \"100ms\"\n  ],\n  \"gitHead\": \"21175fa295899839b6bfd2a7fa5af06150de1df9\"\n}\n", "import { HMSPeerID } from './peer';\nimport { HLSVariant, HMSHLS, HMSRecording, HMSRTMP, HMSTranscriptionInfo } from '../interfaces';\n\nexport type { HMSRecording, HMSRTMP, HMSHLS, HLSVariant };\nexport type HMSRoomID = string;\n\n/**\n * Check out internal-docs/RoomStateFlow.tldr for flow of room state\n * View it by\n * - Installing tldraw for VSCode(https://marketplace.visualstudio.com/items?itemName=tldraw-org.tldraw-vscode), or\n * - Open the file in https://www.tldraw.com/\n */\nexport enum HMSRoomState {\n  Disconnected = 'Disconnected',\n  Preview = 'Preview',\n  Connecting = 'Connecting',\n  Connected = 'Connected',\n  Reconnecting = 'Reconnecting',\n  Disconnecting = 'Disconnecting',\n  Failed = 'Failed',\n}\n\nexport interface HMSRoom {\n  id: HMSRoomID;\n  name: string;\n  isConnected?: boolean;\n  peers: HMSPeerID[];\n  localPeer: HMSPeerID;\n  roomState: HMSRoomState;\n  recording: HMSRecording;\n  rtmp: HMSRTMP;\n  hls: HMSHLS;\n  sessionId: string;\n  startedAt?: Date;\n  joinedAt?: Date;\n  transcriptions?: HMSTranscriptionInfo[];\n  /**\n   * if this number is available room.peers is not guaranteed to have all the peers.\n   */\n  peerCount?: number;\n  isLargeRoom?: boolean;\n  isEffectsEnabled?: boolean;\n  disableNoneLayerRequest?: boolean;\n  isVBEnabled?: boolean;\n  effectsKey?: string;\n  isHipaaEnabled?: boolean;\n  isNoiseCancellationEnabled?: boolean;\n}\n", "import { HMSException } from './error';\nimport { HMSMessage, HMSMessageID } from './message';\nimport { HMSPeer, HMSPeerID, HMSSpeaker, HMSTrack, HMSTrackID } from './peer';\nimport { HMSPlaylist } from './playlist';\nimport { HMSRoleChangeStoreRequest } from './requests';\nimport { HMSRole } from './role';\nimport { HMSRoom, HMSRoomState } from './room';\nimport { HMSMediaSettings } from './settings';\nimport { DeviceMap, HMSConnectionQuality, HMSPeerStats, HMSPoll, HMSTrackStats, HMSWhiteboard } from '../interfaces';\n\nexport interface HMSGenericTypes {\n  sessionStore: Record<string, any>;\n}\n\n/*\n * Defines the schema of the central store. UI Components are aware of the presence\n * of this central store. This is the global state - the single source of immutable truth.\n */\nexport interface HMSStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  room: HMSRoom;\n  peers: Record<HMSPeerID, HMSPeer>;\n  speakers: Record<HMSTrackID, HMSSpeaker>;\n  connectionQualities: Record<HMSPeerID, HMSConnectionQuality>;\n  tracks: Record<HMSTrackID, HMSTrack>;\n  playlist: HMSPlaylist<any>;\n  messages: {\n    byID: Record<HMSMessageID, HMSMessage>;\n    allIDs: HMSMessageID[];\n  };\n  settings: HMSMediaSettings;\n  devices: DeviceMap;\n  roles: Record<string, HMSRole>;\n  templateAppData: Record<string, string>;\n  appData?: Record<string, any>;\n  roleChangeRequests: HMSRoleChangeStoreRequest[];\n  /** @deprecated use `sessionStore` instead */\n  sessionMetadata?: any;\n  preview?: {\n    localPeer?: HMSPeerID;\n    asRole?: string;\n    videoTrack?: HMSTrackID;\n    audioTrack?: HMSTrackID;\n  };\n  errors: HMSException[]; // for the convenience of debugging and seeing any error in devtools\n  sessionStore: T['sessionStore'];\n  polls: Record<string, HMSPoll>;\n  /** @internal */\n  hideLocalPeer: boolean;\n  whiteboards: Record<string, HMSWhiteboard>;\n}\n\nexport interface HMSStatsStore {\n  remoteTrackStats: Record<HMSTrackID, HMSTrackStats | undefined>;\n  localTrackStats: Record<HMSTrackID, HMSTrackStats[] | undefined>;\n  peerStats: Record<HMSPeerID, HMSPeerStats | undefined>;\n  localPeer: {\n    id: HMSPeerID;\n    videoTrack?: HMSTrackID;\n    audioTrack?: HMSTrackID;\n  };\n}\n\n/**\n * @internal\n */\nexport const createDefaultStoreState = <T extends HMSGenericTypes>(): HMSStore<T> => {\n  return {\n    room: {\n      id: '',\n      isConnected: false,\n      name: '',\n      peers: [],\n      localPeer: '',\n      roomState: HMSRoomState.Disconnected,\n      recording: {\n        browser: {\n          running: false,\n        },\n        server: {\n          running: false,\n        },\n        hls: { running: false },\n      },\n      rtmp: {\n        running: false,\n      },\n      hls: {\n        running: false,\n        variants: [],\n      },\n      sessionId: '',\n    },\n    peers: {},\n    tracks: {},\n    playlist: {\n      audio: {\n        list: {},\n        selection: { id: '', hasPrevious: false, hasNext: false },\n        progress: 0,\n        volume: 0,\n        currentTime: 0,\n        playbackRate: 1.0,\n      },\n      video: {\n        list: {},\n        selection: { id: '', hasPrevious: false, hasNext: false },\n        progress: 0,\n        volume: 0,\n        currentTime: 0,\n        playbackRate: 1.0,\n      },\n    },\n    messages: { byID: {}, allIDs: [] },\n    speakers: {},\n    connectionQualities: {},\n    settings: {\n      audioInputDeviceId: '',\n      audioOutputDeviceId: '',\n      videoInputDeviceId: '',\n    },\n    devices: {\n      audioInput: [],\n      audioOutput: [],\n      videoInput: [],\n    },\n    roles: {},\n    roleChangeRequests: [],\n    errors: [],\n    sessionStore: {},\n    templateAppData: {},\n    polls: {},\n    whiteboards: {},\n    hideLocalPeer: false,\n  };\n};\n\nexport const createDefaultStatsStore = (): HMSStatsStore => {\n  return {\n    peerStats: {},\n    remoteTrackStats: {},\n    localTrackStats: {},\n    localPeer: { id: '' },\n  };\n};\n", "import { HMSPeerID } from './peer';\nimport { HMSRoleName } from './role';\n\nexport type HMSMessageID = string;\n\n/**\n * @internal\n */\nexport enum HMSMessageType {\n  CHAT = 'chat',\n}\n\nexport interface HMSMessage {\n  id: HMSMessageID;\n  sender?: HMSPeerID;\n  senderName?: string;\n  senderUserId?: string;\n  senderRole?: string;\n  recipientPeer?: HMSPeerID;\n  recipientRoles?: HMSRoleName[];\n  time: Date;\n  read: boolean;\n  type: string;\n  message: any;\n  /**\n   * true if message will not be put it in store because it has been ignored\n   */\n  ignored: boolean;\n}\n\n/**\n * @internal\n */\nexport interface HMSMessageInput {\n  recipientPeer?: HMSPeerID;\n  recipientRoles?: HMSRoleName[];\n  type?: string;\n  message: any;\n  id: string;\n  time: number;\n}\n", "import { HMSDeviceChangeEvent } from './device-change';\nimport { HMSException } from './error';\nimport { HMSMessage } from './message';\nimport { HMSPeer, HMSTrack } from './peer';\nimport { HMSPlaylistItem } from './playlist';\nimport { HMSChangeMultiTrackStateRequest, HMSChangeTrackStateRequest, HMSLeaveRoomRequest } from './requests';\nimport { HMSPoll, HMSTranscriptionInfo } from '../internal';\n\ninterface BaseNotification {\n  id: number;\n  type: string;\n  message: string;\n  severity?: HMSNotificationSeverity;\n}\nexport interface HMSPeerNotification extends BaseNotification {\n  type:\n    | HMSNotificationTypes.PEER_JOINED\n    | HMSNotificationTypes.PEER_LEFT\n    | HMSNotificationTypes.NAME_UPDATED\n    | HMSNotificationTypes.METADATA_UPDATED\n    | HMSNotificationTypes.ROLE_UPDATED\n    | HMSNotificationTypes.HAND_RAISE_CHANGED;\n  data: HMSPeer;\n}\n\nexport interface HMSPeerListNotification extends BaseNotification {\n  type: HMSNotificationTypes.PEER_LIST;\n  data: HMSPeer[];\n}\nexport interface HMSTrackNotification extends BaseNotification {\n  type:\n    | HMSNotificationTypes.TRACK_ADDED\n    | HMSNotificationTypes.TRACK_DEGRADED\n    | HMSNotificationTypes.TRACK_UNMUTED\n    | HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED\n    | HMSNotificationTypes.TRACK_MUTED\n    | HMSNotificationTypes.TRACK_REMOVED\n    | HMSNotificationTypes.TRACK_RESTORED;\n  data: HMSTrack;\n}\nexport interface HMSMessageNotification extends BaseNotification {\n  type: HMSNotificationTypes.NEW_MESSAGE;\n  data: HMSMessage;\n}\nexport interface HMSExceptionNotification extends BaseNotification {\n  type: HMSNotificationTypes.ERROR;\n  data: HMSException;\n}\nexport interface HMSChangeTrackStateRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST;\n  data: HMSChangeTrackStateRequest;\n}\nexport interface HMSChangeMultiTrackStateRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST;\n  data: HMSChangeMultiTrackStateRequest;\n}\n\nexport interface HMSLeaveRoomRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.ROOM_ENDED | HMSNotificationTypes.REMOVED_FROM_ROOM;\n  data: HMSLeaveRoomRequest;\n}\nexport interface HMSDeviceChangeEventNotification extends BaseNotification {\n  type: HMSNotificationTypes.DEVICE_CHANGE_UPDATE;\n  data?: HMSDeviceChangeEvent;\n}\nexport interface HMSPlaylistItemNotification<T> extends BaseNotification {\n  type: HMSNotificationTypes.PLAYLIST_TRACK_ENDED;\n  data: HMSPlaylistItem<T>;\n}\n\nexport interface HMSReconnectionNotification extends BaseNotification {\n  type: HMSNotificationTypes.RECONNECTED | HMSNotificationTypes.RECONNECTING;\n  data: HMSException | null;\n}\n\nexport interface HMSPollNotification extends BaseNotification {\n  type: HMSNotificationTypes.POLL_STARTED | HMSNotificationTypes.POLL_STOPPED | HMSNotificationTypes.POLL_VOTES_UPDATED;\n  data: HMSPoll;\n}\n\nexport interface HMSTranscriptionNotification extends BaseNotification {\n  type: HMSNotificationTypes.TRANSCRIPTION_STATE_UPDATED;\n  data: HMSTranscriptionInfo[];\n}\nexport type HMSNotification =\n  | HMSPeerNotification\n  | HMSPeerListNotification\n  | HMSTrackNotification\n  | HMSMessageNotification\n  | HMSExceptionNotification\n  | HMSChangeTrackStateRequestNotification\n  | HMSChangeMultiTrackStateRequestNotification\n  | HMSLeaveRoomRequestNotification\n  | HMSDeviceChangeEventNotification\n  | HMSReconnectionNotification\n  | HMSTranscriptionNotification\n  | HMSPlaylistItemNotification<any>;\n\nexport enum HMSNotificationSeverity {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum HMSNotificationTypes {\n  PEER_JOINED = 'PEER_JOINED',\n  PEER_LEFT = 'PEER_LEFT',\n  PEER_LIST = 'PEER_LIST',\n  NEW_MESSAGE = 'NEW_MESSAGE',\n  ERROR = 'ERROR',\n  RECONNECTING = 'RECONNECTING',\n  RECONNECTED = 'RECONNECTED',\n  TRACK_ADDED = 'TRACK_ADDED',\n  TRACK_REMOVED = 'TRACK_REMOVED',\n  TRACK_MUTED = 'TRACK_MUTED',\n  TRACK_UNMUTED = 'TRACK_UNMUTED',\n  TRACK_DEGRADED = 'TRACK_DEGRADED',\n  TRACK_RESTORED = 'TRACK_RESTORED',\n  TRACK_DESCRIPTION_CHANGED = 'TRACK_DESCRIPTION_CHANGED',\n  ROLE_UPDATED = 'ROLE_UPDATED',\n  CHANGE_TRACK_STATE_REQUEST = 'CHANGE_TRACK_STATE_REQUEST',\n  CHANGE_MULTI_TRACK_STATE_REQUEST = 'CHANGE_MULTI_TRACK_STATE_REQUEST',\n  ROOM_ENDED = 'ROOM_ENDED',\n  REMOVED_FROM_ROOM = 'REMOVED_FROM_ROOM',\n  DEVICE_CHANGE_UPDATE = 'DEVICE_CHANGE_UPDATE',\n  PLAYLIST_TRACK_ENDED = 'PLAYLIST_TRACK_ENDED',\n  NAME_UPDATED = 'NAME_UPDATED',\n  METADATA_UPDATED = 'METADATA_UPDATED',\n  POLL_CREATED = 'POLL_CREATED',\n  POLL_STARTED = 'POLL_STARTED',\n  POLL_STOPPED = 'POLL_STOPPED',\n  POLL_VOTES_UPDATED = 'POLL_VOTES_UPDATED',\n  POLLS_LIST = 'POLLS_LIST',\n  HAND_RAISE_CHANGED = 'HAND_RAISE_CHANGED',\n  TRANSCRIPTION_STATE_UPDATED = 'TRANSCRIPTION_STATE_UPDATED',\n}\n\nexport type HMSNotificationMapping<T extends HMSNotificationTypes, C = any> = {\n  [HMSNotificationTypes.PEER_JOINED]: HMSPeerNotification;\n  [HMSNotificationTypes.PEER_LEFT]: HMSPeerNotification;\n  [HMSNotificationTypes.PEER_LIST]: HMSPeerListNotification;\n  [HMSNotificationTypes.NAME_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.METADATA_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.ROLE_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.TRACK_ADDED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_REMOVED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_MUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_UNMUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_DEGRADED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_RESTORED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_UNMUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.NEW_MESSAGE]: HMSMessageNotification;\n  [HMSNotificationTypes.ROOM_ENDED]: HMSLeaveRoomRequestNotification;\n  [HMSNotificationTypes.REMOVED_FROM_ROOM]: HMSLeaveRoomRequestNotification;\n  [HMSNotificationTypes.DEVICE_CHANGE_UPDATE]: HMSDeviceChangeEventNotification;\n  [HMSNotificationTypes.PLAYLIST_TRACK_ENDED]: HMSPlaylistItemNotification<C>;\n  [HMSNotificationTypes.ERROR]: HMSExceptionNotification;\n  [HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST]: HMSChangeTrackStateRequestNotification;\n  [HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST]: HMSChangeMultiTrackStateRequestNotification;\n  [HMSNotificationTypes.RECONNECTED]: HMSReconnectionNotification;\n  [HMSNotificationTypes.RECONNECTING]: HMSReconnectionNotification;\n  [HMSNotificationTypes.POLL_STARTED]: HMSPollNotification;\n  [HMSNotificationTypes.POLL_STOPPED]: HMSPollNotification;\n  [HMSNotificationTypes.POLL_VOTES_UPDATED]: HMSPollNotification;\n  [HMSNotificationTypes.POLLS_LIST]: HMSPollNotification;\n  [HMSNotificationTypes.POLL_CREATED]: HMSPollNotification;\n  [HMSNotificationTypes.HAND_RAISE_CHANGED]: HMSPeerNotification;\n  [HMSNotificationTypes.TRANSCRIPTION_STATE_UPDATED]: HMSTranscriptionNotification;\n}[T];\n\nexport type MappedNotifications<Type extends HMSNotificationTypes[]> = {\n  [index in keyof Type]: HMSNotificationMapping<Type[index]>;\n};\n\nexport type HMSNotificationTypeParam = HMSNotificationTypes | HMSNotificationTypes[] | undefined;\n\nexport type HMSNotificationInCallback<T extends HMSNotificationTypeParam> = T extends HMSNotificationTypes[]\n  ? MappedNotifications<T>[number]\n  : T extends HMSNotificationTypes\n  ? HMSNotificationMapping<T>\n  : HMSNotification;\n\nexport type HMSNotificationCallback<T extends HMSNotificationTypeParam> = (\n  notification: HMSNotificationInCallback<T>,\n) => void;\n\n/**\n * @category Core\n */\nexport interface IHMSNotifications {\n  /**\n   * you can subscribe to notifications for new message, peer add etc. using this function.\n   * note that this is not meant to maintain any state on your side, as the reactive store already\n   * does that. The intent of this function is mainly to display toast notifications or send analytics.\n   * We'll provide a display message which can be displayed as it is for common cases.\n   */\n  onNotification<T extends HMSNotificationTypeParam>(cb: HMSNotificationCallback<T>, types?: T): () => void;\n}\n", "export enum HMSPlaylistType {\n  audio = 'audio',\n  video = 'video',\n}\nexport interface HMSPlaylistItem<T> {\n  name: string;\n  id: string;\n  metadata?: T;\n  url: string;\n  type: HMSPlaylistType;\n  duration?: number;\n  playing: boolean;\n  selected: boolean;\n}\n\nexport interface HMSPlaylistSelection {\n  id: string;\n  hasPrevious: boolean;\n  hasNext: boolean;\n}\n\nexport interface HMSPlaylist<T> {\n  audio: {\n    list: Record<string, HMSPlaylistItem<T>>;\n    selection: HMSPlaylistSelection;\n    progress: number;\n    volume: number;\n    currentTime: number;\n    playbackRate: number;\n  };\n  video: {\n    list: Record<string, HMSPlaylistItem<T>>;\n    selection: HMSPlaylistSelection;\n    progress: number;\n    volume: number;\n    currentTime: number;\n    playbackRate: number;\n  };\n}\n\nexport interface IHMSPlaylistActions {\n  /**\n   * Pass the id of the item to be played\n   * @param {string} id - id of playlist item\n   */\n  play(id: string): Promise<void>;\n  /**\n   * Pauses current playing item\n   */\n  pause(): Promise<void>;\n  /**\n   * PlayNext\n   */\n  playNext(): Promise<void>;\n  /**\n   * PlayPrevious\n   */\n  playPrevious(): Promise<void>;\n  /**\n   * seek passing seekValue - this is relative to current position\n   * @param {number} seekValue - number in seconds to move forwards(pass negative values to move backwards)\n   */\n  seek(seekValue: number): void;\n  /**\n   * seek passing seekValue  - seekValue will be absolute\n   * @param {number} seekValue - value in seconds of absolute position in the playlist item duration\n   */\n  seekTo(seekValue: number): void;\n  /**\n   * set volume passing volume\n   * @param {number} volume - number between 0-100\n   */\n  setVolume(volume: number): void;\n  /**\n   * pass list to set playlist\n   * @param {HMSPlaylistItem[]} list of playlist items\n   */\n  setList<T>(list: HMSPlaylistItem<T>[]): void;\n  /**\n   * Stop the current playback and remove the tracks\n   */\n  stop(): Promise<void>;\n  /**\n   * set whether to autoplay next item in playlist after the current one ends\n   * @param {boolean} autoplay\n   */\n  setIsAutoplayOn(autoplay: boolean): void;\n  /**\n   * Control the playback speed - 1.0 being normal, less than 1.0 will play it slowly\n   * and more than 1.0 will play it faster.\n   * @param playbackRate - value from 0.25 and 2.0\n   */\n  setPlaybackRate(playbackRate: number): void;\n  removeItem(id: string): Promise<boolean>;\n  clearList(): Promise<void>;\n}\n", "import { createSelector } from 'reselect';\nimport {\n  getScreenSharesByPeer,\n  isAudioPlaylist,\n  isDegraded,\n  isTrackDisplayEnabled,\n  isTrackEnabled,\n  isVideo,\n  isVideoPlaylist,\n} from './selectorUtils';\n// noinspection ES6PreferShortImport\nimport { HMSRole, HMSTranscriptionMode, HMSTranscriptionState, HMSWhiteboard } from '../internal';\nimport {\n  HMSException,\n  HMSMessage,\n  HMSPeer,\n  HMSPeerID,\n  HMSRoom,\n  HMSRoomState,\n  HMSStore,\n  HMSVideoTrack,\n} from '../schema';\n\n/**\n * Select the current {@link HMSRoom} object to which you are connected.\n * @param store\n */\nexport const selectRoom = (store: HMSStore): HMSRoom => store.room;\n/**\n * Select the current {@link HMSException[]} object to monitor the error logs\n * @param store\n */\nexport const selectErrors = (store: HMSStore): HMSException[] => store.errors;\n\n/**\n * It will help to get the all the error\n */\nexport const selectRecentError = createSelector(selectErrors, errors => (errors.length === 0 ? null : errors.at(-1)));\n/**\n * Select the ID of the current room to which you are connected.\n */\nexport const selectRoomID = createSelector(selectRoom, room => room.id);\n\n/**\n * @internal\n */\nexport const selectPeersMap = (store: HMSStore): Record<HMSPeerID, HMSPeer> => store.peers;\n\n/**\n * @internal\n */\nexport const selectMessagesMap = (store: HMSStore) => store.messages.byID;\n\n/**\n * Select IDs of messages you've sent or received sorted chronologically.\n */\nexport const selectMessageIDsInOrder = (store: HMSStore) => store.messages.allIDs;\n\n/**\n * @internal\n */\nexport const selectTracksMap = (store: HMSStore) => store.tracks;\n\n/**\n * Select your media settings\n * i.e., choosen audio input device, audio output device and video input device, audio mode\n * @param store\n */\nexport const selectLocalMediaSettings = (store: HMSStore) => store.settings;\n\n/**\n * select appData.\n * @internal\n */\nexport const selectFullAppData = (store: HMSStore) => store.appData;\n\n/**\n * Select the available audio input, audio output and video input devices on your machine.\n * @param store\n * @returns An object of array of available audio input, audio output and video input devices.\n * ```\n * type DeviceMap = {\n *   audioInput: InputDeviceInfo[];\n *   audioOutput: MediaDeviceInfo[];\n *   videoInput: InputDeviceInfo[];\n * }\n * ```\n */\nexport const selectDevices = (store: HMSStore) => {\n  return store.devices;\n};\n\nexport const selectSpeakers = (store: HMSStore) => {\n  return store.speakers;\n};\n\nexport const selectConnectionQualities = (store: HMSStore) => {\n  return store.connectionQualities;\n};\n\n/**\n * Select a boolean flag denoting whether you've joined a room.\n * NOTE: Returns true only after join, returns false during preview.\n */\nexport const selectIsConnectedToRoom = createSelector([selectRoom], room => room && room.isConnected);\n\n/**\n * selectPeerCount gives the number of peers Inside the room. This doesn't count the local peer if\n * they're still in preview and haven't yet joined the room. Note that this will not necessarily equal the\n * number of peers received through selectPeers, it's possible to know total number of people in the room\n * without having details of everyone depending on dashboard settings.\n */\nexport const selectPeerCount = createSelector([selectIsConnectedToRoom, selectRoom], (isConnected, room) => {\n  if (isConnected) {\n    // if we have peer count from server return that else return number of peers in the store.\n    // In case the strongly consistent peer list is disabled and only eventual consistent count and peer\n    // details is sent, room.peerCount may be 0 for a few second even though local peer is connected, send 1 in that case.\n    // TODO: Fix this at populating room.peerCount level than in selector.\n    return room.peerCount !== undefined ? room.peerCount || 1 : room.peers.length;\n  } else {\n    // if we have peer count from server return that, else return number of peers except the local one because local is\n    // not joined yet.\n    // Math.max to ensure we're not returning -1, if the selector is called before local peer is put in the store\n    return Math.max(room.peerCount !== undefined ? room.peerCount : room.peers.length - 1, 0);\n  }\n});\n\n/**\n * @internal\n * Select a boolean flag denoting whether to hide local peer.\n * When this is true, `selectPeers` skips local peer.\n */\nconst selectHideLocalPeer = (store: HMSStore): boolean => store.hideLocalPeer;\n\n/**\n * Select an array of peers(remote peers and your local peer) present in the room.\n */\nexport const selectPeers = createSelector(\n  [selectRoom, selectPeersMap, selectHideLocalPeer],\n  (room, storePeers, hideLocalPeer) => {\n    if (hideLocalPeer) {\n      return room.peers.filter(peerID => room.localPeer !== peerID).map(peerID => storePeers[peerID]);\n    }\n    return room.peers.map(peerID => storePeers[peerID]);\n  },\n);\n\n/**\n * Select an array of tracks(remote peer tracks and your local tracks) present in the room.\n */\nconst selectTracks = createSelector(selectTracksMap, storeTracks => {\n  return Object.values(storeTracks);\n});\n\n/**\n * Select the local peer object object assigned to you.\n */\nexport const selectLocalPeer = createSelector(selectRoom, selectPeersMap, (room, peers): HMSPeer | undefined => {\n  return peers[room.localPeer];\n});\n\n/**\n * Select the peer ID of your local peer.\n */\nexport const selectLocalPeerID = createSelector(selectRoom, room => {\n  return room.localPeer;\n});\n\n/**\n * Select the peer name of your local peer.\n */\nexport const selectLocalPeerName = createSelector(selectLocalPeer, peer => peer?.name);\n\n/**\n * Select the role name of your local peer.\n */\nexport const selectLocalPeerRoleName = createSelector(selectLocalPeer, peer => peer?.roleName);\n\n/**\n * Select the track ID of your local peer's primary audio track\n */\nexport const selectLocalAudioTrackID = createSelector(selectLocalPeer, peer => peer?.audioTrack);\n\n/**\n * Select the track ID of your local peer's primary video track\n */\nexport const selectLocalVideoTrackID = createSelector(selectLocalPeer, peer => peer?.videoTrack);\n\n/**\n * Select an array of track IDs of your local peer's auxiliary tracks\n */\nconst selectLocalAuxiliaryTrackIDs = createSelector(selectLocalPeer, peer => peer?.auxiliaryTracks);\n\n/**\n * Select an array of track IDs of all your local peer's tracks\n */\nexport const selectLocalTrackIDs = createSelector(\n  [selectLocalAudioTrackID, selectLocalVideoTrackID, selectLocalAuxiliaryTrackIDs],\n  (audioTrackID, videoTrackID, auxiliaryTrackIDs) => {\n    const trackIDs: string[] = auxiliaryTrackIDs ? [...auxiliaryTrackIDs] : [];\n    audioTrackID && trackIDs.unshift(audioTrackID);\n    videoTrackID && trackIDs.unshift(videoTrackID);\n    return trackIDs;\n  },\n);\n\n/**\n * Select remote peers(other users you're connected with via the internet) present in the room.\n */\nexport const selectRemotePeers = createSelector(selectPeers, peers => {\n  return peers.filter(p => !p.isLocal);\n});\n\n/**\n * Select the peer who's speaking the loudest at the moment\n */\nexport const selectDominantSpeaker = createSelector(selectPeersMap, selectSpeakers, (peersMap, speakers) => {\n  // sort in descending order by audio level\n  const speakersInOrder = Object.entries(speakers).sort((s1, s2) => {\n    const s1Level = s1[1]?.audioLevel || 0;\n    const s2Level = s2[1]?.audioLevel || 0;\n    return s2Level > s1Level ? 1 : -1;\n  });\n  if (speakersInOrder.length > 0 && speakersInOrder[0][1].audioLevel && speakersInOrder[0][1].audioLevel > 0) {\n    const peerID = speakersInOrder[0][1].peerID;\n    if (peerID in peersMap) {\n      return peersMap[peerID];\n    }\n  }\n  return null;\n});\n\n/**\n * Select a boolean denoting whether your local audio is unmuted\n * and the audio from your microphone is shared to remote peers\n */\nexport const selectIsLocalAudioEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackEnabled(store, localPeer?.audioTrack);\n};\n\n/**\n * Select a boolean denoting whether your local video is unmuted\n * and the video from your camera is shared to remote peers\n */\nexport const selectIsLocalVideoEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackEnabled(store, localPeer?.videoTrack);\n};\n\n/**\n * Select a boolean denoting whether you've chosen to unmute and share your local video.\n *\n * NOTE: Once you call `hmsActions.setLocalVideoEnabled(true)`to unmute your local video,\n * it takes some time to fetch your video from your video source.\n * This displayEnabled property gives immediate feedback for a more interactive UI,\n * without waiting for the video source\n */\nexport const selectIsLocalVideoDisplayEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackDisplayEnabled(store, localPeer?.videoTrack);\n};\n\n/**\n * Select a boolean denoting whether your screen is shared to remote peers in the room.\n */\nexport const selectIsLocalScreenShared = createSelector(selectLocalPeer, selectTracksMap, (localPeer, tracksMap) => {\n  const { video, audio } = getScreenSharesByPeer(tracksMap, localPeer);\n  return !!(video || audio);\n});\n\n/**\n * Select the first peer who is currently sharing their screen.\n */\nexport const selectPeerScreenSharing = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  let screensharePeer = undefined;\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { video, audio } = getScreenSharesByPeer(tracksMap, peer);\n    if (video) {\n      return peer;\n    } else if (audio && !screensharePeer) {\n      screensharePeer = peer;\n    }\n  }\n  return screensharePeer;\n});\n\n/**\n * Select a boolean denoting whether someone is sharing screen in the room.\n */\nexport const selectIsSomeoneScreenSharing = createSelector(selectPeerScreenSharing, peer => {\n  return !!peer;\n});\n\n/**\n * Select the first peer who is currently sharing their audio only screen\n */\nexport const selectPeerSharingAudio = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { audio, video } = getScreenSharesByPeer(tracksMap, peer);\n    if (!video && !!audio) {\n      return peer;\n    }\n  }\n  return undefined;\n});\n\n/**\n * Select an array of peers who are currently sharing their screen.\n */\nexport const selectPeersScreenSharing = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  const videoPeers = [];\n  const audioPeers = [];\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { video, audio } = getScreenSharesByPeer(tracksMap, peer);\n    if (video) {\n      videoPeers.push(peer);\n    } else if (audio) {\n      audioPeers.push(peer);\n    }\n  }\n  return videoPeers.concat(audioPeers);\n});\n\nexport const selectPeerSharingVideoPlaylist = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const trackId in tracksMap) {\n    const track = tracksMap[trackId];\n    if (isVideoPlaylist(track) && isVideo(track) && track.peerId) {\n      return peersMap[track.peerId];\n    }\n  }\n  return undefined;\n});\n\nexport const selectPeerSharingAudioPlaylist = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const trackId in tracksMap) {\n    const track = tracksMap[trackId];\n    if (isAudioPlaylist(track) && track.peerId) {\n      return peersMap[track.peerId];\n    }\n  }\n  return undefined;\n});\n\n/**\n * Select an array of tracks that have been degraded(receiving lower video quality/no video) due to bad network locally.\n */\nexport const selectDegradedTracks = createSelector(selectTracks, tracks =>\n  (tracks as HMSVideoTrack[]).filter(isDegraded),\n);\n\n/**\n * Select the number of messages(sent and received).\n */\nexport const selectHMSMessagesCount = createSelector(selectMessageIDsInOrder, messageIDs => messageIDs.length);\n\n/**\n * Select the number of unread messages.\n */\nexport const selectUnreadHMSMessagesCount = createSelector(selectMessagesMap, messages => {\n  return Object.values(messages).filter(m => !m.read).length;\n});\n\n/**\n * Select an array of messages in the room(sent and received).\n */\nexport const selectHMSMessages = createSelector(selectMessageIDsInOrder, selectMessagesMap, (msgIDs, msgMap) => {\n  const messages: HMSMessage[] = [];\n  msgIDs.forEach(msgId => {\n    messages.push(msgMap[msgId]);\n  });\n  return messages;\n});\n\nexport const selectHMSBroadcastMessages = createSelector(selectHMSMessages, messages => {\n  return messages.filter(m => !m.recipientPeer && !(m.recipientRoles && m.recipientRoles?.length > 0));\n});\n/**\n * Select the number of unread broadcast messages\n */\nexport const selectUnreadHMSBroadcastMessagesCount = createSelector(selectHMSBroadcastMessages, messages => {\n  return messages.filter(m => !m.read).length;\n});\n/**\n * Select the current state of the room.\n */\nexport const selectRoomState = createSelector([selectRoom], room => room && room.roomState);\n\n/**\n * Select a boolean denoting whether the room is in Preview state.\n */\nexport const selectIsInPreview = createSelector(selectRoomState, roomState => roomState === HMSRoomState.Preview);\n\nexport const selectRoomStarted = createSelector(selectRoom, room => room.roomState !== HMSRoomState.Disconnected);\n\nexport const selectIsTranscriptionEnabled = createSelector(selectRoom, room => {\n  if (!room.transcriptions || room.transcriptions.length <= 0) {\n    return false;\n  }\n  return room.transcriptions.some(\n    transcription =>\n      transcription.mode === HMSTranscriptionMode.CAPTION && transcription.state === HMSTranscriptionState.STARTED,\n  );\n});\n\n/**\n * Select available roles in the room as a map between the role name and {@link HMSRole} object.\n */\nexport const selectRolesMap = (store: HMSStore): Record<string, HMSRole> => {\n  return store.roles;\n};\n\n/**\n * Select an array of names of available roles in the room.\n */\nexport const selectAvailableRoleNames = createSelector([selectRolesMap], rolesMap => Object.keys(rolesMap));\n\n/**\n * Select the {@link HMSRole} object of your local peer.\n */\nexport const selectLocalPeerRole = createSelector([selectLocalPeer, selectRolesMap], (localPeer, rolesMap) =>\n  localPeer?.roleName ? rolesMap[localPeer.roleName] : null,\n);\n\nexport const selectPreviewRoleName = (store: HMSStore) => store.preview?.asRole;\n\n/**\n * Select the {@link HMSRole} used for preview.\n *\n */\nexport const selectPreviewRole = createSelector([selectPreviewRoleName, selectRolesMap], (roleName, rolesMap) =>\n  roleName ? rolesMap[roleName] : null,\n);\n\n/**\n * Select a boolean denoting whether if your local peer is allowed to subscribe to any other role.\n */\nexport const selectIsAllowedToSubscribe = createSelector([selectLocalPeerRole], (role): boolean => {\n  if (!role?.subscribeParams?.subscribeToRoles) {\n    return false;\n  }\n  return role.subscribeParams.subscribeToRoles.length > 0;\n});\n\n/**\n * Select the permissions which determine what actions the local peer can do.\n */\nexport const selectPermissions = createSelector(selectLocalPeerRole, role => role?.permissions);\nexport const selectRecordingState = createSelector(selectRoom, room => room.recording);\nexport const selectRTMPState = createSelector(selectRoom, room => room.rtmp);\nexport const selectHLSState = createSelector(selectRoom, room => room.hls);\nexport const selectTranscriptionsState = createSelector(selectRoom, room => room.transcriptions);\nexport const selectSessionId = createSelector(selectRoom, room => room.sessionId);\nexport const selectRoomStartTime = createSelector(selectRoom, room => room.startedAt);\nexport const selectIsLargeRoom = createSelector(selectRoom, room => !!room.isLargeRoom);\nexport const selectIsEffectsEnabled = createSelector(selectRoom, room => !!room.isEffectsEnabled);\nexport const selectIsVBEnabled = createSelector(selectRoom, room => !!room.isVBEnabled);\nexport const selectEffectsKey = createSelector(selectRoom, room => room.effectsKey);\n\nexport const selectTemplateAppData = (store: HMSStore) => store.templateAppData;\n/** @deprecated - use `selectSessionStore` instead */\nexport const selectSessionMetadata = (store: HMSStore) => store.sessionMetadata;\nexport const selectPollsMap = (store: HMSStore) => store.polls;\nexport const selectPolls = (store: HMSStore) => {\n  return Object.values(store.polls);\n};\n\nexport const selectHandRaisedPeers = createSelector(selectPeers, peers => {\n  return peers.filter(peer => peer.isHandRaised);\n});\n\n/** select a map of all the whiteboards in the session */\nexport const selectWhiteboards = (store: HMSStore) => store.whiteboards;\n/** select the primary/first whiteboard of a session */\nexport const selectWhiteboard = createSelector(\n  selectWhiteboards,\n  whiteboards => Object.values(whiteboards)[0] as HMSWhiteboard | undefined,\n);\n", "import {\n  HMSPeer,\n  HMSPublishAllowed,\n  HMSRole,\n  HMSScreenAudioTrack,\n  HMSScreenVideoTrack,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSVideoTrack,\n} from '../schema';\n\nexport function getScreenSharesByPeer(tracks: Record<HMSTrackID, HMSTrack>, peer?: HMSPeer | null) {\n  let videoTrack = undefined;\n  let audioTrack = undefined;\n  if (peer) {\n    for (const trackID of peer.auxiliaryTracks) {\n      const track = tracks[trackID];\n      if (isScreenShare(track)) {\n        audioTrack = isAudio(track) ? track : audioTrack;\n        videoTrack = isVideo(track) ? track : videoTrack;\n      }\n    }\n  }\n  // to use the proper type, right now it is only used for screenshare.\n  return { video: videoTrack as HMSScreenVideoTrack, audio: audioTrack as HMSScreenAudioTrack };\n}\n\nexport function isAudio(track: HMSTrack | undefined) {\n  return track && track.type === 'audio';\n}\n\nexport function isVideo(track: HMSTrack | undefined) {\n  return track && track.type === 'video';\n}\n\nexport function isScreenShare(track: HMSTrack | undefined) {\n  return track && track.source === 'screen';\n}\n\nexport function isAudioPlaylist(track: HMSTrack | undefined) {\n  return track && track.source === 'audioplaylist';\n}\n\nexport function isVideoPlaylist(track: HMSTrack | undefined) {\n  return track && track.source === 'videoplaylist';\n}\n\nexport function isDegraded(track: HMSVideoTrack) {\n  if (track) {\n    return Boolean(track?.degraded);\n  }\n  return false;\n}\n\nexport function isTrackEnabled(store: HMSStore, trackID?: string) {\n  if (trackID && store.tracks[trackID]) {\n    return store.tracks[trackID].enabled;\n  }\n  return false;\n}\n\n/**\n * Should UI show the video track as enabled\n */\nexport function isTrackDisplayEnabled(store: HMSStore, trackID?: string) {\n  if (trackID && store.tracks[trackID]) {\n    return store.tracks[trackID].displayEnabled;\n  }\n  return false;\n}\n\nexport function isRoleAllowedToPublish(role?: HMSRole | null): HMSPublishAllowed {\n  let video = false,\n    audio = false,\n    screen = false;\n  if (role?.publishParams?.allowed) {\n    video = role.publishParams.allowed.includes('video');\n    audio = role.publishParams.allowed.includes('audio');\n    screen = role.publishParams.allowed.includes('screen');\n  }\n  return {\n    video,\n    audio,\n    screen,\n  };\n}\n", "export enum HMSLogLevel {\n  VERBOSE,\n  DEBUG,\n  INFO,\n  WARN,\n  TIME,\n  TIMEEND,\n  ERROR,\n  NONE,\n}\n\n// @ts-ignore - window.expect is available only when in test environment\nconst isTestEnv = typeof window !== 'undefined' && typeof window.expect !== 'undefined';\n/**\n * TODO: fix this so logs show the real file and line numbers where they originated from instead of this class\n * https://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n */\nexport default class HMSLogger {\n  static level: HMSLogLevel = isTestEnv ? HMSLogLevel.NONE : HMSLogLevel.VERBOSE;\n\n  static v(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.VERBOSE, tag, ...data);\n  }\n\n  static d(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.DEBUG, tag, ...data);\n  }\n\n  static i(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.INFO, tag, ...data);\n  }\n\n  static w(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.WARN, tag, ...data);\n  }\n\n  static e(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.ERROR, tag, ...data);\n  }\n\n  static time(mark: string) {\n    this.log(HMSLogLevel.TIME, '[HMSPerformanceTiming]', mark);\n  }\n\n  static timeEnd(mark: string) {\n    this.log(HMSLogLevel.TIMEEND, '[HMSPerformanceTiming]', mark, mark);\n  }\n\n  static cleanup() {\n    performance.clearMarks();\n    performance.clearMeasures();\n  }\n\n  // eslint-disable-next-line complexity\n  private static log(level: HMSLogLevel, tag: string, ...data: any[]) {\n    if (this.level.valueOf() > level.valueOf()) {\n      return;\n    }\n\n    switch (level) {\n      case HMSLogLevel.VERBOSE: {\n        console.log(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.DEBUG: {\n        console.debug(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.INFO: {\n        console.info(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.WARN: {\n        console.warn(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.ERROR: {\n        console.error(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.TIME: {\n        performance.mark(data[0]);\n        break;\n      }\n      case HMSLogLevel.TIMEEND: {\n        const mark = data[0];\n        try {\n          const entry = performance.measure(mark, mark);\n          // @ts-ignore\n          this.log(HMSLogLevel.DEBUG, tag, mark, entry?.duration);\n          performance.clearMarks(mark);\n          performance.clearMeasures(mark);\n        } catch (error) {\n          this.log(HMSLogLevel.DEBUG, tag, mark, error);\n        }\n        break;\n      }\n    }\n  }\n}\n", "import { HMSTrack } from '../tracks';\n\nexport class HMSMediaStream {\n  readonly nativeStream: MediaStream;\n  id: string;\n\n  readonly tracks = new Array<HMSTrack>();\n\n  constructor(nativeStream: MediaStream) {\n    this.nativeStream = nativeStream;\n    this.id = nativeStream.id;\n  }\n\n  /**\n   * This is only used when onDemandTracks flag is enabled in Init\n   * @param id\n   */\n  updateId(id: string) {\n    this.id = id;\n  }\n}\n", "import { UAParser } from 'ua-parser-js';\n\nexport const parsedUserAgent = new UAParser();\n\nexport const isBrowser = typeof window !== 'undefined';\n\nexport const isNode =\n  typeof window === 'undefined' && !parsedUserAgent.getBrowser().name?.toLowerCase().includes('electron');\n\nexport enum ENV {\n  PROD = 'prod',\n  QA = 'qa',\n  DEV = 'dev',\n}\n\nconst checkIsSupported = () => {\n  if (isNode) {\n    return false;\n  }\n  // @TODO: Get this from preview/init API from server\n  return true;\n};\n\nexport const isSupported = checkIsSupported();\n\nexport const isMobile = () => parsedUserAgent.getDevice().type === 'mobile';\n\nexport const isPageHidden = () => typeof document !== 'undefined' && document.hidden;\n\nexport const isIOS = () => parsedUserAgent.getOS().name?.toLowerCase() === 'ios';\n\n// safari for mac and mobile safari for iOS\nexport const isSafari = parsedUserAgent.getBrowser()?.name?.toLowerCase().includes('safari');\n\nexport const isFirefox = parsedUserAgent.getBrowser()?.name?.toLowerCase() === 'firefox';\n", "import { v4 as uuid } from 'uuid';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { domainCategory } from './domain-analytics';\nimport { ISignalParamsProvider } from '../signal/ISignalSendParamsProvider';\nimport { getAnalyticsDeviceId } from '../utils/analytics-deviceId';\nimport { createUserAgent } from '../utils/user-agent';\n\ninterface AnalyticsEventInit {\n  name: string;\n  level: AnalyticsEventLevel;\n  includesPII?: boolean;\n  properties?: Record<string, any>;\n  timestamp?: number;\n}\n\ninterface SignalEventParams {\n  name: string;\n  info: any;\n  timestamp: number;\n}\n\nexport default class AnalyticsEvent implements ISignalParamsProvider<SignalEventParams> {\n  name: string;\n  level: AnalyticsEventLevel;\n  includesPII: boolean;\n  properties: Record<string, any>;\n  metadata: {\n    token?: string;\n    peer: {\n      peer_id?: string;\n      session_id?: string;\n      room_id?: string;\n      role?: string;\n      room_name?: string;\n      joined_at?: number;\n      template_id?: string;\n      session_started_at?: number;\n      user_name?: string;\n      user_data?: string;\n    };\n    userAgent: string;\n  } = {\n    peer: {},\n    userAgent: createUserAgent(),\n  };\n  timestamp: number;\n  event_id: string;\n  device_id: string;\n\n  constructor({ name, level, properties, includesPII, timestamp }: AnalyticsEventInit) {\n    this.name = name;\n    this.level = level;\n    this.includesPII = includesPII || false;\n    this.properties = properties || {};\n    this.timestamp = timestamp || new Date().getTime(); // Timestamp of generating the event\n    this.event_id = uuid();\n    this.device_id = getAnalyticsDeviceId();\n  }\n\n  toSignalParams() {\n    return {\n      name: this.name,\n      info: { ...this.properties, timestamp: this.timestamp, domain: domainCategory },\n      timestamp: new Date().getTime(), // Timestamp of sending the event\n    };\n  }\n}\n", "export enum DomainCategory {\n  CUSTOM = 'CUSTOM',\n  LOCAL = 'LOCAL',\n  HMS = 'HMS',\n}\n", "import { DomainCategory } from './AnalyticsEventDomains';\nimport { isBrowser } from '../utils/support';\n\nfunction getDomainCategory() {\n  // this function gives us the domain category(sutom, hms , local) of the base url.\n  // below if statement checks if it's running in a browser ; or if we can use 'window' safely\n\n  if (isBrowser && window) {\n    const baseurl = window.location.hostname;\n\n    if (baseurl === 'localhost' || baseurl === '127.0.0.1') {\n      return DomainCategory.LOCAL;\n    }\n\n    if (baseurl.includes('app.100ms.live')) {\n      return DomainCategory.HMS;\n    } else {\n      return DomainCategory.CUSTOM;\n    }\n  }\n\n  return DomainCategory.CUSTOM;\n}\n\nexport const domainCategory = getDomainCategory();\n", "import { v4 as uuid } from 'uuid';\nimport { LocalStorage } from './local-storage';\n\nexport const getAnalyticsDeviceId = () => {\n  let id;\n  const storage = new LocalStorage<string>('hms-analytics-deviceId');\n  const storageId = storage.get();\n  if (storageId) {\n    id = storageId;\n  } else {\n    id = uuid();\n    storage.set(id);\n  }\n  return id;\n};\n", "/*\n * ErrorCodes.ts\n *\n * Created by codegen\n * Copyright \u00A9 2021 100ms. All rights reserved.\n */\n\nexport const ErrorCodes = {\n  // https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1\n  WebSocketConnectionErrors: {\n    // Error connecting to ws or init config not available\n    FAILED_TO_CONNECT: 1000,\n\n    // Network connection lost\n    WEBSOCKET_CONNECTION_LOST: 1003,\n\n    // Abnormal close without receiving a Close control frame\n    ABNORMAL_CLOSE: 1006,\n  },\n\n  APIErrors: {\n    // [INIT]: Server error\n    SERVER_ERRORS: 2000,\n    //init config not available\n    INIT_CONFIG_NOT_AVAILABLE: 2002,\n\n    // Endpoint is not reachable.\n    ENDPOINT_UNREACHABLE: 2003,\n\n    // Token is not in proper JWT format\n    INVALID_TOKEN_FORMAT: 2004,\n  },\n\n  TracksErrors: {\n    // [PUBLISH]: Error with getusermedia request\n    GENERIC_TRACK: 3000,\n\n    // [PUBLISH]: No permission to access capture device - {device_type}\n    CANT_ACCESS_CAPTURE_DEVICE: 3001,\n\n    // [PUBLISH]: Capture device is no longer available - {device_type}\n    DEVICE_NOT_AVAILABLE: 3002,\n\n    // [PUBLISH]: Capture device is in use by another application - {device_type}\n    DEVICE_IN_USE: 3003,\n\n    // Lost access to capture device midway - {device_type}\n    DEVICE_LOST_MIDWAY: 3004,\n\n    // There is no media to return. Please select either video or audio or both.\n    NOTHING_TO_RETURN: 3005,\n\n    // Cannot enable simulcast when no video settings are provided\n    INVALID_VIDEO_SETTINGS: 3006,\n\n    // Codec can't be changed mid call.\n    CODEC_CHANGE_NOT_PERMITTED: 3007,\n\n    // When the browser throws autoplay exception if something is played before interacting\n    AUTOPLAY_ERROR: 3008,\n\n    // Over constrained error - device hardware unable to satisfy requested constraints\n    OVER_CONSTRAINED: 3009,\n\n    // No audio detected from track, indicates problem with device hardware\n    NO_AUDIO_DETECTED: 3010,\n\n    // Operating System denied permission\n    SYSTEM_DENIED_PERMISSION: 3011,\n\n    // Current tab is not shared when forceCurrentTab was set to true for screenshare\n    CURRENT_TAB_NOT_SHARED: 3012,\n\n    // any error that occurs while playing audio of remote audio tracks\n    AUDIO_PLAYBACK_ERROR: 3013,\n\n    // Selected device not detected on change\n    SELECTED_DEVICE_MISSING: 3014,\n\n    // Track is publishing with no data, can happen when a whatsapp call is ongoing before 100ms call in mweb\n    NO_DATA: 3015,\n  },\n\n  WebrtcErrors: {\n    // [{action}]: Failed to create offer.\n    CREATE_OFFER_FAILED: 4001,\n\n    // [{action}]: Failed to create answer.\n    CREATE_ANSWER_FAILED: 4002,\n\n    // [{action}]: Failed to set offer.\n    SET_LOCAL_DESCRIPTION_FAILED: 4003,\n\n    // [{action}]: Failed to set answer.\n    SET_REMOTE_DESCRIPTION_FAILED: 4004,\n\n    // [{action}]: Ice connection state FAILED\n    ICE_FAILURE: 4005,\n\n    // [{action}]: Ice connection state FAILED\n    ICE_DISCONNECTED: 4006,\n\n    STATS_FAILED: 4007,\n  },\n\n  WebsocketMethodErrors: {\n    // [JOIN]: {server_error}\n    SERVER_ERRORS: 5000,\n\n    // [JOIN]: You have already joined this room.\n    ALREADY_JOINED: 5001,\n\n    // [JOIN]: Cannot join if preview is in progress\n    CANNOT_JOIN_PREVIEW_IN_PROGRESS: 5002,\n  },\n\n  GenericErrors: {\n    // Client is not connected\n    NOT_CONNECTED: 6000,\n\n    // Unknown signalling error: {action} {error_info}\n    SIGNALLING: 6001,\n\n    // Unknown exception: {error_info}\n    UNKNOWN: 6002,\n\n    // WebRTC engine is not ready yet\n    NOT_READY: 6003,\n\n    // Failed to parse JSON message - {json_message}\n    JSON_PARSING_FAILED: 6004,\n\n    // Track Metadata Missing\n    TRACK_METADATA_MISSING: 6005,\n\n    // RTC Track missing\n    RTC_TRACK_MISSING: 6006,\n\n    // Peer Metadata Missing\n    PEER_METADATA_MISSING: 6007,\n\n    // Joined with invalid role\n    INVALID_ROLE: 6008,\n\n    PREVIEW_IN_PROGRESS: 6009,\n\n    MISSING_MEDIADEVICES: 6010,\n\n    MISSING_RTCPEERCONNECTION: 6011,\n    LOCAL_STORAGE_ACCESS_DENIED: 6012,\n    // peer not present or role not present or any general validation\n    VALIDATION_FAILED: 6013,\n  },\n\n  PlaylistErrors: {\n    NO_ENTRY_TO_PLAY: 8001,\n    NO_ENTRY_IS_PLAYING: 8002,\n  },\n};\n", "import { HMSAction } from './HMSAction';\nimport { IAnalyticsPropertiesProvider } from '../analytics/IAnalyticsPropertiesProvider';\nimport { HMSSignalMethod } from '../signal/jsonrpc/models';\n\nexport class HMSException extends Error implements IAnalyticsPropertiesProvider {\n  action: string;\n  nativeError?: Error;\n\n  constructor(\n    public readonly code: number,\n    public name: string,\n    action: HMSAction | HMSSignalMethod,\n    public message: string,\n    public description: string,\n    public isTerminal: boolean = false,\n  ) {\n    super(message);\n\n    // Ref: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, HMSException.prototype);\n    this.action = action.toString();\n  }\n\n  toAnalyticsProperties() {\n    return {\n      error_name: this.name,\n      error_code: this.code,\n      error_message: this.message,\n      error_description: this.description,\n      action: this.action,\n      is_terminal: this.isTerminal,\n    };\n  }\n\n  addNativeError(error: Error) {\n    this.nativeError = error;\n  }\n\n  toString() {\n    return `{\n        code: ${this.code};\n        name: ${this.name};\n        action: ${this.action};\n        message: ${this.message};\n        description: ${this.description};\n        isTerminal: ${this.isTerminal};\n        nativeError: ${this.nativeError?.message};\n      }`;\n  }\n}\n", "import { HMSAction } from './HMSAction';\nimport { HMSException } from './HMSException';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\nimport { HMSSignalMethod } from '../signal/jsonrpc/models';\n\nexport class HMSTrackException extends HMSException {\n  constructor(\n    public readonly code: number,\n    public name: string,\n    action: HMSAction | HMSSignalMethod,\n    public message: string,\n    public description: string,\n    public trackType: HMSTrackExceptionTrackType,\n  ) {\n    super(code, name, action, message, description, false);\n  }\n\n  toAnalyticsProperties() {\n    return {\n      ...super.toAnalyticsProperties(),\n      track_type: this.trackType,\n    };\n  }\n\n  toString() {\n    return `{\n        code: ${this.code};\n        name: ${this.name};\n        action: ${this.action};\n        message: ${this.message};\n        description: ${this.description};\n        isTerminal: ${this.isTerminal};\n        nativeError: ${this.nativeError?.message};\n        trackType: ${this.trackType};\n      }`;\n  }\n}\n", "export enum HMSTrackExceptionTrackType {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  AUDIO_VIDEO = 'audio, video',\n  SCREEN = 'screen',\n}\n", "import { HMSAction } from '../../error/HMSAction';\n\nexport interface JsonRpcRequest {\n  id: string;\n  method: string;\n  params: Map<string, any>;\n}\n\nexport interface JsonRpcResponse {\n  id: string;\n  result: any;\n  error: {\n    code: number;\n    message: string;\n  };\n}\n\nexport enum HMSSignalMethod {\n  JOIN = 'join',\n  OFFER = 'offer',\n  ANSWER = 'answer',\n  TRICKLE = 'trickle',\n  TRACK_UPDATE = 'track-update',\n  BROADCAST = 'broadcast',\n  ANALYTICS = 'analytics',\n  SERVER_ERROR = 'on-error',\n  SERVER_WARNING = 'on-warning',\n  SDK_NOTIFICATION = 'sdk-notification',\n  LEAVE = 'leave',\n  END_ROOM = 'end-room',\n  PING = 'ping',\n  ROLE_CHANGE_REQUEST = 'role-change-request',\n  ROLE_CHANGE = 'role-change',\n  TRACK_UPDATE_REQUEST = 'track-update-request',\n  PEER_LEAVE_REQUEST = 'peer-leave-request',\n  CHANGE_TRACK_MUTE_STATE_REQUEST = 'change-track-mute-state-request',\n  START_RTMP_OR_RECORDING_REQUEST = 'rtmp-start',\n  STOP_RTMP_AND_RECORDING_REQUEST = 'rtmp-stop',\n  UPDATE_PEER_METADATA = 'peer-update',\n  START_HLS_STREAMING = 'hls-start',\n  STOP_HLS_STREAMING = 'hls-stop',\n  START_TRANSCRIPTION = 'transcription-start',\n  STOP_TRANSCRIPTION = 'transcription-stop',\n  HLS_TIMED_METADATA = 'hls-timed-metadata',\n  SET_METADATA = 'set-metadata',\n  GET_METADATA = 'get-metadata',\n  LISTEN_METADATA_CHANGE = 'listen-metadata-change',\n  POLL_INFO_SET = 'poll-info-set',\n  POLL_INFO_GET = 'poll-info-get',\n  POLL_QUESTIONS_SET = 'poll-questions-set',\n  POLL_QUESTIONS_GET = 'poll-questions-get',\n  POLL_START = 'poll-start',\n  POLL_STOP = 'poll-stop',\n  POLL_RESPONSE_SET = 'poll-response',\n  POLL_LIST = 'poll-list',\n  POLL_RESPONSES = 'poll-responses',\n  POLL_RESULT = 'poll-result',\n  POLL_LEADERBOARD = 'poll-leaderboard',\n  GET_PEER = 'get-peer',\n  FIND_PEER = 'find-peer',\n  SEARCH_BY_NAME = 'peer-name-search',\n  PEER_ITER_NEXT = 'peer-iter-next',\n  GROUP_JOIN = 'group-join',\n  GROUP_LEAVE = 'group-leave',\n  GROUP_ADD = 'group-add',\n  GROUP_REMOVE = 'group-remove',\n  WHITEBOARD_CREATE = 'whiteboard-create',\n  WHITEBOARD_GET = 'whiteboard-get',\n}\n\nexport function convertSignalMethodtoErrorAction(method: HMSSignalMethod): HMSAction {\n  switch (method) {\n    case HMSSignalMethod.JOIN:\n      return HMSAction.JOIN;\n    case HMSSignalMethod.OFFER:\n      return HMSAction.PUBLISH;\n    case HMSSignalMethod.ANSWER:\n      return HMSAction.SUBSCRIBE;\n    case HMSSignalMethod.TRACK_UPDATE:\n      return HMSAction.TRACK;\n    default:\n      return HMSAction.NONE;\n  }\n}\n", "/*\n * ErrorFactory.ts\n *\n * Created by codegen\n * Copyright \u00A9 2021 100ms. All rights reserved.\n */\n\nimport { ErrorCodes } from './ErrorCodes';\nimport { HMSAction } from './HMSAction';\nimport { HMSException } from './HMSException';\nimport { HMSTrackException } from './HMSTrackException';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\nimport { HMSSignalMethod } from '../signal/jsonrpc/models';\n\nconst terminalActions: (HMSSignalMethod | HMSAction)[] = [\n  HMSSignalMethod.JOIN,\n  HMSSignalMethod.OFFER,\n  HMSSignalMethod.ANSWER,\n  HMSSignalMethod.TRICKLE,\n  HMSSignalMethod.SERVER_ERROR,\n  HMSAction.JOIN,\n];\n\nexport const ErrorFactory = {\n  WebSocketConnectionErrors: {\n    FailedToConnect(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.FAILED_TO_CONNECT,\n        'WebsocketFailedToConnect',\n        action,\n        `[WS]: ${description}`,\n        `[WS]: ${description}`,\n      );\n    },\n\n    WebSocketConnectionLost(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST,\n        'WebSocketConnectionLost',\n        action,\n        `Network connection lost`,\n        description,\n      );\n    },\n\n    AbnormalClose(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.ABNORMAL_CLOSE,\n        'WebSocketAbnormalClose',\n        action,\n        `Websocket closed abnormally`,\n        description,\n      );\n    },\n  },\n\n  APIErrors: {\n    ServerErrors(code: number, action: HMSAction, description = '', isTerminal = true) {\n      return new HMSException(\n        code,\n        'ServerErrors',\n        action,\n        `[${action}]: Server error ${description}`,\n        description,\n        isTerminal,\n      );\n    },\n\n    EndpointUnreachable(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.ENDPOINT_UNREACHABLE,\n        'EndpointUnreachable',\n        action,\n        `Endpoint is not reachable - ${description}`,\n        description,\n      );\n    },\n\n    InvalidTokenFormat(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.INVALID_TOKEN_FORMAT,\n        'InvalidTokenFormat',\n        action,\n        `Token is not in proper JWT format - ${description}`,\n        description,\n        true,\n      );\n    },\n\n    InitConfigNotAvailable(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.INIT_CONFIG_NOT_AVAILABLE,\n        'InitError',\n        action,\n        `[INIT]: ${description}`,\n        `[INIT]: ${description}`,\n      );\n    },\n  },\n\n  TracksErrors: {\n    GenericTrack(action: HMSAction, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.GENERIC_TRACK,\n        'GenericTrack',\n        action,\n        `[TRACK]: ${description}`,\n        `[TRACK]: ${description}`,\n        HMSTrackExceptionTrackType.AUDIO_VIDEO,\n      );\n    },\n    CantAccessCaptureDevice(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.CANT_ACCESS_CAPTURE_DEVICE,\n        'CantAccessCaptureDevice',\n        action,\n        `User denied permission to access capture device - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    DeviceNotAvailable(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.DEVICE_NOT_AVAILABLE,\n        'DeviceNotAvailable',\n        action,\n        `[TRACK]: Capture device is no longer available - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    DeviceInUse(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.DEVICE_IN_USE,\n        'DeviceInUse',\n        action,\n        `[TRACK]: Capture device is in use by another application - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    DeviceLostMidway(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.DEVICE_LOST_MIDWAY,\n        'DeviceLostMidway',\n        action,\n        `Lost access to capture device midway - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    NothingToReturn(\n      action: HMSAction,\n      description = '',\n      message = `There is no media to return. Please select either video or audio or both.`,\n    ) {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.NOTHING_TO_RETURN,\n        'NothingToReturn',\n        action,\n        message,\n        description,\n        HMSTrackExceptionTrackType.AUDIO_VIDEO,\n      );\n    },\n\n    InvalidVideoSettings(action: HMSAction, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.INVALID_VIDEO_SETTINGS,\n        'InvalidVideoSettings',\n        action,\n        `Cannot enable simulcast when no video settings are provided`,\n        description,\n        HMSTrackExceptionTrackType.VIDEO,\n      );\n    },\n\n    AutoplayBlocked(action: HMSAction, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.AUTOPLAY_ERROR,\n        'AutoplayBlocked',\n        action,\n        \"Autoplay blocked because the user didn't interact with the document first\",\n        description,\n        HMSTrackExceptionTrackType.AUDIO,\n      );\n    },\n\n    CodecChangeNotPermitted(action: HMSAction, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.CODEC_CHANGE_NOT_PERMITTED,\n        'CodecChangeNotPermitted',\n        action,\n        `Codec can't be changed mid call.`,\n        description,\n        HMSTrackExceptionTrackType.AUDIO_VIDEO,\n      );\n    },\n\n    OverConstrained(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.OVER_CONSTRAINED,\n        'OverConstrained',\n        action,\n        `[TRACK]: Requested constraints cannot be satisfied with the device hardware - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    NoAudioDetected(action: HMSAction, description = 'Please check the mic or use another audio input') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.NO_AUDIO_DETECTED,\n        'NoAudioDetected',\n        action,\n        'No audio input detected from microphone',\n        description,\n        HMSTrackExceptionTrackType.AUDIO,\n      );\n    },\n\n    SystemDeniedPermission(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.SYSTEM_DENIED_PERMISSION,\n        'SystemDeniedPermission',\n        action,\n        `Operating System denied permission to access capture device - ${deviceInfo}`,\n        description,\n        deviceInfo as HMSTrackExceptionTrackType,\n      );\n    },\n\n    CurrentTabNotShared() {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.CURRENT_TAB_NOT_SHARED,\n        'CurrentTabNotShared',\n        HMSAction.TRACK,\n        'The app requires you to share the current tab',\n        'You must screen share the current tab in order to proceed',\n        HMSTrackExceptionTrackType.SCREEN,\n      );\n    },\n\n    AudioPlaybackError(description: string) {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.AUDIO_PLAYBACK_ERROR,\n        'Audio playback error',\n        HMSAction.TRACK,\n        description,\n        description,\n        HMSTrackExceptionTrackType.AUDIO,\n      );\n    },\n\n    SelectedDeviceMissing(deviceType: string) {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.SELECTED_DEVICE_MISSING,\n        'SelectedDeviceMissing',\n        HMSAction.TRACK,\n        `Could not detect selected ${deviceType} device`,\n        `Please check connection to the ${deviceType} device`,\n        deviceType as HMSTrackExceptionTrackType,\n      );\n    },\n\n    NoDataInTrack(description: string) {\n      return new HMSTrackException(\n        ErrorCodes.TracksErrors.NO_DATA,\n        'Track does not have any data',\n        HMSAction.TRACK,\n        description,\n        'This could possibily due to another application taking priority over the access to camera or microphone or due to an incoming call',\n        HMSTrackExceptionTrackType.AUDIO_VIDEO,\n      );\n    },\n  },\n\n  WebrtcErrors: {\n    CreateOfferFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.CREATE_OFFER_FAILED,\n        'CreateOfferFailed',\n        action,\n        `[${action.toString()}]: Failed to create offer. `,\n        description,\n      );\n    },\n\n    CreateAnswerFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.CREATE_ANSWER_FAILED,\n        'CreateAnswerFailed',\n        action,\n        `[${action.toString()}]: Failed to create answer. `,\n        description,\n      );\n    },\n\n    SetLocalDescriptionFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.SET_LOCAL_DESCRIPTION_FAILED,\n        'SetLocalDescriptionFailed',\n        action,\n        `[${action.toString()}]: Failed to set offer. `,\n        description,\n      );\n    },\n\n    SetRemoteDescriptionFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.SET_REMOTE_DESCRIPTION_FAILED,\n        'SetRemoteDescriptionFailed',\n        action,\n        `[${action.toString()}]: Failed to set answer. `,\n        description,\n        true,\n      );\n    },\n\n    ICEFailure(action: HMSAction, description = '', isTerminal = false) {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.ICE_FAILURE,\n        'ICEFailure',\n        action,\n        `[${action.toString()}]: Ice connection state FAILED`,\n        description,\n        isTerminal,\n      );\n    },\n\n    ICEDisconnected(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.ICE_DISCONNECTED,\n        'ICEDisconnected',\n        action,\n        `[${action.toString()}]: Ice connection state DISCONNECTED`,\n        description,\n      );\n    },\n\n    StatsFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.STATS_FAILED,\n        'StatsFailed',\n        action,\n        `Failed to WebRTC get stats - ${description}`,\n        description,\n      );\n    },\n  },\n\n  WebsocketMethodErrors: {\n    ServerErrors(code: number, action: HMSAction | HMSSignalMethod, description: string) {\n      return new HMSException(code, 'ServerErrors', action, description, description, terminalActions.includes(action));\n    },\n\n    AlreadyJoined(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebsocketMethodErrors.ALREADY_JOINED,\n        'AlreadyJoined',\n        action,\n        `[JOIN]: You have already joined this room.`,\n        description,\n      );\n    },\n\n    CannotJoinPreviewInProgress(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebsocketMethodErrors.CANNOT_JOIN_PREVIEW_IN_PROGRESS,\n        'CannotJoinPreviewInProgress',\n        action,\n        `[JOIN]: Cannot join if preview is in progress`,\n        description,\n      );\n    },\n  },\n\n  GenericErrors: {\n    NotConnected(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.NOT_CONNECTED,\n        'NotConnected',\n        action,\n        `Client is not connected`,\n        description,\n      );\n    },\n\n    Signalling(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.SIGNALLING,\n        'Signalling',\n        action,\n        `Unknown signalling error: ${action.toString()} ${description} `,\n        description,\n      );\n    },\n\n    Unknown(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.UNKNOWN,\n        'Unknown',\n        action,\n        `Unknown exception: ${description}`,\n        description,\n      );\n    },\n\n    NotReady(action: HMSAction, description = '') {\n      return new HMSException(ErrorCodes.GenericErrors.NOT_READY, 'NotReady', action, description, description);\n    },\n\n    JsonParsingFailed(action: HMSAction, jsonMessage: string, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.JSON_PARSING_FAILED,\n        'JsonParsingFailed',\n        action,\n        `Failed to parse JSON message - ${jsonMessage}`,\n        description,\n      );\n    },\n\n    TrackMetadataMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.TRACK_METADATA_MISSING,\n        'TrackMetadataMissing',\n        action,\n        `Track Metadata Missing`,\n        description,\n      );\n    },\n\n    RTCTrackMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.RTC_TRACK_MISSING,\n        'RTCTrackMissing',\n        action,\n        `RTC Track missing`,\n        description,\n      );\n    },\n\n    PeerMetadataMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.PEER_METADATA_MISSING,\n        'PeerMetadataMissing',\n        action,\n        `Peer Metadata Missing`,\n        description,\n      );\n    },\n\n    ValidationFailed(message: string, entity?: any) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.VALIDATION_FAILED,\n        'ValidationFailed',\n        HMSAction.VALIDATION,\n        message,\n        entity ? JSON.stringify(entity) : '',\n      );\n    },\n\n    InvalidRole(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.INVALID_ROLE,\n        'InvalidRole',\n        action,\n        `Invalid role. Join with valid role`,\n        description,\n        true,\n      );\n    },\n\n    PreviewAlreadyInProgress(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.PREVIEW_IN_PROGRESS,\n        'PreviewAlreadyInProgress',\n        action,\n        `[Preview]: Cannot join if preview is in progress`,\n        description,\n      );\n    },\n\n    LocalStorageAccessDenied(description = 'Access to localStorage has been denied') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.LOCAL_STORAGE_ACCESS_DENIED,\n        'LocalStorageAccessDenied',\n        HMSAction.NONE,\n        `LocalStorageAccessDenied`,\n        description,\n      );\n    },\n\n    MissingMediaDevices() {\n      return new HMSException(\n        ErrorCodes.GenericErrors.MISSING_MEDIADEVICES,\n        'MissingMediaDevices',\n        HMSAction.JOIN,\n        `navigator.mediaDevices is undefined. 100ms SDK won't work on this website as WebRTC is not supported on HTTP endpoints(missing navigator.mediaDevices). Please ensure you're using the SDK either on localhost or a valid HTTPS endpoint.`,\n        '',\n        true,\n      );\n    },\n\n    MissingRTCPeerConnection() {\n      return new HMSException(\n        ErrorCodes.GenericErrors.MISSING_RTCPEERCONNECTION,\n        'MissingRTCPeerConnection',\n        HMSAction.JOIN,\n        `RTCPeerConnection which is a core requirement for WebRTC call was not found, this could be due to an unsupported browser or browser extensions blocking WebRTC`,\n        '',\n        true,\n      );\n    },\n  },\n\n  MediaPluginErrors: {\n    PlatformNotSupported(action: HMSAction, description = '') {\n      return new HMSException(\n        7001,\n        'PlatformNotSupported',\n        action,\n        'Check HMS Docs to see the list of supported platforms',\n        description,\n      );\n    },\n\n    InitFailed(action: HMSAction, description = '') {\n      return new HMSException(7002, 'InitFailed', action, 'Plugin init failed', description);\n    },\n\n    ProcessingFailed(action: HMSAction, description = '') {\n      return new HMSException(7003, 'ProcessingFailed', action, 'Plugin processing failed', description);\n    },\n\n    AddAlreadyInProgress(action: HMSAction, description = '') {\n      return new HMSException(7004, 'AddAlreadyInProgress', action, 'Plugin add already in progress', description);\n    },\n\n    DeviceNotSupported(action: HMSAction, description = '') {\n      return new HMSException(\n        7005,\n        'DeviceNotSupported',\n        action,\n        'Check HMS Docs to see the list of supported devices',\n        description,\n      );\n    },\n  },\n\n  PlaylistErrors: {\n    NoEntryToPlay(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.PlaylistErrors.NO_ENTRY_TO_PLAY,\n        'NoEntryToPlay',\n        action,\n        'Reached end of playlist',\n        description,\n      );\n    },\n    NoEntryPlaying(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.PlaylistErrors.NO_ENTRY_IS_PLAYING,\n        'NoEntryIsPlaying',\n        action,\n        'No entry is playing at this time',\n        description,\n      );\n    },\n  },\n};\n", "import HMSLogger from './logger';\nimport { isBrowser } from './support';\nimport { ErrorFactory } from '../error/ErrorFactory';\n\nclass LocalStorage {\n  valuesMap = new Map();\n  getItem(key: string) {\n    if (this.valuesMap.has(key)) {\n      return String(this.valuesMap.get(key));\n    }\n    return null;\n  }\n\n  setItem(key: string, val: string) {\n    this.valuesMap.set(key, val);\n  }\n\n  removeItem(key: string) {\n    this.valuesMap.delete(key);\n  }\n\n  clear() {\n    this.valuesMap.clear();\n  }\n\n  key(i: number) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'key' on 'Storage': 1 argument required, but only 0 present.\"); // this is a TypeError implemented on Chrome, Firefox throws Not enough arguments to Storage.key.\n    }\n    const arr = Array.from(this.valuesMap.keys());\n    return arr[i];\n  }\n\n  get length() {\n    return this.valuesMap.size;\n  }\n}\n\nexport const initializeLocalstoragePolyfill = () => {\n  try {\n    if (isBrowser && !localStorage) {\n      window.localStorage = new LocalStorage();\n    }\n  } catch (e) {\n    HMSLogger.e('Error initialising localStorage', ErrorFactory.GenericErrors.LocalStorageAccessDenied());\n  }\n};\n", "import { initializeLocalstoragePolyfill } from './local-storage-polyfill';\nimport HMSLogger from './logger';\nimport { isBrowser } from './support';\nimport { ErrorFactory } from '../error/ErrorFactory';\n\nexport class LocalStorage<T> {\n  private storage: Storage | null = null;\n\n  constructor(public readonly key: string) {}\n\n  /**\n   * localstorage is not available in SSR, so get it only at time of use\n   */\n  getStorage() {\n    try {\n      if (isBrowser && !this.storage) {\n        initializeLocalstoragePolyfill();\n        this.storage = window.localStorage;\n      }\n      return this.storage;\n    } catch (e) {\n      HMSLogger.e('Error initialising localStorage', ErrorFactory.GenericErrors.LocalStorageAccessDenied());\n      return null;\n    }\n  }\n\n  get(): T | undefined {\n    const stringItem = this.getStorage()?.getItem(this.key);\n    if (!stringItem) {\n      return;\n    }\n    const item = JSON.parse(stringItem) as T;\n    return item;\n  }\n\n  set(value: T) {\n    const stringValue = JSON.stringify(value);\n    this.getStorage()?.setItem(this.key, stringValue);\n  }\n\n  clear() {\n    this.getStorage()?.removeItem(this.key);\n  }\n}\n", "import HMSLogger from './logger';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { Store } from '../sdk/store';\n\nconst TAG = `[VALIDATIONS]`;\n\n/**\n * Check only for presence(not truthy) of a value.\n * Use in places where 0, false need to be considered valid.\n */\nexport function isPresent(value: any) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * checks if RTCPeerConnection constructor is available\n */\nexport const validateRTCPeerConnection = () => {\n  if (!isPresent(RTCPeerConnection)) {\n    const error = ErrorFactory.GenericErrors.MissingRTCPeerConnection();\n    HMSLogger.e(TAG, error);\n    throw error;\n  }\n};\n\n/**\n * navigator.mediaDevices is undefined in insecure contexts served over HTTP protocol\n */\nexport const validateMediaDevicesExistence = () => {\n  if (!isPresent(navigator.mediaDevices)) {\n    const error = ErrorFactory.GenericErrors.MissingMediaDevices();\n    HMSLogger.e(TAG, error);\n    throw error;\n  }\n};\n\nexport const validatePublishParams = (store: Store) => {\n  const publishParams = store.getPublishParams();\n  if (!publishParams) {\n    throw ErrorFactory.GenericErrors.NotConnected(\n      HMSAction.VALIDATION,\n      'call addTrack after preview or join is successful',\n    );\n  }\n};\n", "import { ENV, isNode, parsedUserAgent } from './support';\nimport { isPresent } from './validations';\nimport { DomainCategory } from '../analytics/AnalyticsEventDomains';\nimport { domainCategory } from '../analytics/domain-analytics';\nimport { HMSFrameworkInfo } from '../interfaces';\n\nconst sdk_version = require('../../package.json').version;\n\ntype UserAgent = {\n  os: string;\n  os_version: string;\n  sdk: 'web';\n  sdk_version: string;\n  env: 'debug' | 'prod';\n  domain: DomainCategory;\n  is_prebuilt: boolean;\n  device_model?: string;\n  framework?: HMSFrameworkInfo['type'] | 'node';\n  framework_version?: HMSFrameworkInfo['version'];\n  framework_sdk_version?: HMSFrameworkInfo['sdkVersion'];\n};\n\nexport function createUserAgent(sdkEnv: ENV = ENV.PROD, frameworkInfo?: HMSFrameworkInfo): string {\n  const sdk = 'web';\n  const env = domainCategory !== DomainCategory.LOCAL && sdkEnv === ENV.PROD ? 'prod' : 'debug';\n\n  if (isNode) {\n    return convertObjectToString({\n      os: 'web_nodejs',\n      os_version: process.version,\n      sdk,\n      sdk_version,\n      env,\n      domain: domainCategory,\n      is_prebuilt: !!frameworkInfo?.isPrebuilt,\n      framework: 'node',\n      framework_version: process.version,\n      framework_sdk_version: frameworkInfo?.sdkVersion,\n    });\n  }\n\n  const parsedOs = parsedUserAgent.getOS();\n  const parsedDevice = parsedUserAgent.getDevice();\n  const parsedBrowser = parsedUserAgent.getBrowser();\n\n  const os = replaceSpaces(`web_${parsedOs.name}`);\n  const os_version = parsedOs.version || '';\n\n  const browser = replaceSpaces(`${parsedBrowser.name}_${parsedBrowser.version}`);\n  let device_model = browser;\n  if (parsedDevice.type) {\n    const deviceVendor = replaceSpaces(`${parsedDevice.vendor}_${parsedDevice.type}`);\n    device_model = `${deviceVendor}/${browser}`;\n  }\n\n  return convertObjectToString({\n    os,\n    os_version,\n    sdk,\n    sdk_version,\n    device_model,\n    env,\n    domain: domainCategory,\n    is_prebuilt: !!frameworkInfo?.isPrebuilt,\n    framework: frameworkInfo?.type,\n    framework_version: frameworkInfo?.version,\n    framework_sdk_version: frameworkInfo?.sdkVersion,\n  });\n}\n\nfunction replaceSpaces(s: string) {\n  return s.replace(/ /g, '_');\n}\n\nconst convertObjectToString = (object: UserAgent, delimiter = ',') =>\n  Object.keys(object)\n    .filter(key => isPresent(object[key as keyof UserAgent]))\n    .map(key => `${key}:${object[key as keyof UserAgent]}`)\n    .join(delimiter);\n", "import { PublishAnalyticPayload, SubscribeAnalyticPayload } from './stats/interfaces';\nimport { AdditionalAnalyticsProperties } from './AdditionalAnalyticsProperties';\nimport AnalyticsEvent from './AnalyticsEvent';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { IAnalyticsPropertiesProvider } from './IAnalyticsPropertiesProvider';\nimport { HMSException } from '../error/HMSException';\nimport { DeviceMap, SelectedDevices } from '../interfaces';\nimport { HMSTrackSettings } from '../media/settings/HMSTrackSettings';\nimport { HMSRemoteVideoTrack } from '../media/tracks/HMSRemoteVideoTrack';\n\nexport default class AnalyticsEventFactory {\n  private static KEY_REQUESTED_AT = 'requested_at';\n  private static KEY_RESPONDED_AT = 'responded_at';\n\n  static connect(\n    error?: Error,\n    additionalProperties?: AdditionalAnalyticsProperties,\n    requestedAt: Date = new Date(),\n    respondedAt: Date = new Date(),\n    endpoint?: string,\n  ) {\n    const name = this.eventNameFor('connect', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n\n    const properties = this.getPropertiesWithError(\n      {\n        ...additionalProperties,\n        [this.KEY_REQUESTED_AT]: requestedAt?.getTime(),\n        [this.KEY_RESPONDED_AT]: respondedAt?.getTime(),\n        endpoint,\n      },\n      error,\n    );\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static disconnect(error?: Error, additionalProperties?: AdditionalAnalyticsProperties) {\n    const name = 'disconnected';\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(additionalProperties, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static preview({\n    error,\n    ...props\n  }: {\n    error?: Error;\n    time?: number;\n    init_response_time?: number;\n    ws_connect_time?: number;\n    on_policy_change_time?: number;\n    local_audio_track_time?: number;\n    local_video_track_time?: number;\n  }) {\n    const name = this.eventNameFor('preview', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(props, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static join({\n    error,\n    ...props\n  }: {\n    error?: Error;\n    is_preview_called?: boolean;\n    start?: Date;\n    end?: Date;\n    time?: number;\n    init_response_time?: number;\n    ws_connect_time?: number;\n    on_policy_change_time?: number;\n    local_audio_track_time?: number;\n    local_video_track_time?: number;\n    retries_join?: number;\n  }) {\n    const name = this.eventNameFor('join', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n\n    const properties = this.getPropertiesWithError({ ...props, is_preview_called: !!props.is_preview_called }, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static publish({ devices, settings, error }: { devices?: DeviceMap; settings?: HMSTrackSettings; error?: Error }) {\n    const name = this.eventNameFor('publish', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(\n      {\n        devices,\n        audio: settings?.audio,\n        video: settings?.video,\n      },\n      error,\n    );\n    return new AnalyticsEvent({\n      name,\n      level,\n      properties,\n    });\n  }\n\n  static hlsPlayerError(error: HMSException) {\n    return new AnalyticsEvent({\n      name: 'hlsPlayerError',\n      level: AnalyticsEventLevel.ERROR,\n      properties: this.getErrorProperties(error),\n    });\n  }\n  static subscribeFail(error: Error) {\n    const name = this.eventNameFor('subscribe', false);\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = this.getErrorProperties(error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static leave() {\n    return new AnalyticsEvent({ name: 'leave', level: AnalyticsEventLevel.INFO });\n  }\n\n  static autoplayError() {\n    return new AnalyticsEvent({ name: 'autoplayError', level: AnalyticsEventLevel.ERROR });\n  }\n\n  static audioPlaybackError(error: HMSException) {\n    return new AnalyticsEvent({\n      name: 'audioPlaybackError',\n      level: AnalyticsEventLevel.ERROR,\n      properties: this.getErrorProperties(error),\n    });\n  }\n\n  static audioRecovered(message: string) {\n    return new AnalyticsEvent({\n      name: 'audioRecovered',\n      level: AnalyticsEventLevel.INFO,\n      properties: {\n        message,\n      },\n    });\n  }\n\n  static permissionChange(type: 'audio' | 'video', status: PermissionState) {\n    return new AnalyticsEvent({\n      name: 'permissionChanged',\n      level: AnalyticsEventLevel.INFO,\n      properties: {\n        message: `Perrmission for ${type} changed to ${status}`,\n      },\n    });\n  }\n\n  static deviceChange({\n    isUserSelection,\n    selection,\n    type,\n    devices,\n    error,\n  }: {\n    isUserSelection?: boolean;\n    selection: Partial<SelectedDevices>;\n    type?: 'change' | 'list' | 'audioInput' | 'audioOutput' | 'video';\n    devices: DeviceMap;\n    error?: Error;\n  }) {\n    const name = this.eventNameFor(error ? 'publish' : `device.${type}`, error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError({ selection, devices, isUserSelection }, error);\n    return new AnalyticsEvent({\n      name,\n      level,\n      properties,\n    });\n  }\n\n  static performance(stats: IAnalyticsPropertiesProvider) {\n    const name = 'perf.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = stats.toAnalyticsProperties();\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static rtcStats(stats: IAnalyticsPropertiesProvider) {\n    const name = 'rtc.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = stats.toAnalyticsProperties();\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static rtcStatsFailed(error: HMSException) {\n    const name = 'rtc.stats.failed';\n    const level = AnalyticsEventLevel.ERROR;\n\n    return new AnalyticsEvent({ name, level, properties: this.getErrorProperties(error) });\n  }\n\n  /**\n   * TODO: remove once everything is switched to server side degradation, this\n   * event can be handled on server side as well.\n   */\n  static degradationStats(track: HMSRemoteVideoTrack, isDegraded: boolean) {\n    const name = 'video.degradation.stats';\n    const level = AnalyticsEventLevel.INFO;\n    let properties: any = {\n      degradedAt: track.degradedAt,\n      trackId: track.trackId,\n    };\n\n    if (!isDegraded && track.degradedAt instanceof Date) {\n      // not degraded => restored\n      const restoredAt = new Date();\n      const duration = restoredAt.valueOf() - track.degradedAt.valueOf();\n      properties = { ...properties, duration, restoredAt };\n    }\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioDetectionFail(error: Error, device?: MediaDeviceInfo): AnalyticsEvent {\n    const properties = this.getPropertiesWithError({ device }, error);\n    const level = AnalyticsEventLevel.ERROR;\n    const name = 'audiopresence.failed';\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static previewNetworkQuality(properties: { downLink?: string; score?: number; error?: string }) {\n    return new AnalyticsEvent({\n      name: 'perf.networkquality.preview',\n      level: properties.error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO,\n      properties,\n    });\n  }\n\n  static publishStats(properties: PublishAnalyticPayload) {\n    return new AnalyticsEvent({\n      name: 'publisher.stats',\n      level: AnalyticsEventLevel.INFO,\n      properties,\n    });\n  }\n\n  static subscribeStats(properties: SubscribeAnalyticPayload) {\n    return new AnalyticsEvent({\n      name: 'subscriber.stats',\n      level: AnalyticsEventLevel.INFO,\n      properties,\n    });\n  }\n\n  static getKrispUsage(duration: number) {\n    return new AnalyticsEvent({\n      name: 'krisp.usage',\n      level: AnalyticsEventLevel.INFO,\n      properties: { duration },\n    });\n  }\n\n  static krispStart() {\n    return new AnalyticsEvent({\n      name: 'krisp.start',\n      level: AnalyticsEventLevel.INFO,\n    });\n  }\n\n  static krispStop() {\n    return new AnalyticsEvent({\n      name: 'krisp.stop',\n      level: AnalyticsEventLevel.INFO,\n    });\n  }\n\n  static interruption({\n    started,\n    type,\n    reason,\n    deviceInfo,\n  }: {\n    started: boolean;\n    type: string;\n    reason: string;\n    deviceInfo: Partial<MediaDeviceInfo>;\n  }) {\n    return new AnalyticsEvent({\n      name: `${started ? 'interruption.start' : 'interruption.stop'}`,\n      level: AnalyticsEventLevel.INFO,\n      properties: {\n        reason,\n        type,\n        ...deviceInfo,\n      },\n    });\n  }\n\n  private static eventNameFor(name: string, ok: boolean) {\n    const suffix = ok ? 'success' : 'failed';\n    return `${name}.${suffix}`;\n  }\n\n  private static getPropertiesWithError(initialProperties: any, error?: Error) {\n    const errorProperties = this.getErrorProperties(error);\n    initialProperties = { ...errorProperties, ...initialProperties };\n    return initialProperties;\n  }\n\n  private static getErrorProperties(error?: Error): Record<string, any> {\n    if (error) {\n      return error instanceof HMSException\n        ? error.toAnalyticsProperties()\n        : {\n            error_name: error.name,\n            error_message: error.message,\n            error_description: error.cause,\n          };\n    } else {\n      return {};\n    }\n  }\n}\n", "export const stringifyMediaStreamTrack = (track: MediaStreamTrack) => {\n  if (!track) {\n    return '';\n  }\n  return `{\n    trackId: ${track.id};\n    kind: ${track.kind};\n    enabled: ${track.enabled};\n    muted: ${track.muted};\n    readyState: ${track.readyState};\n  }`;\n};\n", "import { HMSTrackType } from './HMSTrackType';\nimport AnalyticsEventFactory from '../../analytics/AnalyticsEventFactory';\nimport { stringifyMediaStreamTrack } from '../../utils/json';\nimport HMSLogger from '../../utils/logger';\nimport { HMSMediaStream } from '../streams';\n\nexport type HMSTrackSource = 'regular' | 'screen' | 'plugin' | 'audioplaylist' | 'videoplaylist' | string;\n\nexport abstract class HMSTrack {\n  /**\n   * @internal\n   */\n  readonly stream: HMSMediaStream;\n  source?: HMSTrackSource;\n  peerId?: string;\n  transceiver?: RTCRtpTransceiver;\n\n  /**\n   * @internal to print as a helpful identifier alongside logs\n   */\n  logIdentifier = '';\n\n  /** The native mediastream track, for local, this changes on mute/unmute(for video),\n   * and on device change.\n   * @internal */\n  nativeTrack: MediaStreamTrack;\n\n  /**\n   * Firefox doesn't respect the track id as sent from the backend when calling peerconnection.ontrack callback. This\n   * breaks correlation of future track updates from backend. So we're storing the sdp track id as present in the\n   * original offer along with the track as well and will let this override the native track id for any correlation\n   * purpose.\n   * This applies for remote tracks only.\n   * @internal */\n  private sdpTrackId?: string;\n\n  /**\n   * @internal\n   * The local track id is changed on mute/unmute or when device id changes, this is abstracted as an internal\n   * detail of HMSTrack and the variable is used for this enacapsulation where the first track id is remembered\n   * and treated as the fixed track id for this HMSTrack. This simplifies things for the user of the sdk who\n   * do not have to worry about changing track IDs.\n   * This applies for local tracks only.\n   */\n  private firstTrackId?: string;\n\n  abstract readonly type: HMSTrackType;\n\n  public get enabled(): boolean {\n    return this.nativeTrack.enabled;\n  }\n\n  /**\n   * firstTrackId => encapsulates change in local track ids\n   * sdpTrackId => fixes remote track updates correlation on firefox\n   */\n  public get trackId(): string {\n    return this.firstTrackId || this.sdpTrackId || this.nativeTrack.id;\n  }\n\n  getMediaTrackSettings(): MediaTrackSettings {\n    return this.nativeTrack.getSettings();\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    this.nativeTrack.enabled = value;\n  }\n\n  protected constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: HMSTrackSource) {\n    this.stream = stream;\n    this.nativeTrack = track;\n    this.source = source;\n  }\n\n  /**\n   * @internal\n   */\n  setSdpTrackId(sdpTrackId: string) {\n    this.sdpTrackId = sdpTrackId;\n  }\n\n  /**\n   * @internal\n   */\n  protected setFirstTrackId(trackId: string) {\n    this.firstTrackId = trackId;\n  }\n\n  isTrackNotPublishing = () => {\n    return this.nativeTrack.readyState === 'ended' || this.nativeTrack.muted;\n  };\n\n  /**\n   * @internal\n   * It will send event to analytics when interruption start/stop\n   */\n  sendInterruptionEvent({ started, reason }: { started: boolean; reason: string }) {\n    return AnalyticsEventFactory.interruption({\n      started,\n      type: this.type,\n      reason,\n      deviceInfo: {\n        deviceId: this.nativeTrack.getSettings().deviceId,\n        groupId: this.nativeTrack.getSettings().groupId,\n      },\n    });\n  }\n  /**\n   * @internal\n   * take care of -\n   * 1. https://bugs.chromium.org/p/chromium/issues/detail?id=1232649\n   * 2. stopping any tracks\n   * 3. plugins related cleanups and stopping\n   */\n  cleanup() {\n    HMSLogger.d('[HMSTrack]', 'Stopping track', this.toString());\n    this.nativeTrack?.stop();\n  }\n\n  toString() {\n    return `{\n      streamId: ${this.stream.id};\n      peerId: ${this.peerId};\n      trackId: ${this.trackId};\n      mid: ${this.transceiver?.mid || '-'};\n      logIdentifier: ${this.logIdentifier};\n      source: ${this.source};\n      enabled: ${this.enabled};\n      nativeTrack: ${stringifyMediaStreamTrack(this.nativeTrack)};\n    }`;\n  }\n}\n", "import { HMSTrack, HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport HMSLogger from '../../utils/logger';\nimport { isFirefox } from '../../utils/support';\nimport { HMSMediaStream, HMSRemoteStream } from '../streams';\n\nexport class HMSAudioTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.AUDIO;\n  private audioElement: HTMLAudioElement | null = null;\n  private outputDevice?: MediaDeviceInfo;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'audio') {\n      throw new Error(\"Expected 'track' kind = 'audio'\");\n    }\n  }\n\n  getVolume() {\n    // floor is required because of floating-point precision. e.g 0.55*100 gives 55.00000000000001\n    return this.audioElement ? Math.floor(this.audioElement.volume * 100) : null;\n  }\n\n  async setVolume(value: number) {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    // Don't subscribe to audio when volume is 0\n    await this.subscribeToAudio(value === 0 ? false : this.enabled);\n    if (this.audioElement) {\n      this.audioElement.volume = value / 100;\n    }\n  }\n\n  setAudioElement(element: HTMLAudioElement | null) {\n    HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'adding audio element', `${this}`, element);\n    this.audioElement = element;\n  }\n\n  /**\n   * @internal\n   * @returns {HTMLAudioElement | null}\n   */\n  getAudioElement(): HTMLAudioElement | null {\n    return this.audioElement;\n  }\n\n  getOutputDevice() {\n    return this.outputDevice;\n  }\n\n  cleanup() {\n    super.cleanup();\n    if (this.audioElement) {\n      this.audioElement.srcObject = null;\n      this.audioElement.remove();\n      this.audioElement = null;\n    }\n  }\n\n  async setOutputDevice(device?: MediaDeviceInfo) {\n    if (!device) {\n      HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'device is null', `${this}`);\n      return;\n    }\n    if (!this.audioElement) {\n      HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'no audio element to set output', `${this}`);\n      this.outputDevice = device;\n      return;\n    }\n    try {\n      // @ts-ignore\n      if (typeof this.audioElement.setSinkId === 'function') {\n        if (isFirefox) {\n          // using setSinkId in firefox disables echo cancellation (introduced in Firefox 116)\n          // todo: GoogleMeet doesn't set sinkId for all 3 audio elements, how do they redirect audio then?\n          //\n          // refer: https://100ms.atlassian.net/browse/LIVE-1992\n          // refer: https://bugzilla.mozilla.org/show_bug.cgi?id=1849108\n          // refer: https://bugzilla.mozilla.org/show_bug.cgi?id=1848283\n          // refer: https://github.com/aws/amazon-chime-sdk-js/issues/2742\n        } else {\n          // @ts-ignore\n          await this.audioElement?.setSinkId(device.deviceId);\n        }\n\n        this.outputDevice = device;\n      }\n    } catch (error) {\n      HMSLogger.d('[HMSAudioTrack]', 'error in setSinkId', error);\n    }\n  }\n\n  protected async subscribeToAudio(value: boolean) {\n    if (this.stream instanceof HMSRemoteStream) {\n      await this.stream.setAudio(value, this.trackId, this.logIdentifier);\n    }\n  }\n}\n", "import isEqual from 'lodash.isequal';\nimport { HMSAudioTrack } from './HMSAudioTrack';\nimport AnalyticsEventFactory from '../../analytics/AnalyticsEventFactory';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSAudioTrackSettings as IHMSAudioTrackSettings } from '../../interfaces';\nimport { HMSAudioPlugin, HMSPluginSupportResult } from '../../plugins';\nimport { HMSAudioPluginsManager } from '../../plugins/audio';\nimport Room from '../../sdk/models/HMSRoom';\nimport HMSLogger from '../../utils/logger';\nimport { getAudioTrack, isEmptyTrack, listenToPermissionChange } from '../../utils/track';\nimport { TrackAudioLevelMonitor } from '../../utils/track-audio-level-monitor';\nimport { HMSAudioTrackSettings, HMSAudioTrackSettingsBuilder } from '../settings';\nimport { HMSLocalStream } from '../streams';\n\nfunction generateHasPropertyChanged(newSettings: Partial<HMSAudioTrackSettings>, oldSettings: HMSAudioTrackSettings) {\n  return function hasChanged(prop: 'codec' | 'volume' | 'maxBitrate' | 'deviceId' | 'advanced' | 'audioMode') {\n    return !isEqual(newSettings[prop], oldSettings[prop]);\n  };\n}\n\nexport class HMSLocalAudioTrack extends HMSAudioTrack {\n  private readonly TAG = '[HMSLocalAudioTrack]';\n  settings: HMSAudioTrackSettings;\n  private pluginsManager: HMSAudioPluginsManager;\n  private processedTrack?: MediaStreamTrack;\n  private manuallySelectedDeviceId?: string;\n  /**\n   * This is to keep track of all the tracks created so far and stop and clear them when creating new tracks to release microphone\n   * This is needed because when replaceTrackWith is called before updating native track, there is no way that track is available\n   * for you to stop, which leads to the microphone not released even after leave is called.\n   */\n  private tracksCreated = new Set<MediaStreamTrack>();\n\n  audioLevelMonitor?: TrackAudioLevelMonitor;\n\n  /**\n   * see the doc in HMSLocalVideoTrack\n   * @internal\n   */\n  publishedTrackId?: string;\n\n  /**\n   * will be false for preview tracks\n   */\n  isPublished = false;\n\n  constructor(\n    stream: HMSLocalStream,\n    track: MediaStreamTrack,\n    source: string,\n    private eventBus: EventBus,\n    settings: HMSAudioTrackSettings = new HMSAudioTrackSettingsBuilder().build(),\n    private room?: Room,\n  ) {\n    super(stream, track, source);\n    stream.tracks.push(this);\n    this.addTrackEventListeners(track);\n    this.trackPermissions();\n\n    this.settings = settings;\n    // Replace the 'default' or invalid deviceId with the actual deviceId\n    // This is to maintain consistency with selected devices as in some cases there will be no 'default' device\n    if (settings.deviceId !== track.getSettings().deviceId && !isEmptyTrack(track)) {\n      this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n    }\n    this.pluginsManager = new HMSAudioPluginsManager(this, eventBus, room);\n    this.setFirstTrackId(track.id);\n    if (source === 'regular') {\n      document.addEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n  }\n\n  clone(stream: HMSLocalStream) {\n    const clonedTrack = this.nativeTrack.clone();\n    /**\n     * stream only becomes active when the track is added to it.\n     */\n    stream.nativeStream.addTrack(clonedTrack);\n    const track = new HMSLocalAudioTrack(stream, clonedTrack, this.source!, this.eventBus, this.settings, this.room);\n    track.peerId = this.peerId;\n\n    if (this.pluginsManager.pluginsMap.size > 0) {\n      this.pluginsManager.pluginsMap.forEach(value => {\n        track\n          .addPlugin(value)\n          .catch((e: Error) => HMSLogger.e(this.TAG, 'Plugin add failed while migrating', value, e));\n      });\n    }\n    return track;\n  }\n\n  getManuallySelectedDeviceId() {\n    return this.manuallySelectedDeviceId;\n  }\n\n  resetManuallySelectedDeviceId() {\n    this.manuallySelectedDeviceId = undefined;\n  }\n\n  private handleVisibilityChange = async () => {\n    // track state is fine do nothing\n    if (!this.shouldReacquireTrack()) {\n      HMSLogger.d(this.TAG, `visibiltiy: ${document.visibilityState}`, `${this}`);\n      return;\n    }\n    if (document.visibilityState === 'hidden') {\n      this.eventBus.analytics.publish(\n        this.sendInterruptionEvent({\n          started: true,\n          reason: 'visibility-change',\n        }),\n      );\n    } else {\n      HMSLogger.d(this.TAG, 'On visibile replacing track as it is not publishing');\n      try {\n        await this.replaceTrackWith(this.settings);\n      } catch (error) {\n        this.eventBus.error.publish(error as HMSException);\n      }\n      this.eventBus.analytics.publish(\n        this.sendInterruptionEvent({\n          started: false,\n          reason: 'visibility-change',\n        }),\n      );\n    }\n  };\n\n  /**\n   * Replace the new track in stream and update native track\n   * @param track\n   */\n  private async updateTrack(track: MediaStreamTrack) {\n    track.enabled = this.enabled;\n    const localStream = this.stream as HMSLocalStream;\n    await localStream.replaceStreamTrack(this.nativeTrack, track);\n    // change nativeTrack so plugin can start its work\n    this.nativeTrack = track;\n    await this.replaceSenderTrack();\n    const isLevelMonitored = Boolean(this.audioLevelMonitor);\n    isLevelMonitored && this.initAudioLevelMonitor();\n  }\n\n  private async replaceTrackWith(settings: HMSAudioTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    /*\n     * Note: Do not change the order of this.\n     * stop the previous before acquiring the new track otherwise this can lead to\n     * no audio when the above getAudioTrack throws an error. ex: DeviceInUse error\n     */\n    prevTrack?.stop();\n    this.removeTrackEventListeners(prevTrack);\n    this.tracksCreated.forEach(track => track.stop());\n    this.tracksCreated.clear();\n    try {\n      const newTrack = await getAudioTrack(settings);\n      this.addTrackEventListeners(newTrack);\n      this.tracksCreated.add(newTrack);\n      HMSLogger.d(this.TAG, 'replaceTrack, Previous track stopped', prevTrack, 'newTrack', newTrack);\n      await this.updateTrack(newTrack);\n    } catch (e) {\n      // Generate a new track from previous settings so there will be audio because previous track is stopped\n      const newTrack = await getAudioTrack(this.settings);\n      this.addTrackEventListeners(newTrack);\n      this.tracksCreated.add(newTrack);\n      await this.updateTrack(newTrack);\n      if (this.isPublished) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.publish({\n            error: e as Error,\n          }),\n        );\n      }\n      throw e;\n    }\n    try {\n      await this.pluginsManager.reprocessPlugins();\n    } catch (e) {\n      this.eventBus.audioPluginFailed.publish(e as HMSException);\n    }\n  }\n\n  async setEnabled(value: boolean, skipcheck = false) {\n    if (value === this.enabled && !skipcheck) {\n      return;\n    }\n    // Replace silent empty track or muted track(happens when microphone is disabled from address bar in iOS) with an actual audio track, if enabled or ended track or when silence is detected.\n    if (value && this.shouldReacquireTrack()) {\n      await this.replaceTrackWith(this.settings);\n    }\n    await super.setEnabled(value);\n    if (value) {\n      this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId });\n    }\n    this.eventBus.localAudioEnabled.publish({ enabled: value, track: this });\n  }\n\n  /**\n   * verify if the track id being passed is of this track for correlating server messages like audio level\n   */\n  isPublishedTrackId(trackId: string) {\n    return this.publishedTrackId === trackId;\n  }\n\n  async setSettings(settings: Partial<IHMSAudioTrackSettings>, internal = false) {\n    const newSettings = this.buildNewSettings(settings);\n\n    if (isEmptyTrack(this.nativeTrack)) {\n      // if it is an empty track, cache the settings for when it is unmuted\n      this.settings = newSettings;\n      return;\n    }\n    await this.handleDeviceChange(newSettings, internal);\n    await this.handleSettingsChange(newSettings);\n    this.settings = newSettings;\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  getPlugins(): string[] {\n    return this.pluginsManager.getPlugins();\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  async addPlugin(plugin: HMSAudioPlugin): Promise<void> {\n    return this.pluginsManager.addPlugin(plugin);\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  async removePlugin(plugin: HMSAudioPlugin): Promise<void> {\n    return this.pluginsManager.removePlugin(plugin);\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  validatePlugin(plugin: HMSAudioPlugin): HMSPluginSupportResult {\n    return this.pluginsManager.validatePlugin(plugin);\n  }\n\n  /**\n   * @internal\n   */\n  async setProcessedTrack(processedTrack?: MediaStreamTrack) {\n    // if all plugins are removed reset everything back to native track\n    if (!processedTrack) {\n      this.processedTrack = undefined;\n    } else if (processedTrack !== this.processedTrack) {\n      this.processedTrack = processedTrack;\n    }\n    await this.replaceSenderTrack();\n  }\n\n  initAudioLevelMonitor() {\n    if (this.audioLevelMonitor) {\n      this.destroyAudioLevelMonitor();\n    }\n    HMSLogger.d(this.TAG, 'Monitor Audio Level for', this, this.getMediaTrackSettings().deviceId);\n    this.audioLevelMonitor = new TrackAudioLevelMonitor(\n      this,\n      this.eventBus.trackAudioLevelUpdate,\n      this.eventBus.localAudioSilence,\n    );\n    this.audioLevelMonitor.start();\n    this.audioLevelMonitor.detectSilence();\n  }\n\n  destroyAudioLevelMonitor() {\n    this.audioLevelMonitor?.stop();\n    this.audioLevelMonitor = undefined;\n  }\n\n  async cleanup() {\n    super.cleanup();\n    await this.pluginsManager.cleanup();\n    await this.pluginsManager.closeContext();\n    this.transceiver = undefined;\n    this.processedTrack?.stop();\n    this.tracksCreated.forEach(track => track.stop());\n    this.tracksCreated.clear();\n    this.isPublished = false;\n    this.destroyAudioLevelMonitor();\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n  }\n\n  /**\n   * @internal\n   * published track id will be different in case there was some processing done using plugins.\n   */\n  getTrackIDBeingSent() {\n    return this.processedTrack ? this.processedTrack.id : this.nativeTrack.id;\n  }\n\n  /**\n   * @internal\n   */\n  getTrackBeingSent() {\n    return this.processedTrack || this.nativeTrack;\n  }\n\n  private addTrackEventListeners(track: MediaStreamTrack) {\n    track.addEventListener('mute', this.handleTrackMute);\n    track.addEventListener('unmute', this.handleTrackUnmute);\n  }\n\n  private removeTrackEventListeners(track: MediaStreamTrack) {\n    track.removeEventListener('mute', this.handleTrackMute);\n    track.removeEventListener('unmute', this.handleTrackUnmute);\n  }\n\n  private trackPermissions = () => {\n    listenToPermissionChange('microphone', (state: PermissionState) => {\n      this.eventBus.analytics.publish(AnalyticsEventFactory.permissionChange(this.type, state));\n      if (state === 'denied') {\n        this.eventBus.localAudioEnabled.publish({ enabled: false, track: this });\n      }\n    });\n  };\n\n  private handleTrackMute = () => {\n    HMSLogger.d(this.TAG, 'muted natively');\n    const reason = document.visibilityState === 'hidden' ? 'visibility-change' : 'incoming-call';\n    this.eventBus.analytics.publish(\n      this.sendInterruptionEvent({\n        started: true,\n        reason,\n      }),\n    );\n    this.eventBus.localAudioEnabled.publish({ enabled: false, track: this });\n  };\n\n  /** @internal */\n  handleTrackUnmute = async () => {\n    HMSLogger.d(this.TAG, 'unmuted natively');\n    const reason = document.visibilityState === 'hidden' ? 'visibility-change' : 'incoming-call';\n    this.eventBus.analytics.publish(\n      this.sendInterruptionEvent({\n        started: false,\n        reason,\n      }),\n    );\n    try {\n      await this.setEnabled(this.enabled, true);\n      // whatsapp call doesn't seem to send video unmute natively, so use audio unmute to play video\n      this.eventBus.localAudioUnmutedNatively.publish();\n    } catch (error) {\n      this.eventBus.error.publish(error as HMSException);\n    }\n  };\n\n  private replaceSenderTrack = async () => {\n    if (!this.transceiver || this.transceiver.direction !== 'sendonly') {\n      HMSLogger.d(this.TAG, `transceiver for ${this.trackId} not available or not connected yet`);\n      return;\n    }\n    await this.transceiver.sender.replaceTrack(this.processedTrack || this.nativeTrack);\n  };\n\n  private shouldReacquireTrack = () => {\n    return isEmptyTrack(this.nativeTrack) || this.isTrackNotPublishing();\n  };\n\n  private buildNewSettings(settings: Partial<HMSAudioTrackSettings>) {\n    const { volume, codec, maxBitrate, deviceId, advanced, audioMode } = { ...this.settings, ...settings };\n    const newSettings = new HMSAudioTrackSettings(volume, codec, maxBitrate, deviceId, advanced, audioMode);\n    return newSettings;\n  }\n\n  private handleSettingsChange = async (settings: HMSAudioTrackSettings) => {\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if ((hasPropertyChanged('maxBitrate') || hasPropertyChanged('audioMode')) && settings.maxBitrate) {\n      await stream.setMaxBitrateAndFramerate(this, settings);\n    }\n\n    if (hasPropertyChanged('advanced') || hasPropertyChanged('audioMode')) {\n      await this.replaceTrackWith(settings);\n    }\n  };\n\n  /**\n   * Replace audio track with new track on device change if enabled\n   * @param settings - AudioSettings Object constructed with new settings\n   * @param internal - whether the change was because of internal sdk call or external client call\n   */\n  private handleDeviceChange = async (settings: HMSAudioTrackSettings, internal = false) => {\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if (hasPropertyChanged('deviceId')) {\n      this.manuallySelectedDeviceId = !internal ? settings.deviceId : this.manuallySelectedDeviceId;\n      HMSLogger.d(\n        this.TAG,\n        'device change',\n        'manual selection:',\n        this.manuallySelectedDeviceId,\n        'new device:',\n        settings.deviceId,\n      );\n      await this.replaceTrackWith(settings);\n      const groupId = this.nativeTrack.getSettings().groupId;\n      if (!internal && settings.deviceId) {\n        DeviceStorageManager.updateSelection('audioInput', {\n          deviceId: settings.deviceId,\n          groupId,\n        });\n        this.eventBus.deviceChange.publish({\n          isUserSelection: true,\n          type: 'audioInput',\n          selection: {\n            deviceId: settings.deviceId,\n            groupId: groupId,\n          },\n        });\n      }\n    }\n  };\n}\n", "import { DeviceMap, SelectedDevices } from '../interfaces';\nimport { LocalStorage } from '../utils/local-storage';\nimport HMSLogger from '../utils/logger';\n\ntype DeviceInfo = { deviceId?: string; groupId?: string };\n/**\n * This class is to manage storing and retrieving selected devices\n * from localstorage\n * @internal\n */\nclass DeviceStorage {\n  private storage = new LocalStorage<SelectedDevices>('hms-device-selection');\n  private remember = false;\n  private devices?: DeviceMap;\n  private readonly TAG = '[HMSDeviceStorage]';\n\n  setDevices(devices: DeviceMap) {\n    this.devices = devices;\n  }\n\n  rememberDevices(value: boolean) {\n    this.remember = value;\n  }\n\n  /**\n   * This will update the passed in type value in storage\n   * @param {string} type - One of audioInput | videoInput | audioOutput\n   * @param {DeviceInfo} param\n   * @returns {void}\n   */\n  updateSelection(type: 'audioInput' | 'videoInput' | 'audioOutput', { deviceId, groupId }: DeviceInfo) {\n    if (!this.devices || !this.remember) {\n      return;\n    }\n    const newSelection = this.devices[type].find(device => this.isSame({ deviceId, groupId }, device));\n    if (!newSelection) {\n      HMSLogger.w(this.TAG, `Could not find device with deviceId: ${deviceId}, groupId: ${groupId}`);\n      return;\n    }\n    const selectedDevices = this.storage.get() || {};\n    if (type === 'audioOutput') {\n      selectedDevices[type] = newSelection as MediaDeviceInfo;\n    } else {\n      selectedDevices[type] = newSelection as MediaDeviceInfo;\n    }\n    this.storage.set(selectedDevices);\n  }\n\n  getSelection() {\n    if (!this.remember) {\n      return undefined;\n    }\n    return this.storage.get();\n  }\n\n  cleanup() {\n    this.remember = false;\n    this.devices = undefined;\n  }\n\n  private isSame(current: DeviceInfo, device: DeviceInfo) {\n    // Safari doesn't give groupId from nativeTrack. Check if groupId's match or current groupId is not present\n    return current.deviceId === device.deviceId && (current.groupId === device.groupId || !current.groupId);\n  }\n}\n\nexport const DeviceStorageManager = new DeviceStorage();\n", "/**\n * A plugin implementing this interface can be registered with HMSLocalAudioTrack to transform, process or\n * analyze the local audio track.These can include applications like background noise removal, speech commands, live\n * analysis of audio etc. The below functions are required for the sdk to properly use the plugin, usually\n * the plugin would also be exposing some public functions of its own for the UI to control its working.\n */\n\nexport interface HMSAudioPlugin {\n  /**\n   * This function will be called by the SDK for audio track which the plugin needs to process.\n   * The reason audio context is also part of the interface is that it's recommended to reuse on audio context\n   * instead of creating new for every use - https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n   */\n  processAudioTrack(ctx: AudioContext, source: AudioNode): Promise<AudioNode>;\n\n  /**\n   * This function will be called before the call to init, it is used to check whether the plugin supports current\n   * OS, browser and audio device or not. An error object will be thrown back to the user if they try to use an unsupported plugin.\n   */\n  checkSupport(ctx?: AudioContext): HMSPluginSupportResult;\n\n  /**\n   * @deprecated. Will be deleted in future updates. Use checkSupport instead.\n   */\n  isSupported(): boolean;\n\n  /**\n   * This function will be called in the beginning for initialization which may include tasks like setting up\n   * variables, loading ML models etc. This can be used by a plugin to ensure it's prepared at the time\n   * processAudio is called.\n   */\n  init(): Promise<void> | void;\n\n  /**\n   * The name is meant to uniquely specify a plugin instance. This will be used to track number of plugins\n   * added to the track, and same name won't be allowed twice.\n   */\n  getName(): string;\n\n  /**\n   This sets the Plugin type @see HMSAudioPluginType, processing will happen\n   based on the type of plugin\n   */\n  getPluginType(): HMSAudioPluginType;\n  /*\n   * the plugin can use this function to dispose off its resources. It'll be called when the plugin instance is\n   * no longer needed at the end.\n   */\n  stop(): void;\n}\n\n/**\n * Specifies the type of the plugin a transforming plugin will get an output audio node to give the resulting\n * transformation. While an analyzing plugin will only be passed the input node.\n * For analyse plugins, you can return the source node passed to plugin.processTrack to not modify anything\n */\nexport enum HMSAudioPluginType {\n  TRANSFORM = 'TRANSFORM',\n  ANALYZE = 'ANALYZE',\n}\n\nexport interface HMSPluginSupportResult {\n  isSupported: boolean;\n  errType?: HMSPluginUnsupportedTypes;\n  errMsg?: string;\n}\n\nexport enum HMSPluginUnsupportedTypes {\n  PLATFORM_NOT_SUPPORTED = 'PLATFORM_NOT_SUPPORTED',\n  DEVICE_NOT_SUPPORTED = 'DEVICE_NOT_SUPPORTED',\n}\n", "import AnalyticsEvent from './AnalyticsEvent';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { HMSException } from '../error/HMSException';\n\nexport default class MediaPluginsAnalyticsFactory {\n  static failure(pluginName: string, error: HMSException) {\n    const name = 'mediaPlugin.failed';\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = { plugin_name: pluginName, ...error.toAnalyticsProperties() };\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioPluginFailure(pluginName: string, sampleRate: number, error: HMSException) {\n    const name = 'mediaPlugin.failed';\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = { plugin_name: pluginName, sampleRate: sampleRate, ...error.toAnalyticsProperties() };\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioPluginStats({\n    pluginName,\n    duration,\n    loadTime,\n    sampleRate,\n  }: {\n    pluginName: string;\n    duration: number;\n    loadTime: number;\n    sampleRate: number;\n  }) {\n    const name = 'mediaPlugin.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = {\n      plugin_name: pluginName,\n      duration: duration,\n      load_time: loadTime,\n      sampleRate: sampleRate,\n    };\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static added(pluginName: string, added_at: number) {\n    const name = 'mediaPlugin.added';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = {\n      plugin_name: pluginName,\n      added_at: added_at,\n    };\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static stats({\n    pluginName,\n    duration,\n    loadTime,\n    avgPreProcessingTime,\n    avgProcessingTime,\n    inputFrameRate,\n    pluginFrameRate,\n  }: {\n    pluginName: string;\n    duration: number;\n    loadTime: number;\n    avgPreProcessingTime?: number;\n    avgProcessingTime?: number;\n    inputFrameRate?: number;\n    pluginFrameRate?: number;\n  }) {\n    const name = 'mediaPlugin.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = {\n      plugin_name: pluginName,\n      duration: duration,\n      load_time: loadTime,\n      avg_preprocessing_time: avgPreProcessingTime,\n      avg_processing_time: avgProcessingTime,\n      input_frame_rate: inputFrameRate,\n      plugin_frame_rate: pluginFrameRate,\n    };\n    return new AnalyticsEvent({ name, level, properties });\n  }\n}\n", "import MediaPluginsAnalyticsFactory from '../../analytics/MediaPluginsAnalyticsFactory';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport HMSLogger from '../../utils/logger';\n\nexport class AudioPluginsAnalytics {\n  private readonly TAG = '[AudioPluginsAnalytics]';\n  private readonly initTime: Record<string, number>;\n  private readonly addedTimestamps: Record<string, number>;\n  private readonly pluginAdded: Record<string, boolean>;\n  private readonly pluginSampleRate: Record<string, number>;\n\n  constructor(private eventBus: EventBus) {\n    this.initTime = {};\n    this.addedTimestamps = {};\n    this.pluginAdded = {};\n    this.pluginSampleRate = {};\n  }\n\n  added(name: string, sampleRate: number) {\n    this.pluginAdded[name] = true;\n    this.addedTimestamps[name] = Date.now();\n    this.initTime[name] = 0;\n    this.pluginSampleRate[name] = sampleRate;\n    this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.added(name, this.addedTimestamps[name]));\n  }\n\n  removed(name: string) {\n    //send stats\n    if (this.pluginAdded[name]) {\n      const stats = {\n        pluginName: name,\n        // duration in seconds\n        duration: Math.floor((Date.now() - this.addedTimestamps[name]) / 1000),\n        loadTime: this.initTime[name],\n        sampleRate: this.pluginSampleRate[name],\n      };\n      //send stats\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.audioPluginStats(stats));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  failure(name: string, error: HMSException) {\n    // send failure event\n    if (this.pluginAdded[name]) {\n      this.eventBus.analytics.publish(\n        MediaPluginsAnalyticsFactory.audioPluginFailure(name, this.pluginSampleRate[name], error),\n      );\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  async initWithTime<T>(name: string, initFn: () => Promise<T>) {\n    if (this.initTime[name]) {\n      HMSLogger.i(this.TAG, `Plugin Already loaded ${name}, time it took: ${this.initTime[name]}`);\n      return;\n    }\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(initFn);\n      HMSLogger.i(this.TAG, `Time taken for Plugin ${name} initialization : ${time}`);\n    } catch (e) {\n      //Failed during initialization of plugin(model loading etc...)\n      const err = ErrorFactory.MediaPluginErrors.InitFailed(\n        HMSAction.AUDIO_PLUGINS,\n        `failed during initialization of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.initTime[name] = time;\n    }\n  }\n\n  private async timeInMs<T>(fn: () => Promise<T>): Promise<number> {\n    const start = Date.now();\n    await fn();\n    return Math.floor(Date.now() - start);\n  }\n\n  private clean(name: string) {\n    delete this.addedTimestamps[name];\n    delete this.initTime[name];\n    delete this.pluginAdded[name];\n    delete this.pluginSampleRate[name];\n  }\n}\n", "import { AudioPluginsAnalytics } from './AudioPluginsAnalytics';\nimport { HMSAudioPlugin, HMSPluginUnsupportedTypes } from './HMSAudioPlugin'; //HMSAudioPluginType\nimport AnalyticsEventFactory from '../../analytics/AnalyticsEventFactory';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSAudioContextHandler } from '../../internal';\nimport { HMSLocalAudioTrack } from '../../media/tracks';\nimport Room from '../../sdk/models/HMSRoom';\nimport HMSLogger from '../../utils/logger';\n\n/**\n * This class manages applying different plugins on a local audio track. Plugins which need to modify the audio\n * are called in the order they were added. Plugins which do not need to modify the audio are called\n * with the original input.\n *\n * Concepts -\n * Audio Plugin - A module which can take in input audio, do some processing on it and return an AudioNode\n *\n * For Each Plugin, an AudioNode will be created and the source will be created from local audio track.\n * Each Audio node will be connected in the following order\n * source -> first plugin -> second plugin -> third plugin .. so on\n * @see HMSAudioPlugin\n */\nexport class HMSAudioPluginsManager {\n  private readonly TAG = '[AudioPluginsManager]';\n  private readonly hmsTrack: HMSLocalAudioTrack;\n  // Map maintains the insertion order\n  readonly pluginsMap: Map<string, HMSAudioPlugin>;\n  private audioContext?: AudioContext;\n\n  private sourceNode?: MediaStreamAudioSourceNode;\n  private destinationNode?: MediaStreamAudioDestinationNode;\n  private prevAudioNode?: any;\n  private analytics: AudioPluginsAnalytics;\n  // This will replace the native track in peer connection when plugins are enabled\n  private outputTrack?: MediaStreamTrack;\n  private pluginAddInProgress = false;\n  private room?: Room;\n\n  constructor(track: HMSLocalAudioTrack, private eventBus: EventBus, room?: Room) {\n    this.hmsTrack = track;\n    this.pluginsMap = new Map();\n    this.analytics = new AudioPluginsAnalytics(eventBus);\n    this.audioContext = HMSAudioContextHandler.getAudioContext();\n    this.room = room;\n  }\n\n  getPlugins(): string[] {\n    return Array.from(this.pluginsMap.keys());\n  }\n\n  async addPlugin(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (!name) {\n      HMSLogger.w('no name provided by the plugin');\n      return;\n    }\n    if (this.pluginAddInProgress) {\n      const err = ErrorFactory.MediaPluginErrors.AddAlreadyInProgress(\n        HMSAction.AUDIO_PLUGINS,\n        'Add Plugin is already in Progress',\n      );\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      this.analytics.failure(name, err);\n      HMSLogger.w(\"can't add another plugin when previous add is in progress\");\n      throw err;\n    }\n\n    switch (plugin.getName()) {\n      case 'HMSKrispPlugin': {\n        if (!this.room?.isNoiseCancellationEnabled) {\n          const errorMessage = 'Krisp Noise Cancellation is not enabled for this room';\n          if (this.pluginsMap.size === 0) {\n            throw Error(errorMessage);\n          } else {\n            HMSLogger.w(this.TAG, errorMessage);\n            return;\n          }\n        }\n        this.eventBus.analytics.publish(AnalyticsEventFactory.krispStart());\n        break;\n      }\n\n      default:\n    }\n    this.pluginAddInProgress = true;\n\n    try {\n      await this.addPluginInternal(plugin);\n    } finally {\n      this.pluginAddInProgress = false;\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private async addPluginInternal(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} already added.`);\n      return;\n    }\n\n    await this.validateAndThrow(name, plugin);\n    // @ts-ignore\n    plugin.setEventBus?.(this.eventBus);\n\n    try {\n      if (this.pluginsMap.size === 0) {\n        await this.initAudioNodes();\n      } else if (this.prevAudioNode) {\n        // Previous node will be connected to destination. Disconnect that\n        this.prevAudioNode.disconnect();\n      }\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      await this.analytics.initWithTime(name, async () => plugin.init());\n      this.pluginsMap.set(name, plugin);\n      await this.processPlugin(plugin);\n      await this.connectToDestination();\n      await this.updateProcessedTrack();\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to add plugin', err);\n      throw err;\n    }\n  }\n\n  validatePlugin(plugin: HMSAudioPlugin) {\n    return plugin.checkSupport(this.audioContext);\n  }\n\n  async validateAndThrow(name: string, plugin: HMSAudioPlugin) {\n    const result = this.validatePlugin(plugin);\n    if (result.isSupported) {\n      HMSLogger.i(this.TAG, `plugin is supported,- ${plugin.getName()}`);\n    } else {\n      //Needed to re-add in the reprocess case, to send error message in case of failure\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      if (result.errType === HMSPluginUnsupportedTypes.PLATFORM_NOT_SUPPORTED) {\n        const err = ErrorFactory.MediaPluginErrors.PlatformNotSupported(\n          HMSAction.AUDIO_PLUGINS,\n          'platform not supported, see docs',\n        );\n        this.analytics.failure(name, err);\n        await this.cleanup();\n        throw err;\n      } else if (result.errType === HMSPluginUnsupportedTypes.DEVICE_NOT_SUPPORTED) {\n        const err = ErrorFactory.MediaPluginErrors.DeviceNotSupported(\n          HMSAction.AUDIO_PLUGINS,\n          'audio device not supported, see docs',\n        );\n        this.analytics.failure(name, err);\n        await this.cleanup();\n        throw err;\n      }\n    }\n  }\n\n  async removePlugin(plugin: HMSAudioPlugin) {\n    switch (plugin.getName()) {\n      case 'HMSKrispPlugin': {\n        this.eventBus.analytics.publish(AnalyticsEventFactory.krispStop());\n        break;\n      }\n      default:\n        break;\n    }\n    await this.removePluginInternal(plugin);\n    if (this.pluginsMap.size === 0) {\n      // remove all previous nodes\n      await this.cleanup();\n      HMSLogger.i(this.TAG, `No plugins left, stopping plugins loop`);\n      await this.hmsTrack.setProcessedTrack(undefined);\n    } else {\n      // Reprocess the remaining plugins again because there is no way to connect\n      // the source of the removed plugin to destination of removed plugin\n      await this.reprocessPlugins();\n    }\n  }\n\n  async cleanup() {\n    for (const plugin of this.pluginsMap.values()) {\n      await this.removePluginInternal(plugin);\n    }\n    await this.hmsTrack.setProcessedTrack(undefined);\n    //disconnect nodes, stop track\n    this.sourceNode?.disconnect();\n    this.prevAudioNode?.disconnect();\n    this.outputTrack?.stop();\n\n    // reset all variables\n    this.sourceNode = undefined;\n    this.destinationNode = undefined;\n    this.prevAudioNode = undefined;\n    this.outputTrack = undefined;\n  }\n\n  //Keeping it separate since we are initializing context only once\n  async closeContext() {\n    this.audioContext = undefined;\n  }\n\n  async reprocessPlugins() {\n    if (this.pluginsMap.size === 0 || !this.sourceNode) {\n      return;\n    }\n    const plugins = Array.from(this.pluginsMap.values()); // make a copy of plugins\n    await this.cleanup();\n    await this.initAudioNodes();\n    for (const plugin of plugins) {\n      await this.addPlugin(plugin);\n    }\n    await this.updateProcessedTrack();\n  }\n\n  private async initAudioNodes() {\n    if (this.audioContext) {\n      // recreate this again, irrespective of it being already there so that the latest native track is used in source node\n      const audioStream = new MediaStream([this.hmsTrack.nativeTrack]);\n      this.sourceNode = this.audioContext.createMediaStreamSource(audioStream);\n      if (!this.destinationNode) {\n        this.destinationNode = this.audioContext.createMediaStreamDestination();\n        this.outputTrack = this.destinationNode.stream.getAudioTracks()[0];\n      }\n    }\n  }\n\n  private async updateProcessedTrack() {\n    try {\n      await this.hmsTrack.setProcessedTrack(this.outputTrack);\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'error in setting processed track', err);\n      throw err;\n    }\n  }\n\n  private async processPlugin(plugin: HMSAudioPlugin) {\n    try {\n      const currentNode = await plugin.processAudioTrack(\n        this.audioContext!, // it is always present at this point\n        this.prevAudioNode || this.sourceNode,\n      );\n      if (this.prevAudioNode) {\n        // if previous node was present while adding this plugin\n        // it is disconnected from destination, connect the previous node to\n        // to the current node\n        this.prevAudioNode.connect(currentNode);\n      }\n      this.prevAudioNode = currentNode;\n    } catch (err) {\n      const name = plugin.getName();\n      //TODO error happened on processing of plugin notify UI\n      HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n      //remove plugin from loop and stop analytics for it\n      await this.removePluginInternal(plugin);\n    }\n  }\n\n  private async connectToDestination() {\n    try {\n      if (this.prevAudioNode && this.destinationNode && this.prevAudioNode.context === this.destinationNode.context) {\n        this.prevAudioNode.connect(this.destinationNode);\n      }\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'error in connecting to destination node', err);\n    }\n  }\n\n  private async removePluginInternal(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (!this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} not found to remove.`);\n      return;\n    }\n    HMSLogger.i(this.TAG, `removing plugin ${name}`);\n    this.pluginsMap.delete(name);\n    plugin.stop();\n    this.analytics.removed(name);\n  }\n}\n", "import adapter from 'webrtc-adapter';\nimport { ErrorFactory } from './ErrorFactory';\nimport { HMSAction } from './HMSAction';\nimport { HMSTrackException } from './HMSTrackException';\n\nexport enum HMSGetMediaActions {\n  UNKNOWN = 'unknown(video or audio)',\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  AV = 'audio, video',\n  SCREEN = 'screen',\n}\n\nfunction getDefaultError(error: string, deviceInfo: string) {\n  const message = error.toLowerCase();\n  let exception = ErrorFactory.TracksErrors.GenericTrack(HMSAction.TRACK, error);\n\n  if (message.includes('device not found')) {\n    exception = ErrorFactory.TracksErrors.DeviceNotAvailable(HMSAction.TRACK, deviceInfo, error);\n  } else if (message.includes('permission denied')) {\n    exception = ErrorFactory.TracksErrors.CantAccessCaptureDevice(HMSAction.TRACK, deviceInfo, error);\n  }\n\n  return exception;\n}\n\n/**\n * # Edge Cases:\n * - Screenshare error: The problem is when block at OS level, chrome throws NotAllowedError(HMS code - 3001) while firefox throws NotFoundError(HMS code - 3002),\n * we will handle this internally and throw error as User block - 3001 and OS block - 3011 for all browsers.\n * Chrome -\n * User blocked - NotAllowedError - Permission denied\n * System blocked - NotAllowedError - Permission denied by system\n */\n// eslint-disable-next-line complexity\nfunction convertMediaErrorToHMSException(err: Error, deviceInfo = ''): HMSTrackException {\n  /**\n   * Note: Adapter detects all chromium browsers as 'chrome'\n   */\n  const chromeSystemDenied =\n    adapter.browserDetails.browser === 'chrome' &&\n    err.name === 'NotAllowedError' &&\n    err.message.includes('denied by system');\n\n  if (chromeSystemDenied) {\n    return ErrorFactory.TracksErrors.SystemDeniedPermission(HMSAction.TRACK, deviceInfo, err.message);\n  }\n\n  if (adapter.browserDetails.browser === 'firefox' && err.name === 'NotFoundError') {\n    const hmsError = ErrorFactory.TracksErrors.SystemDeniedPermission(HMSAction.TRACK, deviceInfo, err.message);\n    hmsError.description = `Capture device is either blocked at Operating System level or not available - ${deviceInfo}`;\n    return hmsError;\n  }\n\n  switch (err.name) {\n    case 'OverconstrainedError':\n      return ErrorFactory.TracksErrors.OverConstrained(\n        HMSAction.TRACK,\n        deviceInfo,\n        (err as OverconstrainedError).constraint,\n      );\n    case 'NotAllowedError':\n      return ErrorFactory.TracksErrors.CantAccessCaptureDevice(HMSAction.TRACK, deviceInfo, err.message);\n    case 'NotFoundError':\n      return ErrorFactory.TracksErrors.DeviceNotAvailable(HMSAction.TRACK, deviceInfo, err.message);\n    case 'NotReadableError':\n      return ErrorFactory.TracksErrors.DeviceInUse(HMSAction.TRACK, deviceInfo, err.message);\n    case 'TypeError':\n      return ErrorFactory.TracksErrors.NothingToReturn(HMSAction.TRACK, err.message);\n    default:\n      return getDefaultError(err.message, deviceInfo);\n  }\n}\n\nexport function BuildGetMediaError(err: Error, deviceInfo: string): HMSTrackException {\n  const exception = convertMediaErrorToHMSException(err, deviceInfo);\n  exception.addNativeError(err);\n  return exception;\n}\n", "import HMSLogger from './logger';\nimport { BuildGetMediaError } from '../error/utils';\nimport { HMSAudioTrackSettings, HMSVideoTrackSettings } from '../media/settings';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\n\nexport async function getAudioTrack(settings: HMSAudioTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: settings ? settings.toConstraints() : false,\n    });\n    return stream.getAudioTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.AUDIO);\n  }\n}\n\nexport async function getVideoTrack(settings: HMSVideoTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: settings ? settings.toConstraints() : false,\n    });\n    return stream.getVideoTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.VIDEO);\n  }\n}\n\n// To differentiate between normal track and empty track.\nexport function isEmptyTrack(track: MediaStreamTrack) {\n  // Firefox gives '' as label for empty track(created from audio context)\n  return 'canvas' in track || track.label === 'MediaStreamAudioDestinationNode' || track.label === '';\n}\n\nexport const listenToPermissionChange = (\n  permissionName: 'camera' | 'microphone',\n  onChange: (state: PermissionState) => any,\n) => {\n  if (!navigator.permissions) {\n    HMSLogger.d('Permissions API not supported');\n    return;\n  }\n  navigator.permissions\n    // @ts-ignore\n    .query({ name: permissionName })\n    .then(permission => {\n      permission.onchange = () => {\n        onChange(permission.state);\n      };\n    })\n    .catch(error => {\n      HMSLogger.e(`${permissionName} not supported`, error.message);\n    });\n};\n", "import HMSLogger from './logger';\nimport { isFirefox } from './support';\nimport { BuildGetMediaError } from '../error/utils';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\n\n// discussed with krisp team and this is their recommendation for the sample rate\nconst DEFAULT_SAMPLE_RATE = 32000;\n\nexport async function getLocalStream(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.AUDIO_VIDEO);\n  }\n}\n\nexport async function getLocalScreen(constraints: MediaStreamConstraints['video']): Promise<MediaStream> {\n  try {\n    // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n    const stream = await navigator.mediaDevices.getDisplayMedia({ video: constraints, audio: false });\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.SCREEN);\n  }\n}\n\ninterface MediaDeviceGroups {\n  audioinput: MediaDeviceInfo[];\n  audiooutput: MediaDeviceInfo[];\n  videoinput: MediaDeviceInfo[];\n}\n\nexport async function getLocalDevices(): Promise<MediaDeviceGroups> {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const deviceGroups: MediaDeviceGroups = {\n      audioinput: [],\n      audiooutput: [],\n      videoinput: [],\n    };\n    devices.forEach(device => deviceGroups[device.kind].push(device));\n    return deviceGroups;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.AUDIO_VIDEO);\n  }\n}\n\nexport interface HMSAudioContext {\n  audioContext: AudioContext | null;\n  getAudioContext: () => AudioContext;\n  resumeContext: () => Promise<void>;\n}\n\nexport const HMSAudioContextHandler: HMSAudioContext = {\n  audioContext: null,\n  getAudioContext() {\n    if (!this.audioContext) {\n      this.audioContext = isFirefox ? new AudioContext() : new AudioContext({ sampleRate: DEFAULT_SAMPLE_RATE });\n    }\n\n    return this.audioContext!;\n  },\n  async resumeContext() {\n    try {\n      return await this.getAudioContext().resume();\n    } catch (error) {\n      HMSLogger.e('AudioContext', error);\n    }\n  },\n};\n\nexport enum HMSAudioDeviceCategory {\n  SPEAKERPHONE = 'SPEAKERPHONE',\n  WIRED = 'WIRED',\n  BLUETOOTH = 'BLUETOOTH',\n  EARPIECE = 'EARPIECE',\n}\n\nexport const getAudioDeviceCategory = (deviceLabel?: string) => {\n  if (!deviceLabel) {\n    HMSLogger.w('[DeviceManager]:', 'No device label provided');\n    return HMSAudioDeviceCategory.SPEAKERPHONE;\n  }\n  const label = deviceLabel.toLowerCase();\n  if (label.includes('speakerphone')) {\n    return HMSAudioDeviceCategory.SPEAKERPHONE;\n  } else if (label.includes('wired')) {\n    return HMSAudioDeviceCategory.WIRED;\n  } else if (/airpods|buds|wireless|bluetooth/gi.test(label)) {\n    return HMSAudioDeviceCategory.BLUETOOTH;\n  } else if (label.includes('earpiece')) {\n    return HMSAudioDeviceCategory.EARPIECE;\n  }\n  return HMSAudioDeviceCategory.SPEAKERPHONE;\n};\n", "export interface IQueue<T> {\n  size(): number;\n  enqueue(item: T): void;\n  dequeue(): T | undefined;\n}\n\nexport class Queue<T> implements IQueue<T> {\n  protected storage: T[] = [];\n\n  constructor(private capacity: number = Infinity) {}\n\n  size() {\n    return this.storage.length;\n  }\n\n  toList() {\n    return this.storage.slice(0);\n  }\n\n  enqueue(item: T) {\n    if (this.size() === this.capacity) {\n      this.dequeue();\n    }\n    this.storage.push(item);\n  }\n\n  dequeue() {\n    return this.storage.shift();\n  }\n\n  aggregate<R>(aggregationFn: (values: T[]) => R): R {\n    return aggregationFn(this.storage);\n  }\n}\n", "export const worker = `(function workerSetup() {\n  function ticker() {\n    self.postMessage('tick');\n  }\n  self.onmessage = function (event) {\n    const [data, time] = event.data;\n    switch (data) {\n      case 'start':\n        setTimeout(ticker, time);\n        break;\n      default:\n        break;\n    }\n  };\n})()`;\n\n/**\n * Delay for a @see ms amount of time\n * @param ms -- time in milliseconds\n */\nexport function sleep(ms: number): Promise<void> {\n  if (ms < 0) {\n    throw Error('`ms` should be a positive integer');\n  }\n\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function workerSleep(ms: number): Promise<void> {\n  if (ms < 0) {\n    throw Error('`ms` should be a positive integer');\n  }\n  if (typeof Worker === 'undefined') {\n    return sleep(ms);\n  }\n  const WorkerThread = new Worker(URL.createObjectURL(new Blob([worker], { type: 'application/javascript' })));\n  WorkerThread.postMessage(['start', ms]);\n  return new Promise(resolve => {\n    WorkerThread.onmessage = event => {\n      if (event.data === 'tick') {\n        resolve();\n        WorkerThread.terminate();\n      }\n    };\n  });\n}\n\nexport function reusableWorker() {\n  if (typeof Worker === 'undefined') {\n    return {\n      sleep: (ms: number) => sleep(ms),\n    };\n  }\n  const WorkerThread = new Worker(URL.createObjectURL(new Blob([worker], { type: 'application/javascript' })));\n  return {\n    sleep: (ms: number) => {\n      WorkerThread.postMessage(['start', ms]);\n      return new Promise<void>(resolve => {\n        WorkerThread.onmessage = event => {\n          if (event.data === 'tick') {\n            resolve();\n          }\n        };\n      });\n    },\n  };\n}\n\n/**\n * Debounce Fn - Function to limit the number of executions of the passed in\n * function in a given time duration\n * @param fn Function to be called\n * @param delay time by which the function execution has to be delayed\n * @returns {void}\n */\nexport function debounce<T extends (...args: any) => any>(fn: T, delay = 300) {\n  let timer: any | undefined;\n  return function (...args: []) {\n    clearTimeout(timer);\n    timer = undefined;\n    //@ts-ignore\n    //eslint-disable-next-line\n    const context = this;\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n", "import HMSLogger from './logger';\nimport { HMSAudioContextHandler } from './media';\nimport { Queue } from './queue';\nimport { sleep } from './timer-utils';\nimport { HMSInternalEvent } from '../events/HMSInternalEvent';\nimport { HMSLocalAudioTrack } from '../internal';\n\n/** Send update only if audio level is above THRESHOLD */\nconst THRESHOLD = 35;\n\n/** Send update only if audio level is changed by UPDATE_THRESHOLD */\nconst UPDATE_THRESHOLD = 5;\n\nexport interface ITrackAudioLevelUpdate {\n  track: HMSLocalAudioTrack;\n  audioLevel: number;\n}\n\n// Audio level algorithm referenced from official MDN example - https://github.com/mdn/dom-examples/tree/main/media/web-dictaphone\nexport class TrackAudioLevelMonitor {\n  private readonly TAG = '[TrackAudioLevelMonitor]';\n  private audioLevel = 0;\n  private analyserNode?: AnalyserNode;\n  private dataArray?: Uint8Array;\n  private isMonitored = false;\n  /** Frequency of polling audio level from track */\n  private interval = 100;\n  /** Store past audio levels for this duration */\n  private historyInterval = 700;\n  private history = new Queue<number>(this.historyInterval / this.interval);\n\n  constructor(\n    private track: HMSLocalAudioTrack,\n    private audioLevelEvent: HMSInternalEvent<ITrackAudioLevelUpdate>,\n    private silenceEvent: HMSInternalEvent<{ track: HMSLocalAudioTrack }>,\n  ) {\n    try {\n      const stream = new MediaStream([this.track.nativeTrack]);\n      this.analyserNode = this.createAnalyserNodeForStream(stream);\n      const bufferLength = this.analyserNode.frequencyBinCount;\n      this.dataArray = new Uint8Array(bufferLength);\n    } catch (ex) {\n      HMSLogger.w(this.TAG, 'Unable to initialize AudioContext', ex);\n    }\n  }\n\n  /**\n   * To detect silence we check if the track is unmuted and silent in the current moment\n   * periodically. If the track is found to be silent more than a threshold number of times\n   * we send the event. The threshold number of time is there to reduce the chance of false\n   * positives.\n   */\n  detectSilence = async () => {\n    const tickInterval = 20;\n    const tickThreshold = 50;\n    let silenceCounter = 0;\n\n    while (this.isMonitored) {\n      if (this.track.enabled) {\n        if (this.isSilentThisInstant()) {\n          silenceCounter++;\n          if (silenceCounter > tickThreshold) {\n            this.silenceEvent.publish({ track: this.track });\n            break;\n          }\n        } else {\n          // bail out immediately if sound is found\n          break;\n        }\n      }\n      await sleep(tickInterval);\n    }\n  };\n\n  start() {\n    this.stop();\n    this.isMonitored = true;\n    HMSLogger.d(this.TAG, 'Starting track Monitor', `${this.track}`);\n    this.loop().then(() => HMSLogger.d(this.TAG, 'Stopping track Monitor', `${this.track}`));\n  }\n\n  stop() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    this.sendAudioLevel(0);\n    this.isMonitored = false;\n  }\n\n  private async loop() {\n    while (this.isMonitored) {\n      this.sendAudioLevel(this.getMaxAudioLevelOverPeriod());\n      await sleep(this.interval);\n    }\n  }\n\n  private sendAudioLevel(audioLevel = 0) {\n    audioLevel = audioLevel > THRESHOLD ? audioLevel : 0;\n    const isSignificantChange = Math.abs(this.audioLevel - audioLevel) > UPDATE_THRESHOLD;\n    if (isSignificantChange) {\n      this.audioLevel = audioLevel;\n      const audioLevelUpdate: ITrackAudioLevelUpdate = { track: this.track, audioLevel: this.audioLevel };\n      this.audioLevelEvent.publish(audioLevelUpdate);\n    }\n  }\n\n  private getMaxAudioLevelOverPeriod() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n    const newLevel = this.calculateAudioLevel();\n    newLevel !== undefined && this.history.enqueue(newLevel);\n    return this.history.aggregate(values => Math.max(...values));\n  }\n\n  private calculateAudioLevel() {\n    if (!this.analyserNode || !this.dataArray) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    this.analyserNode.getByteTimeDomainData(this.dataArray);\n    const lowest = 0.009;\n    let max = lowest;\n    for (const frequency of this.dataArray) {\n      max = Math.max(max, (frequency - 128) / 128);\n    }\n    const normalized = (Math.log(lowest) - Math.log(max)) / Math.log(lowest);\n    const percent = Math.ceil(Math.min(Math.max(normalized * 100, 0), 100));\n    return percent;\n  }\n\n  isSilentThisInstant() {\n    if (!this.analyserNode || !this.dataArray) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    this.analyserNode.getByteTimeDomainData(this.dataArray);\n\n    // For absolute silence(in case of mic/software failures), all frequencies are 128 or 0.\n    return this.dataArray.every(frequency => frequency === 128 || frequency === 0);\n  }\n\n  private createAnalyserNodeForStream(stream: MediaStream): AnalyserNode {\n    const audioContext = HMSAudioContextHandler.getAudioContext();\n    const source = audioContext.createMediaStreamSource(stream);\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n    source.connect(analyser);\n    return analyser;\n  }\n}\n", "import { HMSAudioTrack, HMSTrack, HMSVideoTrack } from '../../media/tracks';\nimport { HMSRole } from '../role';\n\nexport enum HMSPeerType {\n  SIP = 'sip',\n  REGULAR = 'regular',\n}\n\nexport interface HMSPeer {\n  peerId: string;\n  name: string;\n  isLocal: boolean;\n  joinedAt?: Date;\n  customerUserId?: string;\n  metadata?: string;\n  audioTrack?: HMSAudioTrack;\n  videoTrack?: HMSVideoTrack;\n  auxiliaryTracks: HMSTrack[];\n  role?: HMSRole;\n  networkQuality?: number;\n  groups?: string[];\n  realtime?: boolean;\n  isHandRaised: boolean;\n  type: HMSPeerType;\n\n  updateRole(newRole: HMSRole): void;\n  updateName(newName: string): void;\n  updateMetadata(data: string): void;\n  updateNetworkQuality(value: number): void;\n  updateGroups(groups: string[]): void;\n}\n", "import { ServerError } from './internal';\nimport { HMSException } from '../error/HMSException';\n\nexport enum HMSRecordingState {\n  NONE = 'none',\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  PAUSED = 'paused',\n  RESUMED = 'resumed',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\n\nexport enum HMSStreamingState {\n  NONE = 'none',\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\n\nexport interface HMSRoom {\n  id: string;\n  name?: string;\n  sessionId?: string;\n  joinedAt?: Date;\n  startedAt?: Date;\n  recording: HMSRecording;\n  rtmp: HMSRTMP;\n  hls: HMSHLS;\n  peerCount?: number;\n  templateId?: string;\n  description?: string;\n  max_size?: number;\n  large_room_optimization?: boolean;\n  isEffectsEnabled?: boolean;\n  disableNoneLayerRequest?: boolean;\n  isVBEnabled?: boolean;\n  effectsKey?: string;\n  isHipaaEnabled?: boolean;\n  isNoiseCancellationEnabled?: boolean;\n  transcriptions?: HMSTranscriptionInfo[];\n}\n\nexport interface HMSRecording {\n  browser: HMSBrowserRecording;\n  server: HMSSFURecording;\n  hls: HMSHLSRecording;\n}\n\nexport interface HMSBrowserRecording {\n  running: boolean;\n  startedAt?: Date;\n  state?: HMSRecordingState;\n  error?: HMSException;\n}\n\nexport interface HMSSFURecording {\n  running: boolean;\n  startedAt?: Date;\n  state?: HMSRecordingState;\n  error?: HMSException;\n}\n\nexport interface HMSHLSRecording {\n  running: boolean;\n  initialisedAt?: Date;\n  startedAt?: Date;\n  state?: HMSRecordingState;\n  error?: ServerError;\n  /**\n   * if the final output is one file or one file per hls layer\n   */\n  singleFilePerLayer?: boolean;\n  /**\n   * if video on demand needs to be turned on, false by default\n   */\n  hlsVod?: boolean;\n}\n\nexport interface HMSRTMP {\n  running: boolean;\n  startedAt?: Date;\n  state?: HMSStreamingState;\n  error?: HMSException;\n}\n\nexport interface HMSHLS {\n  running: boolean;\n  variants: Array<HLSVariant>;\n  error?: HMSException;\n}\n\nexport enum HLSPlaylistType {\n  DVR = 'dvr',\n  NO_DVR = 'no-dvr',\n}\n\nexport enum HLSStreamType {\n  REGULAR = 'regular',\n  SCREEN = 'screen',\n  COMPOSITE = 'composite',\n}\nexport interface HLSVariant {\n  url: string;\n  playlist_type?: HLSPlaylistType;\n  meetingURL?: string;\n  metadata?: string;\n  startedAt?: Date;\n  initialisedAt?: Date;\n  state?: HMSStreamingState;\n  stream_type?: HLSStreamType;\n}\n\n/*\nTranscription related details\n*/\nexport enum HMSTranscriptionState {\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\nexport enum HMSTranscriptionMode {\n  CAPTION = 'caption',\n}\nexport interface HMSTranscriptionInfo {\n  state?: HMSTranscriptionState;\n  mode?: HMSTranscriptionMode;\n  initialised_at?: Date;\n  started_at?: Date;\n  updated_at?: Date;\n  stopped_at?: Date;\n  error?: HMSException;\n}\n", "export enum HMSSimulcastLayer {\n  NONE = 'none',\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n}\n\nexport interface SimulcastLayer {\n  rid: string;\n  scaleResolutionDownBy: number;\n  maxBitrate: number;\n  maxFramerate: number;\n}\n\nexport interface SimulcastResolution {\n  width: number;\n  height: number;\n}\n\nexport interface SimulcastLayers {\n  layers?: SimulcastLayer[];\n}\n\nexport type HMSPreferredSimulcastLayer = Exclude<HMSSimulcastLayer, HMSSimulcastLayer.NONE>;\nexport interface HMSSimulcastLayerDefinition {\n  layer: HMSPreferredSimulcastLayer;\n  resolution: SimulcastResolution;\n}\n\nexport type RID = 'f' | 'h' | 'q';\n\nexport const simulcastMapping = {\n  f: HMSSimulcastLayer.HIGH,\n  h: HMSSimulcastLayer.MEDIUM,\n  q: HMSSimulcastLayer.LOW,\n};\n", "export enum HMSVideoCodec {\n  VP8 = 'vp8',\n  VP9 = 'vp9',\n  H264 = 'h264',\n}\n\nexport enum HMSAudioCodec {\n  OPUS = 'opus',\n}\n\n/**\n * Refer https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode\n * for more details.\n */\nexport enum HMSFacingMode {\n  USER = 'user',\n  ENVIRONMENT = 'environment',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport enum HMSAudioMode {\n  VOICE = 'voice',\n  MUSIC = 'music',\n}\n\nexport interface HMSAudioTrackSettings {\n  volume?: number;\n  codec?: HMSAudioCodec;\n  maxBitrate?: number;\n  deviceId?: string;\n  advanced?: Array<MediaTrackConstraintSet>;\n  audioMode?: HMSAudioMode;\n}\n\nexport interface HMSVideoTrackSettings {\n  width?: number;\n  height?: number;\n  codec?: HMSVideoCodec;\n  maxFramerate?: number;\n  maxBitrate?: number;\n  deviceId?: string;\n  advanced?: Array<MediaTrackConstraintSet>;\n  facingMode?: HMSFacingMode;\n}\n\n/**\n * Config to have control over screenshare being captured. Note that\n * not all fields are supported on all browsers. Even when they're supported\n * the fields acts as hints and the browser can override them.\n */\nexport interface HMSScreenShareConfig {\n  /**\n   * discard the video and only share audio track with others, useful\n   * for sharing music.\n   * @default false\n   */\n  audioOnly?: boolean;\n  /**\n   * do not give an option to share audio while screen sharing.\n   * @default false\n   */\n  videoOnly?: boolean;\n  /**\n   * preselect the relevant tab in screenshare menu\n   * browser - for preferring a browser tab\n   * window - for application window\n   * monitor - for full screen\n   * @default monitor\n   */\n  displaySurface?: 'browser' | 'monitor' | 'window';\n  /**\n   * show the current tab first in supported browser, throws\n   * error if user doesn't select current tab for sharing.\n   * @default false\n   */\n  forceCurrentTab?: boolean;\n  /**\n   * show the current tab first in supported browser, but don't throw error\n   * if user selects something else.\n   * @default false\n   */\n  preferCurrentTab?: boolean;\n  /**\n   * whether to show an option for sharing the current tab in the screen share\n   * prompt. Screen sharing current tab might lead to hall of mirrors effect.\n   * Default is exclude, if either of forceCurrentTab or preferCurrentTab are true,\n   * this is set to include.\n   * @default exclude\n   */\n  selfBrowserSurface?: 'include' | 'exclude';\n  /**\n   * whether to hint browser to show a \"share this tab instead\" option when\n   * tab is shared.\n   * Default is include, set to exclude if forceCurrentTab is true\n   * @default include\n   */\n  surfaceSwitching?: 'include' | 'exclude';\n  /**\n   * whether to show option for sharing system level audio if full screen\n   * is being shared. Not applicable if isVideoOnly is true.\n   * Note that sharing system audio will cause echo if mic is on.\n   * @default exclude\n   */\n  systemAudio?: 'include' | 'exclude';\n  /**\n   * used for region capture in screenshare, if the current tab is being screenshared\n   * the screenshare video track will be cropped to only this element. Will throw\n   * error if the element is not present in DOM.\n   */\n  cropElement?: HTMLDivElement;\n  /**\n   * used for region capture in screenshare, the screenshare video track will be\n   * cropped to only the passed in cropTarget. This cropTarget must come from\n   * the tab which is being shared\n   */\n  cropTarget?: object;\n}\n\nexport interface ScreenCaptureHandle {\n  handle: string;\n  exposeOrigin: boolean;\n}\n\nexport interface ScreenCaptureHandleConfig extends ScreenCaptureHandle {\n  permittedOrigins: string[];\n}\n", "import { HMSException } from '../error/HMSException';\n\nexport interface HMSDeviceChangeEvent {\n  isUserSelection?: boolean;\n  error?: HMSException;\n  devices?: DeviceMap;\n  selection?: Partial<MediaDeviceInfo>;\n  internal?: boolean;\n  type: 'audioOutput' | 'audioInput' | 'video';\n}\n\nexport enum DeviceType {\n  videoInput = 'videoInput',\n  audioInput = 'audioInput',\n  audioOutput = 'audioOutput',\n}\n\nexport interface DeviceMap {\n  [DeviceType.audioInput]: MediaDeviceInfo[];\n  [DeviceType.audioOutput]: MediaDeviceInfo[];\n  [DeviceType.videoInput]: MediaDeviceInfo[];\n}\n\nexport interface DeviceChangeListener {\n  onDeviceChange?(event: HMSDeviceChangeEvent): void;\n}\n\nexport type SelectedDevices = {\n  [DeviceType.audioInput]?: MediaDeviceInfo;\n  [DeviceType.videoInput]?: MediaDeviceInfo;\n  [DeviceType.audioOutput]?: MediaDeviceInfo;\n};\n", "import { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { HMSAudioCodec, HMSAudioMode, HMSAudioTrackSettings as IHMSAudioTrackSettings } from '../../interfaces';\n\nexport class HMSAudioTrackSettingsBuilder {\n  private _volume = 1.0;\n  private _codec?: HMSAudioCodec = HMSAudioCodec.OPUS;\n  private _maxBitrate?: number = 32;\n  private _deviceId = 'default';\n  private _audioMode: HMSAudioMode = HMSAudioMode.VOICE;\n  private _advanced: Array<MediaTrackConstraintSet> = [\n    // @ts-ignore\n    { autoGainControl: { exact: true } },\n    // @ts-ignore\n    { noiseSuppression: { exact: true } },\n    // @ts-ignore\n    { highpassFilter: { exact: true } },\n    // @ts-ignore\n    { audioMirroring: { exact: true } },\n  ];\n  volume(volume: number) {\n    if (!(0.0 <= volume && volume <= 1.0)) {\n      throw Error('volume can only be in range [0.0, 1.0]');\n    }\n    this._volume = volume;\n    return this;\n  }\n\n  codec(codec?: HMSAudioCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxBitrate(maxBitrate?: number) {\n    if (maxBitrate && maxBitrate <= 0) {\n      throw Error('maxBitrate should be >= 1');\n    }\n    this._maxBitrate = this._audioMode === HMSAudioMode.MUSIC ? 320 : maxBitrate;\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  audioMode(mode: HMSAudioMode = HMSAudioMode.VOICE) {\n    this._audioMode = mode;\n    if (this._audioMode === HMSAudioMode.MUSIC) {\n      this._maxBitrate = 320;\n    } else {\n      this._maxBitrate = 32;\n    }\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  build() {\n    return new HMSAudioTrackSettings(\n      this._volume,\n      this._codec,\n      this._maxBitrate,\n      this._deviceId,\n      this._advanced,\n      this._audioMode,\n    );\n  }\n}\n\nexport class HMSAudioTrackSettings implements IHMSAudioTrackSettings, IAnalyticsPropertiesProvider {\n  readonly volume?: number;\n  readonly codec?: HMSAudioCodec;\n  readonly maxBitrate?: number;\n  readonly deviceId?: string;\n  readonly advanced?: Array<MediaTrackConstraintSet>;\n  readonly audioMode?: HMSAudioMode;\n\n  constructor(\n    volume?: number,\n    codec?: HMSAudioCodec,\n    maxBitrate?: number,\n    deviceId?: string,\n    advanced?: Array<MediaTrackConstraintSet>,\n    audioMode?: HMSAudioMode,\n  ) {\n    this.volume = volume;\n    this.codec = codec;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n    this.audioMode = audioMode;\n    if (this.audioMode === HMSAudioMode.MUSIC) {\n      this.maxBitrate = 320;\n    } else {\n      this.maxBitrate = 32;\n    }\n  }\n\n  toConstraints(): MediaTrackConstraints {\n    return {\n      deviceId: this.deviceId,\n      advanced: this.audioMode === HMSAudioMode.MUSIC ? [] : this.advanced,\n    };\n  }\n\n  toAnalyticsProperties() {\n    return {\n      audio_bitrate: this.maxBitrate,\n      audio_codec: this.codec,\n    };\n  }\n}\n", "import { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { HMSFacingMode, HMSVideoCodec, HMSVideoTrackSettings as IHMSVideoTrackSettings } from '../../interfaces';\nimport { isMobile } from '../../utils/support';\n\nexport class HMSVideoTrackSettingsBuilder {\n  private _width?: number = 320;\n  private _height?: number = 180;\n  private _codec?: HMSVideoCodec = HMSVideoCodec.VP8;\n  private _maxFramerate?: number = 30;\n  private _maxBitrate?: number = 150;\n  private _deviceId?: string;\n  private _facingMode?: HMSFacingMode;\n  private _advanced: Array<MediaTrackConstraintSet> = [];\n\n  setWidth(width?: number) {\n    this._width = width;\n    return this;\n  }\n\n  setHeight(height?: number) {\n    this._height = height;\n    return this;\n  }\n\n  codec(codec?: HMSVideoCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxFramerate(maxFramerate?: number) {\n    if (maxFramerate && maxFramerate <= 0) {\n      throw Error('maxFramerate should be >= 1');\n    }\n    this._maxFramerate = maxFramerate;\n    return this;\n  }\n\n  /**\n   * @param useDefault Ignored if maxBitrate is valid.\n   * If true and maxBitrate is undefined - sets a default value.\n   * If false and maxBitrate is undefined - sets undefined.\n   */\n  maxBitrate(maxBitrate?: number, useDefault = true) {\n    if (typeof maxBitrate === 'number' && maxBitrate <= 0) {\n      throw Error('maxBitrate should be >= 1');\n    }\n    this._maxBitrate = maxBitrate;\n    if (!this._maxBitrate && useDefault) {\n      this._maxBitrate = 150_000;\n    }\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  facingMode(mode: HMSFacingMode) {\n    this._facingMode = mode;\n    return this;\n  }\n\n  build() {\n    return new HMSVideoTrackSettings(\n      this._width,\n      this._height,\n      this._codec,\n      this._maxFramerate,\n      this._deviceId,\n      this._advanced,\n      this._maxBitrate,\n      this._facingMode,\n    );\n  }\n}\n\nexport class HMSVideoTrackSettings implements IHMSVideoTrackSettings, IAnalyticsPropertiesProvider {\n  readonly width?: number;\n  readonly height?: number;\n  readonly codec?: HMSVideoCodec;\n  readonly maxFramerate?: number;\n  readonly maxBitrate?: number;\n  readonly deviceId?: string;\n  readonly advanced?: Array<MediaTrackConstraintSet>;\n  facingMode?: HMSFacingMode;\n\n  constructor(\n    width?: number,\n    height?: number,\n    codec?: HMSVideoCodec,\n    maxFramerate?: number,\n    deviceId?: string | undefined,\n    advanced?: Array<MediaTrackConstraintSet>,\n    maxBitrate?: number,\n    facingMode?: HMSFacingMode,\n  ) {\n    this.width = width;\n    this.height = height;\n    this.codec = codec;\n    this.maxFramerate = maxFramerate;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n    this.facingMode = facingMode;\n  }\n\n  toConstraints(isScreenShare?: boolean): MediaTrackConstraints {\n    let dimensionConstraintKey = 'ideal';\n    if (isScreenShare) {\n      dimensionConstraintKey = 'max';\n    }\n\n    const aspectRatio = this.improviseConstraintsAspect();\n    return {\n      width: { [dimensionConstraintKey]: aspectRatio.width },\n      height: { [dimensionConstraintKey]: aspectRatio.height },\n      frameRate: this.maxFramerate,\n      deviceId: this.deviceId,\n      facingMode: this.facingMode,\n    };\n  }\n\n  toAnalyticsProperties() {\n    return {\n      width: this.width,\n      height: this.height,\n      video_bitrate: this.maxBitrate,\n      framerate: this.maxFramerate,\n      video_codec: this.codec,\n      facingMode: this.facingMode,\n    };\n  }\n\n  // reverse the height and width if mobile as mobile web browsers override the height and width basis orientation\n  private improviseConstraintsAspect(): Partial<IHMSVideoTrackSettings> {\n    if (isMobile() && this.height && this.width && this.height > this.width) {\n      return {\n        width: this.height,\n        height: this.width,\n      };\n    }\n    return {\n      width: this.width,\n      height: this.height,\n    };\n  }\n}\n", "import { HMSAudioTrackSettings, HMSAudioTrackSettingsBuilder } from './HMSAudioTrackSettings';\nimport { HMSVideoTrackSettings, HMSVideoTrackSettingsBuilder } from './HMSVideoTrackSettings';\nimport { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\n\nexport class HMSTrackSettingsBuilder {\n  private _video: HMSVideoTrackSettings | null = new HMSVideoTrackSettingsBuilder().build();\n  private _audio: HMSAudioTrackSettings | null = new HMSAudioTrackSettingsBuilder().build();\n  private _screen: HMSVideoTrackSettings | null = new HMSVideoTrackSettingsBuilder().build();\n  private _simulcast = false;\n\n  video(video: HMSVideoTrackSettings | null) {\n    this._video = video;\n    return this;\n  }\n\n  audio(audio: HMSAudioTrackSettings | null) {\n    this._audio = audio;\n    return this;\n  }\n\n  screen(screen: HMSVideoTrackSettings | null) {\n    this._screen = screen;\n    return this;\n  }\n\n  simulcast(enabled: boolean) {\n    this._simulcast = enabled;\n    return this;\n  }\n\n  build() {\n    if (this._audio === null && this._video === null) {\n      throw ErrorFactory.TracksErrors.NothingToReturn(HMSAction.TRACK);\n    }\n\n    if (this._video === null && this._simulcast) {\n      throw ErrorFactory.TracksErrors.InvalidVideoSettings(\n        HMSAction.TRACK,\n        'Cannot enable simulcast when no video settings are provided',\n      );\n    }\n\n    return new HMSTrackSettings(this._video, this._audio, this._simulcast, this._screen || undefined);\n  }\n}\n\nexport class HMSTrackSettings implements IAnalyticsPropertiesProvider {\n  readonly video: HMSVideoTrackSettings | null | undefined;\n  readonly audio: HMSAudioTrackSettings | null | undefined;\n  readonly screen: HMSVideoTrackSettings | null;\n  readonly simulcast: boolean;\n\n  constructor(\n    video: HMSVideoTrackSettings | null | undefined,\n    audio: HMSAudioTrackSettings | null | undefined,\n    simulcast: boolean,\n    screen: HMSVideoTrackSettings | null = null,\n  ) {\n    this.video = video;\n    this.audio = audio;\n    this.simulcast = simulcast;\n    this.screen = screen;\n  }\n\n  toAnalyticsProperties() {\n    let properties = {\n      audio_enabled: this.audio !== null,\n      video_enabled: this.video !== null,\n    };\n\n    if (this.audio) {\n      properties = { ...this.audio.toAnalyticsProperties(), ...properties };\n    }\n\n    if (this.video) {\n      properties = { ...this.video.toAnalyticsProperties(), ...properties };\n    }\n\n    return properties;\n  }\n}\n", "import { HMSAudioTrack } from './HMSAudioTrack';\n\nexport class HMSRemoteAudioTrack extends HMSAudioTrack {\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n    await super.setEnabled(value);\n    await this.subscribeToAudio(value);\n  }\n}\n", "import { HMSTrack, HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport { VideoElementManager } from './VideoElementManager';\nimport HMSLogger from '../../utils/logger';\nimport { isSafari } from '../../utils/support';\nimport { HMSMediaStream } from '../streams';\n\nexport class HMSVideoTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.VIDEO;\n  private sinkCount = 0;\n  videoHandler!: VideoElementManager;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'video') {\n      throw new Error(\"Expected 'track' kind = 'video'\");\n    }\n  }\n\n  setVideoHandler(videoHandler: VideoElementManager) {\n    this.videoHandler = videoHandler;\n  }\n\n  /**\n   * sink=video element rendering the video\n   */\n  hasSinks() {\n    return this.sinkCount > 0;\n  }\n\n  getSinks() {\n    return this.videoHandler.getVideoElements() || [];\n  }\n\n  attach(videoElement: HTMLVideoElement) {\n    this.videoHandler.addVideoElement(videoElement);\n  }\n\n  detach(videoElement: HTMLVideoElement) {\n    this.videoHandler.removeVideoElement(videoElement);\n  }\n\n  /**\n   * attaches the track to the passed in video element\n   * @param videoElement\n   */\n  addSink(videoElement: HTMLVideoElement) {\n    this.addSinkInternal(videoElement, this.nativeTrack);\n  }\n\n  /**\n   * removes the track from the passed in video element\n   * @param videoElement\n   */\n  removeSink(videoElement: HTMLVideoElement) {\n    if (videoElement.srcObject !== null) {\n      videoElement.srcObject = null;\n      this.reduceSinkCount();\n    }\n  }\n\n  cleanup(): void {\n    super.cleanup();\n    this.videoHandler.cleanup();\n  }\n\n  protected addSinkInternal(videoElement: HTMLVideoElement, track: MediaStreamTrack) {\n    const srcObject = videoElement.srcObject;\n    if (srcObject !== null && srcObject instanceof MediaStream) {\n      const existingTrack = srcObject.getVideoTracks()[0];\n      if (existingTrack?.id === track.id) {\n        if (!existingTrack.muted && existingTrack.readyState === 'live') {\n          // it's already attached, attaching again would just cause flickering\n          return;\n        } else {\n          this.reduceSinkCount();\n        }\n      } else {\n        this.reduceSinkCount();\n      }\n    }\n\n    this.addPropertiesToElement(videoElement);\n    const stream = new MediaStream([track]);\n    videoElement.srcObject = stream;\n    this.reTriggerPlay({ videoElement });\n    this.sinkCount++;\n  }\n\n  handleTrackUnmute = () => {\n    this.getSinks().forEach(videoElement => this.reTriggerPlay({ videoElement }));\n  };\n\n  private reTriggerPlay = ({ videoElement }: { videoElement: HTMLVideoElement }) => {\n    setTimeout(() => {\n      videoElement.play().catch((e: Error) => {\n        HMSLogger.w('[HMSVideoTrack]', 'failed to play', e.message);\n      });\n    }, 0);\n  };\n\n  private reduceSinkCount() {\n    if (this.sinkCount > 0) {\n      this.sinkCount--;\n    }\n  }\n\n  private addPropertiesToElement(element: HTMLVideoElement) {\n    if (!isSafari) {\n      element.autoplay = true;\n    }\n    element.playsInline = true;\n    element.muted = true;\n    element.controls = false;\n  }\n}\n", "import isEqual from 'lodash.isequal';\nimport { HMSVideoTrack } from './HMSVideoTrack';\nimport { VideoElementManager } from './VideoElementManager';\nimport AnalyticsEventFactory from '../../analytics/AnalyticsEventFactory';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport {\n  HMSFacingMode,\n  HMSSimulcastLayerDefinition,\n  HMSVideoTrackSettings as IHMSVideoTrackSettings,\n  ScreenCaptureHandle,\n} from '../../interfaces';\nimport { HMSPluginSupportResult, HMSVideoPlugin } from '../../plugins';\nimport { HMSMediaStreamPlugin, HMSVideoPluginsManager } from '../../plugins/video';\nimport { HMSMediaStreamPluginsManager } from '../../plugins/video/HMSMediaStreamPluginsManager';\nimport { LocalTrackManager } from '../../sdk/LocalTrackManager';\nimport Room from '../../sdk/models/HMSRoom';\nimport HMSLogger from '../../utils/logger';\nimport { isBrowser, isMobile } from '../../utils/support';\nimport { getVideoTrack, isEmptyTrack, listenToPermissionChange } from '../../utils/track';\nimport { HMSVideoTrackSettings, HMSVideoTrackSettingsBuilder } from '../settings';\nimport { HMSLocalStream } from '../streams';\n\nfunction generateHasPropertyChanged(newSettings: Partial<HMSVideoTrackSettings>, oldSettings: HMSVideoTrackSettings) {\n  return function hasChanged(\n    prop: 'codec' | 'width' | 'height' | 'maxFramerate' | 'maxBitrate' | 'deviceId' | 'advanced' | 'facingMode',\n  ) {\n    return !isEqual(newSettings[prop], oldSettings[prop]);\n  };\n}\n\nexport class HMSLocalVideoTrack extends HMSVideoTrack {\n  settings: HMSVideoTrackSettings;\n  private pluginsManager: HMSVideoPluginsManager;\n  private mediaStreamPluginsManager: HMSMediaStreamPluginsManager;\n  private processedTrack?: MediaStreamTrack;\n  private _layerDefinitions: HMSSimulcastLayerDefinition[] = [];\n  private TAG = '[HMSLocalVideoTrack]';\n  private enabledStateBeforeBackground = false;\n\n  /**\n   * true if it's screenshare and current tab is what is being shared. Browser dependent, Chromium only\n   * at the point of writing this comment.\n   */\n  isCurrentTab = false;\n\n  /**\n   * @internal\n   * This is required for handling remote mute/unmute as the published track will not necessarily be same as\n   * the first track id or current native track's id.\n   * It won't be same as first track id if the native track was changed after preview started but before join happened,\n   * with device change, or mute/unmute.\n   * It won't be same as native track id, as the native track can change post join(and publish), when the nativetrack\n   * changes, replacetrack is used which doesn't involve republishing which means from server's point of view, the track id\n   * is same as what was initially published.\n   * This will only be available if the track was actually published and won't be set for preview tracks.\n   */\n  publishedTrackId?: string;\n\n  /**\n   * will be false for preview tracks\n   */\n  isPublished = false;\n\n  constructor(\n    stream: HMSLocalStream,\n    track: MediaStreamTrack,\n    source: string,\n    private eventBus: EventBus,\n    settings: HMSVideoTrackSettings = new HMSVideoTrackSettingsBuilder().build(),\n    private room?: Room,\n  ) {\n    super(stream, track, source);\n    this.addTrackEventListeners(track);\n    this.trackPermissions();\n    stream.tracks.push(this);\n    this.setVideoHandler(new VideoElementManager(this));\n    this.settings = settings;\n    // Replace the 'default' or invalid deviceId with the actual deviceId\n    // This is to maintain consistency with selected devices as in some cases there will be no 'default' device\n    if (settings.deviceId !== track.getSettings().deviceId && track.enabled) {\n      this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n    }\n    this.pluginsManager = new HMSVideoPluginsManager(this, eventBus);\n    this.mediaStreamPluginsManager = new HMSMediaStreamPluginsManager(eventBus, room);\n    this.setFirstTrackId(this.trackId);\n    this.eventBus.localAudioUnmutedNatively.subscribe(this.handleTrackUnmute);\n    if (isBrowser && source === 'regular' && isMobile()) {\n      document.addEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n  }\n\n  clone(stream: HMSLocalStream) {\n    const clonedTrack = this.nativeTrack.clone();\n    /**\n     * stream only becomes active when the track is added to it. If this is not added, after sfu migration, in non-simulcast case, the video will not be\n     * published to the server\n     */\n    stream.nativeStream.addTrack(clonedTrack);\n    const track = new HMSLocalVideoTrack(stream, clonedTrack, this.source!, this.eventBus, this.settings, this.room);\n    track.peerId = this.peerId;\n\n    if (this.pluginsManager.pluginsMap.size > 0) {\n      this.pluginsManager.pluginsMap.forEach(value => {\n        track\n          .addPlugin(value)\n          .catch((e: Error) => HMSLogger.e(this.TAG, 'Plugin add failed while migrating', value, e));\n      });\n    }\n    if (this.mediaStreamPluginsManager.plugins.size > 0) {\n      track.addStreamPlugins(Array.from(this.mediaStreamPluginsManager.plugins));\n    }\n    return track;\n  }\n\n  /** @internal */\n  setSimulcastDefinitons(definitions: HMSSimulcastLayerDefinition[]) {\n    this._layerDefinitions = definitions;\n  }\n\n  /**\n   * Method to get available simulcast definitions for the track\n   * @returns {HMSSimulcastLayerDefinition[]}\n   */\n  getSimulcastDefinitions(): HMSSimulcastLayerDefinition[] {\n    return this._layerDefinitions;\n  }\n\n  /**\n   * use this function to set the enabled state of a track. If true the track will be unmuted and muted otherwise.\n   * @param value\n   */\n  // eslint-disable-next-line complexity\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n    if (this.source === 'regular') {\n      let track: MediaStreamTrack;\n      if (value) {\n        track = await this.replaceTrackWith(this.settings);\n      } else {\n        track = await this.replaceTrackWithBlank();\n      }\n      await this.replaceSender(track, value);\n      this.nativeTrack?.stop();\n      this.nativeTrack = track;\n      await super.setEnabled(value);\n      if (value) {\n        await this.pluginsManager.waitForRestart();\n        await this.processPlugins();\n        this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n      }\n      this.videoHandler.updateSinks();\n    }\n    this.eventBus.localVideoEnabled.publish({ enabled: value, track: this });\n  }\n\n  private async processPlugins() {\n    try {\n      if (this.pluginsManager.getPlugins().length > 0) {\n        return;\n      }\n      const plugins = this.mediaStreamPluginsManager.getPlugins();\n      if (plugins.length > 0) {\n        const processedStream = this.mediaStreamPluginsManager.applyPlugins(new MediaStream([this.nativeTrack]));\n        const newTrack = processedStream.getVideoTracks()[0];\n        await this.setProcessedTrack(newTrack);\n      } else {\n        await this.setProcessedTrack();\n      }\n      this.videoHandler.updateSinks();\n    } catch (e) {\n      console.error('error in processing plugin(s)', e);\n    }\n  }\n\n  async addStreamPlugins(plugins: HMSMediaStreamPlugin[]) {\n    if (this.pluginsManager.getPlugins().length > 0) {\n      throw Error('Plugins of type HMSMediaStreamPlugin and HMSVideoPlugin cannot be used together');\n    }\n    this.mediaStreamPluginsManager.addPlugins(plugins);\n    await this.processPlugins();\n  }\n\n  async removeStreamPlugins(plugins: HMSMediaStreamPlugin[]) {\n    this.mediaStreamPluginsManager.removePlugins(plugins);\n    await this.processPlugins();\n  }\n\n  /**\n   * verify if the track id being passed is of this track for correlating server messages like degradation\n   */\n  isPublishedTrackId(trackId: string) {\n    return this.publishedTrackId === trackId;\n  }\n\n  /**\n   * @see HMSVideoTrack#addSink()\n   */\n  addSink(videoElement: HTMLVideoElement) {\n    this.addSinkInternal(videoElement, this.processedTrack || this.nativeTrack);\n  }\n\n  /**\n   * This function can be used to set media track settings. Frequent options -\n   * deviceID: can be used to change to different input source\n   * width, height - can be used to change capture dimensions\n   * maxFramerate - can be used to control the capture framerate\n   * @param settings\n   */\n  async setSettings(settings: Partial<IHMSVideoTrackSettings>, internal = false) {\n    const newSettings = this.buildNewSettings(settings);\n    await this.handleDeviceChange(newSettings, internal);\n    if (!this.enabled || isEmptyTrack(this.nativeTrack)) {\n      // if track is muted, we just cache the settings for when it is unmuted\n      this.settings = newSettings;\n      return;\n    } else {\n      await this.pluginsManager.waitForRestart();\n    }\n    await this.handleSettingsChange(newSettings);\n    this.settings = newSettings;\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  getPlugins(): string[] {\n    return this.mediaStreamPluginsManager.getPlugins().length > 0\n      ? this.mediaStreamPluginsManager.getPlugins()\n      : this.pluginsManager.getPlugins();\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  async addPlugin(plugin: HMSVideoPlugin, pluginFrameRate?: number): Promise<void> {\n    if (this.mediaStreamPluginsManager.getPlugins().length > 0) {\n      throw Error('Plugins of type HMSVideoPlugin and HMSMediaStreamPlugin cannot be used together');\n    }\n    return this.pluginsManager.addPlugin(plugin, pluginFrameRate);\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  async removePlugin(plugin: HMSVideoPlugin): Promise<void> {\n    return this.pluginsManager.removePlugin(plugin);\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  validatePlugin(plugin: HMSVideoPlugin): HMSPluginSupportResult {\n    return this.pluginsManager.validatePlugin(plugin);\n  }\n\n  /**\n   * @internal\n   */\n  async cleanup() {\n    this.eventBus.localAudioUnmutedNatively.unsubscribe(this.handleTrackUnmute);\n    this.removeTrackEventListeners(this.nativeTrack);\n    // Stopping the plugin before cleaning the track is more predictable when dealing with 3rd party plugins\n    await this.mediaStreamPluginsManager.cleanup();\n    await this.pluginsManager.cleanup();\n    super.cleanup();\n    this.transceiver = undefined;\n    this.processedTrack?.stop();\n    this.isPublished = false;\n    if (isBrowser && isMobile()) {\n      document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n  }\n\n  /**\n   * only for screenshare track to crop to a cropTarget\n   * @internal\n   */\n  async cropTo(cropTarget?: object) {\n    if (!cropTarget) {\n      return;\n    }\n    if (this.source !== 'screen') {\n      return;\n    }\n    try {\n      // @ts-ignore\n      if (this.nativeTrack.cropTo) {\n        // @ts-ignore\n        await this.nativeTrack.cropTo(cropTarget);\n      }\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to crop screenshare capture - ', err);\n      throw ErrorFactory.TracksErrors.GenericTrack(HMSAction.TRACK, 'failed to crop screenshare capture');\n    }\n  }\n\n  /**\n   * only for screenshare track to get the captureHandle\n   * TODO: add an API for capturehandlechange event\n   * @internal\n   */\n  getCaptureHandle(): ScreenCaptureHandle | undefined {\n    // @ts-ignore\n    if (this.nativeTrack.getCaptureHandle) {\n      // @ts-ignore\n      return this.nativeTrack.getCaptureHandle();\n    }\n    return undefined;\n  }\n\n  /**\n   * once the plugin manager has done its processing it can set or remove processed track via this method\n   * note that replacing sender track only makes sense if the native track is enabled. if it's disabled there is\n   * no point in replacing it. We'll update the processed track variable though so next time unmute happens\n   * it's set properly.\n   * @internal\n   */\n  async setProcessedTrack(processedTrack?: MediaStreamTrack) {\n    // required replacement will happen when video is unmuted\n    if (!this.nativeTrack.enabled) {\n      this.processedTrack = processedTrack;\n      return;\n    }\n    await this.removeOrReplaceProcessedTrack(processedTrack);\n    this.videoHandler.updateSinks();\n  }\n\n  /**\n   * @internal\n   * sent track id will be different in case there was some processing done using plugins.\n   * replace track is used to, start sending data from a new track without un publishing the prior one. There\n   * are thus two track ids - the one which was initially published and should be unpublished when required.\n   * The one whose data is currently being sent, which will be used when removing from connection senders.\n   */\n  getTrackIDBeingSent() {\n    return this.getTrackBeingSent().id;\n  }\n\n  getTrackBeingSent() {\n    return this.enabled ? this.processedTrack || this.nativeTrack : this.nativeTrack;\n  }\n\n  /**\n   * will change the facingMode to environment if current facing mode is user or vice versa.\n   * will be useful when on mobile web to toggle between front and back camera's\n   */\n  async switchCamera() {\n    const currentFacingMode = this.getMediaTrackSettings().facingMode;\n    if (!currentFacingMode || this.source !== 'regular') {\n      HMSLogger.d(this.TAG, 'facingMode not supported');\n      return;\n    }\n    const facingMode = currentFacingMode === HMSFacingMode.ENVIRONMENT ? HMSFacingMode.USER : HMSFacingMode.ENVIRONMENT;\n    this.nativeTrack?.stop();\n    const track = await this.replaceTrackWith(this.buildNewSettings({ facingMode: facingMode, deviceId: undefined }));\n    await this.replaceSender(track, this.enabled);\n    this.nativeTrack = track;\n    await this.processPlugins();\n    this.videoHandler.updateSinks();\n    this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId, facingMode });\n    DeviceStorageManager.updateSelection('videoInput', {\n      deviceId: this.settings.deviceId,\n      groupId: this.nativeTrack.getSettings().groupId,\n    });\n  }\n\n  /**\n   * called when the video is unmuted\n   * @private\n   */\n  private async replaceTrackWith(settings: HMSVideoTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    /**\n     * not stopping previous track results in device in use more frequently, as many devices will not allow even if\n     * you are requesting for a new device.\n     * Note: Do not change the order of this.\n     */\n    this.removeTrackEventListeners(prevTrack);\n    prevTrack?.stop();\n    try {\n      const newTrack = await getVideoTrack(settings);\n      this.addTrackEventListeners(newTrack);\n      HMSLogger.d(this.TAG, 'replaceTrack, Previous track stopped', prevTrack, 'newTrack', newTrack);\n      // Replace deviceId with actual deviceId when it is default\n      if (this.settings.deviceId === 'default') {\n        this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId });\n      }\n      return newTrack;\n    } catch (error) {\n      // Generate a new track from previous settings so there won't be blank tile because previous track is stopped\n      const track = await getVideoTrack(this.settings);\n      this.addTrackEventListeners(track);\n      await this.replaceSender(track, this.enabled);\n      this.nativeTrack = track;\n      await this.processPlugins();\n      this.videoHandler.updateSinks();\n      if (this.isPublished) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.publish({\n            error: error as Error,\n          }),\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * called when the video is muted. A blank track is used to replace the original track. This is in order to\n   * turn off the camera light and keep the bytes flowing to avoid av sync, timestamp issues.\n   * @private\n   */\n  private async replaceTrackWithBlank() {\n    const prevTrack = this.nativeTrack;\n    const newTrack = LocalTrackManager.getEmptyVideoTrack(prevTrack);\n    this.removeTrackEventListeners(prevTrack);\n    this.addTrackEventListeners(newTrack);\n    prevTrack?.stop();\n    HMSLogger.d(this.TAG, 'replaceTrackWithBlank, Previous track stopped', prevTrack, 'newTrack', newTrack);\n    return newTrack;\n  }\n\n  private async replaceSender(newTrack: MediaStreamTrack, enabled: boolean) {\n    if (enabled) {\n      await this.replaceSenderTrack(this.processedTrack || newTrack);\n    } else {\n      await this.replaceSenderTrack(newTrack);\n    }\n    const localStream = this.stream as HMSLocalStream;\n    localStream.replaceStreamTrack(this.nativeTrack, newTrack);\n  }\n\n  private replaceSenderTrack = async (track: MediaStreamTrack) => {\n    if (!this.transceiver || this.transceiver.direction !== 'sendonly') {\n      HMSLogger.d(this.TAG, `transceiver for ${this.trackId} not available or not connected yet`);\n      return;\n    }\n    await this.transceiver.sender.replaceTrack(track);\n  };\n\n  private buildNewSettings = (settings: Partial<HMSVideoTrackSettings>) => {\n    const { width, height, codec, maxFramerate, maxBitrate, deviceId, advanced, facingMode } = {\n      ...this.settings,\n      ...settings,\n    };\n    const newSettings = new HMSVideoTrackSettings(\n      width,\n      height,\n      codec,\n      maxFramerate,\n      deviceId,\n      advanced,\n      maxBitrate,\n      facingMode,\n    );\n    return newSettings;\n  };\n\n  // eslint-disable-next-line complexity\n  private handleSettingsChange = async (settings: HMSVideoTrackSettings) => {\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if (hasPropertyChanged('maxBitrate') && settings.maxBitrate) {\n      await stream.setMaxBitrateAndFramerate(this);\n    }\n    if (hasPropertyChanged('width') || hasPropertyChanged('height') || hasPropertyChanged('advanced')) {\n      if (this.source === 'video') {\n        const track = await this.replaceTrackWith(settings);\n        await this.replaceSender(track, this.enabled);\n        this.nativeTrack = track;\n        await this.processPlugins();\n        this.videoHandler.updateSinks();\n      } else {\n        await this.nativeTrack.applyConstraints(settings.toConstraints());\n      }\n    }\n  };\n\n  /**\n   * Replace video track with new track on device change\n   * @param settings - VideoSettings Object constructed with new settings\n   * @param internal - whether the change was because of internal sdk call or external client call\n   */\n  private handleDeviceChange = async (settings: HMSVideoTrackSettings, internal = false) => {\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n\n    if (hasPropertyChanged('deviceId') && this.source === 'regular') {\n      if (this.enabled) {\n        delete settings.facingMode;\n        const track = await this.replaceTrackWith(settings);\n        await this.replaceSender(track, this.enabled);\n        this.nativeTrack = track;\n        await this.processPlugins();\n        this.videoHandler.updateSinks();\n      }\n      const groupId = this.nativeTrack.getSettings().groupId;\n      if (!internal && settings.deviceId) {\n        DeviceStorageManager.updateSelection('videoInput', {\n          deviceId: settings.deviceId,\n          groupId,\n        });\n        this.eventBus.deviceChange.publish({\n          isUserSelection: true,\n          type: 'video',\n          selection: {\n            deviceId: settings.deviceId,\n            groupId: groupId,\n          },\n        });\n      }\n    }\n  };\n\n  private addTrackEventListeners(track: MediaStreamTrack) {\n    track.addEventListener('mute', this.handleTrackMute);\n    track.addEventListener('unmute', this.handleTrackUnmuteNatively);\n  }\n\n  private removeTrackEventListeners(track: MediaStreamTrack) {\n    track.removeEventListener('mute', this.handleTrackMute);\n    track.removeEventListener('unmute', this.handleTrackUnmuteNatively);\n  }\n\n  private trackPermissions = () => {\n    listenToPermissionChange('camera', (state: PermissionState) => {\n      this.eventBus.analytics.publish(AnalyticsEventFactory.permissionChange(this.type, state));\n      if (state === 'denied') {\n        this.eventBus.localVideoEnabled.publish({ enabled: false, track: this });\n      }\n    });\n  };\n\n  private handleTrackMute = () => {\n    HMSLogger.d(this.TAG, 'muted natively', document.visibilityState);\n    const reason = document.visibilityState === 'hidden' ? 'visibility-change' : 'incoming-call';\n    this.eventBus.analytics.publish(\n      this.sendInterruptionEvent({\n        started: true,\n        reason: reason,\n      }),\n    );\n    this.eventBus.localVideoEnabled.publish({ enabled: false, track: this });\n  };\n\n  /** @internal */\n  handleTrackUnmuteNatively = async () => {\n    HMSLogger.d(this.TAG, 'unmuted natively');\n    const reason = document.visibilityState === 'hidden' ? 'visibility-change' : 'incoming-call';\n\n    this.eventBus.analytics.publish(\n      this.sendInterruptionEvent({\n        started: false,\n        reason: reason,\n      }),\n    );\n    this.handleTrackUnmute();\n    this.eventBus.localVideoEnabled.publish({ enabled: this.enabled, track: this });\n    this.eventBus.localVideoUnmutedNatively.publish();\n    await this.setEnabled(this.enabled);\n  };\n\n  /**\n   * This will either remove or update the processedTrack value on the class instance.\n   * It will also replace sender if the processedTrack is updated\n   * @param {MediaStreamTrack|undefined}processedTrack\n   */\n  private removeOrReplaceProcessedTrack = async (processedTrack?: MediaStreamTrack) => {\n    // if all plugins are removed reset everything back to native track\n    if (!processedTrack) {\n      this.processedTrack = undefined;\n    } else if (processedTrack !== this.processedTrack) {\n      this.processedTrack = processedTrack;\n    }\n    await this.replaceSenderTrack(this.processedTrack || this.nativeTrack);\n  };\n\n  // eslint-disable-next-line complexity\n  private handleVisibilityChange = async () => {\n    if (document.visibilityState === 'hidden') {\n      this.enabledStateBeforeBackground = this.enabled;\n      if (this.enabled) {\n        await this.setEnabled(false);\n      }\n      // started interruption event\n      this.eventBus.analytics.publish(\n        this.sendInterruptionEvent({\n          started: true,\n          reason: 'visibility-change',\n        }),\n      );\n    } else {\n      HMSLogger.d(this.TAG, 'visibility visible, restoring track state', this.enabledStateBeforeBackground);\n      if (this.enabledStateBeforeBackground) {\n        try {\n          await this.setEnabled(true);\n        } catch (error) {\n          this.eventBus.error.publish(error as HMSException);\n        }\n      }\n      // ended interruption event\n      this.eventBus.analytics.publish(\n        this.sendInterruptionEvent({\n          started: false,\n          reason: 'visibility-change',\n        }),\n      );\n    }\n  };\n}\n", "import { v4 as uuid } from 'uuid';\nimport { getClosestLayer, layerToIntMapping } from './trackUtils';\nimport { HMSPreferredSimulcastLayer } from '../../interfaces/simulcast-layers';\nimport { HMSLocalVideoTrack, HMSRemoteVideoTrack } from '../../internal';\nimport { HMSIntersectionObserver } from '../../utils/intersection-observer';\nimport HMSLogger from '../../utils/logger';\nimport { HMSResizeObserver } from '../../utils/resize-observer';\nimport { isBrowser } from '../../utils/support';\n\n/**\n * This class is to manager video elements for video tracks.\n * This will handle attaching/detaching when element is in view or out of view.\n * This will also handle selecting appropriate layer when element size changesx\n */\nexport class VideoElementManager {\n  private readonly TAG = '[VideoElementManager]';\n  private resizeObserver?: typeof HMSResizeObserver;\n  private intersectionObserver?: typeof HMSIntersectionObserver;\n  private videoElements = new Set<HTMLVideoElement>();\n  private entries = new WeakMap<HTMLVideoElement, DOMRectReadOnly>();\n  private id: string;\n\n  constructor(private track: HMSLocalVideoTrack | HMSRemoteVideoTrack) {\n    this.init();\n    this.id = uuid();\n  }\n\n  updateSinks(requestLayer = false) {\n    for (const videoElement of this.videoElements) {\n      if (this.track.enabled) {\n        this.track.addSink(videoElement, requestLayer);\n      } else {\n        this.track.removeSink(videoElement, requestLayer);\n      }\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  async addVideoElement(videoElement: HTMLVideoElement) {\n    if (this.videoElements.has(videoElement)) {\n      return;\n    }\n    // Call init again, to initialize again if for some reason it failed in constructor\n    // it will be a no-op if initialize already\n    this.init();\n    HMSLogger.d(this.TAG, `Adding video element for ${this.track}`, this.id);\n    this.videoElements.add(videoElement);\n    if (this.videoElements.size >= 10) {\n      HMSLogger.w(\n        this.TAG,\n        `${this.track}`,\n        `the track is added to ${this.videoElements.size} video elements, while this may be intentional, it's likely that there is a bug leading to unnecessary creation of video elements in the UI`,\n      );\n    }\n\n    if (this.intersectionObserver?.isSupported()) {\n      this.intersectionObserver.observe(videoElement, this.handleIntersection);\n    } else if (isBrowser) {\n      if (this.isElementInViewport(videoElement)) {\n        this.track.addSink(videoElement);\n      } else {\n        this.track.removeSink(videoElement);\n      }\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(videoElement, this.handleResize);\n    } else if (this.track instanceof HMSRemoteVideoTrack) {\n      await this.track.setPreferredLayer(this.track.getPreferredLayer());\n    }\n  }\n\n  removeVideoElement(videoElement: HTMLVideoElement): void {\n    this.track.removeSink(videoElement);\n    this.videoElements.delete(videoElement);\n    this.entries.delete(videoElement);\n    this.resizeObserver?.unobserve(videoElement);\n    this.intersectionObserver?.unobserve(videoElement);\n    HMSLogger.d(this.TAG, `Removing video element for ${this.track}`);\n  }\n\n  getVideoElements(): HTMLVideoElement[] {\n    return Array.from(this.videoElements);\n  }\n\n  private init() {\n    if (isBrowser) {\n      this.resizeObserver = HMSResizeObserver;\n      this.intersectionObserver = HMSIntersectionObserver;\n    }\n  }\n\n  private handleIntersection = async (entry: IntersectionObserverEntry) => {\n    const isVisibile = getComputedStyle(entry.target).visibility === 'visible';\n    // .contains check is needed for pip component as the video tiles are not mounted to dom element\n    if (this.track.enabled && ((entry.isIntersecting && isVisibile) || !document.contains(entry.target))) {\n      HMSLogger.d(this.TAG, 'add sink intersection', `${this.track}`, this.id);\n      this.entries.set(entry.target as HTMLVideoElement, entry.boundingClientRect);\n      await this.selectMaxLayer();\n      await this.track.addSink(entry.target as HTMLVideoElement);\n    } else {\n      HMSLogger.d(this.TAG, 'remove sink intersection', `${this.track}`, this.id);\n      await this.track.removeSink(entry.target as HTMLVideoElement);\n    }\n  };\n\n  private handleResize = async (entry: ResizeObserverEntry) => {\n    if (!this.track.enabled || !(this.track instanceof HMSRemoteVideoTrack)) {\n      return;\n    }\n    this.entries.set(entry.target as HTMLVideoElement, entry.contentRect);\n    await this.selectMaxLayer();\n  };\n\n  /**\n   *  Taken from\n   *  https://stackoverflow.com/a/125106/4321808\n   */\n  // eslint-disable-next-line complexity\n  private isElementInViewport(el: HTMLElement) {\n    let top = el.offsetTop;\n    let left = el.offsetLeft;\n    const width = el.offsetWidth;\n    const height = el.offsetHeight;\n    const { hidden } = el;\n    const { opacity, display } = getComputedStyle(el);\n\n    while (el.offsetParent) {\n      el = el.offsetParent as HTMLElement;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n\n    return (\n      top < window.pageYOffset + window.innerHeight &&\n      left < window.pageXOffset + window.innerWidth &&\n      top + height > window.pageYOffset &&\n      left + width > window.pageXOffset &&\n      !hidden &&\n      (opacity !== '' ? parseFloat(opacity) > 0 : true) &&\n      display !== 'none'\n    );\n  }\n\n  // eslint-disable-next-line complexity\n  private async selectMaxLayer() {\n    if (!(this.track instanceof HMSRemoteVideoTrack) || this.videoElements.size === 0) {\n      return;\n    }\n    let maxLayer!: HMSPreferredSimulcastLayer;\n    for (const element of this.videoElements) {\n      const entry = this.entries.get(element);\n      if (!entry) {\n        continue;\n      }\n      const { width, height } = entry;\n      if (width === 0 || height === 0) {\n        continue;\n      }\n      const layer = getClosestLayer(this.track.getSimulcastDefinitions(), { width, height });\n      if (!maxLayer) {\n        maxLayer = layer;\n      } else {\n        maxLayer = layerToIntMapping[layer] > layerToIntMapping[maxLayer] ? layer : maxLayer;\n      }\n    }\n    if (maxLayer) {\n      HMSLogger.d(this.TAG, `selecting max layer ${maxLayer} for the track`, `${this.track}`);\n      await this.track.setPreferredLayer(maxLayer);\n    }\n  }\n\n  cleanup = () => {\n    this.videoElements.forEach(videoElement => {\n      videoElement.srcObject = null;\n      this.resizeObserver?.unobserve(videoElement);\n      this.intersectionObserver?.unobserve(videoElement);\n    });\n    this.videoElements.clear();\n    this.resizeObserver = undefined;\n    this.intersectionObserver = undefined;\n  };\n}\n", "import { HMSPreferredSimulcastLayer, HMSSimulcastLayer, HMSSimulcastLayerDefinition } from '../../interfaces';\n\nexport const layerToIntMapping = {\n  [HMSSimulcastLayer.NONE]: -1,\n  [HMSSimulcastLayer.LOW]: 0,\n  [HMSSimulcastLayer.MEDIUM]: 1,\n  [HMSSimulcastLayer.HIGH]: 2,\n};\nconst DELTA_THRESHOLD = 0.5;\n\n/**\n * Given the simulcast layers and the current video element dimensions, this function finds the\n * layer with dimensions closer to the video element dimensions.\n */\n// eslint-disable-next-line complexity\nexport const getClosestLayer = (\n  simulcastLayers: HMSSimulcastLayerDefinition[],\n  videoElementDimensions: { width: number; height: number },\n): HMSPreferredSimulcastLayer => {\n  let closestLayer: HMSPreferredSimulcastLayer = HMSSimulcastLayer.HIGH;\n  // when both width and height are equal pick height to select a better quality\n  const maxDimension = videoElementDimensions.width > videoElementDimensions.height ? 'width' : 'height';\n  const layers = [...simulcastLayers].sort((a, b) => layerToIntMapping[a.layer] - layerToIntMapping[b.layer]);\n  const videoDimesion = videoElementDimensions[maxDimension] * (window?.devicePixelRatio || 1);\n  for (let i = 0; i < layers.length; i++) {\n    const { resolution, layer } = layers[i];\n    const layerDimension = resolution[maxDimension];\n    // we break here because the layers are already sorted, the next would always be greater if the below condition satisifes\n    if (videoDimesion <= layerDimension) {\n      closestLayer = layer;\n      break;\n    } else {\n      const nextLayer = layers[i + 1];\n      const nextLayerDimension = nextLayer ? nextLayer.resolution[maxDimension] : Number.POSITIVE_INFINITY;\n      // calculating which layer this dimension is closer to\n      const proximityPercent = (videoDimesion - layerDimension) / (nextLayerDimension - layerDimension);\n      if (proximityPercent < DELTA_THRESHOLD) {\n        // the element's dimension is closer to the current layer\n        closestLayer = layer;\n        break;\n      }\n    }\n  }\n  return closestLayer;\n};\n", "import HMSLogger from './logger';\nimport { isBrowser } from './support';\n\nexport interface HMSIntersectionObserverCallback {\n  (entry: IntersectionObserverEntry): void;\n}\n\n/**\n * This is a wrapper around IntersectionObserver which will call the callback passed\n * for an element while observing, only when that element is intersecting\n */\nexport class HMSIntersectionObserverWrapper {\n  private intersectionObserver?: IntersectionObserver;\n  private readonly TAG = '[HMSIntersectionObserverWrapper]';\n  private listeners = new WeakMap<HTMLElement, HMSIntersectionObserverCallback>();\n  constructor() {\n    this.createObserver();\n  }\n\n  isSupported() {\n    const isSupported = isBrowser && typeof window.IntersectionObserver !== 'undefined';\n    if (!isSupported) {\n      HMSLogger.w(this.TAG, 'IntersectionObserver is not supported, fallback will be used instead');\n    }\n    return isSupported;\n  }\n\n  observe = (element: HTMLElement, onIntersection: HMSIntersectionObserverCallback) => {\n    this.createObserver();\n    // unobserve before observing the element\n    this.unobserve(element);\n    this.intersectionObserver?.observe(element);\n    this.listeners.set(element, onIntersection);\n  };\n\n  unobserve = (element: HTMLElement) => {\n    this.intersectionObserver?.unobserve(element);\n    this.listeners.delete(element);\n  };\n\n  private createObserver = () => {\n    if (this.isSupported() && !this.intersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(this.handleIntersection);\n    }\n  };\n\n  private handleIntersection = (entries: IntersectionObserverEntry[]) => {\n    for (const entry of entries) {\n      this.listeners.get(entry.target as HTMLElement)?.(entry);\n    }\n  };\n}\n\nexport const HMSIntersectionObserver = new HMSIntersectionObserverWrapper();\n", "import HMSLogger from './logger';\nimport { isBrowser } from './support';\nimport { debounce } from './timer-utils';\n\nexport interface HMSResizeObserverCallback {\n  (entry: ResizeObserverEntry): void;\n}\n\n/**\n * This is a wrapper around ResizeObserver which will call the callback passed\n * for an element while observing, only when that element is intersecting\n */\nexport class HMSResizeObserverWrapper {\n  private resizeObserver?: ResizeObserver;\n  private readonly TAG = '[HMSResizeObserverWrapper]';\n  private listeners = new WeakMap<HTMLElement, HMSResizeObserverCallback>();\n  constructor() {\n    this.createObserver();\n  }\n\n  isSupported() {\n    const isSupported = isBrowser && typeof window.ResizeObserver !== 'undefined';\n    if (!isSupported) {\n      HMSLogger.w(this.TAG, 'Resize Observer is not supported');\n    }\n    return isSupported;\n  }\n\n  observe = (\n    element: HTMLElement,\n    onResize: HMSResizeObserverCallback,\n    options: ResizeObserverOptions = { box: 'border-box' },\n  ) => {\n    this.createObserver();\n    // unobserve before observing the element\n    this.unobserve(element);\n    this.resizeObserver?.observe(element, options);\n    this.listeners.set(element, onResize);\n  };\n\n  unobserve = (element: HTMLElement) => {\n    this.resizeObserver?.unobserve(element);\n    this.listeners.delete(element);\n  };\n\n  private createObserver = () => {\n    if (this.isSupported() && !this.resizeObserver) {\n      this.resizeObserver = new ResizeObserver(debounce(this.handleResize, 300));\n    }\n  };\n\n  private handleResize = (entries: ResizeObserverEntry[]) => {\n    for (const entry of entries) {\n      this.listeners.get(entry.target as HTMLElement)?.(entry);\n    }\n  };\n}\n\nexport const HMSResizeObserver = new HMSResizeObserverWrapper();\n", "import { HMSPluginSupportResult } from '../audio';\n\n/**\n * A plugin implementing this interface can be registered with HMSLocalVideoTrack to transform, process or\n * analyze the local video track.These can include applications like video filters, virtual background, live\n * analysis of video etc. The below functions are required for the sdk to properly use the plugin, usually\n * the plugin would also be exposing some public functions of its own for the UI to control its working.\n */\nexport interface HMSVideoPlugin {\n  /**\n   * The name is meant to uniquely specify a plugin instance. This will be used to track number of plugins\n   * added to the track, and same name won't be allowed twice.\n   */\n  getName(): string;\n\n  /**\n   * This function will be called before the call to init, it is used to check whether the plugin supports current\n   * OS and device or not. An error will be thrown back to the user if they try to use an unsupported plugin.\n   */\n  checkSupport(): HMSPluginSupportResult;\n\n  /**\n   * @deprecated. Will be deleted in future updates. Use checkSupport instead.\n   */\n  isSupported(): boolean;\n\n  /**\n   * This function will be called in the beginning for initialization which may include tasks like setting up\n   * variables, loading ML models etc. This can be used by a plugin to ensure it's prepared at the time\n   * processVideoFrame is called.\n   */\n  init(): Promise<void>;\n\n  /**\n   * @see HMSVideoPluginType\n   */\n  getPluginType(): HMSVideoPluginType;\n\n  getContextType?(): HMSVideoPluginCanvasContextType;\n\n  /**\n   * This function will be called by the SDK for every video frame which the plugin needs to process.\n   * PluginFrameRate - the rate at which the plugin is expected to process the video frames. This is not necessarily\n   * equal to the capture frame rate. The user can specify this rate, and the sdk might also change it on basis of\n   * device type, or CPU usage.\n   * For an analyzing plugin, the below function will be called at plugin framerate.\n   * For a transforming plugin, the sdk will pass in the input and output at real frame rate with an additional boolean\n   * pass. The expectation is that the plugin should use results of previous runs instead of doing a complex processing\n   * again when pass is set to true. This helps in maintaining the framerate of the video as well as bringing down\n   * CPU usage in case of complex processing.\n   * @param input input canvas containing the input frame\n   * @param output the output canvas which should contain the output frame\n   * @param skipProcessing use results from previous run if true\n   */\n  processVideoFrame(\n    input: HTMLCanvasElement,\n    output?: HTMLCanvasElement,\n    skipProcessing?: boolean,\n  ): Promise<void> | void;\n\n  /**\n   * the plugin can use this function to dispose off its resources. It'll be called when the processor instance is\n   * no longer needed at the end.\n   */\n  stop(): void;\n}\n\n/**\n * Specifies the type of the plugin a transforming plugin will get an output canvas to give the resulting\n * transformation. While an analyzing plugin will only be passed the input canvas.\n */\nexport enum HMSVideoPluginType {\n  TRANSFORM = 'TRANSFORM',\n  ANALYZE = 'ANALYZE',\n}\n\nexport enum HMSVideoPluginCanvasContextType {\n  '2D' = '2d',\n  WEBGL = 'webgl',\n  'WEBGL2' = 'webgl2',\n}\n", "export class RunningAverage {\n  private total = 0;\n  private count = 0;\n\n  add(item: number) {\n    this.count++;\n    this.total += item;\n  }\n\n  getAvg(): number {\n    return Math.floor(this.total / this.count);\n  }\n\n  reset() {\n    this.total = 0;\n    this.count = 0;\n  }\n}\n", "import MediaPluginsAnalyticsFactory from '../../analytics/MediaPluginsAnalyticsFactory';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport HMSLogger from '../../utils/logger';\nimport { RunningAverage } from '../../utils/math';\n\nexport class VideoPluginsAnalytics {\n  private readonly TAG = '[VideoPluginsAnalytics]';\n  private readonly initTime: Record<string, number>;\n  private readonly addedTimestamps: Record<string, number>;\n  private readonly preProcessingAvgs: RunningAverage;\n  private readonly processingAvgs: Record<string, RunningAverage>;\n  private readonly pluginAdded: Record<string, boolean>;\n  private readonly pluginInputFrameRate: Record<string, number>;\n  private readonly pluginFrameRate: Record<string, number>;\n\n  constructor(private eventBus: EventBus) {\n    this.initTime = {};\n    this.preProcessingAvgs = new RunningAverage();\n    this.addedTimestamps = {};\n    this.processingAvgs = {};\n    this.pluginAdded = {};\n    this.pluginInputFrameRate = {};\n    this.pluginFrameRate = {};\n  }\n\n  added(name: string, inputFrameRate?: number, pluginFrameRate?: number) {\n    this.pluginAdded[name] = true;\n    this.addedTimestamps[name] = Date.now();\n    this.initTime[name] = 0;\n    this.processingAvgs[name] = new RunningAverage();\n    if (inputFrameRate) {\n      this.pluginInputFrameRate[name] = inputFrameRate;\n      this.pluginFrameRate[name] = pluginFrameRate || inputFrameRate;\n    }\n    this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.added(name, this.addedTimestamps[name]));\n  }\n\n  removed(name: string) {\n    //send stats\n    if (this.pluginAdded[name]) {\n      const stats = {\n        pluginName: name,\n        // duration in seconds\n        duration: Math.floor((Date.now() - this.addedTimestamps[name]) / 1000),\n        loadTime: this.initTime[name],\n        avgPreProcessingTime: this.preProcessingAvgs.getAvg(), //Do we need this in stat not plugin specific\n        avgProcessingTime: this.processingAvgs[name]?.getAvg(),\n        inputFrameRate: this.pluginInputFrameRate[name],\n        pluginFrameRate: this.pluginFrameRate[name],\n      };\n      //send stats\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.stats(stats));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  failure(name: string, error: HMSException) {\n    // send failure event\n    if (this.pluginAdded[name]) {\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.failure(name, error));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  async initWithTime<T>(name: string, initFn: () => Promise<T>) {\n    if (this.initTime[name]) {\n      HMSLogger.i(this.TAG, `Plugin Already loaded ${name}, time it took: ${this.initTime[name]}`);\n      return;\n    }\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(initFn);\n      HMSLogger.i(this.TAG, `Time taken for Plugin ${name} initialization : ${time}`);\n    } catch (e) {\n      //Failed during initialization of plugin(model loading etc...)\n      const err = ErrorFactory.MediaPluginErrors.InitFailed(\n        HMSAction.VIDEO_PLUGINS,\n        `failed during initialization of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.initTime[name] = time;\n    }\n  }\n\n  async preProcessWithTime<T>(preProcessFn: () => Promise<T>) {\n    //TODO: check if it is required to maintain and shall we handle preprocess failures\n    const time = await this.timeInMs(preProcessFn);\n    this.preProcessingAvgs.add(time);\n  }\n\n  async processWithTime<T>(name: string, processFn: () => Promise<T>) {\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(processFn);\n    } catch (e) {\n      //Failed during processing of plugin\n      const err = ErrorFactory.MediaPluginErrors.ProcessingFailed(\n        HMSAction.VIDEO_PLUGINS,\n        `Failed during processing of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.processingAvgs[name]?.add(time);\n    }\n  }\n\n  private async timeInMs<T>(fn: () => Promise<T>): Promise<number> {\n    const start = Date.now();\n    await fn();\n    return Math.floor(Date.now() - start);\n  }\n\n  private clean(name: string) {\n    delete this.addedTimestamps[name];\n    delete this.initTime[name];\n    delete this.processingAvgs[name];\n    delete this.pluginAdded[name];\n    delete this.pluginInputFrameRate[name];\n    delete this.pluginFrameRate[name];\n  }\n}\n", "/* eslint-disable complexity */\nimport { HMSVideoPlugin, HMSVideoPluginCanvasContextType, HMSVideoPluginType } from './HMSVideoPlugin';\nimport { VideoPluginsAnalytics } from './VideoPluginsAnalytics';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSLocalVideoTrack } from '../../media/tracks';\nimport HMSLogger from '../../utils/logger';\nimport { reusableWorker, workerSleep } from '../../utils/timer-utils';\nimport { HMSPluginUnsupportedTypes } from '../audio';\n\nconst DEFAULT_FRAME_RATE = 24;\nconst DEFAULT_WIDTH = 320;\nconst DEFAULT_HEIGHT = 240;\n\ninterface CanvasElement extends HTMLCanvasElement {\n  captureStream(frameRate?: number): MediaStream;\n}\n\n/**\n * This class manages applying different plugins on a local video track. Plugins which need to modify the video\n * are called in the order they were added. Plugins which do not need to modify the video frames are called\n * with the original input.\n *\n * Concepts -\n * Video Plugin - A module which can take in input video painted on a canvas, do some processing on it and optionally\n * render its output on a passed in output canvas which will be shown in the UI.\n *\n * frameRate - the frame rate of the input video as present in track.getSettings, this is the rate at which new frames\n * are being produced and the rate we need to maintain in output as well.\n *\n * pluginFrameRate - this is the rate at which the plugin is supposed to do its processing. The processing can be an\n * expensive operation and can result in high usage of resources like CPU. This rate would usually be lower than the\n * real frame rate.\n *\n * pluginsLoop - a loop is run at framerate in this class, on each loop if the original track is unmuted all added\n * plugins are called one by one in the order they were called.\n *\n * @see HMSVideoPlugin\n */\nexport class HMSVideoPluginsManager {\n  private readonly TAG = '[VideoPluginsManager]';\n\n  /**\n   * plugins loop is the loop in which all plugins are applied\n   */\n  private pluginsLoopRunning = false;\n  private pluginsLoopState: 'paused' | 'running' = 'paused';\n  private readonly hmsTrack: HMSLocalVideoTrack;\n  readonly pluginsMap: Map<string, HMSVideoPlugin>; // plugin names to their instance mapping\n  private inputVideo?: HTMLVideoElement;\n  private inputCanvas?: CanvasElement;\n  private outputCanvas?: CanvasElement;\n  private outputTrack?: MediaStreamTrack;\n  private analytics: VideoPluginsAnalytics;\n  private pluginAddInProgress = false;\n  private pluginNumFramesToSkip: Record<string, number>;\n  private pluginNumFramesSkipped: Record<string, number>;\n  private canvases: Array<CanvasElement>; //array of canvases to store intermediate result\n  private reusableWorker = reusableWorker();\n\n  constructor(track: HMSLocalVideoTrack, eventBus: EventBus) {\n    this.hmsTrack = track;\n    this.pluginsMap = new Map();\n    this.pluginNumFramesToSkip = {};\n    this.pluginNumFramesSkipped = {};\n    this.analytics = new VideoPluginsAnalytics(eventBus);\n    this.canvases = new Array<CanvasElement>();\n  }\n\n  getPlugins(): string[] {\n    return Array.from(this.pluginsMap.keys());\n  }\n\n  /**\n   * @param plugin\n   * @param pluginFrameRate\n   */\n  async addPlugin(plugin: HMSVideoPlugin, pluginFrameRate?: number) {\n    if (this.pluginAddInProgress) {\n      const name = plugin.getName?.();\n      if (!name || name === '') {\n        HMSLogger.w('no name provided by the plugin');\n        return;\n      }\n\n      const err = ErrorFactory.MediaPluginErrors.AddAlreadyInProgress(\n        HMSAction.VIDEO_PLUGINS,\n        'Add Plugin is already in Progress',\n      );\n      this.analytics.failure(name, err);\n\n      HMSLogger.w(\"can't add another plugin when previous add is in progress\");\n      throw err;\n    }\n\n    this.pluginAddInProgress = true;\n\n    try {\n      await this.addPluginInternal(plugin, pluginFrameRate);\n    } finally {\n      this.pluginAddInProgress = false;\n    }\n  }\n\n  private async addPluginInternal(plugin: HMSVideoPlugin, pluginFrameRate?: number) {\n    const name = plugin.getName?.();\n    if (!name || name === '') {\n      HMSLogger.w('no name provided by the plugin');\n      return;\n    }\n    if (this.pluginsMap.has(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${plugin.getName()} already added.`);\n      return;\n    }\n    //TODO: assuming this inputFrameRate from getMediaTrackSettings will not change once set\n    //TODO: even if it changes will not have the info/params to know the change\n    const inputFrameRate = this.hmsTrack.getMediaTrackSettings().frameRate || DEFAULT_FRAME_RATE;\n\n    let numFramesToSkip = 0;\n    if (pluginFrameRate && pluginFrameRate > 0) {\n      HMSLogger.i(this.TAG, `adding plugin ${plugin.getName()} with framerate ${pluginFrameRate}`);\n      if (pluginFrameRate < inputFrameRate) {\n        numFramesToSkip = Math.ceil(inputFrameRate / pluginFrameRate) - 1;\n      }\n      this.analytics.added(name, inputFrameRate, pluginFrameRate);\n    } else {\n      HMSLogger.i(this.TAG, `adding plugin ${plugin.getName()}`);\n      this.analytics.added(name, inputFrameRate);\n    }\n\n    HMSLogger.i(this.TAG, 'numFrames to skip processing', numFramesToSkip);\n    this.pluginNumFramesToSkip[name] = numFramesToSkip;\n    this.pluginNumFramesSkipped[name] = numFramesToSkip;\n\n    this.validateAndThrow(name, plugin);\n\n    try {\n      await this.analytics.initWithTime(name, async () => await plugin.init());\n      this.pluginsMap.set(name, plugin);\n      // add new canvases according to new added plugins\n      if (this.pluginsMap.size + 1 > this.canvases.length) {\n        for (let i = this.canvases.length; i <= this.pluginsMap.size; i++) {\n          this.canvases[i] = document.createElement('canvas') as CanvasElement;\n        }\n      }\n      await this.startPluginsLoop(plugin.getContextType?.());\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to add plugin', err);\n      await this.removePlugin(plugin);\n      throw err;\n    }\n  }\n\n  validatePlugin(plugin: HMSVideoPlugin) {\n    return plugin.checkSupport();\n  }\n\n  validateAndThrow(name: string, plugin: HMSVideoPlugin) {\n    const result = this.validatePlugin(plugin);\n    if (result.isSupported) {\n      HMSLogger.i(this.TAG, `plugin is supported,- ${plugin.getName()}`);\n    } else {\n      let error;\n      switch (result.errType) {\n        case HMSPluginUnsupportedTypes.PLATFORM_NOT_SUPPORTED:\n          error = ErrorFactory.MediaPluginErrors.PlatformNotSupported(\n            HMSAction.VIDEO_PLUGINS,\n            'platform not supported, see docs',\n          );\n          this.analytics.failure(name, error);\n          throw error;\n        case HMSPluginUnsupportedTypes.DEVICE_NOT_SUPPORTED:\n          error = ErrorFactory.MediaPluginErrors.DeviceNotSupported(\n            HMSAction.VIDEO_PLUGINS,\n            'video device not supported, see docs',\n          );\n          this.analytics.failure(name, error);\n          throw error;\n      }\n    }\n  }\n\n  async removePlugin(plugin: HMSVideoPlugin) {\n    const name = plugin.getName();\n    if (!this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} not found to remove.`);\n      return;\n    }\n    HMSLogger.i(this.TAG, `removing plugin ${name}`);\n    this.removePluginEntry(name);\n    if (this.pluginsMap.size === 0) {\n      HMSLogger.i(this.TAG, `No plugins left, stopping plugins loop`);\n      await this.stopPluginsLoop();\n    }\n    plugin.stop();\n    this.analytics.removed(name);\n  }\n\n  removePluginEntry(name: string) {\n    this.pluginsMap.delete(name);\n    if (this.pluginNumFramesToSkip[name]) {\n      delete this.pluginNumFramesToSkip[name];\n    }\n    if (this.pluginNumFramesSkipped[name]) {\n      delete this.pluginNumFramesSkipped[name];\n    }\n  }\n\n  /**\n   * when video is unmuted it takes some time for all the plugins to be re run and an output stream to be\n   * produced. It can await on this function to confirm and tell the new unmuted state.\n   * If this is not awaited on video will freeze with a frame from past run.\n   */\n  async waitForRestart() {\n    if (!this.pluginsLoopRunning || this.pluginsLoopState === 'running') {\n      return;\n    }\n    while (this.pluginsLoopState === 'paused') {\n      await workerSleep(100);\n    }\n  }\n\n  /**\n   * remove every plugin one by one\n   */\n  async cleanup() {\n    for (const plugin of this.pluginsMap.values()) {\n      await this.removePlugin(plugin);\n    }\n    // memory cleanup\n    this.outputTrack?.stop();\n  }\n\n  private initElementsAndStream(contextType?: HMSVideoPluginCanvasContextType) {\n    if (!this.inputCanvas) {\n      this.inputCanvas = document.createElement('canvas') as CanvasElement;\n    }\n    this.outputCanvas = document.createElement('canvas') as CanvasElement;\n    if (!this.inputVideo) {\n      this.inputVideo = document.createElement('video');\n    }\n    // FF issue https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n    this.inputCanvas.getContext('2d');\n    this.outputCanvas.getContext(contextType || HMSVideoPluginCanvasContextType['2D']);\n    // capture stream automatically uses the framerate at which the output canvas is changing\n    const outputStream = this.outputCanvas.captureStream();\n    this.outputTrack = outputStream.getVideoTracks()[0];\n  }\n\n  private async startPluginsLoop(contextType?: HMSVideoPluginCanvasContextType) {\n    if (this.pluginsLoopRunning) {\n      return;\n    }\n    this.initElementsAndStream(contextType);\n    this.pluginsLoopRunning = true;\n    try {\n      await this.hmsTrack.setProcessedTrack(this.outputTrack);\n    } catch (err) {\n      this.pluginsLoopRunning = false;\n      HMSLogger.e(this.TAG, 'error in setting processed track', err);\n      throw err;\n    }\n    // can't await on pluginsLoop as it'll run for a long long time\n    this.pluginsLoop().then(() => {\n      HMSLogger.d(this.TAG, 'processLoop stopped');\n    });\n  }\n\n  private async stopPluginsLoop() {\n    this.pluginsLoopRunning = false;\n    await this.hmsTrack.setProcessedTrack(undefined);\n    this.resetCanvases();\n    this.outputTrack?.stop();\n    if (this.inputVideo) {\n      this.inputVideo.srcObject = null;\n      this.inputVideo = undefined;\n    }\n  }\n\n  private async pluginsLoop() {\n    while (this.pluginsLoopRunning) {\n      const inputFrameRate = this.hmsTrack.getMediaTrackSettings().frameRate || DEFAULT_FRAME_RATE;\n      const sleepTimeMs = Math.floor(1000 / inputFrameRate);\n      if (!this.hmsTrack.enabled || this.hmsTrack.nativeTrack.readyState === 'ended') {\n        if (this.pluginsLoopState === 'running') {\n          // mute just happened, reset canvases to black so even if it is sent to remote, it\n          // is a black screen instead of a stucked frame from previous run\n          this.resetCanvases();\n        }\n        this.pluginsLoopState = 'paused';\n        await this.reusableWorker.sleep(sleepTimeMs);\n        continue;\n      }\n      let processingTime = 0;\n      try {\n        await this.analytics.preProcessWithTime(async () => await this.doPreProcessing());\n        const start = Date.now();\n        await this.processFramesThroughPlugins();\n        processingTime = Math.floor(Date.now() - start);\n        if (processingTime > sleepTimeMs) {\n          processingTime = sleepTimeMs;\n        }\n      } catch (err) {\n        // TODO: handle failures properly, detect which plugin failed, stop it and notify back to the UI\n        HMSLogger.e(this.TAG, 'error in plugins loop', err);\n      }\n      this.pluginsLoopState = 'running';\n      // take into account processing time to decide time to wait for the next loop\n      await this.reusableWorker.sleep(sleepTimeMs - processingTime);\n    }\n  }\n\n  private async doPreProcessing() {\n    await this.addTrackToVideo(); // ensure current native track is playing in video\n    await this.updateInputCanvas(); // put the latest video frame on input canvas\n  }\n\n  /**\n   * pass the input canvas through all plugins in a loop\n   * @private\n   */\n  private async processFramesThroughPlugins() {\n    this.canvases[0] = this.inputCanvas!;\n    let i = 0;\n    for (const plugin of this.pluginsMap.values()) {\n      const name = plugin.getName();\n      if (!plugin) {\n        continue;\n      }\n      try {\n        const skipProcessing = this.checkIfSkipRequired(name);\n\n        if (plugin.getPluginType() === HMSVideoPluginType.TRANSFORM) {\n          const process = async (input: CanvasElement, output: CanvasElement) => {\n            try {\n              await plugin.processVideoFrame(input, output, skipProcessing);\n            } catch (err) {\n              HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n            }\n          };\n          if (!skipProcessing) {\n            const currentCanvas = this.canvases[i];\n            const nextCanvas = this.canvases[i + 1];\n            if (i === this.pluginsMap.size - 1) {\n              await this.analytics.processWithTime(name, async () => process(currentCanvas, this.outputCanvas!));\n            } else {\n              await this.analytics.processWithTime(name, async () => process(currentCanvas, nextCanvas));\n            }\n          } else {\n            if (i === this.pluginsMap.size - 1) {\n              await process(this.canvases[i], this.outputCanvas!);\n            } else {\n              await process(this.canvases[i], this.canvases[i + 1]);\n            }\n          }\n        } else if (plugin.getPluginType() === HMSVideoPluginType.ANALYZE && !skipProcessing) {\n          // there is no need to await for this case\n          await this.analytics.processWithTime(name, async () => await plugin.processVideoFrame(this.inputCanvas!));\n        }\n      } catch (err) {\n        //TODO error happened on processing of plugin notify UI\n        HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n        //remove plugin from loop and stop analytics for it\n        await this.removePlugin(plugin);\n      }\n      i++;\n    }\n  }\n\n  /**\n   * add the current native track to the inputVideoElement if it's not already added.\n   * @private\n   */\n  private async addTrackToVideo() {\n    if (!this.inputVideo) {\n      return;\n    }\n    const srcObject = this.inputVideo.srcObject;\n    if (srcObject !== null && srcObject instanceof MediaStream) {\n      const existingTrackID = srcObject.getVideoTracks()[0]?.id;\n      if (existingTrackID === this.hmsTrack.nativeTrack.id) {\n        // it's already attached\n        return;\n      }\n    }\n    this.inputVideo.pause();\n    this.inputVideo.srcObject = new MediaStream([this.hmsTrack.nativeTrack]);\n    this.inputVideo.muted = true;\n    this.inputVideo.playsInline = true;\n    await this.inputVideo.play();\n  }\n\n  /**\n   * get the new video frame from input video element and put it on canvas\n   * @private\n   */\n  private async updateInputCanvas() {\n    if (!this.inputCanvas || !this.inputVideo) {\n      return;\n    }\n    const { width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT } = this.hmsTrack.getMediaTrackSettings();\n    // TODO: should we reduce height/width to optimize?\n    if (this.inputCanvas.height !== height) {\n      this.inputCanvas.height = height;\n    }\n    if (this.inputCanvas.width !== width) {\n      this.inputCanvas.width = width;\n    }\n    const ctx = this.inputCanvas.getContext('2d');\n    ctx!.drawImage(this.inputVideo, 0, 0, width, height);\n  }\n\n  private resetCanvases() {\n    if (!this.outputCanvas || !this.inputCanvas) {\n      return;\n    }\n    const inputCtx = this.inputCanvas.getContext('2d');\n    if (inputCtx) {\n      inputCtx.fillStyle = `rgb(0, 0, 0)`;\n      inputCtx.fillRect(0, 0, this.outputCanvas.width, this.outputCanvas.height);\n    }\n    this.canvases = [];\n  }\n\n  /**\n    N = ceil(inputFrameRate/pluginFrameRate) - 1\n    N = this.pluginNumFramesToSkip[name] = frames to skip for every processed frame\n    all the frames we are skipping are using the previous frame output\n   **/\n  private checkIfSkipRequired(name: string) {\n    let skip = false;\n\n    if (this.pluginNumFramesSkipped[name] < this.pluginNumFramesToSkip[name]) {\n      this.pluginNumFramesSkipped[name]++;\n      skip = true;\n    } else {\n      skip = false;\n      this.pluginNumFramesSkipped[name] = 0;\n    }\n\n    return skip;\n  }\n}\n", "import { HMSMediaStreamPlugin } from './HMSMediaStreamPlugin';\nimport { VideoPluginsAnalytics } from './VideoPluginsAnalytics';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSException } from '../../internal';\nimport Room from '../../sdk/models/HMSRoom';\nimport HMSLogger from '../../utils/logger';\n\nexport class HMSMediaStreamPluginsManager {\n  private readonly TAG = '[MediaStreamPluginsManager]';\n  private analytics: VideoPluginsAnalytics;\n  readonly plugins: Set<HMSMediaStreamPlugin>;\n  private room?: Room;\n\n  constructor(eventBus: EventBus, room?: Room) {\n    this.plugins = new Set<HMSMediaStreamPlugin>();\n    this.analytics = new VideoPluginsAnalytics(eventBus);\n    this.room = room;\n  }\n\n  addPlugins(plugins: HMSMediaStreamPlugin[]): void {\n    plugins.forEach(plugin => {\n      switch (plugin.getName()) {\n        case 'HMSEffectsPlugin':\n          if (!this.room?.isEffectsEnabled) {\n            const errorMessage = 'Effects Virtual Background is not enabled for this room';\n            if (this.plugins.size === 0) {\n              throw Error(errorMessage);\n            } else {\n              HMSLogger.w(this.TAG, errorMessage);\n              return;\n            }\n          }\n          break;\n        default:\n      }\n      this.plugins.add(plugin);\n    });\n  }\n\n  removePlugins(plugins: HMSMediaStreamPlugin[]) {\n    plugins.forEach(plugin => {\n      plugin.stop();\n      this.analytics.removed(plugin.getName());\n      this.plugins.delete(plugin);\n    });\n  }\n\n  applyPlugins(inputStream: MediaStream): MediaStream {\n    let processedStream = inputStream;\n    for (const plugin of this.plugins) {\n      const pluginName = plugin.getName();\n      try {\n        processedStream = plugin.apply(processedStream);\n        this.analytics.added(pluginName);\n      } catch (e) {\n        this.analytics.failure(pluginName, e as HMSException);\n        HMSLogger.e('Could not apply plugin', e, pluginName);\n      }\n    }\n    return processedStream;\n  }\n\n  getPlugins(): string[] {\n    return Array.from(this.plugins).map(plugin => plugin.getName());\n  }\n\n  async cleanup() {\n    this.removePlugins(Array.from(this.plugins));\n  }\n}\n", "import { v4 as uuid } from 'uuid';\nimport { Store } from './store';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { DeviceManager } from '../device-manager';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { HMSException } from '../error/HMSException';\nimport { BuildGetMediaError } from '../error/utils';\nimport { EventBus } from '../events/EventBus';\nimport {\n  HMSAudioCodec,\n  HMSAudioMode,\n  HMSScreenShareConfig,\n  HMSVideoCodec,\n  ScreenCaptureHandleConfig,\n} from '../interfaces';\nimport InitialSettings from '../interfaces/settings';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack, HMSTrackType } from '../internal';\nimport {\n  HMSAudioTrackSettings,\n  HMSAudioTrackSettingsBuilder,\n  HMSTrackSettings,\n  HMSTrackSettingsBuilder,\n  HMSVideoTrackSettings,\n  HMSVideoTrackSettingsBuilder,\n} from '../media/settings';\nimport { HMSLocalStream } from '../media/streams/HMSLocalStream';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\nimport ITransportObserver from '../transport/ITransportObserver';\nimport HMSLogger from '../utils/logger';\nimport { HMSAudioContextHandler } from '../utils/media';\n\nconst defaultSettings = {\n  isAudioMuted: false,\n  isVideoMuted: false,\n  audioInputDeviceId: 'default',\n  audioOutputDeviceId: 'default',\n  videoDeviceId: 'default',\n  audioMode: HMSAudioMode.VOICE,\n};\ntype IFetchTrackOptions = boolean | 'empty';\ninterface IFetchAVTrackOptions {\n  audio: IFetchTrackOptions;\n  video: IFetchTrackOptions;\n}\n\nlet blankCanvas: HTMLCanvasElement | undefined;\nlet intervalID: ReturnType<typeof setInterval> | undefined;\n\nexport class LocalTrackManager {\n  readonly TAG: string = '[LocalTrackManager]';\n  private captureHandleIdentifier?: string;\n\n  constructor(\n    private store: Store,\n    private observer: ITransportObserver,\n    private deviceManager: DeviceManager,\n    private eventBus: EventBus,\n    private analyticsTimer: AnalyticsTimer,\n  ) {\n    this.setScreenCaptureHandleConfig();\n  }\n\n  // eslint-disable-next-line complexity\n  async getTracksToPublish(initialSettings: InitialSettings = defaultSettings): Promise<HMSLocalTrack[]> {\n    const trackSettings = this.getAVTrackSettings(initialSettings);\n    if (!trackSettings) {\n      return [];\n    }\n    const canPublishAudio = !!trackSettings.audio;\n    const canPublishVideo = !!trackSettings.video;\n    let tracksToPublish: Array<HMSLocalTrack> = [];\n    const { videoTrack, audioTrack } = await this.updateCurrentLocalTrackSettings(trackSettings);\n    const localStream = (videoTrack?.stream || audioTrack?.stream) as HMSLocalStream | undefined;\n    // The track gets added to the store only after it is published.\n    const isVideoTrackPublished = Boolean(videoTrack && this.store.getTrackById(videoTrack.trackId));\n    const isAudioTrackPublished = Boolean(audioTrack && this.store.getTrackById(audioTrack.trackId));\n\n    if (isVideoTrackPublished && isAudioTrackPublished) {\n      // there is nothing to publish\n      return [];\n    }\n\n    const fetchTrackOptions: IFetchAVTrackOptions = {\n      audio: canPublishAudio && !audioTrack && (initialSettings.isAudioMuted ? 'empty' : true),\n      video: canPublishVideo && !videoTrack && (initialSettings.isVideoMuted ? 'empty' : true),\n    };\n\n    if (fetchTrackOptions.audio) {\n      this.analyticsTimer.start(TimedEvent.LOCAL_AUDIO_TRACK);\n    }\n    if (fetchTrackOptions.video) {\n      this.analyticsTimer.start(TimedEvent.LOCAL_VIDEO_TRACK);\n    }\n    try {\n      HMSLogger.d(this.TAG, 'Init Local Tracks', { fetchTrackOptions });\n      tracksToPublish = await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n    } catch (error) {\n      tracksToPublish = await this.retryGetLocalTracks(\n        error as HMSException,\n        trackSettings,\n        fetchTrackOptions,\n        localStream,\n      );\n    }\n    if (fetchTrackOptions.audio) {\n      this.analyticsTimer.end(TimedEvent.LOCAL_AUDIO_TRACK);\n    }\n    if (fetchTrackOptions.video) {\n      this.analyticsTimer.end(TimedEvent.LOCAL_VIDEO_TRACK);\n    }\n\n    if (videoTrack && canPublishVideo && !isVideoTrackPublished) {\n      tracksToPublish.push(videoTrack);\n    }\n    if (audioTrack && canPublishAudio && !isAudioTrackPublished) {\n      tracksToPublish.push(audioTrack);\n    }\n    return tracksToPublish;\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  async getLocalTracks(\n    fetchTrackOptions: IFetchAVTrackOptions = { audio: true, video: true },\n    settings: HMSTrackSettings,\n    localStream?: HMSLocalStream,\n  ): Promise<Array<HMSLocalTrack>> {\n    try {\n      const nativeTracks = await this.getNativeLocalTracks(fetchTrackOptions, settings);\n      return this.createHMSLocalTracks(nativeTracks, settings, localStream);\n    } catch (error) {\n      // TOOD: On OverConstrained error, retry with dropping all constraints.\n      // Just retry getusermedia again - it sometimes work when AbortError or NotFoundError is thrown on a few devices\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.publish({\n          devices: this.deviceManager.getDevices(),\n          error: error as Error,\n          settings,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  private async getNativeLocalTracks(\n    fetchTrackOptions: IFetchAVTrackOptions = { audio: false, video: false },\n    settings: HMSTrackSettings,\n  ) {\n    const trackSettings = new HMSTrackSettings(\n      fetchTrackOptions.video === true ? settings.video : null,\n      fetchTrackOptions.audio === true ? settings.audio : null,\n      settings.simulcast,\n    );\n    const nativeTracks: MediaStreamTrack[] = [];\n\n    if (trackSettings.audio || trackSettings.video) {\n      nativeTracks.push(...(await this.getAVTracks(trackSettings)));\n    }\n    nativeTracks.push(...this.getEmptyTracks(fetchTrackOptions));\n    return nativeTracks;\n  }\n  private async optimizeScreenShareConstraint(stream: MediaStream, constraints: MediaStreamConstraints) {\n    if (typeof constraints.video === 'boolean' || !constraints.video?.width || !constraints.video?.height) {\n      return;\n    }\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('screen')) {\n      return;\n    }\n    const videoElement = document.createElement('video');\n    videoElement.srcObject = stream;\n    videoElement.addEventListener('loadedmetadata', async () => {\n      const { videoWidth, videoHeight } = videoElement;\n      const screen = publishParams.screen;\n      const pixels = screen.width * screen.height;\n      const actualAspectRatio = videoWidth / videoHeight;\n      const currentAspectRatio = screen.width / screen.height;\n      if (actualAspectRatio > currentAspectRatio) {\n        const videoConstraint = constraints.video as MediaTrackConstraints;\n        const ratio = actualAspectRatio / currentAspectRatio;\n        const sqrt_ratio = Math.sqrt(ratio);\n        if (videoWidth * videoHeight > pixels) {\n          videoConstraint.width = videoWidth / sqrt_ratio;\n          videoConstraint.height = videoHeight / sqrt_ratio;\n        } else {\n          videoConstraint.height = videoHeight * sqrt_ratio;\n          videoConstraint.width = videoWidth * sqrt_ratio;\n        }\n        await stream.getVideoTracks()[0].applyConstraints(videoConstraint);\n      }\n    });\n  }\n  // eslint-disable-next-line complexity\n  async getLocalScreen(partialConfig?: HMSScreenShareConfig, optimise = false) {\n    const config = await this.getOrDefaultScreenshareConfig(partialConfig);\n    const screenSettings = this.getScreenshareSettings(config.videoOnly);\n    const constraints = {\n      video: { ...screenSettings?.video.toConstraints(true), displaySurface: config.displaySurface },\n      preferCurrentTab: config.preferCurrentTab,\n      selfBrowserSurface: config.selfBrowserSurface,\n      surfaceSwitching: config.surfaceSwitching,\n      systemAudio: config.systemAudio,\n    } as MediaStreamConstraints;\n    if (screenSettings?.audio) {\n      const audioConstraints: MediaTrackConstraints = screenSettings?.audio?.toConstraints();\n      // remove advanced constraints as it not supported for screenshare audio\n      delete audioConstraints.advanced;\n      constraints.audio = {\n        ...audioConstraints,\n        autoGainControl: false,\n        noiseSuppression: false,\n        // @ts-ignore\n        googAutoGainControl: false,\n        echoCancellation: false,\n      };\n    } else if (partialConfig?.forceCurrentTab && partialConfig.preferCurrentTab && partialConfig.cropElement) {\n      // only need if crop element with prefer and force current tab\n      constraints.audio = {\n        echoCancellation: true,\n        noiseSuppression: true,\n      };\n    }\n    let stream;\n    try {\n      HMSLogger.d('retrieving screenshare with ', { config }, { constraints });\n      // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n      stream = (await navigator.mediaDevices.getDisplayMedia(constraints)) as MediaStream;\n      if (optimise) {\n        await this.optimizeScreenShareConstraint(stream, constraints);\n      }\n    } catch (err) {\n      HMSLogger.w(this.TAG, 'error in getting screenshare - ', err);\n      const error = BuildGetMediaError(err as Error, HMSTrackExceptionTrackType.SCREEN);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.publish({\n          error: error as Error,\n          devices: this.deviceManager.getDevices(),\n          settings: new HMSTrackSettings(screenSettings?.video, screenSettings?.audio, false),\n        }),\n      );\n      throw error;\n    }\n\n    const tracks: Array<HMSLocalTrack> = [];\n    const local = new HMSLocalStream(stream);\n    const nativeVideoTrack = stream.getVideoTracks()[0];\n    const videoTrack = new HMSLocalVideoTrack(\n      local,\n      nativeVideoTrack,\n      'screen',\n      this.eventBus,\n      screenSettings?.video,\n      this.store.getRoom(),\n    );\n    videoTrack.setSimulcastDefinitons(this.store.getSimulcastDefinitionsForPeer(this.store.getLocalPeer()!, 'screen'));\n\n    try {\n      const isCurrentTabShared = this.validateCurrentTabCapture(videoTrack, config.forceCurrentTab);\n      videoTrack.isCurrentTab = isCurrentTabShared;\n      await videoTrack.cropTo(config.cropTarget);\n    } catch (err) {\n      stream.getTracks().forEach(track => track.stop());\n      throw err;\n    }\n\n    tracks.push(videoTrack);\n    const nativeAudioTrack = stream.getAudioTracks()[0];\n    if (nativeAudioTrack) {\n      const audioTrack = new HMSLocalAudioTrack(\n        local,\n        nativeAudioTrack,\n        'screen',\n        this.eventBus,\n        screenSettings?.audio,\n        this.store.getRoom(),\n      );\n      tracks.push(audioTrack);\n    }\n\n    HMSLogger.v(this.TAG, 'getLocalScreen', tracks);\n    return tracks;\n  }\n\n  setScreenCaptureHandleConfig(config?: Partial<ScreenCaptureHandleConfig>) {\n    // @ts-ignore\n    if (!navigator.mediaDevices?.setCaptureHandleConfig || this.isInIframe()) {\n      // setCaptureHandleConfig can't be called from within an iframe\n      return;\n    }\n    config = config || {};\n    Object.assign(config, { handle: uuid(), exposeOrigin: false, permittedOrigins: [window.location.origin] });\n    HMSLogger.d('setting capture handle - ', config.handle);\n    // @ts-ignore\n    navigator.mediaDevices.setCaptureHandleConfig(config);\n    this.captureHandleIdentifier = config.handle;\n  }\n\n  validateCurrentTabCapture(track: HMSLocalVideoTrack, forceCurrentTab: boolean): boolean {\n    const trackHandle = track.getCaptureHandle();\n    const isCurrentTabShared = !!(this.captureHandleIdentifier && trackHandle?.handle === this.captureHandleIdentifier);\n    if (forceCurrentTab && !isCurrentTabShared) {\n      HMSLogger.e(this.TAG, 'current tab was not shared with forceCurrentTab as true');\n      throw ErrorFactory.TracksErrors.CurrentTabNotShared();\n    }\n    return isCurrentTabShared;\n  }\n\n  async requestPermissions() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      });\n      // Stop stream\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      HMSLogger.e(this.TAG, error);\n    }\n  }\n\n  static getEmptyVideoTrack(prevTrack?: MediaStreamTrack): MediaStreamTrack {\n    const width = prevTrack?.getSettings()?.width || 320;\n    const height = prevTrack?.getSettings()?.height || 240;\n    const frameRate = 1; // fps TODO: experiment, see if this can be reduced\n    if (!blankCanvas) {\n      blankCanvas = document.createElement('canvas');\n      blankCanvas.width = width;\n      blankCanvas.height = height;\n      blankCanvas.getContext('2d')?.fillRect(0, 0, width, height);\n    }\n    if (!intervalID) {\n      // This is needed to send some data so the track is received on sfu\n      intervalID = setInterval(() => {\n        const ctx = blankCanvas?.getContext('2d');\n        if (ctx) {\n          ctx.fillRect(0, 0, 1, 1);\n        }\n      }, 1000 / frameRate);\n    }\n\n    const stream = blankCanvas.captureStream(frameRate);\n    const emptyTrack = stream.getVideoTracks()[0];\n    emptyTrack.enabled = false;\n    return emptyTrack;\n  }\n\n  static getEmptyAudioTrack(): MediaStreamTrack {\n    const ctx = HMSAudioContextHandler.getAudioContext();\n    const oscillator = ctx.createOscillator();\n    const dst = ctx.createMediaStreamDestination();\n    oscillator.connect(dst);\n    oscillator.start();\n    const emptyTrack = dst.stream.getAudioTracks()[0];\n    emptyTrack.enabled = false;\n    return emptyTrack;\n  }\n\n  static cleanup() {\n    clearInterval(intervalID);\n    intervalID = undefined;\n    blankCanvas = undefined;\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  private async getAVTracks(settings: HMSTrackSettings): Promise<Array<MediaStreamTrack>> {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: settings.audio ? settings.audio.toConstraints() : false,\n        video: settings.video ? settings.video.toConstraints() : false,\n      });\n\n      return stream.getVideoTracks().concat(stream.getAudioTracks());\n    } catch (error) {\n      await this.deviceManager.init();\n      const videoError = !!(!this.deviceManager.hasWebcamPermission && settings.video);\n      const audioError = !!(!this.deviceManager.hasMicrophonePermission && settings.audio);\n      /**\n       * TODO: Only permission error throws correct device info in error(audio or video or both),\n       * Right now for other errors such as overconstrained error we are unable to get whether audio/video failure.\n       * Fix this by checking the native error message.\n       */\n      const errorType = this.getErrorType(videoError, audioError);\n      throw BuildGetMediaError(error as Error, errorType);\n    }\n  }\n\n  private getAVTrackSettings(initialSettings: InitialSettings): HMSTrackSettings | null {\n    const audioSettings = this.getAudioSettings(initialSettings);\n    const videoSettings = this.getVideoSettings(initialSettings);\n    if (!audioSettings && !videoSettings) {\n      return null;\n    }\n    return new HMSTrackSettingsBuilder().video(videoSettings).audio(audioSettings).build();\n  }\n\n  private isInIframe() {\n    try {\n      return window.self !== window.top;\n    } catch (e) {\n      return true;\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private async retryGetLocalTracks(\n    error: HMSException,\n    trackSettings: HMSTrackSettings,\n    fetchTrackOptions: IFetchAVTrackOptions,\n    localStream?: HMSLocalStream,\n  ): Promise<Array<HMSLocalTrack>> {\n    if (error instanceof HMSException && error.action === HMSAction.TRACK) {\n      this.observer.onFailure(error);\n\n      const overConstrainedFailure = error.code === ErrorCodes.TracksErrors.OVER_CONSTRAINED;\n      const audioFailure = error.message.includes('audio');\n      const videoFailure = error.message.includes('video');\n      if (overConstrainedFailure) {\n        // TODO: Use this once TODO@L#250 is completed\n        // const newTrackSettings = new HMSTrackSettingsBuilder()\n        //   .video(videoFailure ? new HMSVideoTrackSettings() : trackSettings.video)\n        //   .audio(audioFailure ? new HMSAudioTrackSettings() : trackSettings.audio)\n        //   .build();\n        const newTrackSettings = new HMSTrackSettingsBuilder()\n          .video(new HMSVideoTrackSettings())\n          .audio(new HMSAudioTrackSettings())\n          .build();\n\n        HMSLogger.w(this.TAG, 'Fetch AV Tracks failed with overconstrained error', { fetchTrackOptions }, { error });\n\n        try {\n          // Try get local tracks with no constraints\n          return await this.getLocalTracks(fetchTrackOptions, newTrackSettings, localStream);\n        } catch (error) {\n          /**\n           * This error shouldn't be overconstrained error(as we've dropped all constraints).\n           * If it's an overconstrained error, change error code to avoid recursive loop\n           * Try get local tracks for empty tracks\n           */\n          const nativeError: Error | undefined = error instanceof HMSException ? error.nativeError : (error as Error);\n          let ex = error;\n          if (nativeError?.name === 'OverconstrainedError') {\n            const newError = ErrorFactory.TracksErrors.GenericTrack(\n              HMSAction.TRACK,\n              'Overconstrained error after dropping all constraints',\n            );\n            newError.addNativeError(nativeError);\n            ex = newError;\n          }\n\n          return await this.retryGetLocalTracks(ex as HMSException, trackSettings, fetchTrackOptions, localStream);\n        }\n      }\n\n      fetchTrackOptions.audio = audioFailure ? 'empty' : fetchTrackOptions.audio;\n      fetchTrackOptions.video = videoFailure ? 'empty' : fetchTrackOptions.video;\n      HMSLogger.w(this.TAG, 'Fetch AV Tracks failed', { fetchTrackOptions }, error);\n      try {\n        return await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n      } catch (error) {\n        HMSLogger.w(this.TAG, 'Fetch empty tacks failed', error);\n        fetchTrackOptions.audio = fetchTrackOptions.audio && 'empty';\n        fetchTrackOptions.video = fetchTrackOptions.video && 'empty';\n        this.observer.onFailure(error as HMSException);\n        return await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n      }\n    } else {\n      HMSLogger.w(this.TAG, 'Fetch AV Tracks failed - unknown exception', error);\n      this.observer.onFailure(error);\n      return [];\n    }\n  }\n\n  getErrorType(videoError: boolean, audioError: boolean): HMSTrackExceptionTrackType {\n    if (videoError && audioError) {\n      return HMSTrackExceptionTrackType.AUDIO_VIDEO;\n    }\n    if (videoError) {\n      return HMSTrackExceptionTrackType.VIDEO;\n    }\n    if (audioError) {\n      return HMSTrackExceptionTrackType.AUDIO;\n    }\n    return HMSTrackExceptionTrackType.AUDIO_VIDEO;\n  }\n\n  private getEmptyTracks(fetchTrackOptions: IFetchAVTrackOptions) {\n    const nativeTracks: MediaStreamTrack[] = [];\n    if (fetchTrackOptions.audio === 'empty') {\n      nativeTracks.push(LocalTrackManager.getEmptyAudioTrack());\n    }\n\n    if (fetchTrackOptions.video === 'empty') {\n      nativeTracks.push(LocalTrackManager.getEmptyVideoTrack());\n    }\n    return nativeTracks;\n  }\n\n  private async updateCurrentLocalTrackSettings(trackSettings: HMSTrackSettings | null) {\n    const localTracks = this.store.getLocalPeerTracks();\n    const videoTrack = localTracks.find(t => t.type === HMSTrackType.VIDEO && t.source === 'regular') as\n      | HMSLocalVideoTrack\n      | undefined;\n    const audioTrack = localTracks.find(t => t.type === HMSTrackType.AUDIO && t.source === 'regular') as\n      | HMSLocalAudioTrack\n      | undefined;\n\n    const screenVideoTrack = localTracks.find(t => t.type === HMSTrackType.VIDEO && t.source === 'screen') as\n      | HMSLocalVideoTrack\n      | undefined;\n\n    if (trackSettings?.video) {\n      await videoTrack?.setSettings(trackSettings.video);\n    }\n\n    if (trackSettings?.audio) {\n      await audioTrack?.setSettings(trackSettings.audio);\n    }\n\n    const screenSettings = this.getScreenshareSettings(true);\n    if (screenSettings?.video) {\n      await screenVideoTrack?.setSettings(screenSettings?.video);\n    }\n\n    return { videoTrack, audioTrack };\n  }\n\n  private getAudioSettings(initialSettings: InitialSettings) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('audio')) {\n      return null;\n    }\n    const localPeer = this.store.getLocalPeer();\n    const audioTrack = localPeer?.audioTrack;\n    // Get device from the tracks already added in preview\n    const audioDeviceId = audioTrack?.settings.deviceId || initialSettings.audioInputDeviceId;\n\n    return new HMSAudioTrackSettingsBuilder()\n      .codec(publishParams.audio.codec as HMSAudioCodec)\n      .maxBitrate(publishParams.audio.bitRate)\n      .deviceId(audioDeviceId || defaultSettings.audioInputDeviceId)\n      .build();\n  }\n\n  private getVideoSettings(initialSettings: InitialSettings) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('video')) {\n      return null;\n    }\n    const localPeer = this.store.getLocalPeer();\n    const videoTrack = localPeer?.videoTrack;\n    // Get device from the tracks already added in preview\n    const videoDeviceId = videoTrack?.settings.deviceId || initialSettings.videoDeviceId;\n    const video = publishParams.video;\n    return new HMSVideoTrackSettingsBuilder()\n      .codec(video.codec as HMSVideoCodec)\n      .maxBitrate(video.bitRate)\n      .maxFramerate(video.frameRate)\n      .setWidth(video.width) // take simulcast width if available\n      .setHeight(video.height) // take simulcast width if available\n      .deviceId(videoDeviceId || defaultSettings.videoDeviceId)\n      .build();\n  }\n\n  private getScreenshareSettings(isVideoOnly = false) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('screen')) {\n      return null;\n    }\n    const screen = publishParams.screen;\n    return {\n      video: new HMSVideoTrackSettingsBuilder()\n        // Don't cap maxBitrate for screenshare.\n        // If publish params doesn't have bitRate value - don't set maxBitrate.\n        .maxBitrate(screen.bitRate, false)\n        .codec(screen.codec as HMSVideoCodec)\n        .maxFramerate(screen.frameRate)\n        .setWidth(screen.width)\n        .setHeight(screen.height)\n        .build(),\n      audio: isVideoOnly ? undefined : new HMSAudioTrackSettingsBuilder().build(),\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  private async getOrDefaultScreenshareConfig(partialConfig?: Partial<HMSScreenShareConfig>) {\n    type RequiredConfig = HMSScreenShareConfig &\n      Required<Omit<HMSScreenShareConfig, 'cropTarget' | 'cropElement' | 'displaySurface'>>;\n    const config: RequiredConfig = Object.assign(\n      {\n        videoOnly: false,\n        audioOnly: false,\n        forceCurrentTab: false,\n        preferCurrentTab: false,\n        selfBrowserSurface: 'exclude', // don't give self tab in options\n        surfaceSwitching: 'include', // give option to switch tabs while sharing\n        systemAudio: 'exclude', // system audio share leads to echo in windows\n        displaySurface: 'monitor',\n      },\n      partialConfig || {},\n    );\n    if (config.forceCurrentTab) {\n      config.videoOnly = true; // there will be echo otherwise\n      config.preferCurrentTab = true;\n      config.selfBrowserSurface = 'include';\n      config.surfaceSwitching = 'exclude';\n    }\n    if (config.preferCurrentTab) {\n      config.selfBrowserSurface = 'include';\n      config.displaySurface = undefined; // so the default selected is the current tab\n    }\n    // @ts-ignore\n    if (config.cropElement && window.CropTarget?.fromElement) {\n      // @ts-ignore\n      config.cropTarget = await window.CropTarget.fromElement(config.cropElement);\n    }\n    return config;\n  }\n\n  private createHMSLocalTracks(\n    nativeTracks: MediaStreamTrack[],\n    settings: HMSTrackSettings,\n    localStream?: HMSLocalStream,\n  ) {\n    const nativeVideoTrack = nativeTracks.find(track => track.kind === 'video');\n    const nativeAudioTrack = nativeTracks.find(track => track.kind === 'audio');\n    if (localStream) {\n      nativeTracks.forEach(track => localStream?.nativeStream.addTrack(track));\n    } else {\n      localStream = new HMSLocalStream(new MediaStream(nativeTracks));\n    }\n\n    const tracks: Array<HMSLocalTrack> = [];\n    if (nativeAudioTrack && settings?.audio) {\n      const audioTrack = new HMSLocalAudioTrack(\n        localStream,\n        nativeAudioTrack,\n        'regular',\n        this.eventBus,\n        settings.audio,\n        this.store.getRoom(),\n      );\n      tracks.push(audioTrack);\n    }\n\n    if (nativeVideoTrack && settings?.video) {\n      const videoTrack = new HMSLocalVideoTrack(\n        localStream,\n        nativeVideoTrack,\n        'regular',\n        this.eventBus,\n        settings.video,\n        this.store.getRoom(),\n      );\n      videoTrack.setSimulcastDefinitons(\n        this.store.getSimulcastDefinitionsForPeer(this.store.getLocalPeer()!, 'regular'),\n      );\n      tracks.push(videoTrack);\n    }\n    return tracks;\n  }\n}\n", "import HMSLogger from '../utils/logger';\n\nexport type TimedEventName = 'init' | 'websocket-open' | 'on-policy-change' | 'local-tracks' | 'preview' | 'join';\n\nexport enum TimedEvent {\n  INIT = 'init_response_time',\n  WEBSOCKET_CONNECT = 'ws_connect_time',\n  ON_POLICY_CHANGE = 'on_policy_change_time',\n  LOCAL_AUDIO_TRACK = 'local_audio_track_time',\n  LOCAL_VIDEO_TRACK = 'local_video_track_time',\n  JOIN = 'join_time',\n  PREVIEW = 'preview_time',\n  PEER_LIST = 'peer_list_time',\n  ROOM_STATE = 'room_state_time',\n  JOIN_RESPONSE = 'join_response_time',\n  GET_TOKEN = 'GET_TOKEN',\n}\n\nconst defaultEventNames = [\n  TimedEvent.INIT,\n  TimedEvent.WEBSOCKET_CONNECT,\n  TimedEvent.ON_POLICY_CHANGE,\n  TimedEvent.LOCAL_AUDIO_TRACK,\n  TimedEvent.LOCAL_VIDEO_TRACK,\n  TimedEvent.PEER_LIST,\n  TimedEvent.ROOM_STATE,\n  TimedEvent.JOIN_RESPONSE,\n];\n\nexport class AnalyticsTimer {\n  private eventPerformanceMeasures: Partial<Record<TimedEvent, PerformanceMeasure>> = {};\n\n  start(eventName: TimedEvent) {\n    performance.mark(eventName);\n  }\n\n  end(eventName: TimedEvent) {\n    try {\n      this.eventPerformanceMeasures[eventName] = performance.measure(eventName, eventName);\n      HMSLogger.d('[HMSPerformanceTiming]', eventName, this.eventPerformanceMeasures[eventName]?.duration);\n    } catch (error) {\n      HMSLogger.w('[AnalyticsTimer]', `Error in measuring performance for event ${eventName}`, { error });\n    }\n  }\n\n  getTimeTaken(eventName: TimedEvent) {\n    return this.eventPerformanceMeasures[eventName]?.duration;\n  }\n\n  getTimes(...eventNames: TimedEvent[]) {\n    return [...defaultEventNames, ...eventNames].reduce(\n      (timeObject, eventName) => ({ ...timeObject, [eventName]: this.getTimeTaken(eventName) }),\n      {},\n    );\n  }\n\n  cleanup() {\n    this.eventPerformanceMeasures = {};\n  }\n}\n", "export const RENEGOTIATION_CALLBACK_ID = 'renegotiation-callback-id';\nexport const API_DATA_CHANNEL = 'ion-sfu';\nexport const ANALYTICS_BUFFER_SIZE = 100;\n\n/**\n * Maximum time that transport-layer will try\n * before giving up on the connection and returning a failure\n *\n * Refer https://100ms.atlassian.net/browse/HMS-2369\n */\nexport const MAX_TRANSPORT_RETRY_TIME = 60_000;\n\nexport const DEFAULT_SIGNAL_PING_TIMEOUT = 12_000;\nexport const DEFAULT_SIGNAL_PING_INTERVAL = 3_000;\nexport const PONG_RESPONSE_TIMES_SIZE = 5;\n\nexport const SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID = 'SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID';\nexport const SUBSCRIBE_TIMEOUT = 60_000;\n\nexport const ICE_DISCONNECTION_TIMEOUT = 5_000;\n\nexport const RTC_STATS_MONITOR_INTERVAL = 1_000;\n\nexport const MAINTAIN_TRACK_HISTORY = false;\n\nexport const CLIENT_ANAYLTICS_PROD_ENDPOINT = 'https://event.100ms.live/v2/client/report';\nexport const CLIENT_ANAYLTICS_QA_ENDPOINT = 'https://event-nonprod.100ms.live/v2/client/report';\nexport const CLIENT_ANAYLTICS_STORAGE_LIMIT = 100;\n\nexport const PUBLISH_STATS_SAMPLE_WINDOW = 30;\nexport const PUBLISH_STATS_PUSH_INTERVAL = 300;\n\nexport const SUBSCRIBE_STATS_SAMPLE_WINDOW = 10;\nexport const SUBSCRIBE_STATS_PUSH_INTERVAL = 60;\n\nexport const MAX_SAFE_INTEGER = Math.pow(2, 31) - 1;\n\nexport const HMSEvents = {\n  DEVICE_CHANGE: 'device-change',\n  LOCAL_AUDIO_ENABLED: 'local-audio-enabled',\n  LOCAL_VIDEO_ENABLED: 'local-video-enabled',\n  LOCAL_VIDEO_UNMUTED_NATIVELY: 'local-video-unmuted-natively',\n  LOCAL_AUDIO_UNMUTED_NATIVELY: 'local-audio-unmuted-natively',\n  STATS_UPDATE: 'stats-update', // emitted by HMSWebrtcInternals\n  RTC_STATS_UPDATE: 'rtc-stats-update', // emitted by RTCStatsMonitor\n  TRACK_DEGRADED: 'track-degraded',\n  TRACK_RESTORED: 'track-restored',\n  TRACK_AUDIO_LEVEL_UPDATE: 'track-audio-level-update',\n  LOCAL_AUDIO_SILENCE: 'local-audio-silence',\n  ANALYTICS: 'analytics',\n  AUDIO_PLUGIN_FAILED: 'audio-plugin-failed',\n  POLICY_CHANGE: 'policy-change',\n  LOCAL_ROLE_UPDATE: 'local-role-update',\n  AUDIO_TRACK_UPDATE: 'audio-track-update',\n  AUDIO_TRACK_ADDED: 'audio-track-added',\n  AUDIO_TRACK_REMOVED: 'audio-track-removed',\n  AUTOPLAY_ERROR: 'autoplay-error',\n  LEAVE: 'leave',\n  ERROR: 'error',\n};\n\nexport const PROTOCOL_VERSION = '2.5';\n\nexport const PROTOCOL_SPEC = '20250115';\n\nexport const HAND_RAISE_GROUP_NAME = '_handraise';\n\nexport const DEFAULT_PLAYLIST_VIDEO_BITRATE = 1000;\n\nexport const DEFAULT_PLAYLIST_AUDIO_BITRATE = 64;\n\nexport const WHITEBOARD_ORIGIN = 'https://whiteboard.100ms.live';\n\nexport const WHITEBOARD_QA_ORIGIN = 'https://whiteboard-qa.100ms.live';\n\nexport enum LEAVE_REASON {\n  USER_REQUEST = 'user request',\n  SDK_REQUEST = 'sdk request',\n}\n", "import { HMSVideoTrack } from './HMSVideoTrack';\nimport { VideoElementManager } from './VideoElementManager';\nimport { VideoTrackLayerUpdate } from '../../connection/channel-messages';\nimport {\n  HMSPreferredSimulcastLayer,\n  HMSSimulcastLayer,\n  HMSSimulcastLayerDefinition,\n} from '../../interfaces/simulcast-layers';\nimport { MAINTAIN_TRACK_HISTORY } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport { isEmptyTrack } from '../../utils/track';\nimport { HMSRemoteStream } from '../streams';\n\nexport class HMSRemoteVideoTrack extends HMSVideoTrack {\n  private _degraded = false;\n  private _degradedAt: Date | null = null;\n  private _layerDefinitions: HMSSimulcastLayerDefinition[] = [];\n  private history = new TrackHistory();\n  private preferredLayer: HMSPreferredSimulcastLayer = HMSSimulcastLayer.HIGH;\n  private bizTrackId!: string;\n  private disableNoneLayerRequest = false;\n\n  constructor(stream: HMSRemoteStream, track: MediaStreamTrack, source?: string, disableNoneLayerRequest?: boolean) {\n    super(stream, track, source);\n    this.disableNoneLayerRequest = !!disableNoneLayerRequest;\n    this.setVideoHandler(new VideoElementManager(this));\n  }\n\n  setTrackId(trackId: string) {\n    this.bizTrackId = trackId;\n  }\n\n  get trackId(): string {\n    return this.bizTrackId || super.trackId;\n  }\n\n  public get degraded() {\n    return this._degraded;\n  }\n\n  public get degradedAt() {\n    return this._degradedAt;\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n\n    super.setEnabled(value);\n    this.videoHandler.updateSinks(true);\n  }\n\n  async setPreferredLayer(layer: HMSPreferredSimulcastLayer) {\n    //@ts-ignore\n    if (layer === HMSSimulcastLayer.NONE) {\n      HMSLogger.w(`layer ${HMSSimulcastLayer.NONE} will be ignored`);\n      return;\n    }\n    this.preferredLayer = layer;\n    if (!this.shouldSendVideoLayer(layer, 'preferLayer')) {\n      return;\n    }\n    if (!this.hasSinks()) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier}\n        streamId=${this.stream.id} \n        trackId=${this.trackId}\n        saving ${layer}, source=${this.source}\n        Track does not have any sink`,\n      );\n      return;\n    }\n    await this.requestLayer(layer, 'preferLayer');\n    this.pushInHistory(`uiPreferLayer-${layer}`);\n  }\n\n  /**\n   * @deprecated\n   * @returns {HMSSimulcastLayer}\n   */\n  getSimulcastLayer() {\n    return (this.stream as HMSRemoteStream).getSimulcastLayer();\n  }\n\n  getLayer() {\n    return (this.stream as HMSRemoteStream).getVideoLayer();\n  }\n\n  getPreferredLayer() {\n    return this.preferredLayer;\n  }\n\n  getPreferredLayerDefinition() {\n    return this._layerDefinitions.find(layer => layer.layer === this.preferredLayer);\n  }\n\n  replaceTrack(track: HMSRemoteVideoTrack) {\n    this.nativeTrack = track.nativeTrack;\n    if (track.transceiver) {\n      this.transceiver = track.transceiver;\n      // replace dummy streamId with actual streamId retaining all other properties\n      this.stream.updateId(track.stream.id);\n    }\n    this.videoHandler.updateSinks();\n  }\n\n  async addSink(videoElement: HTMLVideoElement, shouldSendVideoLayer = true) {\n    // if the native track is empty track, just request the preferred layer else attach it\n    if (isEmptyTrack(this.nativeTrack)) {\n      await this.requestLayer(this.preferredLayer, 'addSink');\n    } else {\n      super.addSink(videoElement);\n      if (shouldSendVideoLayer) {\n        await this.updateLayer('addSink');\n      }\n    }\n    this.pushInHistory(`uiSetLayer-high`);\n  }\n\n  async removeSink(videoElement: HTMLVideoElement, shouldSendVideoLayer = true) {\n    super.removeSink(videoElement);\n    if (shouldSendVideoLayer) {\n      await this.updateLayer('removeSink');\n    }\n    this._degraded = false;\n    this.pushInHistory('uiSetLayer-none');\n  }\n\n  /**\n   * Method to get available simulcast definitions for the track\n   * @returns {HMSSimulcastLayerDefinition[]}\n   */\n  getSimulcastDefinitions() {\n    // send a clone to store as it will freeze the object from further updates\n    return [...this._layerDefinitions];\n  }\n\n  /** @internal */\n  setSimulcastDefinitons(definitions: HMSSimulcastLayerDefinition[]) {\n    this._layerDefinitions = definitions;\n  }\n\n  /**\n   * @internal\n   * SFU will change track's layer(degrade or restore) and tell the sdk to update\n   * it locally.\n   * @returns {boolean} isDegraded - returns true if degraded\n   * */\n  setLayerFromServer(layerUpdate: VideoTrackLayerUpdate) {\n    this._degraded = this.getDegradationValue(layerUpdate);\n    this._degradedAt = this._degraded ? new Date() : this._degradedAt;\n    const currentLayer = layerUpdate.current_layer;\n    HMSLogger.d(\n      `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id} \n      trackId=${this.trackId}\n      layer update from sfu\n      currLayer=${layerUpdate.current_layer}\n      preferredLayer=${layerUpdate.expected_layer}\n      sub_degraded=${layerUpdate.subscriber_degraded}\n      pub_degraded=${layerUpdate.publisher_degraded}\n      isDegraded=${this._degraded}`,\n    );\n    // No need to send preferLayer update, as server has done it already\n    (this.stream as HMSRemoteStream).setVideoLayerLocally(currentLayer, this.logIdentifier, 'setLayerFromServer');\n    this.pushInHistory(`sfuLayerUpdate-${currentLayer}`);\n    return this._degraded;\n  }\n\n  private getDegradationValue(layerUpdate: VideoTrackLayerUpdate) {\n    return (\n      this.enabled &&\n      (layerUpdate.publisher_degraded || layerUpdate.subscriber_degraded) &&\n      layerUpdate.current_layer === HMSSimulcastLayer.NONE\n    );\n  }\n\n  private async updateLayer(source: string) {\n    let newLayer: HMSSimulcastLayer = this.preferredLayer;\n    if (this.enabled && this.hasSinks()) {\n      newLayer = this.preferredLayer;\n      // send none only when the flag is not set\n    } else if (!this.disableNoneLayerRequest) {\n      newLayer = HMSSimulcastLayer.NONE;\n    }\n    if (!this.shouldSendVideoLayer(newLayer, source)) {\n      return;\n    }\n    await this.requestLayer(newLayer, source);\n  }\n\n  private pushInHistory(action: string) {\n    if (MAINTAIN_TRACK_HISTORY) {\n      this.history.push({ name: action, layer: this.getLayer(), degraded: this.degraded });\n    }\n  }\n\n  private async requestLayer(layer: HMSSimulcastLayer, source: string) {\n    try {\n      const response = await (this.stream as HMSRemoteStream).setVideoLayer(\n        layer,\n        this.trackId,\n        this.logIdentifier,\n        source,\n      );\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id}\n      trackId=${this.trackId}\n      Requested layer ${layer}, source=${source}`,\n      );\n      return response;\n    } catch (error) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id}\n      trackId=${this.trackId}\n      Failed to set layer ${layer}, source=${source}\n      error=${(error as Error).message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * given the new layer, figure out if the update should be sent to server or not.\n   * It won't be sent if the track is already on the targetLayer. If the track is\n   * degraded though and the target layer is none, update will be sent.\n   * If there are tracks degraded on a page and user paginates away to other page,\n   * it's necessary to send the layer none message to SFU so it knows that the app\n   * is no longer interested in the track and doesn't recover degraded tracks on non\n   * visible pages.\n   *\n   * TODO: if track is degraded, send the update if target layer is lower than current layer\n   * @private\n   */\n  private shouldSendVideoLayer(targetLayer: HMSSimulcastLayer, source: string) {\n    const currLayer = this.getLayer();\n    if (this.degraded && targetLayer === HMSSimulcastLayer.NONE) {\n      return true;\n    }\n    if (currLayer === targetLayer) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier}`,\n        `Not sending update, already on layer ${targetLayer}, source=${source}`,\n      );\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * to store history of everything that happened to a remote track which decides\n * it's current layer and degraded status.\n */\nclass TrackHistory {\n  history: Record<string, any>[] = [];\n\n  push(action: Record<string, any>) {\n    action.time = new Date().toISOString().split('T')[1];\n    this.history.push(action);\n  }\n}\n", "import { HMSMediaStream } from './HMSMediaStream';\nimport HMSPublishConnection from '../../connection/publish/publishConnection';\nimport { SimulcastLayer } from '../../interfaces';\nimport HMSLogger from '../../utils/logger';\nimport { isNode } from '../../utils/support';\nimport { HMSAudioTrackSettings, HMSVideoTrackSettings } from '../settings';\nimport { HMSLocalTrack, HMSLocalVideoTrack } from '../tracks';\n\nexport class HMSLocalStream extends HMSMediaStream {\n  /** Connection set when publish is called for the first track */\n  private readonly TAG = '[HMSLocalStream]';\n  private connection: HMSPublishConnection | null = null;\n\n  setConnection(connection: HMSPublishConnection) {\n    this.connection = connection;\n  }\n\n  addTransceiver(track: HMSLocalTrack, simulcastLayers: SimulcastLayer[]) {\n    const transceiver = this.connection!.addTransceiver(track.getTrackBeingSent(), {\n      streams: [this.nativeStream],\n      direction: 'sendonly',\n      sendEncodings: this.getTrackEncodings(track, simulcastLayers),\n    });\n    this.setPreferredCodec(transceiver, track.nativeTrack.kind);\n    track.transceiver = transceiver;\n    return transceiver;\n  }\n\n  async setMaxBitrateAndFramerate(\n    track: HMSLocalTrack,\n    updatedSettings?: HMSAudioTrackSettings | HMSVideoTrackSettings,\n  ): Promise<void> {\n    await this.connection?.setMaxBitrateAndFramerate(track, updatedSettings);\n  }\n\n  // @ts-ignore\n  setPreferredCodec(_transceiver: RTCRtpTransceiver, _kind: string) {\n    // TODO: Some browsers don't support setCodecPreferences, resort to SDPMunging?\n  }\n\n  replaceStreamTrack(track: MediaStreamTrack, withTrack: MediaStreamTrack) {\n    this.nativeStream.addTrack(withTrack);\n    this.nativeStream.removeTrack(track);\n  }\n\n  removeSender(track: HMSLocalTrack) {\n    if (!this.connection || this.connection.connectionState === 'closed') {\n      HMSLogger.d(this.TAG, `publish connection is not initialised or closed`);\n      return;\n    }\n    const sender = track.transceiver?.sender;\n    if (!sender) {\n      HMSLogger.w(this.TAG, `No sender found for trackId=${track.trackId}`);\n      return;\n    }\n    this.connection?.removeTrack(sender);\n    const toRemoveLocalTrackIdx = this.tracks.indexOf(track);\n    if (toRemoveLocalTrackIdx !== -1) {\n      this.tracks.splice(toRemoveLocalTrackIdx, 1);\n    } else {\n      HMSLogger.w(this.TAG, `Cannot find ${track.trackId} in locally stored tracks`);\n    }\n  }\n\n  private getTrackEncodings(track: HMSLocalTrack, simulcastLayers: SimulcastLayer[]) {\n    const trackEncodings: RTCRtpEncodingParameters[] = [];\n    if (track instanceof HMSLocalVideoTrack) {\n      if (simulcastLayers.length > 0) {\n        HMSLogger.d(this.TAG, 'Simulcast enabled with layers', simulcastLayers);\n        trackEncodings.push(...simulcastLayers);\n      } else {\n        const encodings: RTCRtpEncodingParameters = { active: this.nativeStream.active };\n        if (track.settings.maxBitrate && !isNode) {\n          encodings.maxBitrate = track.settings.maxBitrate;\n        }\n        trackEncodings.push(encodings);\n      }\n    }\n    return trackEncodings;\n  }\n}\n", "import { HMSMediaStream } from './HMSMediaStream';\nimport HMSSubscribeConnection from '../../connection/subscribe/subscribeConnection';\nimport { HMSSimulcastLayer } from '../../interfaces';\nimport HMSLogger from '../../utils/logger';\n\n/** @internal */\nexport class HMSRemoteStream extends HMSMediaStream {\n  private readonly connection: HMSSubscribeConnection;\n  private audio = true;\n  private video = HMSSimulcastLayer.NONE;\n\n  constructor(nativeStream: MediaStream, connection: HMSSubscribeConnection) {\n    super(nativeStream);\n    this.connection = connection;\n  }\n\n  async setAudio(enabled: boolean, trackId: string, identifier?: string) {\n    if (this.audio === enabled) {\n      return;\n    }\n\n    this.audio = enabled;\n    HMSLogger.d(\n      `[Remote stream] ${identifier || ''} \n    streamId=${this.id}\n    trackId=${trackId}\n    subscribing audio - ${this.audio}`,\n    );\n    await this.connection.sendOverApiDataChannelWithResponse({\n      params: {\n        subscribed: this.audio,\n        track_id: trackId,\n      },\n      method: 'prefer-audio-track-state',\n    });\n  }\n\n  /**\n   * Sets the video layer after receiving new state from SFU. This is used when server side subscribe\n   * degradation is ON.\n   * @param layer is simulcast layer to be set\n   * @param identifier is stream identifier to be printed in logs\n   */\n  setVideoLayerLocally(layer: HMSSimulcastLayer, identifier: string, source: string) {\n    this.video = layer;\n    HMSLogger.d(`[Remote stream] ${identifier}\n    streamId=${this.id}\n    source: ${source}\n    Setting layer field to=${layer}`);\n  }\n\n  /**\n   * Sets the video layer and updates the track state to SFU via api datachannel. This is used when client\n   * side subscribe degradation is ON or client unsubscribes the current track.\n   * @param layer is simulcast layer to be set\n   * @param identifier is stream identifier to be printed in logs\n   */\n  setVideoLayer(layer: HMSSimulcastLayer, trackId: string, identifier: string, source: string) {\n    HMSLogger.d(\n      `[Remote stream] ${identifier} \n      streamId=${this.id}\n      trackId=${trackId} \n      source: ${source} request ${layer} layer`,\n    );\n    this.setVideoLayerLocally(layer, identifier, source);\n    return this.connection.sendOverApiDataChannelWithResponse({\n      params: {\n        max_spatial_layer: this.video,\n        track_id: trackId,\n      },\n      method: 'prefer-video-track-state',\n    });\n  }\n\n  /**\n   * @deprecated\n   * @returns {HMSSimulcastLayer}\n   */\n  getSimulcastLayer() {\n    return this.video;\n  }\n\n  getVideoLayer() {\n    return this.video;\n  }\n\n  isAudioSubscribed() {\n    return this.audio;\n  }\n}\n", "import AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { EventBus } from '../events/EventBus';\nimport { RID } from '../interfaces';\nimport {\n  HMSLocalTrackStats,\n  HMSPeerStats,\n  HMSTrackStats,\n  MissingInboundStats,\n  PeerConnectionType,\n  RTCRemoteInboundRtpStreamStats,\n} from '../interfaces/webrtc-stats';\nimport { HMSLocalTrack, HMSRemoteTrack } from '../media/tracks';\nimport HMSLogger from '../utils/logger';\nimport { isPresent } from '../utils/validations';\n\nexport const getLocalTrackStats = async (\n  eventBus: EventBus,\n  track: HMSLocalTrack,\n  peerName?: string,\n  prevTrackStats?: Record<string, HMSTrackStats>,\n): Promise<Record<string, HMSTrackStats> | undefined> => {\n  let trackReport: RTCStatsReport | undefined;\n  const trackStats: Record<string, HMSTrackStats> = {};\n  if (!track.transceiver?.sender.track) {\n    return;\n  }\n  try {\n    trackReport = await track.transceiver.sender.getStats();\n    const mimeTypes: { [key: string]: string } = {}; // codecId -> mimeType\n    const outbound: Record<string, RTCOutboundRtpStreamStats> = {};\n    const inbound: Record<string, RTCInboundRtpStreamStats & MissingInboundStats> = {};\n    trackReport?.forEach(stat => {\n      switch (stat.type) {\n        case 'outbound-rtp':\n          outbound[stat.id] = stat;\n          break;\n        case 'remote-inbound-rtp':\n          inbound[stat.ssrc] = stat;\n          break;\n        case 'codec':\n          mimeTypes[stat.id] = stat.mimeType;\n          break;\n        default:\n          break;\n      }\n    });\n\n    Object.keys({ ...outbound }).forEach(stat => {\n      const codecId = outbound[stat]?.codecId;\n      const mimeType = codecId ? mimeTypes[codecId] : undefined;\n      let codec: string | undefined;\n      if (mimeType) {\n        codec = mimeType.substring(mimeType.indexOf('/') + 1);\n      }\n      const out = { ...outbound[stat], rid: (outbound[stat] as HMSLocalTrackStats)?.rid as RID | undefined };\n      const inStats = inbound[out.ssrc];\n      trackStats[stat] = {\n        ...out,\n        bitrate: computeBitrate('bytesSent', out, prevTrackStats?.[stat]),\n        packetsLost: inStats?.packetsLost,\n        jitter: inStats?.jitter,\n        roundTripTime: inStats?.roundTripTime,\n        totalRoundTripTime: inStats?.totalRoundTripTime,\n        peerName,\n        peerID: track.peerId,\n        enabled: track.enabled,\n        codec,\n      };\n    });\n  } catch (err: any) {\n    eventBus.analytics.publish(\n      AnalyticsEventFactory.rtcStatsFailed(\n        ErrorFactory.WebrtcErrors.StatsFailed(\n          HMSAction.TRACK,\n          `Error getting local track stats ${track.trackId} - ${err.message}`,\n        ),\n      ),\n    );\n    HMSLogger.w('[HMSWebrtcStats]', 'Error in getting local track stats', track, err, (err as Error).name);\n  }\n  return trackStats;\n};\n\nexport const getTrackStats = async (\n  eventBus: EventBus,\n  track: HMSRemoteTrack,\n  peerName?: string,\n  prevTrackStats?: HMSTrackStats,\n): Promise<HMSTrackStats | undefined> => {\n  let trackReport: RTCStatsReport | undefined;\n  try {\n    trackReport = await track.transceiver?.receiver.getStats();\n  } catch (err: any) {\n    eventBus.analytics.publish(\n      AnalyticsEventFactory.rtcStatsFailed(\n        ErrorFactory.WebrtcErrors.StatsFailed(\n          HMSAction.TRACK,\n          `Error getting remote track stats ${track.trackId} - ${err.message}`,\n        ),\n      ),\n    );\n    HMSLogger.w('[HMSWebrtcStats]', 'Error in getting remote track stats', track, err);\n  }\n  const trackStats = getRelevantStatsFromTrackReport(trackReport);\n\n  const bitrate = computeBitrate('bytesReceived', trackStats, prevTrackStats);\n\n  const packetsLostRate = computeStatRate('packetsLost', trackStats, prevTrackStats);\n\n  if (trackStats?.remote) {\n    Object.assign(trackStats.remote, {\n      packetsLostRate: computeStatRate('packetsLost', trackStats.remote, prevTrackStats?.remote),\n    });\n  }\n\n  return (\n    trackStats && {\n      ...trackStats,\n      bitrate,\n      packetsLostRate,\n      peerID: track.peerId,\n      enabled: track.enabled,\n      peerName,\n      codec: trackStats.codec,\n    }\n  );\n};\n\nconst getRelevantStatsFromTrackReport = (trackReport?: RTCStatsReport) => {\n  let streamStats: RTCInboundRtpStreamStats | (RTCOutboundRtpStreamStats & { rid?: RID }) | undefined;\n  // Valid by Webrtc spec, not in TS\n  // let remoteStreamStats: RTCRemoteInboundRtpStreamStats | RTCRemoteOutboundRtpStreamStats;\n  let remoteStreamStats: RTCRemoteInboundRtpStreamStats | undefined;\n\n  const mimeTypes: { [key: string]: string } = {}; // codecId -> mimeType\n  trackReport?.forEach(stat => {\n    switch (stat.type) {\n      case 'inbound-rtp':\n        streamStats = stat;\n        break;\n      case 'outbound-rtp':\n        streamStats = stat;\n        break;\n      case 'remote-inbound-rtp':\n        remoteStreamStats = stat;\n        break;\n      case 'codec':\n        mimeTypes[stat.id] = stat.mimeType;\n        break;\n      default:\n        break;\n    }\n  });\n\n  const mimeType = streamStats?.codecId ? mimeTypes[streamStats.codecId] : undefined;\n  let codec: string | undefined;\n  if (mimeType) {\n    codec = mimeType.substring(mimeType.indexOf('/') + 1);\n  }\n\n  return (\n    streamStats &&\n    Object.assign(streamStats, {\n      remote: remoteStreamStats,\n      codec: codec,\n    })\n  );\n};\n\nexport const getLocalPeerStatsFromReport = (\n  type: PeerConnectionType,\n  report?: RTCStatsReport,\n  prevStats?: HMSPeerStats,\n): (RTCIceCandidatePairStats & { bitrate: number }) | undefined => {\n  const activeCandidatePair = getActiveCandidatePairFromReport(report);\n  const bitrate = computeBitrate(\n    (type === 'publish' ? 'bytesSent' : 'bytesReceived') as any,\n    activeCandidatePair,\n    prevStats && prevStats[type],\n  );\n\n  return activeCandidatePair && Object.assign(activeCandidatePair, { bitrate });\n};\n\nexport const getActiveCandidatePairFromReport = (report?: RTCStatsReport): RTCIceCandidatePairStats | undefined => {\n  let activeCandidatePair: RTCIceCandidatePairStats | undefined;\n  report?.forEach(stat => {\n    if (stat.type === 'transport') {\n      // TS doesn't have correct types for RTCStatsReports\n      // @ts-expect-error\n      activeCandidatePair = report?.get(stat.selectedCandidatePairId);\n    }\n  });\n\n  // Fallback for Firefox.\n  if (!activeCandidatePair) {\n    report?.forEach(stat => {\n      if (stat.type === 'candidate-pair' && stat.selected) {\n        activeCandidatePair = stat;\n      }\n    });\n  }\n\n  return activeCandidatePair;\n};\n\nexport const getPacketsLostAndJitterFromReport = (report?: RTCStatsReport): { packetsLost: number; jitter: number } => {\n  const result = { packetsLost: 0, jitter: 0 };\n  report?.forEach(stat => {\n    if (stat.packetsLost) {\n      result.packetsLost += stat.packetsLost;\n    }\n    if (stat.jitter > result.jitter) {\n      result.jitter = stat.jitter;\n    }\n  });\n\n  return result;\n};\n\nexport const union = <T>(arr1: T[], arr2: T[]): T[] => {\n  return Array.from(new Set(arr1.concat(arr2)));\n};\n\n/**\n * Ref: https://github.dev/peermetrics/webrtc-stats/blob/b5c1fed68325543e6f563c6d3f4450a4b51e12b7/src/utils.ts#L62\n */\nexport const computeBitrate = <T extends HMSTrackStats>(\n  statName: keyof T,\n  newReport?: Partial<T>,\n  oldReport?: Partial<T>,\n): number => computeStatRate(statName, newReport, oldReport) * 8; // Bytes to bits\n\nconst computeStatRate = <T extends HMSTrackStats>(\n  statName: keyof T,\n  newReport?: Partial<T>,\n  oldReport?: Partial<T>,\n): number => {\n  const newVal = newReport && newReport[statName];\n  const oldVal = oldReport ? oldReport[statName] : null;\n  const conditions = [newReport, oldReport, isPresent(newVal), isPresent(oldVal)];\n  if (conditions.every(condition => !!condition)) {\n    // Type not null checked in `isPresent`\n    // * 1000 - ms to s\n    return (\n      computeNumberRate(\n        newVal as unknown as number,\n        oldVal as unknown as number,\n        newReport?.timestamp,\n        oldReport?.timestamp,\n      ) * 1000\n    );\n  } else {\n    return 0;\n  }\n};\n\nexport const computeNumberRate = (newVal?: number, oldVal?: number, newTimestamp?: number, oldTimestamp?: number) => {\n  if (isPresent(newVal) && isPresent(oldVal) && newTimestamp && oldTimestamp) {\n    return ((newVal as number) - (oldVal as number)) / (newTimestamp - oldTimestamp);\n  } else {\n    return 0;\n  }\n};\n", "import {\n  computeNumberRate,\n  getLocalPeerStatsFromReport,\n  getLocalTrackStats,\n  getPacketsLostAndJitterFromReport,\n  getTrackStats,\n  union,\n} from './utils';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { EventBus } from '../events/EventBus';\nimport { HMSPeerStats, HMSTrackStats } from '../interfaces/webrtc-stats';\nimport { HMSLocalTrack, HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack } from '../media/tracks';\nimport { Store } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\n\nexport class HMSWebrtcStats {\n  private readonly TAG = '[HMSWebrtcStats]';\n  private localPeerID?: string;\n  private peerStats: Record<string, HMSPeerStats> = {};\n  private remoteTrackStats: Record<string, HMSTrackStats> = {};\n  private localTrackStats: Record<string, Record<string, HMSTrackStats>> = {};\n\n  /**\n   * Removed localPeerID check in other places as it will be present before\n   * this is initialized\n   */\n  constructor(\n    private store: Store,\n    private readonly eventBus: EventBus,\n    private publishConnection?: RTCPeerConnection,\n    private subscribeConnection?: RTCPeerConnection,\n  ) {\n    this.localPeerID = this.store.getLocalPeer()?.peerId;\n  }\n\n  setPeerConnections({ publish, subscribe }: { publish?: RTCPeerConnection; subscribe?: RTCPeerConnection }) {\n    this.publishConnection = publish;\n    this.subscribeConnection = subscribe;\n  }\n\n  getPublishPeerConnection() {\n    return this.publishConnection;\n  }\n\n  getSubscribePeerConnection() {\n    return this.subscribeConnection;\n  }\n\n  getLocalPeerStats = (): HMSPeerStats | undefined => {\n    return this.peerStats[this.localPeerID!];\n  };\n\n  getRemoteTrackStats = (trackId: string): HMSTrackStats | undefined => {\n    return this.remoteTrackStats[trackId];\n  };\n\n  getAllRemoteTracksStats = () => {\n    return this.remoteTrackStats;\n  };\n\n  getLocalTrackStats = () => {\n    return this.localTrackStats;\n  };\n\n  /**\n   * @internal\n   */\n  updateStats = async () => {\n    await this.updateLocalPeerStats();\n    await this.updateLocalTrackStats();\n    await this.updateRemoteTrackStats();\n  };\n\n  private updateLocalPeerStats = async () => {\n    const prevLocalPeerStats = this.getLocalPeerStats();\n    let publishReport: RTCStatsReport | undefined;\n    try {\n      publishReport = await this.publishConnection?.getStats();\n    } catch (err: any) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.rtcStatsFailed(ErrorFactory.WebrtcErrors.StatsFailed(HMSAction.PUBLISH, err.message)),\n      );\n      HMSLogger.w(this.TAG, 'Error in getting publish stats', err);\n    }\n    const publishStats: HMSPeerStats['publish'] | undefined =\n      publishReport && getLocalPeerStatsFromReport('publish', publishReport, prevLocalPeerStats);\n    let subscribeReport: RTCStatsReport | undefined;\n    try {\n      subscribeReport = await this.subscribeConnection?.getStats();\n    } catch (err: any) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.rtcStatsFailed(ErrorFactory.WebrtcErrors.StatsFailed(HMSAction.SUBSCRIBE, err.message)),\n      );\n      HMSLogger.w(this.TAG, 'Error in getting subscribe stats', err);\n    }\n    const baseSubscribeStats =\n      subscribeReport && getLocalPeerStatsFromReport('subscribe', subscribeReport, prevLocalPeerStats);\n    const { packetsLost, jitter } = getPacketsLostAndJitterFromReport(subscribeReport);\n    const packetsLostRate = computeNumberRate(\n      packetsLost,\n      prevLocalPeerStats?.subscribe?.packetsLost,\n      baseSubscribeStats?.timestamp,\n      prevLocalPeerStats?.subscribe?.timestamp,\n    );\n\n    const subscribeStats: HMSPeerStats['subscribe'] =\n      baseSubscribeStats && Object.assign(baseSubscribeStats, { packetsLostRate, jitter, packetsLost });\n\n    this.peerStats[this.localPeerID!] = { publish: publishStats, subscribe: subscribeStats };\n  };\n\n  private updateRemoteTrackStats = async () => {\n    const tracks = Array.from(this.store.getTracksMap().values()).filter(\n      track => track instanceof HMSRemoteVideoTrack || track instanceof HMSRemoteAudioTrack,\n    );\n    const trackIds = tracks.map(track => track.trackId);\n    Object.keys(this.remoteTrackStats).forEach(trackId => {\n      if (!trackIds.includes(trackId)) {\n        delete this.remoteTrackStats[trackId];\n      }\n    });\n    for (const track of tracks) {\n      const peerName = track.peerId && this.store.getPeerById(track.peerId)?.name;\n      const prevTrackStats = this.getRemoteTrackStats(track.trackId);\n      const trackStats = await getTrackStats(this.eventBus, track as HMSRemoteTrack, peerName, prevTrackStats);\n      if (trackStats) {\n        this.remoteTrackStats[track.trackId] = trackStats;\n      }\n    }\n  };\n\n  private updateLocalTrackStats = async () => {\n    const tracks = this.store.getLocalPeerTracks().reduce<Record<string, HMSLocalTrack>>((res, track) => {\n      res[track.getTrackIDBeingSent()] = track;\n      return res;\n    }, {});\n    const trackIDs = union(Object.keys(this.localTrackStats), Object.keys(tracks));\n    for (const trackID of trackIDs) {\n      const track = tracks[trackID] as HMSLocalTrack;\n      if (track) {\n        const peerName = this.store.getLocalPeer()?.name;\n        const trackStats = await getLocalTrackStats(this.eventBus, track, peerName, this.localTrackStats[trackID]);\n        if (trackStats) {\n          this.localTrackStats[trackID] = trackStats;\n        }\n      } else {\n        delete this.localTrackStats[trackID];\n      }\n    }\n  };\n}\n", "import { HMSWebrtcStats } from './HMSWebrtcStats';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { EventBus } from '../events/EventBus';\nimport { Store } from '../sdk/store';\nimport { RTC_STATS_MONITOR_INTERVAL } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { sleep } from '../utils/timer-utils';\n\nexport class HMSWebrtcInternals {\n  private readonly TAG = '[HMSWebrtcInternals]';\n  private readonly interval = RTC_STATS_MONITOR_INTERVAL;\n  private isMonitored = false;\n  private hmsStats?: HMSWebrtcStats;\n\n  constructor(private readonly store: Store, private readonly eventBus: EventBus) {}\n\n  getCurrentStats() {\n    return this.hmsStats;\n  }\n\n  getPublishPeerConnection() {\n    return this.hmsStats?.getPublishPeerConnection();\n  }\n\n  getSubscribePeerConnection() {\n    return this.hmsStats?.getSubscribePeerConnection();\n  }\n\n  onStatsChange(statsChangeCb: (stats: HMSWebrtcStats) => void) {\n    this.eventBus.statsUpdate.subscribe(statsChangeCb);\n    return () => {\n      this.eventBus.statsUpdate.unsubscribe(statsChangeCb);\n    };\n  }\n\n  private handleStatsUpdate = async () => {\n    await this.hmsStats?.updateStats();\n    if (this.hmsStats) {\n      this.eventBus.statsUpdate.publish(this.hmsStats);\n    }\n  };\n\n  /**\n   *\n   * @internal\n   */\n  setPeerConnections({ publish, subscribe }: { publish?: RTCPeerConnection; subscribe?: RTCPeerConnection }) {\n    if (this.hmsStats) {\n      this.hmsStats.setPeerConnections({ publish, subscribe });\n    } else {\n      this.hmsStats = new HMSWebrtcStats(this.store, this.eventBus, publish, subscribe);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async start() {\n    if (this.isMonitored) {\n      HMSLogger.d(this.TAG, 'Already started');\n      return;\n    }\n    this.stop();\n    this.isMonitored = true;\n    HMSLogger.d(this.TAG, 'Starting Webrtc Stats Monitor');\n    this.startLoop()\n      .then(() => HMSLogger.d(this.TAG, 'Stopping Webrtc Stats Monitor'))\n      .catch(e => {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.rtcStatsFailed(ErrorFactory.WebrtcErrors.StatsFailed(HMSAction.PUBLISH, e.message)),\n        );\n        HMSLogger.e(this.TAG, e.message);\n      });\n  }\n\n  private stop() {\n    this.isMonitored = false;\n  }\n\n  private async startLoop() {\n    while (this.isMonitored) {\n      await this.handleStatsUpdate();\n      await sleep(this.interval);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  cleanup() {\n    this.stop();\n    this.eventBus.statsUpdate.removeAllListeners();\n  }\n}\n", "import { HMSPeer as IHMSPeer } from '../../../interfaces/peer';\nimport { HMSPeerType } from '../../../interfaces/peer/hms-peer';\nimport { HMSRole } from '../../../interfaces/role';\nimport { HMSAudioTrack, HMSTrack, HMSVideoTrack } from '../../../media/tracks';\nimport { HAND_RAISE_GROUP_NAME } from '../../../utils/constants';\n\nexport type HMSPeerInit = {\n  peerId: string;\n  name: string;\n  isLocal: boolean;\n  customerUserId?: string;\n  metadata?: string;\n  role?: HMSRole;\n  joinedAt?: Date;\n  fromRoomState?: boolean;\n  metworkQuality?: number;\n  groups?: string[];\n  realtime?: boolean;\n  isHandRaised?: boolean;\n  type: HMSPeerType;\n};\n\nexport class HMSPeer implements IHMSPeer {\n  readonly peerId: string;\n  readonly isLocal: boolean;\n  name: string;\n  customerUserId?: string = '';\n  metadata?: string = '';\n  audioTrack?: HMSAudioTrack;\n  videoTrack?: HMSVideoTrack;\n  auxiliaryTracks: HMSTrack[] = [];\n  role?: HMSRole;\n  joinedAt?: Date;\n  networkQuality?: number;\n  groups?: string[];\n  realtime?: boolean;\n  type: HMSPeerType;\n\n  constructor({\n    peerId,\n    name,\n    isLocal,\n    customerUserId,\n    metadata,\n    role,\n    joinedAt,\n    groups,\n    realtime,\n    type,\n  }: HMSPeerInit) {\n    this.name = name;\n    this.peerId = peerId;\n    this.isLocal = isLocal;\n    this.customerUserId = customerUserId;\n    this.metadata = metadata;\n    this.joinedAt = joinedAt;\n    this.groups = groups;\n    this.realtime = realtime;\n    this.type = type;\n\n    if (role) {\n      this.role = role;\n    }\n  }\n\n  get isHandRaised() {\n    return !!this.groups?.includes(HAND_RAISE_GROUP_NAME);\n  }\n\n  /**\n   * @internal\n   */\n  updateRole(newRole: HMSRole) {\n    this.role = newRole;\n  }\n  /**\n   * @internal\n   */\n  updateName(newName: string) {\n    this.name = newName;\n  }\n\n  updateNetworkQuality(quality: number) {\n    this.networkQuality = quality;\n  }\n\n  /**\n   * @internal\n   */\n  updateMetadata(data: string) {\n    this.metadata = data;\n  }\n\n  updateGroups(groups: string[]) {\n    this.groups = groups;\n  }\n\n  toString() {\n    return `{\n      name: ${this.name};\n      role: ${this.role?.name};\n      peerId: ${this.peerId};\n      customerUserId: ${this.customerUserId};\n      ${this.audioTrack ? `audioTrack: ${this.audioTrack?.trackId};` : ''}\n      ${this.videoTrack ? `videoTrack: ${this.videoTrack?.trackId};` : ''}\n      groups: ${this.groups?.join()}\n    }`;\n  }\n}\n", "import { v4 as uuidv4 } from 'uuid';\n\nexport default class HMSIdFactory {\n  static makePeerId = () => uuidv4();\n}\n", "import { HMSPeer, HMSPeerInit } from './HMSPeer';\nimport { HMSLocalPeer as IHMSLocalPeer } from '../../../interfaces/peer';\nimport { HMSRole } from '../../../interfaces/role';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack } from '../../../media/tracks';\nimport HMSIdFactory from '../../../utils/id-factory';\n\ntype HMSLocalPeerInit = Omit<HMSPeerInit, 'isLocal' | 'peerId'> & { asRole?: HMSRole };\n\nexport class HMSLocalPeer extends HMSPeer implements IHMSLocalPeer {\n  isLocal = true;\n  declare audioTrack?: HMSLocalAudioTrack;\n  declare videoTrack?: HMSLocalVideoTrack;\n  auxiliaryTracks: HMSLocalTrack[] = [];\n  asRole?: HMSRole;\n\n  constructor(peerData: HMSLocalPeerInit) {\n    super({ ...peerData, peerId: HMSIdFactory.makePeerId(), isLocal: true });\n    this.asRole = peerData.asRole;\n  }\n\n  isInPreview() {\n    return !!this.asRole;\n  }\n\n  toString(): string {\n    return `{\n      name: ${this.name};\n      role: ${this.role?.name};\n      peerId: ${this.peerId};\n      customerUserId: ${this.customerUserId};\n      ${this.asRole ? `asRole: ${this.asRole.name};` : ''}\n      ${this.audioTrack ? `audioTrack: ${this.audioTrack?.trackId};` : ''}\n      ${this.videoTrack ? `videoTrack: ${this.videoTrack?.trackId};` : ''}\n    }`;\n  }\n}\n", "import { HMSPeer, HMSPeerInit } from './HMSPeer';\nimport { HMSRemotePeer as IHMSRemotePeer } from '../../../interfaces/peer';\nimport { HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack } from '../../../media/tracks';\n\ntype HMSRemotePeerInit = Omit<HMSPeerInit, 'isLocal'>;\n\nexport class HMSRemotePeer extends HMSPeer implements IHMSRemotePeer {\n  isLocal = false;\n  declare audioTrack?: HMSRemoteAudioTrack;\n  declare videoTrack?: HMSRemoteVideoTrack;\n  auxiliaryTracks: HMSRemoteTrack[] = [];\n  fromRoomState = false;\n\n  constructor(peerData: HMSRemotePeerInit) {\n    super({ ...peerData, isLocal: false });\n    this.fromRoomState = !!peerData.fromRoomState;\n  }\n}\n", "import { HMSRemotePeer } from '../../sdk/models/peer';\nimport { Store } from '../../sdk/store';\nimport { PeerNotificationInfo } from '../HMSNotifications';\n\nexport const createRemotePeer = (notifPeer: PeerNotificationInfo, store: Store) => {\n  return new HMSRemotePeer({\n    peerId: notifPeer.peer_id,\n    name: notifPeer.info.name,\n    role: store.getPolicyForRole(notifPeer.role),\n    customerUserId: notifPeer.info.user_id,\n    metadata: notifPeer.info.data,\n    groups: notifPeer.groups,\n    type: notifPeer.info.type,\n  });\n};\n", "import { HMSRemotePeer } from './models/peer';\nimport { Store } from './store';\nimport { HMSPeerListIteratorOptions } from '../interfaces/peer-list-iterator';\nimport { PeerNotificationInfo } from '../notification-manager';\nimport { createRemotePeer } from '../notification-manager/managers/utils';\nimport { PeersIterationResponse } from '../signal/interfaces';\nimport HMSTransport from '../transport';\n\nexport class HMSPeerListIterator {\n  private isEnd = false;\n  private iterator: string | null = null;\n  private total = 0;\n  private defaultPaginationLimit = 10;\n  constructor(private transport: HMSTransport, private store: Store, private options?: HMSPeerListIteratorOptions) {}\n\n  private validateConnection() {\n    if (!this.transport || !this.store) {\n      throw Error(`Use usePaginatedParticipants or hmsActions.getPeerListIterator after preview or join has happened`);\n    }\n  }\n\n  hasNext(): boolean {\n    return !this.isEnd;\n  }\n\n  getTotal(): number {\n    return this.total;\n  }\n\n  async findPeers() {\n    this.validateConnection();\n    const response = await this.transport.signal.findPeers({\n      ...(this.options || {}),\n      limit: this.options?.limit || this.defaultPaginationLimit,\n    });\n    this.updateState(response);\n    return this.processPeers(response.peers);\n  }\n\n  async next() {\n    this.validateConnection();\n    let response: PeersIterationResponse;\n    if (!this.iterator && !this.isEnd) {\n      return await this.findPeers();\n    } else if (this.iterator) {\n      response = await this.transport.signal.peerIterNext({\n        iterator: this.iterator,\n        limit: this.options?.limit || this.defaultPaginationLimit,\n      });\n      this.updateState(response);\n      return this.processPeers(response.peers);\n    }\n    return [];\n  }\n\n  private processPeers(peers: PeerNotificationInfo[]) {\n    const hmsPeers: HMSRemotePeer[] = [];\n    peers.forEach(peer => {\n      const hmsPeer = createRemotePeer(peer, this.store);\n      hmsPeers.push(hmsPeer);\n    });\n    return hmsPeers;\n  }\n\n  private updateState(response: PeersIterationResponse) {\n    this.isEnd = response.eof;\n    this.total = response.total;\n    // iterator is only received once in findpeer -  reuse the same iterator\n    if (response.iterator) {\n      this.iterator = response.iterator;\n    }\n  }\n}\n", "import HMSLogger from '../utils/logger';\n\nexport class AudioContextManager {\n  private audioContext: AudioContext;\n  private destinationNode?: MediaStreamAudioDestinationNode;\n  private source: MediaElementAudioSourceNode;\n  private readonly TAG = '[AudioContextManager]';\n\n  constructor(element: HTMLMediaElement) {\n    this.audioContext = new AudioContext();\n    this.source = this.audioContext.createMediaElementSource(element);\n    this.source.connect(this.audioContext.destination);\n  }\n\n  /**\n   * Resume AudioContext if it is suspended\n   * Note: when the browser tab is muted by default, AudioContext will be in suspended state\n   * It has to be resumed for the video/audio to be played.\n   */\n  async resumeContext() {\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n      HMSLogger.d(this.TAG, 'AudioContext is resumed');\n    }\n  }\n\n  getAudioTrack() {\n    // Always create a destinationNode to get new audio track id\n    if (this.destinationNode) {\n      this.source.disconnect(this.destinationNode);\n    }\n    this.destinationNode = this.audioContext.createMediaStreamDestination();\n    this.source.connect(this.destinationNode);\n    return this.destinationNode.stream.getAudioTracks()[0];\n  }\n\n  cleanup() {\n    if (this.audioContext.state !== 'closed') {\n      this.audioContext.close().catch(e => {\n        HMSLogger.d(this.TAG, 'AudioContext close error', e.message);\n      });\n    }\n  }\n}\n", "import { EventEmitter2 as EventEmitter } from 'eventemitter2';\n\n/**\n * Typed Event Emitter Reference:\n * https://rjzaworski.com/2019/10/event-emitters-in-typescript#a-typescript-event-emitter-interface\n */\n\nexport type EventMap = Record<string, any>;\n\nexport type EventKey<T extends EventMap> = string & keyof T;\nexport type EventReceiver<T> = (params: T) => void;\n\n// interface Emitter<T extends EventMap> {\n//   on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n//   off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n//   emit<K extends EventKey<T>>(eventName: K, params: T[K]): void;\n// }\n\nexport abstract class TypedEventEmitter<T extends EventMap> extends EventEmitter {\n  on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    return super.on(eventName, fn);\n  }\n\n  off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    return super.off(eventName, fn);\n  }\n\n  emit<K extends EventKey<T>>(eventName: K, params: T[K]) {\n    return super.emit(eventName, params);\n  }\n\n  listeners<K extends EventKey<T>>(eventName: K): EventReceiver<T[K]>[] {\n    return super.listeners(eventName) as EventReceiver<T[K]>[];\n  }\n}\n", "import { AudioContextManager } from './AudioContextManager';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\n/**\n * This class handles audio playlist management\n * - An audio element and audio context which processes audio from audio element is created\n *   in the constructor\n * It handles playback in the following steps\n *  - set's the url on the audio element created in the constructor\n *  - oncanplaythrough event of the audio element\n *    - resume the audio context if it is suspended\n *    - play the audio element\n *    - Get audio track from the audio context manager\n *    - The track is passed to playlist manager to publish\n */\nexport class PlaylistAudioManager extends TypedEventEmitter<{ ended: null; progress: Event }> {\n  private audioElement: HTMLAudioElement | null = null;\n  private track?: MediaStreamTrack;\n  private audioContextManager!: AudioContextManager;\n  private readonly TAG = '[PlaylistAudioManager]';\n  // This is to handle audio playing when seekTo is called when audio is paused\n  private seeked = false;\n\n  async play(url: string) {\n    this.audioElement = this.getAudioElement();\n    return new Promise<MediaStreamTrack[]>((resolve, reject) => {\n      this.audioElement = this.getAudioElement();\n      this.audioElement.src = url;\n      this.seeked = false;\n      this.audioElement.onerror = () => {\n        const error = `Error loading ${url}`;\n        HMSLogger.e(this.TAG, error);\n        this.stop();\n        reject(error);\n      };\n      // oncanplaythrough is called when enough media is loaded for play to be possible in two cases -\n      //    * when play is called for the first time\n      //    * when user seeks jumps to any mid track timestamp\n      this.audioElement.oncanplaythrough = async () => {\n        try {\n          if (!this.audioElement) {\n            return;\n          }\n          this.audioContextManager.resumeContext();\n          // Create audio track only once and reuse, it will be updated with current content\n          if (!this.track) {\n            await this.audioElement.play();\n            const audioTrack = this.audioContextManager.getAudioTrack();\n            this.track = audioTrack;\n            resolve([audioTrack]);\n          } else {\n            if (!this.seeked) {\n              // if this was called in response to a play call\n              await this.audioElement.play();\n              resolve([this.track]);\n            } else {\n              // if seek happened, there is no play call/promise to be resolved, just reset seeked\n              this.seeked = false;\n            }\n          }\n        } catch (err) {\n          HMSLogger.e(this.TAG, 'Error playing audio', url, (err as ErrorEvent).message);\n          reject(err);\n        }\n      };\n      this.audioElement.onseeked = () => {\n        this.seeked = true;\n      };\n    });\n  }\n\n  getTracks() {\n    return this.track ? [this.track.id] : [];\n  }\n\n  getElement() {\n    if (!this.audioElement) {\n      this.audioElement = this.getAudioElement();\n    }\n    return this.audioElement;\n  }\n\n  stop() {\n    this.audioElement?.pause();\n    this.audioElement?.removeAttribute('src');\n    this.audioElement = null;\n    this.audioContextManager?.cleanup();\n    this.track = undefined;\n  }\n\n  private getAudioElement() {\n    if (this.audioElement) {\n      return this.audioElement;\n    }\n    const audioElement = document.createElement('audio');\n    audioElement.crossOrigin = 'anonymous';\n    audioElement.addEventListener('timeupdate', event => this.emit('progress', event));\n    audioElement.addEventListener('ended', () => {\n      this.emit('ended', null);\n    });\n    this.audioContextManager = new AudioContextManager(audioElement);\n    return audioElement;\n  }\n}\n", "import { AudioContextManager } from './AudioContextManager';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\n/**\n * This class handles video playlist management\n * - An video element, canvas and audio context which processes audio from video element is created\n *   in the constructor\n * It handles playback in the following steps\n *  - set's the url on the video element created in the constructor\n *  - oncanplaythrough event of the video element\n *    - resume the audio context if it is suspended\n *    - set width/height on canvas\n *    - captureStream on canvas element if not already captured\n *    - play the video element\n *    - on video element is played, it is drawn to canvas\n *    - Get audio track from the audio context manager\n *    - add audioTrack to canvas stream\n *    - The audio and video tracks are passed to playlist manager to publish\n */\nexport class PlaylistVideoManager extends TypedEventEmitter<{ ended: null; progress: Event }> {\n  private readonly TAG = '[PlaylistVideoManager]';\n  private videoElement: HTMLVideoElement | null = null;\n  private canvasContext: CanvasRenderingContext2D | null = null;\n  private canvas!: HTMLCanvasElement;\n  private timer: any;\n  private tracks: MediaStreamTrack[] = [];\n  private audioContextManager!: AudioContextManager;\n  private DEFAUL_FPS = 24;\n  // This is to handle video playing when seekTo is called when video is paused\n  private seeked = false;\n\n  play(url: string) {\n    this.videoElement = this.getVideoElement();\n    this.createCanvas();\n    return new Promise<MediaStreamTrack[]>((resolve, reject) => {\n      this.videoElement = this.getVideoElement();\n      this.videoElement.src = url;\n      this.seeked = false;\n      this.videoElement.onerror = () => {\n        const error = `Error loading ${url}`;\n        HMSLogger.e(this.TAG, error);\n        this.stop();\n        reject(error);\n      };\n      // oncanplaythrough is called when enough media is loaded for play to be possible in two cases -\n      //    * when play is called for the first time\n      //    * when user jumps to any mid track timestamp using seekTo\n      this.videoElement.oncanplaythrough = async () => {\n        try {\n          if (!this.videoElement) {\n            return;\n          }\n          this.canvas.width = this.videoElement.videoWidth;\n          this.canvas.height = this.videoElement.videoHeight;\n          // Capture stream only once and reuse the same tracks. it will be autoupdated with the selected video\n          if (this.tracks.length === 0) {\n            this.clearCanvasAndTracks();\n            //@ts-ignore\n            const stream = this.canvas.captureStream();\n            if (!stream) {\n              HMSLogger.e(this.TAG, 'Browser does not support captureStream');\n              return;\n            }\n            this.videoElement.onplay = this.drawImage;\n            await this.audioContextManager.resumeContext();\n            await this.videoElement.play();\n            const audioTrack = this.audioContextManager.getAudioTrack();\n            stream.addTrack(audioTrack);\n            stream.getTracks().forEach((track: MediaStreamTrack) => {\n              this.tracks.push(track);\n            });\n            resolve(this.tracks);\n          } else {\n            // No need to capture canvas stream/get audio track. They wull be auto updated\n            if (!this.seeked) {\n              // if this was called in response to a play call\n              await this.videoElement.play();\n              resolve(this.tracks);\n            } else {\n              // if seek happened, there is no play call/promise to be resolved, just reset seeked\n              this.seeked = false;\n              // This event will be called on seekTo when paused. Just draw the one frame on canvas.\n              this.canvasContext?.drawImage(this.videoElement, 0, 0, this.canvas?.width, this.canvas?.height);\n            }\n          }\n        } catch (err) {\n          HMSLogger.e(this.TAG, 'Error playing video', url, (err as ErrorEvent).message);\n          reject(err);\n        }\n      };\n      this.videoElement.onseeked = () => {\n        this.seeked = true;\n      };\n    });\n  }\n\n  getTracks() {\n    return this.tracks.map(track => track.id);\n  }\n\n  getElement() {\n    if (!this.videoElement) {\n      this.videoElement = this.getVideoElement();\n    }\n    return this.videoElement;\n  }\n\n  stop() {\n    this.videoElement?.pause();\n    this.videoElement?.removeAttribute('src');\n    this.videoElement = null;\n    this.audioContextManager?.cleanup();\n    this.clearCanvasAndTracks();\n  }\n\n  private clearCanvasAndTracks() {\n    this.tracks = [];\n    // clear canvas before playing new video\n    this.canvasContext?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    clearTimeout(this.timer);\n  }\n\n  private drawImage = () => {\n    if (this.videoElement && !this.videoElement.paused && !this.videoElement.ended) {\n      this.canvasContext?.drawImage(this.videoElement, 0, 0, this.canvas?.width, this.canvas?.height);\n      this.timer = setTimeout(() => {\n        this.drawImage();\n      }, 1000 / this.DEFAUL_FPS);\n    }\n  };\n\n  private getVideoElement() {\n    if (this.videoElement) {\n      return this.videoElement;\n    }\n    const videoElement = document.createElement('video');\n    videoElement.crossOrigin = 'anonymous';\n    videoElement.addEventListener('timeupdate', event => this.emit('progress', event));\n    videoElement.addEventListener('ended', () => {\n      this.emit('ended', null);\n    });\n    this.audioContextManager = new AudioContextManager(videoElement);\n    return videoElement;\n  }\n\n  private createCanvas() {\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      this.canvasContext = this.canvas.getContext('2d');\n    }\n  }\n}\n", "import { PlaylistAudioManager } from './PlaylistAudioManager';\nimport { PlaylistVideoManager } from './PlaylistVideoManager';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { EventBus } from '../events/EventBus';\nimport { HMSPlaylistItem, HMSPlaylistManager, HMSPlaylistProgressEvent, HMSPlaylistType } from '../interfaces';\nimport { HMSLocalTrack } from '../media/tracks';\nimport { HMSSdk } from '../sdk';\nimport { stringifyMediaStreamTrack } from '../utils/json';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\ntype PlaylistManagerState<T> = {\n  audio: {\n    list: HMSPlaylistItem<T>[];\n    currentIndex: number;\n    isAutoplayOn: boolean;\n  };\n  video: {\n    list: HMSPlaylistItem<T>[];\n    currentIndex: number;\n    isAutoplayOn: boolean;\n  };\n};\n\nconst INITIAL_STATE: PlaylistManagerState<any> = {\n  audio: {\n    list: [],\n    currentIndex: -1,\n    isAutoplayOn: true,\n  },\n  video: {\n    list: [],\n    currentIndex: -1,\n    isAutoplayOn: true,\n  },\n};\n\nexport class PlaylistManager\n  extends TypedEventEmitter<{\n    newTrackStart: HMSPlaylistItem<any>;\n    playlistEnded: HMSPlaylistType;\n    currentTrackEnded: HMSPlaylistItem<any>;\n  }>\n  implements HMSPlaylistManager\n{\n  private state = { audio: { ...INITIAL_STATE.audio }, video: { ...INITIAL_STATE.video } };\n  private audioManager: PlaylistAudioManager;\n  private videoManager: PlaylistVideoManager;\n  private readonly TAG = '[PlaylistManager]';\n\n  constructor(private sdk: HMSSdk, private eventBus: EventBus) {\n    super();\n    this.audioManager = new PlaylistAudioManager();\n    this.videoManager = new PlaylistVideoManager();\n    this.addListeners();\n  }\n\n  getList<T>(type: HMSPlaylistType = HMSPlaylistType.audio): HMSPlaylistItem<T>[] {\n    return this.state[type].list;\n  }\n\n  setList<T>(list: HMSPlaylistItem<T>[]): void {\n    if (!list || list.length === 0) {\n      HMSLogger.w(this.TAG, `Please pass in a list of HMSPlaylistItem's`);\n      return;\n    }\n    list.forEach((item: HMSPlaylistItem<T>) => {\n      if (!this.state[item.type].list.find(_item => _item.id === item.id)) {\n        this.state[item.type].list.push(item);\n      }\n    });\n  }\n\n  async clearList(type: HMSPlaylistType): Promise<void> {\n    if (this.isPlaying(type)) {\n      await this.stop(type);\n    }\n    this.state[type].list = [];\n  }\n\n  async removeItem(id: string, type: HMSPlaylistType): Promise<boolean> {\n    const { list, currentIndex } = this.state[type];\n    const index = list.findIndex(playItem => id === playItem.id);\n    if (index > -1) {\n      // stop if the item is playing\n      if (currentIndex === index && this.isPlaying(type)) {\n        await this.stop(type);\n      }\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  seek(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    const { currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'No item is currently playing');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      const updatedValue = Math.max(element.currentTime + value, 0);\n      element.currentTime = Math.min(updatedValue, element.duration);\n    }\n  }\n\n  seekTo(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    const { currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'No item is currently playing');\n    }\n    if (value < 0) {\n      throw Error('value cannot be negative');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.currentTime = Math.min(value, element.duration);\n    }\n  }\n\n  setVolume(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.volume = value * 0.01;\n    }\n  }\n\n  getVolume(type: HMSPlaylistType = HMSPlaylistType.audio): number {\n    const element = this.getElement(type);\n    if (element) {\n      return Math.floor(element.volume * 100);\n    }\n    return 0;\n  }\n\n  getCurrentTime(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return element?.currentTime || 0;\n  }\n\n  getCurrentIndex(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    return this.state[type].currentIndex;\n  }\n\n  getCurrentProgress(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex } = this.state[type];\n    const activeUrl = list[currentIndex]?.url;\n    const element = this.getElement(type);\n    if (!activeUrl || !element) {\n      return 0;\n    }\n    return Math.floor(100 * (element.currentTime / element.duration));\n  }\n\n  getCurrentSelection(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      return undefined;\n    }\n    return list[currentIndex];\n  }\n\n  isPlaying(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return !!element && !element.paused;\n  }\n\n  setIsAutoplayOn(type: HMSPlaylistType = HMSPlaylistType.audio, autoplay: boolean) {\n    this.state[type].isAutoplayOn = autoplay;\n  }\n\n  getPlaybackRate(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return element ? element.playbackRate : 1.0;\n  }\n\n  setPlaybackRate(type: HMSPlaylistType = HMSPlaylistType.audio, value: number) {\n    if (value < 0.25 || value > 2.0) {\n      throw Error('Please pass a value between 0.25 and 2.0');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.playbackRate = value;\n    }\n  }\n\n  async setEnabled(\n    enabled: boolean,\n    { id, type = HMSPlaylistType.audio }: { id: string; type: HMSPlaylistType },\n  ): Promise<void> {\n    const list = this.state[type].list;\n    const currentIndex = list.findIndex(item => item.id === id);\n    if (!id || currentIndex === -1) {\n      HMSLogger.w(this.TAG, 'Pass a valid id');\n      return;\n    }\n    const url = this.state[type].list[currentIndex].url;\n    if (enabled) {\n      await this.play(url, type);\n    } else {\n      await this.pause(url, type);\n    }\n    this.state[type].currentIndex = currentIndex;\n    this.setDuration(type);\n  }\n\n  async playNext(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex >= list.length - 1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'Reached end of playlist');\n    }\n    await this.play(list[currentIndex + 1].url, type);\n    this.state[type].currentIndex = currentIndex + 1;\n    this.setDuration(type);\n  }\n\n  async playPrevious(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex <= 0) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'Reached start of playlist');\n    }\n    await this.play(list[currentIndex - 1].url, type);\n    this.state[type].currentIndex = currentIndex - 1;\n    this.setDuration(type);\n  }\n\n  async stop(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    manager.getElement()?.pause(); //pause local video/audio and remove tracks in next step\n    await this.removeTracks(type);\n    manager.stop();\n    this.state[type].currentIndex = -1;\n  }\n\n  cleanup() {\n    this.state = { audio: { ...INITIAL_STATE.audio }, video: { ...INITIAL_STATE.video } };\n    this.eventBus.localAudioEnabled.unsubscribe(this.handlePausePlaylist);\n    this.eventBus.localVideoEnabled.unsubscribe(this.handlePausePlaylist);\n    this.audioManager.stop();\n    this.videoManager.stop();\n  }\n\n  onProgress(fn: (progress: HMSPlaylistProgressEvent) => void) {\n    this.videoManager.on('progress', () => {\n      try {\n        fn({\n          type: HMSPlaylistType.video,\n          progress: this.getCurrentProgress(HMSPlaylistType.video),\n        });\n      } catch (error) {\n        HMSLogger.e(this.TAG, 'Error in onProgress callback');\n      }\n    });\n    this.audioManager.on('progress', () => {\n      try {\n        fn({\n          type: HMSPlaylistType.audio,\n          progress: this.getCurrentProgress(HMSPlaylistType.audio),\n        });\n      } catch (error) {\n        HMSLogger.e(this.TAG, 'Error in onProgress callback');\n      }\n    });\n  }\n\n  onNewTrackStart<T>(fn: (item: HMSPlaylistItem<T>) => void) {\n    this.on('newTrackStart', fn);\n  }\n\n  onPlaylistEnded(fn: (type: HMSPlaylistType) => void) {\n    this.on('playlistEnded', fn);\n  }\n\n  onCurrentTrackEnded<T>(fn: (item: HMSPlaylistItem<T>) => void) {\n    this.on('currentTrackEnded', fn);\n  }\n\n  private getElement(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    return type === HMSPlaylistType.audio ? this.audioManager.getElement() : this.videoManager.getElement();\n  }\n\n  private async removeTracks(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    const tracks = manager.getTracks();\n    for (const trackId of tracks) {\n      await this.removeTrack(trackId);\n    }\n  }\n\n  private async play(url: string, type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    const element = manager.getElement();\n    if (this.isItemCurrentlyPlaying(url, type)) {\n      HMSLogger.w(this.TAG, `The ${type} is currently playing`);\n      return;\n    }\n    if (element?.src.includes(url)) {\n      await element.play();\n    } else {\n      element?.pause();\n      const tracks: MediaStreamTrack[] = await manager.play(url);\n      for (const track of tracks) {\n        await this.addTrack(track, type === HMSPlaylistType.audio ? 'audioplaylist' : 'videoplaylist');\n      }\n    }\n  }\n\n  private isItemCurrentlyPlaying(url: string, type: HMSPlaylistType): boolean {\n    const element = this.getElement(type);\n    return !!(element && !element.paused && element.src.includes(url));\n  }\n\n  private setDuration(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    const { list, currentIndex } = this.state[type];\n    if (list[currentIndex]) {\n      list[currentIndex].duration = element?.duration || 0;\n    }\n    this.emit('newTrackStart', list[currentIndex]);\n  }\n\n  private async pause(url: string, type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const el = this.getElement(type);\n    if (el && !el.paused && el.src.includes(url)) {\n      el.pause();\n      HMSLogger.d(this.TAG, 'paused url', url);\n    } else {\n      HMSLogger.w(this.TAG, 'The passed in url is not currently playing');\n    }\n  }\n\n  private handlePausePlaylist = async ({ enabled, track }: { enabled: boolean; track: HMSLocalTrack }) => {\n    if (enabled) {\n      return;\n    }\n    let type: HMSPlaylistType | undefined = undefined;\n    if (track.source === 'audioplaylist') {\n      type = HMSPlaylistType.audio;\n    }\n    if (track.source === 'videoplaylist') {\n      type = HMSPlaylistType.video;\n    }\n    if (!type) {\n      return;\n    }\n    this.getElement(type)?.pause();\n  };\n\n  private addListeners() {\n    this.audioManager.on('ended', () => this.handleEnded(HMSPlaylistType.audio));\n    this.videoManager.on('ended', () => this.handleEnded(HMSPlaylistType.video));\n    this.eventBus.localAudioEnabled.subscribe(this.handlePausePlaylist);\n    this.eventBus.localVideoEnabled.subscribe(this.handlePausePlaylist);\n  }\n\n  /**\n   * Remove tracks if reached the end of list otherwise play next\n   * @param {HMSPlaylistType} type\n   */\n  private async handleEnded(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex, isAutoplayOn } = this.state[type];\n    if (currentIndex === list.length - 1) {\n      await this.stop(type);\n      this.emit('playlistEnded', type);\n    } else {\n      if (isAutoplayOn) {\n        this.playNext(type);\n      } else {\n        // when autoplay not allowed, pause the media element\n        await this.pause(list[currentIndex].url, type);\n      }\n    }\n    this.emit('currentTrackEnded', list[currentIndex]);\n  }\n\n  private addTrack = async (track: MediaStreamTrack, source: string) => {\n    await this.sdk.addTrack(track, source);\n    HMSLogger.d(this.TAG, 'Playlist track added', stringifyMediaStreamTrack(track));\n  };\n\n  private removeTrack = async (trackId: string) => {\n    await this.sdk.removeTrack(trackId, true);\n    HMSLogger.d(this.TAG, 'Playlist track removed', trackId);\n  };\n}\n", "import { createSelector } from 'reselect';\nimport { HMSPlaylistSelector, HMSPlaylistType, HMSStore } from '../schema';\n\n/**\n * @internal\n */\nconst selectPlaylistMap =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].list;\n\nconst selectPlaylistSelection =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].selection;\n\nconst selectPlaylistProgress =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].progress;\n\nconst selectPlaylistCurrentTime =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].currentTime;\n\nconst selectPlaylistPlaybackRate =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].playbackRate;\n\nconst selectPlaylistVolume =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].volume;\n\n/**\n * Select an array of playlist items.\n */\nconst selectPlaylist = (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  createSelector(selectPlaylistMap(type), storePlaylist => {\n    return Object.values(storePlaylist);\n  });\n\nconst selectPlaylistSelectedItem = (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  createSelector(selectPlaylistMap(type), selectPlaylistSelection(type), (storePlaylist, currentSelection) => {\n    if (!currentSelection.id) {\n      return;\n    }\n    return storePlaylist[currentSelection.id];\n  });\n\nexport const selectAudioPlaylist: HMSPlaylistSelector = {\n  selection: selectPlaylistSelection(HMSPlaylistType.audio),\n  progress: selectPlaylistProgress(HMSPlaylistType.audio),\n  currentTime: selectPlaylistCurrentTime(HMSPlaylistType.audio),\n  playbackRate: selectPlaylistPlaybackRate(HMSPlaylistType.audio),\n  volume: selectPlaylistVolume(HMSPlaylistType.audio),\n  list: selectPlaylist(HMSPlaylistType.audio),\n  selectedItem: selectPlaylistSelectedItem(HMSPlaylistType.audio) as any,\n};\n\nexport const selectVideoPlaylist: HMSPlaylistSelector = {\n  selection: selectPlaylistSelection(HMSPlaylistType.video),\n  progress: selectPlaylistProgress(HMSPlaylistType.video),\n  currentTime: selectPlaylistCurrentTime(HMSPlaylistType.video),\n  playbackRate: selectPlaylistPlaybackRate(HMSPlaylistType.video),\n  volume: selectPlaylistVolume(HMSPlaylistType.video),\n  list: selectPlaylist(HMSPlaylistType.video),\n  selectedItem: selectPlaylistSelectedItem(HMSPlaylistType.video) as any,\n};\n", "import { createSelector } from 'reselect';\nimport { byIDCurry } from './common';\nimport {\n  selectFullAppData,\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectLocalPeerRole,\n  selectMessagesMap,\n  selectPeers,\n  selectPeersMap,\n  selectPollsMap,\n  selectTracksMap,\n} from './selectors';\nimport {\n  getScreenSharesByPeer,\n  isAudio,\n  isAudioPlaylist,\n  isTrackEnabled,\n  isVideo,\n  isVideoPlaylist,\n} from './selectorUtils';\nimport { HMSLogger } from '../common/ui-logger';\nimport { HMSTranscriptionMode } from '../internal';\nimport {\n  HMSAudioTrack,\n  HMSGenericTypes,\n  HMSPeer,\n  HMSPeerID,\n  HMSRoleName,\n  HMSScreenVideoTrack,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSVideoTrack,\n} from '../schema';\n\nconst selectPeerID = (_store: HMSStore, peerID: HMSPeerID | undefined) => peerID;\nconst selectTrackID = (_store: HMSStore, trackID: HMSTrackID | undefined) => trackID;\nconst selectRoleName = (_store: HMSStore, roleName: HMSRoleName | undefined) => roleName;\nconst selectAppDataKey = (_store: HMSStore, key: string | undefined) => key;\nconst selectPollID = (_store: HMSStore, pollID: string | undefined) => pollID;\n\nconst selectPeerByIDBare = createSelector([selectPeersMap, selectPeerID], (storePeers, peerID) =>\n  peerID ? storePeers[peerID] : null,\n);\n\nconst selectTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) =>\n  trackID ? storeTracks[trackID] : null,\n);\n\nconst selectVideoTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSVideoTrack | undefined;\n  if (track?.type === 'video') {\n    return track;\n  }\n  return null;\n});\n\nconst selectAudioTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSAudioTrack | undefined;\n  if (track?.type === 'audio') {\n    return track;\n  }\n  return null;\n});\n\nconst selectScreenAudioTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSAudioTrack | undefined;\n  if (track?.type === 'audio' && track?.source === 'screen') {\n    return track;\n  }\n  return null;\n});\nconst selectScreenVideoTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSScreenVideoTrack | undefined;\n  if (track?.type === 'video' && track?.source === 'screen') {\n    return track;\n  }\n  return null;\n});\n\nconst selectPollByIDBare = createSelector([selectPollsMap, selectPollID], (storePolls, pollID) =>\n  pollID ? storePolls[pollID] : null,\n);\n\n/**\n * Select the {@link HMSPeer} object given a peer ID.\n */\nexport const selectPeerByID = byIDCurry(selectPeerByIDBare);\n\n/**\n * Select a particular key from ui app data by passed in key.\n * if key is not passed, full data is returned.\n */\nexport const selectAppData = byIDCurry(\n  createSelector([selectFullAppData, selectAppDataKey], (appData, key) => {\n    if (!appData) {\n      return undefined;\n    }\n    if (key) {\n      return appData[key];\n    }\n    return appData;\n  }),\n);\n\n/**\n * Select a particular key from session store by passed in key.\n * if key is not passed, full data is returned.\n */\nexport function selectSessionStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>(): (\n  store: HMSStore<T>,\n) => T['sessionStore'] | undefined;\nexport function selectSessionStore<\n  T extends HMSGenericTypes = { sessionStore: Record<string, any> },\n  K extends keyof T['sessionStore'] = keyof T['sessionStore'],\n>(key: K): (store: HMSStore<T>) => T['sessionStore'][K] | undefined;\nexport function selectSessionStore<\n  T extends HMSGenericTypes = { sessionStore: Record<string, any> },\n  K extends keyof T['sessionStore'] = keyof T['sessionStore'],\n>(key?: K) {\n  return (store: HMSStore<T>) => {\n    if (!store.sessionStore) {\n      return undefined;\n    }\n    if (key) {\n      return store.sessionStore[key];\n    }\n    return store.sessionStore;\n  };\n}\n\nexport const selectAppDataByPath = (...keys: string[]) =>\n  createSelector([selectFullAppData], appData => {\n    if (!appData) {\n      return undefined;\n    }\n    if (keys && keys.length > 0) {\n      let value = appData;\n      for (const key of keys) {\n        if (!key) {\n          return value;\n        }\n        value = value?.[key];\n      }\n      return value;\n    }\n    return appData;\n  });\n\n/**\n * Select the name of a {@link HMSPeer} given a peer ID.\n */\nexport const selectPeerNameByID = byIDCurry(createSelector(selectPeerByIDBare, peer => peer?.name));\n\nexport const selectPeerTypeByID = byIDCurry(createSelector(selectPeerByIDBare, peer => peer?.type));\n\n/**\n * Select the {@link HMSTrack} object given a track ID.\n */\nexport const selectTrackByID = byIDCurry(selectTrackByIDBare);\n\n/**\n * Select the {@link HMSVideoTrack} object given a track ID.\n */\nexport const selectVideoTrackByID = byIDCurry(selectVideoTrackByIDBare);\n\n/**\n * Select the {@link HMSAudioTrack} object given a track ID.\n */\nexport const selectAudioTrackByID = byIDCurry(selectAudioTrackByIDBare);\n\n/**\n * Select the {@link HMSScreenAudioTrack} object given a track ID.\n */\nexport const selectScreenAudioTrackByID = byIDCurry(selectScreenAudioTrackByIDBare);\n\n/**\n * Select the {@link HMSScreenVideoTrack} object given a track ID.\n */\nexport const selectScreenVideoTrackByID = byIDCurry(selectScreenVideoTrackByIDBare);\n\n/**\n * Select the primary video track of a peer given a peer ID.\n */\nexport const selectVideoTrackByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSVideoTrack | undefined => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer && peer.videoTrack && peer.videoTrack !== '') {\n    return store.tracks[peer.videoTrack] as HMSVideoTrack;\n  }\n  return undefined;\n});\n\n/**\n * Select the primary audio track of a peer given a peer ID.\n */\nexport const selectAudioTrackByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSAudioTrack | undefined => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer && peer.audioTrack && peer.audioTrack !== '') {\n    return store.tracks[peer.audioTrack] as HMSAudioTrack;\n  }\n  return undefined;\n});\n\n/**\n * Select the camera stream of a peer given a peer ID.\n * This is the primary video track of a peer.\n */\nexport const selectCameraStreamByPeerID = selectVideoTrackByPeerID;\n\n/**\n * Select an array of auxiliary tracks of a peer given a peer ID.\n */\nexport const selectAuxiliaryTracksByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSTrack[] => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return peer?.auxiliaryTracks.map(trackID => store.tracks[trackID]) || [];\n});\n\nconst selectSpeakerByTrackID = (store: HMSStore, trackID: HMSTrackID | undefined) => {\n  return trackID ? store.speakers[trackID] : null;\n};\n\n/**\n * Select the audio level of a track given a track ID.\n */\nexport const selectTrackAudioByID = byIDCurry(\n  createSelector(selectSpeakerByTrackID, speaker => speaker?.audioLevel || 0),\n);\n\n/**\n * Select speaker object of audioTrack of a peer given a peer ID.\n */\nconst selectSpeakerByPeerID = (store: HMSStore, peerID: HMSPeerID | undefined) => {\n  const peerAudioTrack = selectAudioTrackByPeerID(peerID)(store);\n  return selectSpeakerByTrackID(store, peerAudioTrack?.id);\n};\n\n/**\n * Select audio level of audioTrack of a peer given a peer ID\u00DF.\n */\nexport const selectPeerAudioByID = byIDCurry(\n  createSelector(selectSpeakerByPeerID, speaker => speaker?.audioLevel || 0),\n);\n\nexport const selectConnectionQualityByPeerID = byIDCurry((store: HMSStore, peerID: HMSPeerID | undefined) => {\n  if (peerID) {\n    return store.connectionQualities[peerID];\n  }\n  return undefined;\n});\n\n/**\n * Select the first auxiliary audio track of a peer given a peer ID.\n */\nexport const selectAuxiliaryAudioByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer) {\n    const trackID = peer?.auxiliaryTracks.find(trackID => isAudio(store.tracks[trackID]));\n    return trackID ? (store.tracks[trackID] as HMSAudioTrack) : undefined;\n  }\n  return undefined;\n});\n\nexport const selectVideoPlaylistVideoTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isVideoPlaylist(track) && isVideo(track);\n    });\n    return trackID ? (tracks[trackID] as HMSVideoTrack) : undefined;\n  }),\n);\n\nexport const selectVideoPlaylistAudioTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isVideoPlaylist(track) && isAudio(track);\n    });\n    return trackID ? (tracks[trackID] as HMSAudioTrack) : undefined;\n  }),\n);\n\nexport const selectAudioPlaylistTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isAudioPlaylist(track) && isAudio(track);\n    });\n    return trackID ? (tracks[trackID] as HMSAudioTrack) : undefined;\n  }),\n);\n\nexport const selectScreenSharesByPeerId = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    return getScreenSharesByPeer(tracks, peer);\n  }),\n);\n\n/**\n * Select the screen share video track of a peer given a peer ID.\n */\nexport const selectScreenShareByPeerID = (id?: string) =>\n  createSelector(selectScreenSharesByPeerId(id), screenshare => {\n    return screenshare.video;\n  });\n\n/**\n * Select the screen share audio track of a peer given a peer ID.\n */\nexport const selectScreenShareAudioByPeerID = (id?: string) =>\n  createSelector(selectScreenSharesByPeerId(id), screenshare => {\n    return screenshare.audio;\n  });\n\n/**\n * Select a boolean denoting whether a peer has unmuted audio and sharing it to other peers.\n */\nexport const selectIsPeerAudioEnabled = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return isTrackEnabled(store, peer?.audioTrack);\n});\n\n/**\n * Select a boolean denoting whether a peer has unmuted video and sharing it to other peers.\n */\nexport const selectIsPeerVideoEnabled = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return isTrackEnabled(store, peer?.videoTrack);\n});\n\n/**\n * Select a boolean denoting whether you've muted an audio track locally(only for you) given a track ID.\n */\nexport const selectIsAudioLocallyMuted = byIDCurry((store: HMSStore, trackID?: string) => {\n  if (trackID && store.tracks[trackID]) {\n    return (store.tracks[trackID] as HMSAudioTrack).volume === 0;\n  }\n  return undefined;\n});\n\n/**\n * Select a boolean denoting whether you've muted the primary audio track of a peer locally(only for you) given a peer ID.\n */\nexport const selectIsLocallyMutedByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return selectIsAudioLocallyMuted(peer?.audioTrack)(store);\n});\n\n/**\n * Select a boolean denoting whether you've muted the screen share audio track of a peer locally(only for you) given a peer ID.\n */\nexport const selectIsScreenShareLocallyMutedByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const track = selectScreenShareAudioByPeerID(peerID)(store);\n  return selectIsAudioLocallyMuted(track?.id)(store);\n});\n\n/**\n * Select the local audio volume of an audio track given a track ID.\n *\n * NOTE: **Volume** of a track is different from **Audio Level** of a track,\n * - Audio Level measures the audio of a track and it comes from 100ms's servers.\n * - Volume is how loud you hear the audio of a track, this is controlled by you at the client side.\n */\nexport const selectAudioTrackVolume = byIDCurry((store: HMSStore, trackID?: string) => {\n  const track = selectTrackByIDBare(store, trackID);\n  if (track) {\n    if (track.type !== 'audio') {\n      HMSLogger.w('Please pass audio track here');\n      return undefined;\n    }\n    return track.volume;\n  }\n  return undefined;\n});\n\n/**\n * Select the local audio volume of the primary audio track of a peer given a peer ID.\n */\nexport const selectAudioVolumeByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return selectAudioTrackVolume(peer?.audioTrack)(store);\n});\n\n/**\n * Select the local audio volume of the screen share of a peer given a peer ID.\n */\nexport const selectScreenshareAudioVolumeByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const track = selectScreenShareAudioByPeerID(peerID)(store);\n  return selectAudioTrackVolume(track?.id)(store);\n});\n\n/**\n * Select the current simulcast layer of a track given a track ID.\n */\nexport const selectSimulcastLayerByTrack = byIDCurry((store: HMSStore, trackID?: string) => {\n  const track = selectTrackByIDBare(store, trackID);\n  if (track) {\n    if (track.type !== 'video') {\n      HMSLogger.w('Please pass video track here');\n      return undefined;\n    }\n    return track.layer;\n  }\n  return undefined;\n});\n\nconst selectMessagesByPeerIDInternal = createSelector(\n  [selectHMSMessages, selectLocalPeerID, selectPeerID],\n  (messages, localPeerID, peerID) => {\n    if (!peerID) {\n      return undefined;\n    }\n    return messages.filter(message => {\n      // Broadcast message\n      if (!message.recipientPeer && !message.recipientRoles?.length) {\n        return false;\n      }\n      // if localPeer or peerID is not a sender remove this\n      if (message.sender && ![localPeerID, peerID].includes(message.sender)) {\n        return false;\n      }\n      // at this point we know the sender is one of local or passed in peer, check the recipient side\n      return [localPeerID, peerID].includes(message.recipientPeer!);\n    });\n  },\n);\n\nconst selectMessagesByRoleInternal = createSelector([selectHMSMessages, selectRoleName], (messages, roleName) => {\n  if (!roleName) {\n    return undefined;\n  }\n  return messages.filter(message => {\n    // Not Role message - Broadcast message or Private Peer message\n    if (!message.recipientRoles?.length) {\n      return false;\n    }\n    return message.recipientRoles?.includes(roleName);\n  });\n});\n\nexport const selectBroadcastMessages = createSelector(selectHMSMessages, messages => {\n  return messages.filter(message => {\n    return !message.recipientPeer && !message.recipientRoles?.length;\n  });\n});\n\nconst selectUnreadMessageCountByRole = createSelector([selectMessagesByRoleInternal, selectRoleName], messages => {\n  if (!messages) {\n    return 0;\n  }\n  return messages.filter(m => !m.read).length;\n});\n\nconst selectUnreadMessageCountByPeerID = createSelector([selectMessagesByPeerIDInternal, selectPeerID], messages => {\n  if (!messages) {\n    return 0;\n  }\n  return messages.filter(m => !m.read).length;\n});\n\nexport const selectBroadcastMessagesUnreadCount = createSelector(selectBroadcastMessages, messages => {\n  return messages.filter(m => !m.read).length;\n});\n\nexport const selectMessagesByPeerID = byIDCurry(selectMessagesByPeerIDInternal);\n\nexport const selectMessagesByRole = byIDCurry(selectMessagesByRoleInternal);\n\nexport const selectMessagesUnreadCountByRole = byIDCurry(selectUnreadMessageCountByRole);\nexport const selectMessagesUnreadCountByPeerID = byIDCurry(selectUnreadMessageCountByPeerID);\n\n/**\n * Select an array of peers of a particular role\n * @param role HMSRoleName\n * @returns HMSPeer[]\n */\nexport const selectPeersByRole = (role: HMSRoleName) =>\n  createSelector([selectPeers], peers => {\n    return peers.filter(p => p.roleName === role);\n  });\n\n/**\n * Select an array of peers of a particular role\n * @param roles HMSRoleName[]\n * @returns HMSPeer[]\n */\nexport const selectPeersByRoles = (roles: HMSRoleName[]) =>\n  createSelector([selectPeers], (peers: HMSPeer[]) => {\n    return peers.filter((peer: HMSPeer) => {\n      return peer.roleName ? roles.includes(peer.roleName) : false;\n    });\n  });\n/**\n * Selects the peer metadata for the passed in peer and returns it as JSON. If metadata is not present\n * or conversion to JSON gives an error, an empty object is returned.\n * Please directly use peer.metadata in case the metadata is not JSON by design.\n */\nexport const selectPeerMetadata = (peerId: HMSPeerID) =>\n  createSelector(selectPeerByID(peerId), peer => {\n    try {\n      return peer?.metadata && peer.metadata !== '' ? JSON.parse(peer.metadata) : {};\n    } catch (error) {\n      console.error('cannot parse peer metadata', error);\n      return {};\n    }\n  });\n\nexport const selectHasPeerHandRaised = (peerId: HMSPeerID) =>\n  createSelector(selectPeerByID(peerId), peer => {\n    return !!peer?.isHandRaised;\n  });\n\nexport const selectPeerName = (peerId: HMSPeerID) => createSelector(selectPeerByID(peerId), peer => peer?.name);\n\nexport const selectPollByID = byIDCurry(selectPollByIDBare);\n\nexport const selectMessageByMessageID = (id: string) =>\n  createSelector(selectMessagesMap, messages => {\n    return messages[id];\n  });\n\nexport const selectIsTranscriptionAllowedByMode = (mode: HMSTranscriptionMode) =>\n  createSelector(selectLocalPeerRole, role => {\n    if (!role?.permissions.transcriptions) {\n      return false;\n    }\n    // only one admin permission\n    return role.permissions.transcriptions[mode].length > 0;\n  });\n", "import { HMSStatsStore, HMSStore } from '../schema';\n\nexport type StoreTypes = HMSStore | HMSStatsStore;\n\ntype byIDSelector<S extends StoreTypes, T> = (store: S, id?: string) => T;\n\n/**\n * StoreSelector is a function that takes in {@link HMSStore} as argument\n * and returns a part of the store that is queried using the selector.\n * @typeParam T Part of the store that you wish to query.\n */\nexport type StoreSelector<S extends StoreTypes, T> = (store: S) => T;\n\n/**\n * takes in a normal selector which has store and id as input and curries it to make it easier to use.\n * Before: store.getState((store) => normalSelector(store, peerID))\n * After: store.getState(curriedSelector(peerID))\n */\nexport function byIDCurry<S extends StoreTypes, T>(selector: byIDSelector<S, T>): (id?: string) => StoreSelector<S, T> {\n  return (id?: string) => {\n    return (store: S) => selector(store, id);\n  };\n}\n", "import { HMSLogLevel } from '../internal';\n\nconst HMS_STORE_TAG = 'HMS-Store:';\n\nexport class HMSLogger {\n  static level: HMSLogLevel = HMSLogLevel.VERBOSE;\n\n  static v(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.VERBOSE, tag, ...data);\n  }\n\n  static d(...data: any[]) {\n    this.log(HMSLogLevel.DEBUG, ...data);\n  }\n\n  static i(...data: any[]) {\n    this.log(HMSLogLevel.INFO, ...data);\n  }\n\n  static w(...data: any[]) {\n    this.log(HMSLogLevel.WARN, ...data);\n  }\n\n  static e(...data: any[]) {\n    this.log(HMSLogLevel.ERROR, ...data);\n  }\n\n  static time(mark: string) {\n    this.log(HMSLogLevel.TIME, '[HMSPerformanceTiming]', mark);\n  }\n\n  static timeEnd(mark: string) {\n    this.log(HMSLogLevel.TIMEEND, '[HMSPerformanceTiming]', mark, mark);\n  }\n\n  static cleanup() {\n    performance.clearMarks();\n    performance.clearMeasures();\n  }\n\n  /* eslint-disable */\n  private static log(level: HMSLogLevel, ...data: any[]) {\n    if (this.level.valueOf() > level.valueOf()) {\n      return;\n    }\n\n    switch (level) {\n      case HMSLogLevel.VERBOSE: {\n        console.log(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.DEBUG: {\n        console.debug(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.INFO: {\n        console.info(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.WARN: {\n        console.warn(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.ERROR: {\n        console.error(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.TIME: {\n        performance.mark(data[1]);\n        break;\n      }\n      case HMSLogLevel.TIMEEND: {\n        const tag = data[0];\n        const mark = data[1];\n        try {\n          const entry = performance.measure(mark, mark);\n          //@ts-ignore\n          this.log(HMSLogLevel.DEBUG, tag, mark, entry?.duration);\n          performance.clearMarks(mark);\n          performance.clearMeasures(mark);\n        } catch (error) {\n          this.log(HMSLogLevel.DEBUG, tag, mark, error);\n        }\n        break;\n      }\n    }\n  }\n}\n", "import { createSelector } from 'reselect';\nimport { selectLocalPeerRole, selectPeersMap, selectPreviewRole, selectRolesMap, selectTracksMap } from './selectors';\nimport { isRoleAllowedToPublish } from './selectorUtils';\nimport { HMSRole } from '../internal';\nimport { HMSPeer, HMSStore } from '../schema';\n\nexport interface HMSPeerWithMuteStatus {\n  peer: HMSPeer;\n  isAudioEnabled?: boolean;\n}\n\n/**\n * @privateRemarks\n * this is more friendly to UI format, the object in store has only peer id and role name instead of the full objects\n */\nexport interface HMSRoleChangeRequest {\n  requestedBy?: HMSPeer;\n  role: HMSRole;\n  token: string;\n}\n\nexport const selectPeersWithAudioStatus = createSelector([selectPeersMap, selectTracksMap], (peersMap, tracksMap) => {\n  const participants: HMSPeerWithMuteStatus[] = Object.values(peersMap).map(peer => {\n    return {\n      peer: peer,\n      isAudioEnabled: peer.audioTrack ? tracksMap[peer.audioTrack]?.enabled : false,\n    };\n  });\n  return participants;\n});\n\nconst selectRoleChangeStoreRequest = (store: HMSStore) => {\n  return store.roleChangeRequests[0] || null;\n};\n\n/**\n * Select the role change request received for your local peer.\n */\nexport const selectRoleChangeRequest = createSelector(\n  [selectRoleChangeStoreRequest, selectPeersMap, selectRolesMap],\n  (request, peersMap, rolesMap): HMSRoleChangeRequest | null => {\n    if (!request) {\n      return null;\n    }\n    return {\n      requestedBy: request.requestedBy ? peersMap[request.requestedBy] : undefined,\n      role: rolesMap[request.roleName],\n      token: request.token,\n    };\n  },\n);\n\n/**\n * Select what streams is the local peer allowed to publish from video, audio and screenshare.\n */\nexport const selectIsAllowedToPublish = createSelector([selectLocalPeerRole], role => isRoleAllowedToPublish(role));\n\n/**\n * Select what streams is the local peer allowed to preview from video, audio\n */\nexport const selectIsAllowedToPreviewMedia = createSelector([selectPreviewRole], role => isRoleAllowedToPublish(role));\n", "import { createSelector } from 'reselect';\nimport {\n  selectLocalAudioTrackID,\n  selectLocalVideoTrackID,\n  selectPeers,\n  selectRolesMap,\n  selectRoom,\n  selectTracksMap,\n} from './selectors';\nimport { isRoleAllowedToPublish } from './selectorUtils';\nimport { HMSPeer, HMSTrack } from '../schema';\n\nexport const selectRoleByRoleName = (roleName: string) =>\n  createSelector([selectRolesMap], rolesMap => rolesMap[roleName]);\n\nexport const selectIsRoleAllowedToPublish = (roleName: string) => {\n  return createSelector(selectRoleByRoleName(roleName), role => isRoleAllowedToPublish(role));\n};\n\nconst selectLocalVideoPlugins = createSelector([selectLocalVideoTrackID, selectTracksMap], (trackID, tracksMap) => {\n  let track: HMSTrack | null = null;\n  if (trackID) {\n    track = tracksMap[trackID];\n  }\n  return track?.plugins || [];\n});\n\nconst selectLocalAudioPlugins = createSelector([selectLocalAudioTrackID, selectTracksMap], (trackID, tracksMap) => {\n  let track: HMSTrack | null = null;\n  if (trackID) {\n    track = tracksMap[trackID];\n  }\n  return track?.plugins || [];\n});\n\nexport const selectIsLocalVideoPluginPresent = (pluginName: string) => {\n  return createSelector([selectLocalVideoPlugins], plugins => {\n    return plugins.includes(pluginName);\n  });\n};\n\nexport const selectIsLocalAudioPluginPresent = (pluginName: string) => {\n  return createSelector([selectLocalAudioPlugins], plugins => {\n    return plugins.includes(pluginName);\n  });\n};\n\n/**\n * Selects the first peer passing the condition given by the argument predicate function\n *\n * Ex: to select a peer whose metadata has spotlight set to true(assuming peer.metadata is a valid json string), use\n * ```js\n * const spotlightPeer = useHMSStore(selectPeerByCondition(peer => JSON.parse(peer.metadata).spotlight))\n * ```\n */\nexport const selectPeerByCondition = (predicate: (peer: HMSPeer) => boolean) =>\n  createSelector(selectPeers, peers => {\n    return peers.find(predicate);\n  });\n\n/**\n * Selects all peers passing the condition given by the argument predicate function\n *\n * Ex: to select peers with isHandRaised set to true in their metadata(assuming peer.metadata is a valid json string), use\n * ```js\n * const handRaisedPeers = useHMSStore(selectPeersByCondition(peer => JSON.parse(peer.metadata).isHandRaised))\n * ```\n */\nexport const selectPeersByCondition = (predicate: (peer: HMSPeer) => boolean) =>\n  createSelector(selectPeers, peers => {\n    return peers.filter(predicate);\n  });\n\n/**\n * Returns a boolean to indicate if the local peer joined within the past `timeMs` milliseconds.\n *\n * Ex: to know if the local peer joined within the last one second\n * ```js\n * const joinedWithinASecond = useHMSStore(selectDidIJoinWithin(1000));\n * ```\n */\nexport const selectDidIJoinWithin = (timeMs: number) =>\n  createSelector(selectRoom, room => room.joinedAt && Date.now() - room.joinedAt.getTime() <= timeMs);\n", "import { produce } from 'immer';\nimport shallow from 'zustand/shallow';\nimport create, {\n  EqualityChecker,\n  PartialState,\n  SetState,\n  State,\n  StateSelector,\n  StateSliceListener,\n  StoreApi,\n} from 'zustand/vanilla';\nimport { HMSNotifications } from './HMSNotifications';\nimport { HMSSDKActions } from './HMSSDKActions';\nimport { NamedSetState } from './internalTypes';\nimport { storeNameWithTabTitle } from '../common/storeName';\nimport { HMSDiagnosticsInterface } from '../diagnostics/interfaces';\nimport { IHMSActions } from '../IHMSActions';\nimport { IHMSStatsStoreReadOnly, IHMSStore, IHMSStoreReadOnly, IStore } from '../IHMSStore';\nimport { isBrowser } from '../internal';\nimport { createDefaultStoreState, HMSGenericTypes, HMSStore } from '../schema';\nimport { IHMSNotifications } from '../schema/notification';\nimport { HMSSdk } from '../sdk';\nimport { HMSStats } from '../webrtc-stats';\n\ndeclare global {\n  interface Window {\n    __hms: HMSReactiveStore;\n    __triggerBeamEvent__: (args: any) => void;\n  }\n}\n\nexport class HMSReactiveStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  private readonly sdk?: HMSSdk;\n  private readonly actions: IHMSActions<T>;\n  private readonly store: IHMSStore<T>;\n  private readonly notifications: HMSNotifications<T>;\n  private stats?: HMSStats;\n  private diagnostics?: HMSDiagnosticsInterface;\n  /** @TODO store flag for both HMSStore and HMSInternalsStore */\n  private initialTriggerOnSubscribe: boolean;\n\n  constructor(hmsStore?: IHMSStore<T>, hmsActions?: IHMSActions<T>, hmsNotifications?: HMSNotifications<T>) {\n    if (hmsStore) {\n      this.store = hmsStore;\n    } else {\n      this.store = HMSReactiveStore.createNewHMSStore<HMSStore<T>>(\n        storeNameWithTabTitle('HMSStore'),\n        createDefaultStoreState,\n      );\n    }\n    if (hmsNotifications) {\n      this.notifications = hmsNotifications;\n    } else {\n      this.notifications = new HMSNotifications(this.store);\n    }\n    if (hmsActions) {\n      this.actions = hmsActions;\n    } else {\n      this.sdk = new HMSSdk();\n      this.actions = new HMSSDKActions(this.store, this.sdk, this.notifications);\n    }\n\n    // @ts-ignore\n    this.actions.setFrameworkInfo({ type: 'js', sdkVersion: require('../../package.json').version });\n\n    this.initialTriggerOnSubscribe = false;\n\n    if (isBrowser) {\n      // @ts-ignore\n      window.__hms = this;\n    }\n  }\n\n  /**\n   * By default, store.subscribe does not call the handler with the current state at time of subscription,\n   * this behaviour can be modified by calling this function. What it means is that instead of calling the\n   * handler only for changes which happen post subscription we'll also call it exactly once at the time\n   * of subscription with the current state. This behaviour is similar to that of BehaviourSubject in RxJS.\n   * This will be an irreversible change\n   *\n   * Note: you don't need this if you're using our React hooks, it takes care of this requirement.\n   */\n  triggerOnSubscribe(): void {\n    if (this.initialTriggerOnSubscribe) {\n      // already done\n      return;\n    }\n    HMSReactiveStore.makeStoreTriggerOnSubscribe(this.store);\n    this.initialTriggerOnSubscribe = true;\n  }\n\n  /**\n   * A reactive store which has a subscribe method you can use in combination with selectors\n   * to subscribe to a subset of the store. The store serves as a single source of truth for\n   * all data related to the corresponding HMS Room.\n   */\n  getStore(): IHMSStoreReadOnly {\n    return this.store;\n  }\n\n  /**\n   * Any action which may modify the store or may need to talk to the SDK will happen\n   * through the IHMSActions instance returned by this\n   *\n   * @deprecated use getActions\n   */\n  getHMSActions(): IHMSActions<T> {\n    return this.actions;\n  }\n\n  /**\n   * Any action which may modify the store or may need to talk to the SDK will happen\n   * through the IHMSActions instance returned by this\n   */\n  getActions(): IHMSActions<T> {\n    return this.actions;\n  }\n\n  /**\n   * This return notification handler function to which you can pass your callback to\n   * receive notifications like peer joined, peer left, etc. to show in your UI or use\n   * for analytics\n   */\n  getNotifications(): IHMSNotifications {\n    return { onNotification: this.notifications.onNotification };\n  }\n\n  getStats = (): IHMSStatsStoreReadOnly => {\n    if (!this.stats) {\n      this.stats = new HMSStats(this.store as unknown as IHMSStore, this.sdk);\n    }\n    return this.stats;\n  };\n\n  getDiagnosticsSDK = (): HMSDiagnosticsInterface => {\n    if (!this.diagnostics) {\n      this.diagnostics = this.actions.initDiagnostics();\n    }\n\n    return this.diagnostics;\n  };\n\n  /**\n   * @internal\n   */\n  static createNewHMSStore<T extends State>(storeName: string, defaultCreatorFn: () => T): IStore<T> {\n    const hmsStore = create<T>(() => defaultCreatorFn());\n    // make set state immutable, by passing functions through immer\n    const savedSetState = hmsStore.setState;\n    hmsStore.setState = (partial: any) => {\n      const nextState = typeof partial === 'function' ? produce(partial) : partial;\n      savedSetState(nextState);\n    };\n    // add option to pass selector to getState\n    const prevGetState = hmsStore.getState;\n    // eslint-disable-next-line complexity\n    hmsStore.getState = <StateSlice>(selector?: StateSelector<T, StateSlice>) => {\n      return selector ? selector(prevGetState()) : prevGetState();\n    };\n    HMSReactiveStore.compareWithShallowCheckInSubscribe(hmsStore);\n    const namedSetState = HMSReactiveStore.setUpDevtools(hmsStore, storeName);\n    return { ...hmsStore, namedSetState };\n  }\n\n  /**\n   * @internal\n   */\n  static makeStoreTriggerOnSubscribe<T extends State>(store: IStore<T>) {\n    const prevSubscribe = store.subscribe;\n    store.subscribe = <StateSlice>(\n      listener: StateSliceListener<StateSlice>,\n      selector?: StateSelector<T, StateSlice>,\n      equalityFn?: EqualityChecker<StateSlice>,\n    ): (() => void) => {\n      // initial call, the prev state will always be null for this\n      listener(store.getState(selector), undefined as unknown as StateSlice);\n      // then subscribe\n      return prevSubscribe(listener, selector!, equalityFn);\n    };\n  }\n\n  /**\n   * use shallow equality check by default for subscribe to optimize for array/object selectors.\n   * by default zustand does only reference matching so something like, getPeers for eg. would trigger\n   * the corresponding component even if peers didn't actually change, as selectPeers creates a new array every time.\n   * Although the array reference changes, the order of peers and peer objects don't themselves change in this case,\n   * and a shallow check avoids that triggering.\n   * @private\n   */\n  private static compareWithShallowCheckInSubscribe<T extends State>(hmsStore: StoreApi<T>) {\n    const prevSubscribe = hmsStore.subscribe;\n    hmsStore.subscribe = <StateSlice>(\n      listener: StateSliceListener<StateSlice>,\n      selector?: StateSelector<T, StateSlice>,\n      equalityFn?: EqualityChecker<StateSlice>,\n    ): (() => void) => {\n      if (!selector) {\n        selector = (store): StateSlice => store as unknown as StateSlice;\n      }\n      equalityFn = equalityFn || shallow;\n      return prevSubscribe(listener, selector, equalityFn);\n    };\n  }\n\n  /**\n   * @private\n   * @privateRemarks\n   * sets up redux devtools for the store, so redux extension can be used to visualize the store.\n   * zustand's default devtool middleware only enhances the set function, we're here creating another nameSetState in\n   * IHMStore which behaves like setState but takes an extra parameter for action name\n   * https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Methods.md\n   * modified version of zustand's devtools - https://github.com/pmndrs/zustand/blob/v3.5.7/src/middleware.ts#L46\n   */\n  private static setUpDevtools<T extends State>(api: StoreApi<T>, prefix: string): NamedSetState<T> {\n    let extension;\n    try {\n      extension = (window as any).__REDUX_DEVTOOLS_EXTENSION__ || (window as any).top.__REDUX_DEVTOOLS_EXTENSION__;\n    } catch {}\n    if (!extension) {\n      return (fn: any) => {\n        api.setState(fn);\n      };\n    }\n    const devtools = extension.connect(HMSReactiveStore.devtoolsOptions(prefix));\n    devtools.prefix = prefix ? `${prefix} > ` : '';\n    const savedSetState = api.setState;\n    api.setState = (fn: any) => {\n      savedSetState(fn);\n      devtools.send(`${devtools.prefix}setState`, api.getState());\n    };\n\n    devtools.subscribe(HMSReactiveStore.devtoolsSubscribe(devtools, api, savedSetState));\n\n    devtools.send('setUpStore', api.getState());\n\n    return (fn: any, action?: string) => {\n      savedSetState(fn);\n      const actionName = action ? action : `${devtools.prefix}action`;\n      devtools.send(actionName, api.getState());\n    };\n  }\n\n  /**\n   * https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md\n   */\n  private static devtoolsOptions(prefix: string) {\n    return {\n      name: prefix,\n      actionsBlacklist: ['audioLevel', 'playlistProgress', 'connectionQuality'], // very high frequency update, pollutes the action history\n    };\n  }\n\n  /**\n   * redux devtools allows for time travel debugging where it sends an action to update the store, users can\n   * also export and import state in the devtools, listen to the corresponding functions from devtools and take\n   * required action.\n   * @param devtools - reference to devtools extension object\n   * @param api\n   * @param savedSetState - setState saved before its modified to update devtools\n   * @private\n   */\n  private static devtoolsSubscribe<T extends State>(devtools: any, api: StoreApi<T>, savedSetState: SetState<T>) {\n    // disabling complexity check instead of refactoring so as to keep the code close to zustand's and make\n    // any future update based on upstream changes easier.\n    // eslint-disable-next-line complexity\n    return (message: any) => {\n      if (message.type === 'DISPATCH' && message.state) {\n        const ignoreState = ['JUMP_TO_ACTION', 'JUMP_TO_STATE'].includes(message.payload.type);\n        if (!ignoreState) {\n          // manual dispatch from the extension\n          api.setState(JSON.parse(message.state));\n        } else {\n          // for time travel, no need to add new state changes in devtools\n          savedSetState(JSON.parse(message.state));\n        }\n      } else if (message.type === 'DISPATCH' && message.payload?.type === 'COMMIT') {\n        devtools.init(api.getState());\n      } else if (message.type === 'DISPATCH' && message.payload?.type === 'IMPORT_STATE') {\n        const actions = message.payload.nextLiftedState?.actionsById;\n        const computedStates = message.payload.nextLiftedState?.computedStates || [];\n\n        computedStates.forEach(({ state }: { state: PartialState<T> }, index: number) => {\n          const action = actions[index] || `${devtools.prefix}setState`;\n          if (index === 0) {\n            devtools.init(state);\n          } else {\n            savedSetState(state);\n            devtools.send(action, api.getState());\n          }\n        });\n      }\n    };\n  }\n}\n", "import { EventEmitter2 as EventEmitter } from 'eventemitter2';\nimport {\n  PEER_NOTIFICATION_TYPES,\n  POLL_NOTIFICATION_TYPES,\n  TRACK_NOTIFICATION_TYPES,\n  TRANSCRIPTION_NOTIFICATION_TYPES,\n} from './common/mapping';\nimport { IHMSStore } from '../IHMSStore';\nimport * as sdkTypes from '../internal';\nimport {\n  HMSChangeMultiTrackStateRequest,\n  HMSChangeTrackStateRequest,\n  HMSDeviceChangeEvent,\n  HMSException,\n  HMSGenericTypes,\n  HMSLeaveRoomRequest,\n  HMSMessage,\n  HMSNotification,\n  HMSNotificationSeverity,\n  HMSNotificationTypes,\n  HMSPeer,\n  HMSPlaylistItem,\n  HMSTrack,\n  HMSTrackID,\n} from '../schema';\nimport {\n  HMSNotificationCallback,\n  HMSNotificationInCallback,\n  HMSNotificationTypeParam,\n  IHMSNotifications,\n} from '../schema/notification';\nimport { selectPeerByID, selectPollByID, selectTrackByID } from '../selectors';\n\nconst HMS_NOTIFICATION_EVENT = 'hmsNotification';\n\nexport class HMSNotifications<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>\n  implements IHMSNotifications\n{\n  private id = 0;\n  private eventEmitter: EventEmitter;\n  private store: IHMSStore<T>;\n\n  constructor(store: IHMSStore<T>) {\n    this.store = store;\n    this.eventEmitter = new EventEmitter({ maxListeners: Object.keys(HMSNotificationTypes).length });\n  }\n  onNotification = <T extends HMSNotificationTypeParam>(cb: HMSNotificationCallback<T>, type?: T) => {\n    const eventCallback = (notification: HMSNotificationInCallback<T>) => {\n      if (type) {\n        let matchesType: boolean;\n        if (Array.isArray(type)) {\n          matchesType = type.includes(notification.type as HMSNotificationTypes);\n        } else {\n          matchesType = type === notification.type;\n        }\n        if (!matchesType) {\n          return;\n        }\n      }\n      cb(notification);\n    };\n    this.eventEmitter.addListener(HMS_NOTIFICATION_EVENT, eventCallback);\n    return () => {\n      this.eventEmitter.removeListener(HMS_NOTIFICATION_EVENT, eventCallback);\n    };\n  };\n\n  sendPlaylistTrackEnded<T>(item: HMSPlaylistItem<T>): void {\n    const notification = this.createNotification(\n      HMSNotificationTypes.PLAYLIST_TRACK_ENDED,\n      item,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendDeviceChange(request: HMSDeviceChangeEvent) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.DEVICE_CHANGE_UPDATE,\n      request,\n      request.error ? HMSNotificationSeverity.ERROR : HMSNotificationSeverity.INFO,\n      `Selected ${request.type} device - ${request.selection?.label}`,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendLeaveRoom(request: HMSLeaveRoomRequest) {\n    const peerName = request.requestedBy?.name;\n    const notification = this.createNotification(\n      request.roomEnded || !peerName ? HMSNotificationTypes.ROOM_ENDED : HMSNotificationTypes.REMOVED_FROM_ROOM,\n      request,\n      HMSNotificationSeverity.INFO,\n      `${request.roomEnded ? `Room ended` : 'Removed from room'} ${peerName ? `by ${peerName}` : ''}`,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendPeerList(peers: HMSPeer[]) {\n    if (peers.length === 0) {\n      return;\n    }\n    const notification = this.createNotification(HMSNotificationTypes.PEER_LIST, peers, HMSNotificationSeverity.INFO);\n    this.emitEvent(notification);\n  }\n\n  sendPeerUpdate(type: sdkTypes.HMSPeerUpdate, peer: HMSPeer | null) {\n    const hmsPeer = this.store.getState(selectPeerByID(peer?.id)) || peer;\n    const notificationType = PEER_NOTIFICATION_TYPES[type];\n    if (notificationType && hmsPeer) {\n      const notification = this.createNotification(notificationType, hmsPeer, HMSNotificationSeverity.INFO);\n      this.emitEvent(notification);\n    }\n  }\n\n  sendTrackUpdate(type: sdkTypes.HMSTrackUpdate, trackID: HMSTrackID) {\n    const hmsTrack = this.store.getState(selectTrackByID(trackID));\n    const notificationType = TRACK_NOTIFICATION_TYPES[type];\n    if (notificationType) {\n      const notification = this.createNotification(notificationType, hmsTrack, HMSNotificationSeverity.INFO);\n      this.emitEvent(notification);\n    }\n  }\n\n  sendMessageReceived(message: HMSMessage) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.NEW_MESSAGE,\n      message,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendError(error: HMSException) {\n    const notification = this.createNotification(HMSNotificationTypes.ERROR, error, HMSNotificationSeverity.ERROR);\n    this.emitEvent(notification);\n  }\n\n  sendReconnecting(error: HMSException) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.RECONNECTING,\n      error,\n      HMSNotificationSeverity.ERROR,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendReconnected() {\n    const notification = this.createNotification(HMSNotificationTypes.RECONNECTED, null, HMSNotificationSeverity.INFO);\n    this.emitEvent(notification);\n  }\n\n  sendChangeTrackStateRequest(request: HMSChangeTrackStateRequest) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST,\n      request,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendChangeMultiTrackStateRequest(request: HMSChangeMultiTrackStateRequest) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST,\n      request,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendPollUpdate(type: sdkTypes.HMSPollsUpdate, pollID: string) {\n    const notificationType = POLL_NOTIFICATION_TYPES[type];\n    const poll = this.store.getState(selectPollByID(pollID));\n\n    if (notificationType) {\n      const notification = this.createNotification(notificationType, poll, HMSNotificationSeverity.INFO);\n      this.emitEvent(notification);\n    }\n  }\n\n  sendTranscriptionUpdate(transcriptions?: sdkTypes.HMSTranscriptionInfo[]) {\n    const notification = this.createNotification(\n      TRANSCRIPTION_NOTIFICATION_TYPES[sdkTypes.HMSRoomUpdate.TRANSCRIPTION_STATE_UPDATED],\n      transcriptions,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n  private emitEvent(notification: HMSNotification) {\n    this.eventEmitter.emit(HMS_NOTIFICATION_EVENT, notification);\n  }\n\n  private createNotification<T>(\n    type: HMSNotificationTypes,\n    data?:\n      | HMSPeer\n      | HMSPeer[]\n      | HMSTrack\n      | HMSMessage\n      | HMSException\n      | HMSChangeTrackStateRequest\n      | HMSChangeMultiTrackStateRequest\n      | HMSLeaveRoomRequest\n      | HMSDeviceChangeEvent\n      | HMSPlaylistItem<T>\n      | sdkTypes.HMSPoll\n      | sdkTypes.HMSTranscriptionInfo[]\n      | null,\n    severity?: HMSNotificationSeverity,\n    message = '',\n  ): HMSNotification {\n    this.id++;\n    return {\n      id: this.id,\n      type,\n      message,\n      data,\n      severity,\n    } as HMSNotification;\n  }\n}\n", "import * as sdkTypes from '../../internal';\nimport { HMSNotificationTypes } from '../../schema/notification';\n\ntype PeerNotificationMap = { [key in sdkTypes.HMSPeerUpdate]?: HMSNotificationTypes };\n\nexport const PEER_NOTIFICATION_TYPES: PeerNotificationMap = {\n  [sdkTypes.HMSPeerUpdate.PEER_JOINED]: HMSNotificationTypes.PEER_JOINED,\n  [sdkTypes.HMSPeerUpdate.PEER_LEFT]: HMSNotificationTypes.PEER_LEFT,\n  [sdkTypes.HMSPeerUpdate.ROLE_UPDATED]: HMSNotificationTypes.ROLE_UPDATED,\n  [sdkTypes.HMSPeerUpdate.NAME_UPDATED]: HMSNotificationTypes.NAME_UPDATED,\n  [sdkTypes.HMSPeerUpdate.METADATA_UPDATED]: HMSNotificationTypes.METADATA_UPDATED,\n  [sdkTypes.HMSPeerUpdate.HAND_RAISE_CHANGED]: HMSNotificationTypes.HAND_RAISE_CHANGED,\n};\n\ntype TrackNotificationMap = { [key in sdkTypes.HMSTrackUpdate]: HMSNotificationTypes };\nexport const TRACK_NOTIFICATION_TYPES: TrackNotificationMap = {\n  [sdkTypes.HMSTrackUpdate.TRACK_ADDED]: HMSNotificationTypes.TRACK_ADDED,\n  [sdkTypes.HMSTrackUpdate.TRACK_REMOVED]: HMSNotificationTypes.TRACK_REMOVED,\n  [sdkTypes.HMSTrackUpdate.TRACK_MUTED]: HMSNotificationTypes.TRACK_MUTED,\n  [sdkTypes.HMSTrackUpdate.TRACK_UNMUTED]: HMSNotificationTypes.TRACK_UNMUTED,\n  [sdkTypes.HMSTrackUpdate.TRACK_DEGRADED]: HMSNotificationTypes.TRACK_DEGRADED,\n  [sdkTypes.HMSTrackUpdate.TRACK_RESTORED]: HMSNotificationTypes.TRACK_RESTORED,\n  [sdkTypes.HMSTrackUpdate.TRACK_DESCRIPTION_CHANGED]: HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED,\n};\n\ntype PollNotificationMap = { [key in sdkTypes.HMSPollsUpdate]: HMSNotificationTypes };\n\nexport const POLL_NOTIFICATION_TYPES: PollNotificationMap = {\n  [sdkTypes.HMSPollsUpdate.POLL_CREATED]: HMSNotificationTypes.POLL_CREATED,\n  [sdkTypes.HMSPollsUpdate.POLL_STARTED]: HMSNotificationTypes.POLL_STARTED,\n  [sdkTypes.HMSPollsUpdate.POLL_STOPPED]: HMSNotificationTypes.POLL_STOPPED,\n  [sdkTypes.HMSPollsUpdate.POLL_STATS_UPDATED]: HMSNotificationTypes.POLL_VOTES_UPDATED,\n  [sdkTypes.HMSPollsUpdate.POLLS_LIST]: HMSNotificationTypes.POLLS_LIST,\n};\n\ntype TranscriptionNotificationMap = {\n  [key in sdkTypes.HMSRoomUpdate.TRANSCRIPTION_STATE_UPDATED]: HMSNotificationTypes;\n};\n\nexport const TRANSCRIPTION_NOTIFICATION_TYPES: TranscriptionNotificationMap = {\n  [sdkTypes.HMSRoomUpdate.TRANSCRIPTION_STATE_UPDATED]: HMSNotificationTypes.TRANSCRIPTION_STATE_UPDATED,\n};\n", "import { HMSLogger } from '../../common/ui-logger';\nimport { IHMSStore } from '../../IHMSStore';\nimport { HMSGenericTypes, HMSStore } from '../../schema';\n\ntype ActionName = string;\ntype SetTimeOutId = number;\ntype SetState = (store: HMSStore) => void;\n\n/**\n * pass in an action and an update function, the update functions will be batched and run such that\n * store updates are limited to only one action in a time interval\n *\n */\nexport class ActionBatcher<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  private queuedUpdates: Record<ActionName, SetState[]> = {};\n  private timers: Record<ActionName, SetTimeOutId> = {};\n  private DEFAULT_INTERVAL_MS = 50;\n  private store: IHMSStore<T>;\n  constructor(store: IHMSStore<T>) {\n    this.store = store;\n  }\n\n  setState(fn: SetState, action: ActionName, timeout = this.DEFAULT_INTERVAL_MS) {\n    this.queuedUpdates[action] = this.queuedUpdates[action] || [];\n    this.queuedUpdates[action].push(fn);\n    if (this.timers[action]) {\n      return;\n    }\n    // set a future timeout if a timer is not there already\n    if (window) {\n      this.timers[action] = window.setTimeout(() => this.setStateBatched(action), timeout);\n    } else {\n      // nodejs, ignore batching for now\n      this.setStateBatched(action);\n    }\n  }\n\n  private setStateBatched(action: ActionName) {\n    if (this.queuedUpdates[action]?.length > 0) {\n      const batchedFn = (draftStore: HMSStore) => {\n        this.queuedUpdates[action].forEach(fn => {\n          try {\n            fn(draftStore);\n          } catch (err) {\n            HMSLogger.w('failed to update store', err);\n          }\n        });\n      };\n      console.time(`timed-${action}`);\n      this.store.namedSetState(batchedFn, action);\n      console.timeEnd(`timed-${action}`);\n    }\n    // cleanup\n    delete this.queuedUpdates[action];\n    if (window && this.timers[action]) {\n      window.clearTimeout(this.timers[action]);\n      delete this.timers[action];\n    }\n  }\n}\n", "import { HMSRemoteAudioTrack, HMSRemoteVideoTrack, HMSTrack } from '../../internal';\n\nexport function isRemoteTrack(track: HMSTrack) {\n  return track instanceof HMSRemoteAudioTrack || track instanceof HMSRemoteVideoTrack;\n}\n", "import { HMSPeerStats, HMSTrackStats } from '../../interfaces';\nimport { HMSLocalTrack as SDKHMSLocalTrack, HMSPoll } from '../../internal';\nimport { HMSPeer, HMSPeerID, HMSScreenVideoTrack, HMSTrack, HMSTrackID, HMSVideoTrack } from '../../schema';\n\n/**\n * updates draftPeers with newPeers ensuring minimal reference changes\n * @remarks\n * This is mutable and impure function, it modifies the passed in data to ensure\n * minimal reference changes\n * @param draftPeers the current peers object in store, an immer draft object\n * @param newPeers the latest update which needs to be stored\n * @param newHmsTracks this will be update if required\n * @param newHmsSDkTracks this is future value of local hms tacks map\n */\n// eslint-disable-next-line complexity\nexport const mergeNewPeersInDraft = (\n  draftPeers: Record<HMSPeerID, HMSPeer>,\n  newPeers: Record<HMSPeerID, Partial<HMSPeer>>,\n) => {\n  const peerIDs = union(Object.keys(draftPeers), Object.keys(newPeers));\n  for (const peerID of peerIDs) {\n    const oldPeer = draftPeers[peerID];\n    const newPeer = newPeers[peerID];\n    if (isEntityUpdated(oldPeer, newPeer)) {\n      if (areArraysEqual(oldPeer.auxiliaryTracks, newPeer.auxiliaryTracks)) {\n        newPeer.auxiliaryTracks = oldPeer.auxiliaryTracks;\n      }\n      if (oldPeer.groups && areArraysEqual(oldPeer.groups, newPeer.groups)) {\n        newPeer.groups = oldPeer.groups;\n      }\n      Object.assign(oldPeer, newPeer);\n    } else if (isEntityRemoved(oldPeer, newPeer)) {\n      delete draftPeers[peerID];\n    } else if (isEntityAdded(oldPeer, newPeer)) {\n      draftPeers[peerID] = newPeer as HMSPeer;\n    }\n  }\n};\n\nexport const mergeNewTracksInDraft = (\n  draftTracks: Record<HMSTrackID, HMSTrack>,\n  newTracks: Record<HMSTrackID, Partial<HMSTrack>>,\n) => {\n  const trackIDs = union(Object.keys(draftTracks), Object.keys(newTracks));\n  for (const trackID of trackIDs) {\n    const oldTrack = draftTracks[trackID];\n    const newTrack = newTracks[trackID];\n    if (isEntityUpdated(oldTrack, newTrack)) {\n      mergeTrackArrayFields(oldTrack, newTrack);\n      Object.assign(oldTrack, newTrack);\n    } else if (isEntityRemoved(oldTrack, newTrack)) {\n      delete draftTracks[trackID];\n    } else if (isEntityAdded(oldTrack, newTrack)) {\n      draftTracks[trackID] = newTrack as HMSTrack;\n    }\n  }\n};\n\nexport const mergeNewPollsInDraft = (\n  draftPolls: Record<string, HMSPoll>,\n  newPolls: Record<string, Partial<HMSPoll>>,\n) => {\n  const pollIDs = union(Object.keys(draftPolls), Object.keys(newPolls));\n  for (const pollID of pollIDs) {\n    const oldPoll = draftPolls[pollID];\n    const newPoll = newPolls[pollID];\n    if (isEntityUpdated(oldPoll, newPoll)) {\n      if (oldPoll.questions && areArraysEqual(oldPoll.questions, newPoll.questions)) {\n        newPoll.questions = oldPoll.questions;\n      }\n      Object.assign(oldPoll, newPoll);\n    } else if (isEntityAdded(oldPoll, newPoll)) {\n      draftPolls[pollID] = newPoll as HMSPoll;\n    }\n  }\n};\n\nexport const mergeNewIndividualStatsInDraft = <TID extends string, T extends HMSPeerStats | HMSTrackStats>(\n  draftStats: Record<TID, T | undefined>,\n  newStats: Record<TID, Partial<T | undefined>>,\n) => {\n  const IDs = union(Object.keys(draftStats), Object.keys(newStats)) as TID[];\n  for (const trackID of IDs) {\n    const oldStat = draftStats[trackID];\n    const newStat = newStats[trackID];\n    if (isEntityUpdated(oldStat, newStat)) {\n      Object.assign(oldStat!, newStat);\n    } else if (isEntityRemoved(oldStat, newStat)) {\n      delete draftStats[trackID];\n    } else if (isEntityAdded(oldStat, newStat)) {\n      draftStats[trackID] = newStat as T;\n    }\n  }\n};\n\nexport const mergeLocalTrackStats = (\n  draftStats: Record<HMSTrackID, HMSTrackStats[] | undefined>,\n  newStats: Record<HMSTrackID, Record<string, HMSTrackStats>>,\n  tracks: SDKHMSLocalTrack[],\n) => {\n  const trackMap: Record<string, HMSTrackStats[]> = tracks.reduce((acc, track) => {\n    // @ts-ignore\n    acc[track.firstTrackId] = Object.values(newStats[track.getTrackIDBeingSent()] || {}).sort((a, b) => {\n      if (!a.rid || !b.rid) {\n        return 0;\n      }\n      return a.rid < b.rid ? -1 : 1;\n    });\n    return acc;\n  }, {});\n  const IDs = union(Object.keys(draftStats), Object.keys(trackMap));\n  for (const trackID of IDs) {\n    if (!trackMap[trackID]) {\n      delete draftStats[trackID];\n      continue;\n    }\n    draftStats[trackID] = trackMap[trackID];\n  }\n};\n\n/**\n * array's are usually created with new reference, avoid that update if both arrays are same\n */\nexport const mergeTrackArrayFields = (oldTrack: HMSTrack, newTrack: Partial<HMSTrack>) => {\n  if (oldTrack.plugins && areArraysEqual(oldTrack.plugins, newTrack.plugins)) {\n    newTrack.plugins = oldTrack.plugins;\n  }\n  if (\n    oldTrack.type === 'video' &&\n    oldTrack.layerDefinitions &&\n    areArraysEqual(oldTrack.layerDefinitions, (newTrack as HMSVideoTrack | HMSScreenVideoTrack).layerDefinitions)\n  ) {\n    (newTrack as HMSVideoTrack | HMSScreenVideoTrack).layerDefinitions = oldTrack.layerDefinitions;\n  }\n};\n\nexport const isEntityUpdated = <T>(oldItem: T, newItem: T) => oldItem && newItem;\nconst isEntityRemoved = <T>(oldItem: T, newItem: T) => oldItem && !newItem;\nconst isEntityAdded = <T>(oldItem: T, newItem: T) => !oldItem && newItem;\n\n// eslint-disable-next-line complexity\nexport const areArraysEqual = <T>(arr1: T[], arr2?: T[]): boolean => {\n  if (arr1 === arr2 || (arr1.length === 0 && arr2?.length === 0)) {\n    // reference check\n    return true;\n  }\n  if (!arr1 || !arr2 || !(arr1.length === arr2.length)) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst union = <T>(arr1: T[], arr2: T[]): T[] => {\n  const set: Set<T> = new Set();\n  for (const elem of arr1) {\n    set.add(elem);\n  }\n  for (const elem of arr2) {\n    set.add(elem);\n  }\n  return Array.from(set);\n};\n", "import { areArraysEqual } from './sdkUtils/storeMergeUtils';\nimport * as sdkTypes from '../internal';\nimport {\n  HMSLocalAudioTrack as SDKHMSLocalAudioTrack,\n  HMSLocalVideoTrack as SDKHMSLocalVideoTrack,\n  HMSRemoteAudioTrack as SDKHMSRemoteAudioTrack,\n  HMSRemoteVideoTrack as SDKHMSRemoteVideoTrack,\n  HMSRoleChangeRequest as SDKHMSRoleChangeRequest,\n  HMSTrack as SDKHMSTrack,\n} from '../internal';\nimport { MessageNotification } from '../notification-manager';\nimport {\n  HMSAudioTrack,\n  HMSDeviceChangeEvent,\n  HMSException,\n  HMSMessage,\n  HMSPeer,\n  HMSPeerID,\n  HMSPlaylistItem,\n  HMSPlaylistType,\n  HMSRole,\n  HMSRoleChangeStoreRequest,\n  HMSRoleName,\n  HMSRoom,\n  HMSScreenVideoTrack,\n  HMSTrack,\n  HMSTrackException,\n  HMSTrackFacingMode,\n  HMSVideoTrack,\n} from '../schema';\n\n/**\n * This file has conversion functions from schema defined in sdk to normalised schema defined in store.\n * A lot of conversions below involve deep clone as once the object goes into store it becomes unmodifiable\n * due to immer, so it can't be mutated later.\n *\n * Objects directly from the SDK are not stored as is and cloned because the SDK might modify it later\n */\n\nexport class SDKToHMS {\n  static convertPeer(sdkPeer: sdkTypes.HMSPeer): Partial<HMSPeer> & Pick<HMSPeer, 'id'> {\n    return {\n      id: sdkPeer.peerId,\n      name: sdkPeer.name,\n      roleName: sdkPeer.role?.name,\n      isLocal: sdkPeer.isLocal,\n      videoTrack: sdkPeer.videoTrack?.trackId,\n      audioTrack: sdkPeer.audioTrack?.trackId,\n      auxiliaryTracks: sdkPeer.auxiliaryTracks.map(track => track.trackId),\n      customerUserId: sdkPeer.customerUserId,\n      metadata: sdkPeer.metadata,\n      joinedAt: sdkPeer.joinedAt,\n      groups: sdkPeer.groups,\n      isHandRaised: sdkPeer.isHandRaised,\n      type: sdkPeer.type,\n    };\n  }\n\n  static convertTrack(sdkTrack: SDKHMSTrack, peerId?: HMSPeerID): HMSTrack {\n    const track: HMSTrack = {\n      id: sdkTrack.trackId,\n      source: sdkTrack.source,\n      type: sdkTrack.type,\n      enabled: sdkTrack.enabled,\n      displayEnabled: sdkTrack.enabled,\n      peerId: sdkTrack.peerId || peerId,\n    } as HMSTrack;\n    this.enrichTrack(track, sdkTrack);\n    return track;\n  }\n\n  static enrichTrack(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    const mediaSettings = sdkTrack.getMediaTrackSettings();\n\n    if (sdkTrack instanceof SDKHMSRemoteAudioTrack) {\n      (track as HMSAudioTrack).volume = sdkTrack.getVolume() || 0;\n    }\n    SDKToHMS.updateDeviceID(track, sdkTrack);\n    SDKToHMS.enrichLocalTrack(track, sdkTrack);\n    if (track.type === 'video') {\n      if (track.source === 'screen') {\n        // @ts-ignore\n        track.displaySurface = mediaSettings.displaySurface;\n        SDKToHMS.enrichScreenTrack(track as HMSScreenVideoTrack, sdkTrack);\n      } else if (track.source === 'regular') {\n        (track as HMSVideoTrack).facingMode = mediaSettings.facingMode as HMSTrackFacingMode;\n      }\n      track.height = mediaSettings.height;\n      track.width = mediaSettings.width;\n      SDKToHMS.enrichVideoTrack(track as HMSVideoTrack, sdkTrack);\n    }\n    SDKToHMS.enrichPluginsDetails(track, sdkTrack);\n  }\n\n  static enrichLocalTrack(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      track.isPublished = sdkTrack.isPublished;\n    }\n  }\n\n  static updateDeviceID(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      track.deviceID = sdkTrack.settings.deviceId;\n    } else {\n      track.deviceID = sdkTrack.getMediaTrackSettings()?.deviceId;\n    }\n  }\n\n  static enrichVideoTrack(track: HMSVideoTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSRemoteVideoTrack) {\n      track.layer = sdkTrack.getLayer();\n      track.preferredLayer = sdkTrack.getPreferredLayer();\n      track.degraded = sdkTrack.degraded;\n    }\n    if (sdkTrack instanceof SDKHMSRemoteVideoTrack || sdkTrack instanceof SDKHMSLocalVideoTrack) {\n      if (!areArraysEqual(sdkTrack.getSimulcastDefinitions(), track.layerDefinitions)) {\n        track.layerDefinitions = sdkTrack.getSimulcastDefinitions();\n      }\n    }\n  }\n\n  static enrichScreenTrack(track: HMSScreenVideoTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack) {\n      const newCaptureHandle = sdkTrack.getCaptureHandle?.();\n      if (newCaptureHandle?.handle !== track.captureHandle?.handle) {\n        track.captureHandle = newCaptureHandle;\n      }\n      if (sdkTrack.isCurrentTab) {\n        track.displaySurface = 'selfBrowser';\n      }\n    }\n  }\n\n  static enrichPluginsDetails(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      if (!areArraysEqual(sdkTrack.getPlugins(), track.plugins)) {\n        track.plugins = sdkTrack.getPlugins();\n      }\n    }\n  }\n\n  static convertRoom(sdkRoom: sdkTypes.HMSRoom, sdkLocalPeerId?: string): Partial<HMSRoom> {\n    const { recording, rtmp, hls, transcriptions } = SDKToHMS.convertRecordingStreamingState(\n      sdkRoom.recording,\n      sdkRoom.rtmp,\n      sdkRoom.hls,\n      sdkRoom.transcriptions,\n    );\n    return {\n      id: sdkRoom.id,\n      name: sdkRoom.name,\n      localPeer: sdkLocalPeerId,\n      recording,\n      rtmp,\n      hls,\n      transcriptions,\n      sessionId: sdkRoom.sessionId,\n      startedAt: sdkRoom.startedAt,\n      joinedAt: sdkRoom.joinedAt,\n      peerCount: sdkRoom.peerCount,\n      isLargeRoom: sdkRoom.large_room_optimization,\n      isEffectsEnabled: sdkRoom.isEffectsEnabled,\n      disableNoneLayerRequest: sdkRoom.disableNoneLayerRequest,\n      isVBEnabled: sdkRoom.isVBEnabled,\n      effectsKey: sdkRoom.effectsKey,\n      isHipaaEnabled: sdkRoom.isHipaaEnabled,\n      isNoiseCancellationEnabled: sdkRoom.isNoiseCancellationEnabled,\n    };\n  }\n\n  static convertMessage(\n    sdkMessage: MessageNotification,\n    localPeerId: HMSPeerID,\n  ): Partial<HMSMessage> & Pick<HMSMessage, 'sender'> {\n    return {\n      sender: sdkMessage.peer?.peer_id,\n      senderName: sdkMessage.peer?.info.name,\n      senderRole: sdkMessage.peer?.role,\n      senderUserId: sdkMessage.peer?.info.user_id,\n      recipientPeer: sdkMessage.private ? localPeerId : undefined,\n      recipientRoles: sdkMessage.roles,\n      time: new Date(sdkMessage.timestamp),\n      type: sdkMessage.info.type,\n      message: sdkMessage.info.message,\n      id: sdkMessage.message_id,\n    };\n  }\n\n  static convertRoles(sdkRoles: HMSRole[]): Record<HMSRoleName, HMSRole> {\n    const roles: Record<HMSRoleName, HMSRole> = {};\n    if (sdkRoles) {\n      sdkRoles.forEach(role => {\n        roles[role.name] = role;\n      });\n    }\n    return roles;\n  }\n\n  static convertRoleChangeRequest(req: SDKHMSRoleChangeRequest): HMSRoleChangeStoreRequest {\n    return {\n      requestedBy: req.requestedBy?.peerId,\n      roleName: req.role.name,\n      token: req.token,\n    };\n  }\n\n  static convertException(sdkException: sdkTypes.HMSException): HMSException | HMSTrackException {\n    const isTrackException = 'trackType' in sdkException;\n    const exp = {\n      code: sdkException.code,\n      action: sdkException.action,\n      name: sdkException.name,\n      message: sdkException.message,\n      description: sdkException.description,\n      isTerminal: sdkException.isTerminal,\n      nativeError: sdkException.nativeError,\n      timestamp: new Date(),\n    } as HMSException;\n    if (isTrackException) {\n      (exp as HMSTrackException).trackType = (sdkException as sdkTypes.HMSTrackException)?.trackType;\n      return exp as HMSTrackException;\n    }\n    return exp;\n  }\n\n  static convertDeviceChangeUpdate(sdkDeviceChangeEvent: sdkTypes.HMSDeviceChangeEvent): HMSDeviceChangeEvent {\n    const convertedData: HMSDeviceChangeEvent = {\n      devices: sdkDeviceChangeEvent.devices,\n      selection: sdkDeviceChangeEvent.selection,\n      type: sdkDeviceChangeEvent.type,\n    };\n    if (sdkDeviceChangeEvent.error) {\n      convertedData.error = this.convertException(sdkDeviceChangeEvent.error);\n    }\n    return convertedData;\n  }\n\n  static convertPlaylist(playlistManager: sdkTypes.HMSPlaylistManager) {\n    const audioPlaylist = this.getConvertedPlaylistType(playlistManager, HMSPlaylistType.audio);\n    const videoPlaylist = this.getConvertedPlaylistType(playlistManager, HMSPlaylistType.video);\n    return { audio: audioPlaylist, video: videoPlaylist };\n  }\n\n  static convertPlaylistItem<T>(\n    playlistManager: sdkTypes.HMSPlaylistManager,\n    playlistItem: sdkTypes.HMSPlaylistItem<T>,\n  ): HMSPlaylistItem<T> {\n    const type = playlistItem.type;\n    const currentSelection = playlistManager.getCurrentSelection(type);\n    const isPlaying = playlistManager.isPlaying(type);\n    const isSelected = playlistItem.url === currentSelection?.url;\n\n    return {\n      ...playlistItem,\n      type: playlistItem.type as HMSPlaylistType,\n      selected: isSelected,\n      playing: isSelected && isPlaying,\n    };\n  }\n\n  private static getConvertedPlaylistType(playlistManager: sdkTypes.HMSPlaylistManager, type: HMSPlaylistType) {\n    const convertedPlaylist: Record<string, HMSPlaylistItem<any>> = {};\n    const currentSelection = playlistManager.getCurrentSelection(type);\n    const progress = playlistManager.getCurrentProgress(type);\n    const volume = playlistManager.getVolume(type);\n    const list = playlistManager.getList(type);\n    const currentIndex = playlistManager.getCurrentIndex(type);\n\n    playlistManager.getList(type).forEach(playlistItem => {\n      convertedPlaylist[playlistItem.id] = SDKToHMS.convertPlaylistItem(playlistManager, playlistItem);\n    });\n    return {\n      list: convertedPlaylist,\n      selection: {\n        id: currentSelection?.id,\n        hasPrevious: currentIndex > 0,\n        hasNext: currentIndex < list.length - 1,\n      },\n      progress,\n      volume,\n      currentTime: playlistManager.getCurrentTime(type),\n      playbackRate: playlistManager.getPlaybackRate(type),\n    };\n  }\n\n  static convertRecordingStreamingState(\n    recording?: sdkTypes.HMSRecording,\n    rtmp?: sdkTypes.HMSRTMP,\n    hls?: sdkTypes.HMSHLS,\n    transcriptions?: sdkTypes.HMSTranscriptionInfo[],\n  ): {\n    recording: sdkTypes.HMSRecording;\n    rtmp: sdkTypes.HMSRTMP;\n    hls: sdkTypes.HMSHLS;\n    transcriptions: sdkTypes.HMSTranscriptionInfo[];\n  } {\n    return {\n      recording: {\n        browser: {\n          running: false,\n          ...recording?.browser,\n        },\n        server: {\n          running: false,\n          ...recording?.server,\n        },\n        hls: { running: false, ...recording?.hls },\n      },\n      rtmp: { running: false, ...rtmp },\n      hls: {\n        variants: hls?.variants?.map(variant => variant) || [],\n        running: !!hls?.running,\n        error: hls?.error,\n      },\n      transcriptions: transcriptions || [],\n    };\n  }\n}\n", "import { HMSLogger } from '../common/ui-logger';\nimport { IHMSStore } from '../IHMSStore';\nimport { HMSPlaylistManager } from '../internal';\nimport { HMSGenericTypes, HMSPlaylistItem, HMSPlaylistType, IHMSPlaylistActions } from '../schema';\nimport { selectAudioPlaylist, selectVideoPlaylist } from '../selectors';\n\nexport class HMSPlaylist<T extends HMSGenericTypes> implements IHMSPlaylistActions {\n  private type: HMSPlaylistType;\n  constructor(\n    private playlistManager: HMSPlaylistManager,\n    type: HMSPlaylistType,\n    private syncPlaylistState: (action: string) => void,\n    private store: IHMSStore<T>,\n  ) {\n    this.type = type;\n  }\n\n  async play(id: string): Promise<void> {\n    if (!id) {\n      HMSLogger.w('Please pass id to play');\n      return;\n    }\n    await this.playlistManager.setEnabled(true, { id, type: this.type });\n  }\n\n  async pause(): Promise<void> {\n    const selector = this.type === HMSPlaylistType.audio ? selectAudioPlaylist : selectVideoPlaylist;\n    const selection = this.store.getState(selector.selection);\n    if (!selection.id) {\n      HMSLogger.w('No item is currently playing to pause');\n      return;\n    }\n    await this.playlistManager.setEnabled(false, { id: selection.id, type: this.type });\n  }\n\n  async playNext(): Promise<void> {\n    await this.playlistManager.playNext(this.type);\n  }\n\n  async playPrevious(): Promise<void> {\n    await this.playlistManager.playPrevious(this.type);\n  }\n\n  seek(seekValue: number): void {\n    this.playlistManager.seek(seekValue, this.type);\n    this.syncPlaylistState(`seekOn${this.type}Playlist`);\n  }\n\n  seekTo(seekValue: number): void {\n    this.playlistManager.seekTo(seekValue, this.type);\n    this.syncPlaylistState(`seekToOn${this.type}Playlist`);\n  }\n\n  setVolume(volume: number): void {\n    this.playlistManager.setVolume(volume, this.type);\n    this.syncPlaylistState(`setVolumeOn${this.type}Playlist`);\n  }\n\n  setList<T>(list: HMSPlaylistItem<T>[]): void {\n    this.playlistManager.setList(list);\n    this.syncPlaylistState(`setListOn${this.type}Playlist`);\n  }\n\n  async stop(): Promise<void> {\n    await this.playlistManager.stop(this.type);\n    this.syncPlaylistState(`stop${this.type}Playlist`);\n  }\n\n  setIsAutoplayOn(autoplay: boolean) {\n    this.playlistManager.setIsAutoplayOn(this.type, autoplay);\n  }\n\n  setPlaybackRate(playbackRate: number) {\n    this.playlistManager.setPlaybackRate(this.type, playbackRate);\n    this.syncPlaylistState(`set${this.type}PlaybackRate`);\n  }\n\n  async removeItem(id: string) {\n    const removed = await this.playlistManager.removeItem(id, this.type);\n    if (removed) {\n      this.syncPlaylistState(`remove${this.type}PlaylistItem`);\n    }\n    return removed;\n  }\n\n  async clearList() {\n    await this.playlistManager.clearList(this.type);\n    this.syncPlaylistState(`clear${this.type}Playlist`);\n  }\n}\n", "import { SessionStoreUpdate } from '../internal';\nimport { IHMSSessionStoreActions } from '../schema';\nimport { HMSSdk } from '../sdk';\n\nexport class HMSSessionStore<T extends Record<string, any>> implements IHMSSessionStoreActions<T> {\n  constructor(\n    private sdk: HMSSdk,\n    private setLocally: (updates: SessionStoreUpdate | SessionStoreUpdate[], actionName?: string) => void,\n  ) {}\n\n  private get sdkSessionStore() {\n    return this.sdk.getSessionStore();\n  }\n\n  async set<K extends keyof T>(key: K, value?: T[K]) {\n    const { value: latestValue } = await this.sdkSessionStore.set(String(key), value);\n    this.setLocally({ key: key as string, value: latestValue });\n  }\n\n  async observe(keys: keyof T | Array<keyof T>) {\n    const stringifiedKeys: string[] = Array.isArray(keys) ? keys.map(key => String(key)) : [String(keys)];\n    await this.sdkSessionStore.observe(stringifiedKeys);\n  }\n\n  async unobserve(keys: keyof T | Array<keyof T>) {\n    const stringifiedKeys: string[] = Array.isArray(keys) ? keys.map(key => String(key)) : [String(keys)];\n    await this.sdkSessionStore.unobserve(stringifiedKeys);\n  }\n}\n", "import { HMSGenericTypes, HMSPeer, IHMSStore, selectIsConnectedToRoom, selectPeers } from '../../';\nimport { HMSLogger } from '../../common/ui-logger';\nimport { IHMSActions } from '../../IHMSActions';\n\n/**\n * Log data of audio level and speaker speaking periodically to beam for transcript\n * diarization.\n */\nexport class BeamSpeakerLabelsLogger<T extends HMSGenericTypes> {\n  private audioContext?: AudioContext;\n  private readonly intervalMs: number;\n  private shouldMonitor: boolean;\n  private hasStarted: boolean;\n  private unsubs: any[];\n  private readonly analysers: Record<string, AnalyserNode>;\n  private readonly store: IHMSStore<T>;\n  private actions: IHMSActions<T>;\n  private TAG = '[BeamSpeakerLabelsLogger]';\n  constructor(store: IHMSStore<T>, actions: IHMSActions<T>) {\n    this.intervalMs = 100;\n    this.shouldMonitor = false;\n    this.hasStarted = false;\n    this.unsubs = [];\n    this.analysers = {};\n    this.store = store;\n    this.actions = actions;\n  }\n\n  async start() {\n    if (this.hasStarted) {\n      return;\n    }\n    this.hasStarted = true;\n    HMSLogger.d('starting audio level monitor for remote peers', this.store);\n    const isConnected = this.store.getState(selectIsConnectedToRoom);\n    HMSLogger.d('starting audio levels is connected to room', isConnected);\n    if (isConnected) {\n      await this.monitorAudioLevels();\n    }\n    const unsub = this.store.subscribe(this.monitorAudioLevels.bind(this), selectIsConnectedToRoom);\n    this.unsubs.push(unsub);\n  }\n\n  async stop() {\n    if (!this.hasStarted) {\n      return;\n    }\n    this.hasStarted = false;\n    this.shouldMonitor = false;\n    this.unsubs.forEach(unsub => unsub());\n    HMSLogger.d('stopped audio level monitor for remote peers');\n  }\n\n  async monitorAudioLevels() {\n    const isConnected = this.store.getState(selectIsConnectedToRoom);\n    if (!isConnected) {\n      if (this.shouldMonitor) {\n        HMSLogger.i('room no longer connected, stopping audio level monitoring for remote');\n        this.shouldMonitor = false;\n      }\n      return;\n    }\n    if (this.shouldMonitor) {\n      return;\n    }\n    HMSLogger.i('monitoring audio levels');\n    this.shouldMonitor = true;\n    const loop = () => {\n      if (this.shouldMonitor) {\n        this.logAllPeersAudioLevels();\n        setTimeout(loop, this.intervalMs);\n      } else {\n        HMSLogger.i('stopped monitoring audio levels');\n      }\n    };\n    setTimeout(loop, 1000);\n  }\n\n  // eslint-disable-next-line complexity\n  async logAllPeersAudioLevels() {\n    if (!window.__triggerBeamEvent__) {\n      return;\n    }\n    // optimise this to selectTracks instead of selecting peers\n    const allPeers = this.store.getState(selectPeers);\n    const peers = allPeers.filter(peer => !!peer.audioTrack);\n    HMSLogger.d(\n      this.TAG,\n      'Peers Without audio track',\n      allPeers\n        .filter(peer => !peer.audioTrack)\n        .map(peer => peer.id)\n        .join(','),\n    );\n    const peerAudioLevels = [];\n    for (const peer of peers) {\n      const sdkTrack = this.actions.getTrackById(peer.audioTrack || '');\n      const nativeStream: MediaStream | undefined = sdkTrack?.stream?.nativeStream;\n      if (!peer.joinedAt) {\n        continue;\n      }\n      if (nativeStream) {\n        const peerLevel = await this.getAudioLevel(peer, nativeStream);\n        HMSLogger.d(this.TAG, peer.id, peerLevel);\n        if (peerLevel.level > 0) {\n          peerAudioLevels.push(peerLevel);\n        }\n      }\n    }\n    if (peerAudioLevels.length > 0) {\n      const payload = {\n        event: 'app-audio-level',\n        data: peerAudioLevels,\n      };\n      HMSLogger.d('logging audio levels', JSON.stringify(peerAudioLevels));\n      window.__triggerBeamEvent__(JSON.stringify(payload));\n    }\n  }\n\n  async getAudioLevel(peer: HMSPeer, stream: MediaStream) {\n    if (!this.analysers[stream.id]) {\n      this.analysers[stream.id] = this.createAnalyserNode(stream);\n    }\n    const analyserNode = this.analysers[stream.id];\n    const level = this.calculateAudioLevel(analyserNode);\n    return {\n      peerId: peer.id,\n      peerName: peer.name,\n      level,\n    };\n  }\n\n  createAnalyserNode(stream: MediaStream) {\n    if (!this.audioContext) {\n      this.audioContext = new AudioContext();\n    }\n    const analyser = this.audioContext.createAnalyser();\n    const source = this.audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    return analyser;\n  }\n\n  calculateAudioLevel(analyserNode: AnalyserNode) {\n    const data = new Uint8Array(analyserNode.fftSize);\n    analyserNode.getByteTimeDomainData(data);\n    const lowest = 0.009;\n    let max = lowest;\n    for (const frequency of data) {\n      max = Math.max(max, (frequency - 128) / 128);\n    }\n    const normalized = (Math.log(lowest) - Math.log(max)) / Math.log(lowest);\n    const percent = Math.ceil(Math.min(Math.max(normalized * 100, 0), 100));\n    return percent;\n  }\n}\n", "import { HMSRole } from '../internal';\n\nexport const DIAGNOSTICS_ROOM_ID = '6669151f480e55c215299a4a';\n\nexport const CONNECTIVITY_TEST_DURATION = 20_000;\nexport const MIC_CHECK_RECORD_DURATION = 10_000;\n\nexport const diagnosticsRole: HMSRole = {\n  name: 'diagnostics-role',\n  priority: 1,\n  publishParams: {\n    allowed: ['audio', 'video'],\n    audio: { bitRate: 32, codec: 'opus' },\n    video: {\n      bitRate: 100,\n      codec: 'vp8',\n      frameRate: 30,\n      height: 720,\n      width: 1280,\n    },\n    screen: {\n      bitRate: 100,\n      codec: 'vp8',\n      frameRate: 10,\n      height: 1080,\n      width: 1920,\n    },\n  },\n  subscribeParams: {\n    subscribeToRoles: [],\n    maxSubsBitRate: 3200,\n  },\n  permissions: {\n    browserRecording: false,\n    changeRole: false,\n    endRoom: false,\n    hlsStreaming: false,\n    mute: false,\n    pollRead: false,\n    pollWrite: false,\n    removeOthers: false,\n    rtmpStreaming: false,\n    unmute: false,\n  },\n};\n\nexport const DEFAULT_TEST_AUDIO_URL = 'https://100ms.live/test-audio.wav';\n", "export class CQSCalculator {\n  private networkScores: number[] = [];\n  private lastPushedAt = 0;\n\n  pushScore(score?: number) {\n    if (!score || score < 0) {\n      return;\n    }\n\n    if (this.networkScores.length === 0) {\n      this.networkScores.push(score);\n      this.lastPushedAt = Date.now();\n    } else {\n      this.addPendingCQSTillNow();\n    }\n  }\n\n  addPendingCQSTillNow() {\n    if (this.networkScores.length > 0) {\n      let timeDiffInSec = (Date.now() - this.lastPushedAt) / 1000;\n      while (timeDiffInSec > 0) {\n        this.networkScores.push(this.networkScores[this.networkScores.length - 1]);\n        timeDiffInSec -= 1;\n      }\n\n      this.lastPushedAt = Date.now();\n    }\n  }\n\n  getCQS() {\n    return this.networkScores.reduce((acc, score) => acc + score, 0) / this.networkScores.length;\n  }\n}\n", "import { DiagnosticsRTCStatsReport } from '.';\nimport { HMSPeerStats, HMSTrackStats } from '../interfaces';\nimport { HMSWebrtcStats } from '../rtc-stats';\nimport { computeBitrate } from '../rtc-stats/utils';\nimport { HMSSdk } from '../sdk';\n\nconst isValidNumber = (num: number | undefined): boolean => !!num && !isNaN(num);\nconst getLastElement = <T>(arr: T[]): T | undefined => arr[arr.length - 1];\nconst calculateAverage = <T>(arr: T[], predicate: (val: T) => number | undefined): number => {\n  const filteredArr = arr.filter(curr => isValidNumber(predicate(curr)));\n  return filteredArr.reduce((acc, curr) => acc + (predicate(curr) || 0), 0) / filteredArr.length;\n};\n\nexport class DiagnosticsStatsCollector {\n  private peerStatsList: HMSPeerStats[] = [];\n  private localAudioTrackStatsList: Record<string, HMSTrackStats>[] = [];\n  private localVideoTrackStatsList: Record<string, HMSTrackStats>[] = [];\n  private remoteAudioTrackStatsList: HMSTrackStats[] = [];\n  private remoteVideoTrackStatsList: HMSTrackStats[] = [];\n\n  constructor(private sdk: HMSSdk) {}\n\n  async handleStatsUpdate(stats: HMSWebrtcStats) {\n    const localPeerStats = stats.getLocalPeerStats();\n    if (localPeerStats) {\n      this.peerStatsList.push(localPeerStats);\n    }\n\n    const localAudioTrackID = this.sdk.getLocalPeer()?.audioTrack?.nativeTrack?.id;\n    const localVideoTrackID = this.sdk.getLocalPeer()?.videoTrack?.nativeTrack?.id;\n\n    const localTrackStats = stats.getLocalTrackStats();\n    if (localTrackStats) {\n      localAudioTrackID && this.localAudioTrackStatsList.push(localTrackStats[localAudioTrackID]);\n      localVideoTrackID && this.localVideoTrackStatsList.push(localTrackStats[localVideoTrackID]);\n    }\n\n    const subscribeStatsReport = await this.sdk.getWebrtcInternals()?.getSubscribePeerConnection()?.getStats();\n    subscribeStatsReport?.forEach(stat => {\n      if (stat.type === 'inbound-rtp') {\n        const list = stat.kind === 'audio' ? this.remoteAudioTrackStatsList : this.remoteVideoTrackStatsList;\n        const bitrate = computeBitrate('bytesReceived', stat, getLastElement(list));\n        list.push({ ...stat, bitrate });\n      }\n    });\n  }\n\n  // eslint-disable-next-line complexity\n  buildReport(): DiagnosticsRTCStatsReport {\n    const lastPublishStats = getLastElement(this.peerStatsList)?.publish;\n    const lastSubscribeStats = getLastElement(this.peerStatsList)?.subscribe;\n    const publishRoundTripTime = lastPublishStats?.responsesReceived\n      ? (lastPublishStats?.totalRoundTripTime || 0) / lastPublishStats.responsesReceived\n      : 0;\n    const subscribeRoundTripTime = lastSubscribeStats?.responsesReceived\n      ? (lastSubscribeStats?.totalRoundTripTime || 0) / lastSubscribeStats.responsesReceived\n      : 0;\n    const roundTripTime = Number((((publishRoundTripTime + subscribeRoundTripTime) / 2) * 1000).toFixed(2));\n\n    const audioPacketsReceived = getLastElement(this.remoteAudioTrackStatsList)?.packetsReceived || 0;\n    const videoPacketsReceived = getLastElement(this.remoteVideoTrackStatsList)?.packetsReceived || 0;\n\n    const ridAveragedAudioBitrateList = this.localAudioTrackStatsList.map(trackStatsMap =>\n      trackStatsMap ? calculateAverage(Object.values(trackStatsMap), curr => curr.bitrate) : 0,\n    );\n\n    const ridAveragedVideoBitrateList = this.localVideoTrackStatsList.map(trackStatsMap =>\n      trackStatsMap ? calculateAverage(Object.values(trackStatsMap), curr => curr.bitrate) : 0,\n    );\n    const audioJitter = getLastElement(this.remoteAudioTrackStatsList)?.jitter || 0;\n    const videoJitter = getLastElement(this.remoteVideoTrackStatsList)?.jitter || 0;\n    const jitter = Math.max(audioJitter, videoJitter);\n    const lastLocalAudioTrackStats = getLastElement(this.localAudioTrackStatsList);\n    const lastLocalVideoTrackStats = getLastElement(this.localVideoTrackStatsList);\n\n    return {\n      combined: {\n        roundTripTime,\n        packetsReceived: audioPacketsReceived + videoPacketsReceived,\n        packetsLost: lastSubscribeStats?.packetsLost || 0,\n        bytesSent: lastPublishStats?.bytesSent || 0,\n        bytesReceived: lastSubscribeStats?.bytesReceived || 0,\n        bitrateSent: calculateAverage(this.peerStatsList, curr => curr.publish?.bitrate),\n        bitrateReceived: calculateAverage(this.peerStatsList, curr => curr.subscribe?.bitrate),\n        jitter: jitter,\n      },\n      audio: {\n        roundTripTime,\n        packetsReceived: audioPacketsReceived,\n        packetsLost: getLastElement(this.remoteAudioTrackStatsList)?.packetsLost || 0,\n        bytesReceived: getLastElement(this.remoteAudioTrackStatsList)?.bytesReceived || 0,\n        bitrateSent: calculateAverage(ridAveragedAudioBitrateList, curr => curr),\n        bitrateReceived: calculateAverage(this.remoteAudioTrackStatsList, curr => curr.bitrate),\n        bytesSent: lastLocalAudioTrackStats\n          ? Object.values(lastLocalAudioTrackStats).reduce((acc, curr) => acc + (curr.bytesSent || 0), 0)\n          : 0,\n        jitter: audioJitter,\n      },\n      video: {\n        roundTripTime,\n        packetsLost: getLastElement(this.remoteVideoTrackStatsList)?.packetsLost || 0,\n        bytesReceived: getLastElement(this.remoteVideoTrackStatsList)?.bytesReceived || 0,\n        packetsReceived: videoPacketsReceived,\n        bitrateSent: calculateAverage(ridAveragedVideoBitrateList, curr => curr),\n        bitrateReceived: calculateAverage(this.remoteVideoTrackStatsList, curr => curr.bitrate),\n        bytesSent: lastLocalVideoTrackStats\n          ? Object.values(lastLocalVideoTrackStats).reduce((acc, curr) => acc + (curr.bytesSent || 0), 0)\n          : 0,\n        jitter: videoJitter,\n      },\n    };\n  }\n}\n", "import { RTCIceCandidatePair } from '../connection/IConnectionObserver';\nimport { HMSException, HMSTrack, HMSUpdateListener } from '../internal';\n\nexport enum ConnectivityState {\n  STARTING,\n  INIT_FETCHED,\n  SIGNAL_CONNECTED,\n  ICE_ESTABLISHED,\n  MEDIA_CAPTURED,\n  MEDIA_PUBLISHED,\n  COMPLETED,\n}\n\nexport interface HMSDiagnosticsConnectivityListener extends HMSUpdateListener {\n  onInitSuccess(websocketURL: string): void;\n  onSignallingSuccess(): void;\n  onICESuccess(isPublish: boolean): void;\n  onMediaPublished(track: HMSTrack): void;\n  onICECandidate(candidate: RTCIceCandidate, isPublish: boolean): void;\n  onSelectedICECandidatePairChange(candidatePair: RTCIceCandidatePair, isPublish: boolean): void;\n}\n\nexport interface MediaPermissionCheck {\n  audio?: boolean;\n  video?: boolean;\n}\n\nexport interface HMSDiagnosticsInterface {\n  requestPermission(check: MediaPermissionCheck): Promise<MediaPermissionCheck>;\n  checkBrowserSupport(): void;\n  startMicCheck(args: {\n    inputDevice?: string;\n    onError?: (error: Error) => void;\n    onStop?: () => void;\n    time?: number;\n  }): Promise<void>;\n  getRecordedAudio(): string | undefined;\n  stopMicCheck(): void;\n\n  startCameraCheck(inputDevice?: string): Promise<void>;\n  stopCameraCheck(): void;\n\n  startConnectivityCheck(\n    progress: (state: ConnectivityState) => void,\n    completed: (result: ConnectivityCheckResult) => void,\n    region?: string,\n    /**\n     * Number in milliseconds to stop the connectivity check\n     */\n    duration?: number,\n  ): Promise<void>;\n  stopConnectivityCheck(): Promise<void>;\n}\n\nexport interface ConnectivityCheckResult {\n  testTimestamp: number; // System time in millis (UTC)\n  connectivityState?: ConnectivityState; // This is the initial state\n  signallingReport?: SignallingReport;\n  mediaServerReport?: MediaServerReport;\n  // deviceTestReport?: DeviceTestReport;\n  errors?: Array<HMSException>;\n}\n\nexport interface SignallingReport {\n  isConnected: boolean; // true if websocket was connected successfully\n  isInitConnected: boolean; // True if init call was successful\n  websocketUrl?: string; // websocket url\n}\n\nexport interface MediaServerReport {\n  stats?: DiagnosticsRTCStatsReport; // represents the overall stats of the call\n  isPublishICEConnected: boolean; // True if ICE connected successfully for both publish and subscribe\n  isSubscribeICEConnected: boolean;\n  connectionQualityScore?: number; // Average of all the downlink scores for this call for this peer\n  publishIceCandidatesGathered?: Array<RTCIceCandidate>; // Publish ICE candidates\n  subscribeIceCandidatesGathered: Array<RTCIceCandidate>; // Subscribe ICE candidates\n  publishICECandidatePairSelected?: RTCIceCandidatePair; // publish ICE pair\n  subscribeICECandidatePairSelected?: RTCIceCandidatePair; // subscribe ICE pair\n}\n\nexport interface DiagnosticsRTCStatsReport {\n  combined: DiagnosticsRTCStats;\n  audio: DiagnosticsRTCStats;\n  video: DiagnosticsRTCStats;\n}\n\nexport interface DiagnosticsRTCStats {\n  bytesSent: number;\n  bytesReceived: number;\n  packetsReceived: number;\n  packetsLost: number;\n  bitrateSent: number;\n  bitrateReceived: number;\n  roundTripTime: number;\n  jitter: number;\n}\n", "import { CONNECTIVITY_TEST_DURATION } from './constants';\nimport { CQSCalculator } from './CQSCalculator';\nimport { DiagnosticsStatsCollector } from './DiagnosticsStatsCollector';\nimport { ConnectivityCheckResult, ConnectivityState, HMSDiagnosticsConnectivityListener } from './interfaces';\nimport { RTCIceCandidatePair } from '../connection/IConnectionObserver';\nimport {\n  HMSConnectionQuality,\n  HMSException,\n  HMSRoom,\n  HMSTrack,\n  HMSTrackType,\n  HMSTrackUpdate,\n  HMSUpdateListener,\n} from '../internal';\nimport { HMSSdk } from '../sdk';\nimport { HMSPeer } from '../sdk/models/peer';\n\nexport class ConnectivityCheck implements HMSDiagnosticsConnectivityListener {\n  private wsConnected = false;\n  private websocketURL?: string;\n  private initConnected = false;\n\n  private isPublishICEConnected = false;\n  private isSubscribeICEConnected = false;\n  private selectedPublishICECandidate?: RTCIceCandidatePair;\n  private selectedSubscribeICECandidate?: RTCIceCandidatePair;\n  private gatheredPublishICECandidates: RTCIceCandidate[] = [];\n  private gatheredSubscribeICECandidates: RTCIceCandidate[] = [];\n  private errors: HMSException[] = [];\n  private isAudioTrackCaptured = false;\n  private isVideoTrackCaptured = false;\n  private isAudioTrackPublished = false;\n  private isVideoTrackPublished = false;\n  private statsCollector: DiagnosticsStatsCollector;\n  private cqsCalculator = new CQSCalculator();\n\n  private cleanupTimer?: number;\n  private timestamp = Date.now();\n  private _state?: ConnectivityState;\n  private get state(): ConnectivityState | undefined {\n    return this._state;\n  }\n  private set state(value: ConnectivityState | undefined) {\n    if (value === undefined || (this._state !== undefined && value < this._state)) {\n      return;\n    }\n    this._state = value;\n    this.progressCallback?.(value);\n  }\n\n  constructor(\n    private sdk: HMSSdk,\n    private sdkListener: HMSUpdateListener,\n    private progressCallback: (state: ConnectivityState) => void,\n    private completionCallback: (state: ConnectivityCheckResult) => void,\n    private connectivityDuration = CONNECTIVITY_TEST_DURATION,\n  ) {\n    this.statsCollector = new DiagnosticsStatsCollector(sdk);\n    this.state = ConnectivityState.STARTING;\n  }\n  onRoomUpdate = this.sdkListener.onRoomUpdate.bind(this.sdkListener);\n  onPeerUpdate = this.sdkListener.onPeerUpdate.bind(this.sdkListener);\n  onMessageReceived = this.sdkListener.onMessageReceived.bind(this.sdkListener);\n  onReconnected = this.sdkListener.onReconnected.bind(this.sdkListener);\n  onRoleChangeRequest = this.sdkListener.onRoleChangeRequest.bind(this.sdkListener);\n  onRoleUpdate = this.sdkListener.onRoleUpdate.bind(this.sdkListener);\n  onChangeTrackStateRequest = this.sdkListener.onChangeTrackStateRequest.bind(this.sdkListener);\n  onChangeMultiTrackStateRequest = this.sdkListener.onChangeMultiTrackStateRequest.bind(this.sdkListener);\n  onRemovedFromRoom = this.sdkListener.onRemovedFromRoom.bind(this.sdkListener);\n  onNetworkQuality = this.sdkListener.onNetworkQuality?.bind(this.sdkListener);\n  onPreview = this.sdkListener.onPreview.bind(this.sdkListener);\n  onDeviceChange = this.sdkListener.onDeviceChange?.bind(this.sdkListener);\n  onSessionStoreUpdate = this.sdkListener.onSessionStoreUpdate.bind(this.sdkListener);\n  onPollsUpdate = this.sdkListener.onPollsUpdate.bind(this.sdkListener);\n  onWhiteboardUpdate = this.sdkListener.onWhiteboardUpdate.bind(this.sdkListener);\n\n  handleConnectionQualityUpdate = (qualities: HMSConnectionQuality[]) => {\n    const localPeerQuality = qualities.find(quality => quality.peerID === this.sdk?.store.getLocalPeer()?.peerId);\n    this.cqsCalculator.pushScore(localPeerQuality?.downlinkQuality);\n  };\n\n  onICESuccess(isPublish: boolean): void {\n    if (isPublish) {\n      this.isPublishICEConnected = true;\n    } else {\n      this.isSubscribeICEConnected = true;\n    }\n\n    if (this.isPublishICEConnected && this.isSubscribeICEConnected) {\n      this.state = ConnectivityState.ICE_ESTABLISHED;\n    }\n  }\n\n  onSelectedICECandidatePairChange(candidatePair: RTCIceCandidatePair, isPublish: boolean): void {\n    if (isPublish) {\n      this.selectedPublishICECandidate = candidatePair;\n    } else {\n      this.selectedSubscribeICECandidate = candidatePair;\n    }\n  }\n\n  onICECandidate(candidate: RTCIceCandidate, isPublish: boolean): void {\n    if (isPublish) {\n      this.gatheredPublishICECandidates.push(candidate);\n    } else {\n      this.gatheredSubscribeICECandidates.push(candidate);\n    }\n  }\n\n  onMediaPublished(track: HMSTrack): void {\n    switch (track.type) {\n      case HMSTrackType.AUDIO:\n        this.isAudioTrackPublished = true;\n        break;\n      case HMSTrackType.VIDEO:\n        this.isVideoTrackPublished = true;\n        break;\n      default:\n        break;\n    }\n\n    if (this.isVideoTrackPublished && this.isAudioTrackPublished) {\n      this.state = ConnectivityState.MEDIA_PUBLISHED;\n    }\n  }\n\n  onInitSuccess(websocketURL: string): void {\n    this.websocketURL = websocketURL;\n    this.initConnected = true;\n    this.state = ConnectivityState.INIT_FETCHED;\n  }\n\n  onSignallingSuccess(): void {\n    this.wsConnected = true;\n    this.state = ConnectivityState.SIGNAL_CONNECTED;\n  }\n\n  onJoin(room: HMSRoom): void {\n    this.sdkListener.onJoin(room);\n    this.sdk.getWebrtcInternals()?.onStatsChange(stats => this.statsCollector.handleStatsUpdate(stats));\n    this.sdk.getWebrtcInternals()?.start();\n    this.cleanupTimer = window.setTimeout(() => {\n      this.cleanupAndReport();\n    }, this.connectivityDuration);\n  }\n\n  onError(error: HMSException): void {\n    this.sdkListener.onError(error);\n    this.errors.push(error);\n    if (error?.isTerminal) {\n      this.cleanupAndReport();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  onTrackUpdate(type: HMSTrackUpdate, track: HMSTrack, peer: HMSPeer): void {\n    this.sdkListener.onTrackUpdate(type, track, peer);\n    if (peer.isLocal && type === HMSTrackUpdate.TRACK_ADDED) {\n      switch (track.type) {\n        case HMSTrackType.AUDIO:\n          this.isAudioTrackCaptured = true;\n          break;\n        case HMSTrackType.VIDEO:\n          this.isVideoTrackCaptured = true;\n          break;\n        default:\n          break;\n      }\n\n      if (this.isVideoTrackCaptured && this.isAudioTrackCaptured) {\n        this.state = ConnectivityState.MEDIA_CAPTURED;\n      }\n    }\n  }\n\n  onReconnecting(error: HMSException): void {\n    this.sdkListener.onReconnecting(error);\n    this.cqsCalculator.addPendingCQSTillNow();\n  }\n\n  cleanupAndReport() {\n    clearTimeout(this.cleanupTimer);\n    this.cleanupTimer = undefined;\n    if (this.state === ConnectivityState.MEDIA_PUBLISHED) {\n      this.state = ConnectivityState.COMPLETED;\n    }\n    this.completionCallback?.(this.buildReport());\n    this.sdk.leave();\n  }\n\n  private buildReport(): ConnectivityCheckResult {\n    this.cqsCalculator.addPendingCQSTillNow();\n    const connectionQualityScore = this.cqsCalculator.getCQS();\n    const stats = this.statsCollector.buildReport();\n    return {\n      testTimestamp: this.timestamp,\n      connectivityState: this.state,\n      errors: this.errors,\n      signallingReport: {\n        isConnected: this.wsConnected,\n        isInitConnected: this.initConnected,\n        websocketUrl: this.websocketURL,\n      },\n      mediaServerReport: {\n        stats,\n        connectionQualityScore,\n        isPublishICEConnected: this.isPublishICEConnected,\n        isSubscribeICEConnected: this.isSubscribeICEConnected,\n        publishICECandidatePairSelected: this.selectedPublishICECandidate,\n        subscribeICECandidatePairSelected: this.selectedSubscribeICECandidate,\n        publishIceCandidatesGathered: this.gatheredPublishICECandidates,\n        subscribeIceCandidatesGathered: this.gatheredSubscribeICECandidates,\n      },\n    };\n  }\n}\n", "import { HMSHLS, HMSRecording, HMSRoom, HMSRTMP, HMSTranscriptionInfo } from '../../interfaces/room';\n\nexport default class Room implements HMSRoom {\n  id: string;\n  joinedAt?: Date | undefined;\n  templateId?: string | undefined;\n  sessionId?: string;\n  startedAt?: Date;\n  recording: HMSRecording = { server: { running: false }, browser: { running: false }, hls: { running: false } };\n  rtmp: HMSRTMP = { running: false };\n  hls: HMSHLS = { running: false, variants: [] };\n  name?: string;\n  peerCount?: number;\n  description?: string;\n  max_size?: number;\n  large_room_optimization?: boolean;\n  transcriptions?: HMSTranscriptionInfo[] = [];\n  isEffectsEnabled?: boolean;\n  disableNoneLayerRequest?: boolean;\n  isVBEnabled?: boolean;\n  effectsKey?: string;\n  isHipaaEnabled?: boolean;\n  isNoiseCancellationEnabled?: boolean;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n", "import { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\n\n/**\n * @param retryCodes codes from the server reponse that needs to be retried\n */\n// eslint-disable-next-line complexity\nexport const fetchWithRetry = async (\n  url: RequestInfo,\n  options: RequestInit,\n  retryCodes?: number[],\n): Promise<Response> => {\n  const MAX_RETRIES = 4;\n  let error = Error('something went wrong during fetch');\n  for (let i = 0; i < MAX_RETRIES; i++) {\n    try {\n      // fetch will throw error if there's a browser-level issue\n      const response = await fetch(url, options);\n      const data = await response.clone().json();\n      // throw error for additional codes to retry based on server's response\n      if (retryCodes && retryCodes.length && !response.ok && retryCodes.includes(data.code)) {\n        throw ErrorFactory.APIErrors.ServerErrors(data.code, HMSAction.GET_TOKEN, data.message, false);\n      }\n\n      return response;\n    } catch (err) {\n      error = err as unknown as Error;\n    }\n  }\n  if (['Failed to fetch', 'NetworkError'].some(message => error.message.includes(message))) {\n    throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.GET_TOKEN, error.message);\n  }\n  throw error;\n};\n", "import { ConnectivityCheck } from './ConnectivityCheck';\nimport { DEFAULT_TEST_AUDIO_URL, diagnosticsRole, MIC_CHECK_RECORD_DURATION } from './constants';\nimport {\n  ConnectivityCheckResult,\n  ConnectivityState,\n  HMSDiagnosticsInterface,\n  MediaPermissionCheck,\n} from './interfaces';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { BuildGetMediaError } from '../error/utils';\nimport {\n  HMSException,\n  HMSLocalAudioTrack,\n  HMSLocalVideoTrack,\n  HMSPeerType,\n  HMSPeerUpdate,\n  HMSRoomUpdate,\n  HMSUpdateListener,\n} from '../internal';\nimport { HMSAudioTrackSettingsBuilder, HMSTrackSettingsBuilder, HMSVideoTrackSettingsBuilder } from '../media/settings';\nimport { HMSSdk } from '../sdk';\nimport HMSRoom from '../sdk/models/HMSRoom';\nimport { HMSLocalPeer } from '../sdk/models/peer';\nimport { fetchWithRetry } from '../utils/fetch';\nimport { validateMediaDevicesExistence, validateRTCPeerConnection } from '../utils/validations';\n\nexport class Diagnostics implements HMSDiagnosticsInterface {\n  private recordedAudio?: string = DEFAULT_TEST_AUDIO_URL;\n  private mediaRecorder?: MediaRecorder;\n  private connectivityCheck?: ConnectivityCheck;\n  private onStopMicCheck?: () => void;\n\n  constructor(private sdk: HMSSdk, private sdkListener: HMSUpdateListener) {\n    this.sdk.setIsDiagnostics(true);\n    this.initSdkWithLocalPeer();\n  }\n\n  get localPeer() {\n    return this.sdk?.store.getLocalPeer();\n  }\n\n  checkBrowserSupport(): void {\n    validateMediaDevicesExistence();\n    validateRTCPeerConnection();\n  }\n\n  async requestPermission(check: MediaPermissionCheck): Promise<MediaPermissionCheck> {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(check);\n      stream.getTracks().forEach(track => track.stop());\n      await this.sdk.deviceManager.init(true);\n      return {\n        audio: stream.getAudioTracks().length > 0,\n        video: stream.getVideoTracks().length > 0,\n      };\n    } catch (err) {\n      throw BuildGetMediaError(err as Error, this.sdk.localTrackManager.getErrorType(!!check.video, !!check.audio));\n    }\n  }\n\n  async startCameraCheck(inputDevice?: string) {\n    this.initSdkWithLocalPeer();\n    if (!this.localPeer) {\n      throw new Error('Local peer not found');\n    }\n\n    this.sdk.store.setSimulcastEnabled(false);\n\n    this.localPeer.role = {\n      ...diagnosticsRole,\n      publishParams: { ...diagnosticsRole.publishParams, allowed: ['video'] },\n    };\n    const settings = new HMSTrackSettingsBuilder()\n      .video(new HMSVideoTrackSettingsBuilder().deviceId(inputDevice || 'default').build())\n      .build();\n    const tracks = await this.sdk?.localTrackManager.getLocalTracks({ audio: false, video: true }, settings);\n    const track = tracks?.find(track => track.type === 'video') as HMSLocalVideoTrack;\n\n    if (!track) {\n      throw new Error('No video track found');\n    }\n\n    this.sdk?.deviceManager.init(true);\n    this.localPeer.videoTrack = track;\n    this.sdk?.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, [this.localPeer]);\n  }\n\n  stopCameraCheck(): void {\n    this.localPeer?.videoTrack?.cleanup();\n    if (this.localPeer) {\n      this.localPeer.videoTrack = undefined;\n    }\n  }\n\n  async startMicCheck({\n    inputDevice,\n    onError,\n    onStop,\n    time = MIC_CHECK_RECORD_DURATION,\n  }: {\n    inputDevice?: string;\n    onError?: (error: Error) => void;\n    onStop?: () => void;\n    time?: number;\n  }) {\n    this.initSdkWithLocalPeer((err: Error) => {\n      this.stopMicCheck();\n      onError?.(err);\n    });\n    const track = await this.getLocalAudioTrack(inputDevice);\n    this.sdk?.deviceManager.init(true);\n    if (!this.localPeer) {\n      throw new Error('Local peer not found');\n    }\n    if (!track) {\n      throw new Error('No audio track found');\n    }\n\n    this.localPeer.audioTrack = track;\n    this.sdk?.initPreviewTrackAudioLevelMonitor();\n    this.sdk?.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, [this.localPeer]);\n\n    this.mediaRecorder = new MediaRecorder(track.stream.nativeStream);\n    const chunks: Blob[] = [];\n\n    this.mediaRecorder.ondataavailable = function (e) {\n      chunks.push(e.data);\n    };\n\n    this.mediaRecorder.onstop = () => {\n      const blob = new Blob(chunks, { type: this.mediaRecorder?.mimeType });\n      this.recordedAudio = URL.createObjectURL(blob);\n      this.onStopMicCheck?.();\n    };\n\n    this.mediaRecorder.start();\n\n    const timeoutId = setTimeout(() => {\n      this.stopMicCheck();\n    }, time);\n\n    this.onStopMicCheck = () => {\n      clearTimeout(timeoutId);\n      onStop?.();\n    };\n  }\n\n  stopMicCheck(): void {\n    this.mediaRecorder?.stop();\n    this.localPeer?.audioTrack?.cleanup();\n    if (this.localPeer) {\n      this.localPeer.audioTrack = undefined;\n    }\n  }\n\n  getRecordedAudio() {\n    return this.recordedAudio;\n  }\n\n  async startConnectivityCheck(\n    progress: (state: ConnectivityState) => void,\n    completed: (result: ConnectivityCheckResult) => void,\n    region?: string,\n    duration?: number,\n  ) {\n    if (!this.sdk) {\n      throw new Error('SDK not found');\n    }\n\n    this.connectivityCheck = new ConnectivityCheck(this.sdk, this.sdkListener, progress, completed, duration);\n\n    const authToken = await this.getAuthToken(region);\n    await this.sdk.leave();\n    await this.sdk.join({ authToken, userName: 'diagnostics-test' }, this.connectivityCheck);\n    this.sdk.addConnectionQualityListener({\n      onConnectionQualityUpdate: qualityUpdates => {\n        this.connectivityCheck?.handleConnectionQualityUpdate(qualityUpdates);\n      },\n    });\n  }\n\n  async stopConnectivityCheck(): Promise<void> {\n    return this.connectivityCheck?.cleanupAndReport();\n  }\n\n  private initSdkWithLocalPeer(onError?: (error: Error) => void) {\n    this.sdkListener &&\n      this.sdk?.initStoreAndManagers({\n        ...this.sdkListener,\n        onError: (error: HMSException) => {\n          onError?.(error);\n          this.sdkListener.onError(error);\n        },\n      });\n    const localPeer = new HMSLocalPeer({\n      name: 'diagnostics-peer',\n      role: diagnosticsRole,\n      type: HMSPeerType.REGULAR,\n    });\n\n    this.sdk?.store.addPeer(localPeer);\n\n    const room = new HMSRoom('diagnostics-room');\n    this.sdk.store.setRoom(room);\n    this.sdkListener.onRoomUpdate(HMSRoomUpdate.ROOM_PEER_COUNT_UPDATED, room);\n    this.sdk?.deviceManager.init(true);\n  }\n\n  private async getAuthToken(region?: string): Promise<string> {\n    const tokenAPIURL = new URL('https://api.100ms.live/v2/diagnostics/token');\n    if (region) {\n      tokenAPIURL.searchParams.append('region', region);\n    }\n    const response = await fetchWithRetry(\n      tokenAPIURL.toString(),\n      { method: 'GET' },\n      [429, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511],\n    );\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw ErrorFactory.APIErrors.ServerErrors(data.code, HMSAction.GET_TOKEN, data.message, false);\n    }\n\n    const { token } = data;\n    if (!token) {\n      throw Error(data.message);\n    }\n    return token;\n  }\n\n  private async getLocalAudioTrack(inputDevice?: string) {\n    if (!this.localPeer) {\n      return;\n    }\n\n    this.localPeer.role = {\n      ...diagnosticsRole,\n      publishParams: { ...diagnosticsRole.publishParams, allowed: ['audio'] },\n    };\n    const settings = new HMSTrackSettingsBuilder()\n      .audio(new HMSAudioTrackSettingsBuilder().deviceId(inputDevice || 'default').build())\n      .build();\n    const tracks = await this.sdk?.localTrackManager.getLocalTracks({ audio: true, video: false }, settings);\n    return tracks?.find(track => track.type === 'audio') as HMSLocalAudioTrack;\n  }\n}\n", "import { PEER_NOTIFICATION_TYPES, POLL_NOTIFICATION_TYPES, TRACK_NOTIFICATION_TYPES } from './common/mapping';\nimport { ActionBatcher } from './sdkUtils/ActionBatcher';\nimport { isRemoteTrack } from './sdkUtils/sdkUtils';\nimport {\n  areArraysEqual,\n  isEntityUpdated,\n  mergeNewPeersInDraft,\n  mergeNewPollsInDraft,\n  mergeNewTracksInDraft,\n  mergeTrackArrayFields,\n} from './sdkUtils/storeMergeUtils';\nimport { SDKToHMS } from './adapter';\nimport { HMSNotifications } from './HMSNotifications';\nimport { HMSPlaylist } from './HMSPlaylist';\nimport { HMSSessionStore } from './HMSSessionStore';\nimport { NamedSetState } from './internalTypes';\nimport { HMSLogger } from '../common/ui-logger';\nimport { BeamSpeakerLabelsLogger } from '../controller/beam/BeamSpeakerLabelsLogger';\nimport { Diagnostics } from '../diagnostics';\nimport { HMSSessionFeedback } from '../end-call-feedback';\nimport { IHMSActions } from '../IHMSActions';\nimport { IHMSStore } from '../IHMSStore';\nimport {\n  HMSAudioMode,\n  HMSAudioPlugin,\n  HMSAudioTrack as SDKHMSAudioTrack,\n  HMSChangeMultiTrackStateParams as SDKHMSChangeMultiTrackStateParams,\n  HMSChangeMultiTrackStateRequest as SDKHMSChangeMultiTrackStateRequest,\n  HMSChangeTrackStateRequest as SDKHMSChangeTrackStateRequest,\n  HMSException as SDKHMSException,\n  HMSLeaveRoomRequest as SDKHMSLeaveRoomRequest,\n  HMSLocalAudioTrack as SDKHMSLocalAudioTrack,\n  HMSLocalTrack as SDKHMSLocalTrack,\n  HMSLocalVideoTrack as SDKHMSLocalVideoTrack,\n  HMSLogLevel,\n  HMSMediaStreamPlugin,\n  HMSPluginSupportResult,\n  HMSRemoteTrack as SDKHMSRemoteTrack,\n  HMSRemoteVideoTrack as SDKHMSRemoteVideoTrack,\n  HMSRoleChangeRequest as SDKHMSRoleChangeRequest,\n  HMSScreenShareConfig,\n  HMSSimulcastLayer,\n  HMSTrack as SDKHMSTrack,\n  HMSVideoPlugin,\n  HMSVideoTrack as SDKHMSVideoTrack,\n  SessionStoreUpdate,\n} from '../internal';\nimport * as sdkTypes from '../internal';\nimport { MessageNotification } from '../notification-manager';\nimport {\n  createDefaultStoreState,\n  HMSChangeMultiTrackStateParams,\n  HMSGenericTypes,\n  HMSMediaSettings,\n  HMSMessage,\n  HMSMessageInput,\n  HMSPeer,\n  HMSPeerID,\n  HMSPeerListIteratorOptions,\n  HMSPlaylistType,\n  HMSRoleName,\n  HMSRoomState,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSTrackSource,\n  HMSVideoTrack,\n  IHMSPlaylistActions,\n  IHMSSessionStoreActions,\n} from '../schema';\nimport { HMSSdk } from '../sdk';\nimport {\n  HMSRoleChangeRequest,\n  selectIsConnectedToRoom,\n  selectIsInPreview,\n  selectIsLocalScreenShared,\n  selectIsLocalVideoDisplayEnabled,\n  selectIsLocalVideoEnabled,\n  selectLocalAudioTrackID,\n  selectLocalMediaSettings,\n  selectLocalPeer,\n  selectLocalPeerID,\n  selectLocalTrackIDs,\n  selectLocalVideoTrackID,\n  selectPeerByID,\n  selectPeersMap,\n  selectPermissions,\n  selectRolesMap,\n  selectRoomState,\n  selectTrackByID,\n  selectTracksMap,\n  selectVideoTrackByID,\n} from '../selectors';\nimport { FindPeerByNameRequestParams } from '../signal/interfaces';\nimport { HMSStats } from '../webrtc-stats';\n\n/**\n * This class implements the IHMSActions interface for 100ms SDK. It connects with SDK\n * and takes control of data management by letting every action pass through it. The\n * passed in store is ensured to be the single source of truth reflecting current\n * room related data at any point in time.\n *\n * @privateRemarks\n * Things to keep in mind while updating store -\n * 1. Treat setState as an atomic operation, if an action results in multiple changes,\n *    the changes should all happen within single setState function.\n * 2. While updating the state it's very important to not update the reference if\n *    something is unchanged. Copy data in same reference object don't assign new\n *    object.\n * 3. Mental Model(1) - Actions from backend -> Listeners of this class -> update store -> views update themselves\n *    eg. for this - peer added, remote muted etc.\n * 4. Mental Model(2) - Actions from local -> View calls actions -> update store -> views update themselves\n *    eg. local track enabled, join, leave etc.\n * 5. State is immutable, a new copy with new references is created when there is a change,\n *    if you try to modify state outside of setState, there'll be an error.\n */\nexport class HMSSDKActions<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>\n  implements IHMSActions<T>\n{\n  private readonly sdk: HMSSdk;\n  private readonly store: IHMSStore<T>;\n  private isRoomJoinCalled = false;\n  private hmsNotifications: HMSNotifications<T>;\n  private ignoredMessageTypes: string[] = [];\n  private actionBatcher: ActionBatcher<T>;\n  audioPlaylist!: IHMSPlaylistActions;\n  videoPlaylist!: IHMSPlaylistActions;\n  sessionStore: IHMSSessionStoreActions<T['sessionStore']>;\n  private beamSpeakerLabelsLogger?: BeamSpeakerLabelsLogger<T>;\n\n  constructor(store: IHMSStore<T>, sdk: HMSSdk, notificationManager: HMSNotifications<T>) {\n    this.store = store;\n    this.sdk = sdk;\n    this.hmsNotifications = notificationManager;\n\n    this.sessionStore = new HMSSessionStore<T['sessionStore']>(this.sdk, this.setSessionStoreValueLocally.bind(this));\n    this.actionBatcher = new ActionBatcher(store);\n  }\n  submitSessionFeedback(feedback: HMSSessionFeedback, eventEndpoint?: string): Promise<void> {\n    return this.sdk.submitSessionFeedback(feedback, eventEndpoint);\n  }\n\n  getLocalTrack(trackID: string) {\n    return this.sdk.store.getLocalPeerTracks().find(track => track.trackId === trackID);\n  }\n\n  get interactivityCenter() {\n    return this.sdk.getInteractivityCenter();\n  }\n\n  setPlaylistSettings(settings: sdkTypes.HMSPlaylistSettings): void {\n    this.sdk.updatePlaylistSettings(settings);\n  }\n\n  async refreshDevices() {\n    await this.sdk.refreshDevices();\n  }\n\n  async unblockAudio() {\n    await this.sdk.getAudioOutput().unblockAutoplay();\n  }\n\n  async setVolume(value: number, trackId?: HMSTrackID) {\n    if (trackId) {\n      await this.setTrackVolume(value, trackId);\n    } else {\n      await this.sdk.getAudioOutput().setVolume(value);\n      this.syncRoomState('setOutputVolume');\n    }\n  }\n\n  async setAudioOutputDevice(deviceId: string): Promise<void> {\n    const deviceInfo = await this.sdk.getAudioOutput().setDevice(deviceId);\n    if (deviceInfo) {\n      this.setState(draftStore => {\n        draftStore.settings.audioOutputDeviceId = deviceId;\n      }, 'setAudioOutputDevice');\n    }\n  }\n\n  async setPreferredLayer(trackId: string, layer: sdkTypes.HMSPreferredSimulcastLayer) {\n    const track = this.getTrackById(trackId);\n    if (track) {\n      if (track instanceof SDKHMSRemoteVideoTrack) {\n        //@ts-ignore\n        if (layer === HMSSimulcastLayer.NONE) {\n          HMSLogger.d(`layer ${HMSSimulcastLayer.NONE} will be ignored`);\n          return;\n        }\n        const alreadyInSameState = this.store.getState(selectVideoTrackByID(trackId))?.preferredLayer === layer;\n        if (alreadyInSameState) {\n          HMSLogger.d(`preferred layer is already ${layer}`);\n          return;\n        }\n        this.setState(draftStore => {\n          const track = draftStore.tracks[trackId] as HMSVideoTrack;\n          if (track) {\n            track.preferredLayer = layer;\n          }\n        }, 'setPreferredLayer');\n        await track.setPreferredLayer(layer);\n      } else {\n        HMSLogger.d(`track ${trackId} is not a remote video track`);\n      }\n    } else {\n      this.logPossibleInconsistency(`track ${trackId} not present, unable to set preffer layer`);\n    }\n  }\n\n  getNativeTrackById(trackId: string) {\n    return this.sdk.store.getTrackById(trackId)?.nativeTrack;\n  }\n\n  getTrackById(trackId: string) {\n    return this.sdk.store.getTrackById(trackId);\n  }\n\n  getAuthTokenByRoomCode(\n    tokenRequest: sdkTypes.TokenRequest,\n    tokenRequestOptions?: sdkTypes.TokenRequestOptions,\n  ): Promise<string> {\n    return this.sdk.getAuthTokenByRoomCode(tokenRequest, tokenRequestOptions);\n  }\n\n  async preview(config: sdkTypes.HMSPreviewConfig) {\n    const roomState = this.store.getState(selectRoomState);\n    if (roomState === HMSRoomState.Preview || roomState === HMSRoomState.Connecting) {\n      this.logPossibleInconsistency('attempting to call preview while room is in preview/connecting');\n      return;\n    }\n\n    try {\n      if (roomState !== HMSRoomState.Connected) {\n        this.setState(store => {\n          store.room.roomState = HMSRoomState.Connecting;\n        }, 'connecting');\n      }\n      await this.sdkPreviewWithListeners(config);\n    } catch (err) {\n      HMSLogger.e('Cannot show preview. Failed to connect to room - ', err);\n      throw err;\n    }\n  }\n\n  async cancelMidCallPreview() {\n    return this.sdk.cancelMidCallPreview();\n  }\n\n  async join(config: sdkTypes.HMSConfig) {\n    if (this.isRoomJoinCalled) {\n      this.logPossibleInconsistency('room join is called again');\n      return; // ignore\n    }\n    try {\n      this.isRoomJoinCalled = true;\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Connecting;\n      }, 'join');\n      await this.sdkJoinWithListeners(config);\n    } catch (err) {\n      this.isRoomJoinCalled = false; // so it can be called again if needed\n      HMSLogger.e('Failed to connect to room - ', err);\n      throw err;\n    }\n  }\n\n  async leave() {\n    const isConnectedToRoom = this.store.getState(selectIsConnectedToRoom);\n    let notifyServer = true;\n    if (!isConnectedToRoom) {\n      notifyServer = false;\n      this.logPossibleInconsistency('room leave is called when no room is connected');\n    }\n    const currentRoomState = this.store.getState(selectRoomState);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Disconnecting;\n    }, 'leaving');\n    return this.sdk\n      .leave(notifyServer)\n      .then(() => {\n        this.resetState('leave');\n        if (this.beamSpeakerLabelsLogger) {\n          this.beamSpeakerLabelsLogger.stop().catch(HMSLogger.e);\n        }\n        HMSLogger.i('left room');\n      })\n      .catch(err => {\n        HMSLogger.e('error in leaving room - ', err);\n        this.setState(store => {\n          store.room.roomState = currentRoomState;\n        }, 'revertLeave');\n      });\n  }\n\n  async setScreenShareEnabled(enabled: boolean, config?: HMSScreenShareConfig) {\n    // TODO: remove this, purely for backward compatibility\n    if (typeof config === 'boolean') {\n      config = { audioOnly: config };\n    }\n    try {\n      if (enabled) {\n        await this.startScreenShare(config);\n      } else {\n        await this.stopScreenShare();\n      }\n    } catch (error) {\n      this.hmsNotifications.sendError(SDKToHMS.convertException(error as SDKHMSException));\n      throw error;\n    }\n  }\n\n  async addTrack(track: MediaStreamTrack, type: HMSTrackSource = 'regular') {\n    await this.sdk.addTrack(track, type);\n    this.syncRoomState('addTrack');\n  }\n\n  async removeTrack(trackId: string) {\n    await this.sdk.removeTrack(trackId);\n    this.syncRoomState('removeTrack');\n  }\n\n  async setLocalAudioEnabled(enabled: boolean) {\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (trackID) {\n      await this.setEnabledTrack(trackID, enabled);\n    }\n  }\n\n  async setLocalVideoEnabled(enabled: boolean) {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      await this.setEnabledTrack(trackID, enabled);\n    }\n  }\n\n  async setEnabledTrack(trackID: string, enabled: boolean) {\n    // if mute/unmute is clicked multiple times for same operation, ignore repeated ones\n    const alreadyInSameState = this.store.getState().tracks[trackID]?.enabled === enabled;\n    if (alreadyInSameState) {\n      // it could also be a case of possible inconsistency where UI state is out of sync with truth\n      this.logPossibleInconsistency(`local track[${trackID}] enabled state - ${enabled}`);\n      return;\n    }\n    this.setState(store => {\n      // show on UI immediately\n      if (!store.tracks[trackID]) {\n        this.logPossibleInconsistency('track id not found for setEnabled');\n      } else {\n        store.tracks[trackID].displayEnabled = enabled;\n      }\n    }, 'displayEnabled');\n    try {\n      await this.setEnabledSDKTrack(trackID, enabled); // do the operation\n      this.syncRoomState('setEnabled');\n    } catch (err) {\n      // rollback on failure\n      this.setState(store => {\n        store.tracks[trackID].displayEnabled = !enabled;\n      }, 'rollbackDisplayEnabled');\n      this.hmsNotifications.sendError(SDKToHMS.convertException(err as SDKHMSException));\n      throw err;\n    }\n    const type = enabled ? sdkTypes.HMSTrackUpdate.TRACK_UNMUTED : sdkTypes.HMSTrackUpdate.TRACK_MUTED;\n    this.hmsNotifications.sendTrackUpdate(type, trackID);\n  }\n\n  async autoSelectAudioOutput(delay?: number) {\n    await this.sdk.autoSelectAudioOutput(delay);\n  }\n\n  async setAudioSettings(settings: Partial<sdkTypes.HMSAudioTrackSettings>) {\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n\n    if (trackID) {\n      await this.setSDKLocalAudioTrackSettings(trackID, settings);\n      this.syncRoomState('setAudioSettings');\n    }\n  }\n\n  async setVideoSettings(settings: Partial<sdkTypes.HMSVideoTrackSettings>) {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      await this.setSDKLocalVideoTrackSettings(trackID, settings);\n      this.syncRoomState('setVideoSettings');\n    }\n  }\n\n  async switchCamera(): Promise<void> {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      const sdkTrack = this.sdk.store\n        .getLocalPeerTracks()\n        .find(track => track.trackId === trackID) as SDKHMSLocalVideoTrack;\n      if (sdkTrack) {\n        await sdkTrack.switchCamera();\n        this.syncRoomState('switchCamera');\n      }\n    }\n  }\n\n  sendMessage(message: string) {\n    this.sendBroadcastMessage(message);\n  }\n\n  async sendBroadcastMessage(message: string, type?: string) {\n    const { message_id: id, timestamp: time } = await this.sdk.sendBroadcastMessage(message, type);\n    this.updateMessageInStore({ message, type, id, time });\n  }\n\n  async sendGroupMessage(message: string, roles: string[], type?: string) {\n    const storeRoles = this.store.getState(selectRolesMap);\n    const hmsRoles = roles.map(roleName => {\n      return storeRoles[roleName];\n    });\n    const { message_id: id, timestamp: time } = await this.sdk.sendGroupMessage(message, hmsRoles, type);\n    this.updateMessageInStore({ message, recipientRoles: roles, type, id, time });\n  }\n\n  async sendDirectMessage(message: string, peerID: string, type?: string) {\n    const { message_id: id, timestamp: time } = await this.sdk.sendDirectMessage(message, peerID, type);\n    this.updateMessageInStore({ message, recipientPeer: peerID, type, id, time });\n  }\n\n  private updateMessageInStore(messageInput: HMSMessageInput) {\n    if (!messageInput.message) {\n      HMSLogger.w('sendMessage', 'Failed to send message', messageInput);\n      throw Error(`sendMessage Failed - ${JSON.stringify(messageInput)}`);\n    }\n    const ignoreMessage = !!messageInput.type && this.ignoredMessageTypes.includes(messageInput.type);\n    if (ignoreMessage) {\n      return;\n    }\n    const localPeer = this.sdk.getLocalPeer();\n    const hmsMessage: HMSMessage = {\n      read: true,\n      id: messageInput.id,\n      time: new Date(messageInput.time),\n      message: messageInput.message,\n      type: messageInput.type || 'chat',\n      recipientPeer: messageInput.recipientPeer,\n      recipientRoles: messageInput.recipientRoles,\n      senderName: localPeer?.name,\n      sender: localPeer?.peerId,\n      senderRole: localPeer?.role?.name,\n      ignored: false,\n    };\n    // update directly to store without batch\n    this.setState(store => {\n      store.messages.byID[hmsMessage.id] = hmsMessage;\n      store.messages.allIDs.push(hmsMessage.id);\n    }, 'newMessage');\n  }\n\n  setMessageRead(readStatus: boolean, messageId?: string) {\n    this.setState(store => {\n      if (messageId) {\n        if (!store.messages.byID[messageId]) {\n          this.logPossibleInconsistency('no message with id is found');\n        } else {\n          store.messages.byID[messageId].read = readStatus;\n        }\n      } else {\n        store.messages.allIDs.forEach((id: string) => {\n          store.messages.byID[id].read = readStatus;\n        });\n      }\n    }, 'setMessageRead');\n  }\n\n  async attachVideo(trackID: string, videoElement: HTMLVideoElement) {\n    if (this.localAndVideoUnmuting(trackID)) {\n      // wait till video unmute has finished\n      return new Promise<void>(resolve => {\n        const unsub = this.store.subscribe(async enabled => {\n          if (enabled) {\n            await this.attachVideoInternal(trackID, videoElement);\n            unsub();\n            resolve();\n          }\n        }, selectIsLocalVideoEnabled);\n      });\n    } else {\n      await this.attachVideoInternal(trackID, videoElement);\n    }\n  }\n\n  async detachVideo(trackID: string, videoElement: HTMLVideoElement) {\n    const sdkTrack = this.getTrackById(trackID);\n    if (sdkTrack?.type === 'video') {\n      await this.sdk.detachVideo(sdkTrack as SDKHMSVideoTrack, videoElement);\n    } else {\n      if (videoElement) {\n        videoElement.srcObject = null; // so chrome can clean up\n      }\n      HMSLogger.d('possible inconsistency detected - no video track found to remove sink');\n    }\n  }\n\n  async addPluginToVideoTrack(plugin: HMSVideoPlugin, pluginFrameRate?: number): Promise<void> {\n    return this.addRemoveVideoPlugin(plugin, 'add', pluginFrameRate);\n  }\n\n  async addPluginsToVideoStream(plugins: HMSMediaStreamPlugin[]): Promise<void> {\n    return this.addRemoveMediaStreamVideoPlugins(plugins, 'add');\n  }\n\n  async removePluginsFromVideoStream(plugins: HMSMediaStreamPlugin[]): Promise<void> {\n    return this.addRemoveMediaStreamVideoPlugins(plugins, 'remove');\n  }\n\n  async addPluginToAudioTrack(plugin: HMSAudioPlugin): Promise<void> {\n    return this.addRemoveAudioPlugin(plugin, 'add');\n  }\n\n  validateVideoPluginSupport(plugin: HMSVideoPlugin): HMSPluginSupportResult {\n    let result = {} as HMSPluginSupportResult;\n    result.isSupported = false; //Setting default to false\n    if (!plugin) {\n      HMSLogger.w('no plugin passed in for checking support');\n      result.errMsg = 'no plugin passed in for checking support';\n      return result;\n    }\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (!trackID) {\n      HMSLogger.w('video Track not added to local peer yet');\n      result.errMsg = 'call this function only after local peer has video track';\n      return result;\n    }\n    const sdkTrack = this.getTrackById(trackID);\n    if (sdkTrack) {\n      result = (sdkTrack as SDKHMSLocalVideoTrack).validatePlugin(plugin);\n    } else {\n      HMSLogger.w(`track ${trackID} not present, unable to validate plugin`);\n      result.errMsg = `track ${trackID} not present, unable to validate plugin`;\n    }\n\n    return result;\n  }\n\n  validateAudioPluginSupport(plugin: HMSAudioPlugin): HMSPluginSupportResult {\n    let result = {} as HMSPluginSupportResult;\n    result.isSupported = false; //Setting default to false\n    if (!plugin) {\n      HMSLogger.w('no plugin passed in for checking support\"');\n      result.errMsg = 'no plugin passed in for checking support\"';\n      return result;\n    }\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (!trackID) {\n      HMSLogger.w('audio track not added to local peer yet');\n      result.errMsg = 'call this function only after local peer has audio track';\n      return result;\n    }\n    const sdkTrack = this.getTrackById(trackID);\n    if (sdkTrack) {\n      result = (sdkTrack as SDKHMSLocalAudioTrack).validatePlugin(plugin);\n    } else {\n      HMSLogger.w(`track ${trackID} not present, unable to validate plugin`);\n      result.errMsg = `track ${trackID} not present, unable to validate plugin`;\n    }\n\n    return result;\n  }\n\n  async removePluginFromVideoTrack(plugin: HMSVideoPlugin): Promise<void> {\n    return this.addRemoveVideoPlugin(plugin, 'remove');\n  }\n  async removePluginFromAudioTrack(plugin: HMSAudioPlugin): Promise<void> {\n    return this.addRemoveAudioPlugin(plugin, 'remove');\n  }\n\n  async changeRole(forPeerId: string, toRole: string, force = false) {\n    await this.sdk.changeRoleOfPeer(forPeerId, toRole, force);\n  }\n\n  async changeRoleOfPeer(forPeerId: string, toRole: string, force = false) {\n    await this.sdk.changeRoleOfPeer(forPeerId, toRole, force);\n  }\n\n  async changeRoleOfPeersWithRoles(roles: HMSRoleName[], toRole: HMSRoleName) {\n    const rolesToBeChanged = this.sdk.getRoles().filter(role => roles.includes(role.name));\n    await this.sdk.changeRoleOfPeersWithRoles(rolesToBeChanged, toRole);\n  }\n\n  // TODO: separate out role related things in another file\n  async acceptChangeRole(request: HMSRoleChangeRequest) {\n    const sdkPeer: sdkTypes.HMSPeer | undefined = request.requestedBy\n      ? this.getSDKHMSPeer(request.requestedBy.id)\n      : undefined;\n    if (!sdkPeer) {\n      HMSLogger.w(`peer for which role change is requested no longer available - ${request.requestedBy}`);\n    }\n    const sdkRequest = {\n      requestedBy: sdkPeer,\n      role: request.role,\n      token: request.token,\n    };\n    // TODO: hotfix for HMS-3639. Needs a better solution\n    await this.sdk.acceptChangeRole(sdkRequest);\n    this.removeRoleChangeRequest(request);\n  }\n\n  async raiseLocalPeerHand() {\n    await this.sdk.raiseLocalPeerHand();\n  }\n  async lowerLocalPeerHand() {\n    await this.sdk.lowerLocalPeerHand();\n  }\n  async raiseRemotePeerHand(peerId: string) {\n    await this.sdk.raiseRemotePeerHand(peerId);\n  }\n  async lowerRemotePeerHand(peerId: string) {\n    await this.sdk.lowerRemotePeerHand(peerId);\n  }\n\n  async getPeer(peerId: string) {\n    const peer = await this.sdk.getPeer(peerId);\n    if (peer) {\n      return SDKToHMS.convertPeer(peer) as HMSPeer;\n    }\n    return undefined;\n  }\n\n  async findPeerByName(options: FindPeerByNameRequestParams) {\n    const { offset, peers, eof } = await this.sdk.findPeerByName(options);\n    return { offset, eof, peers: peers.map(peer => SDKToHMS.convertPeer(peer) as HMSPeer) };\n  }\n\n  getPeerListIterator(options?: HMSPeerListIteratorOptions) {\n    const iterator = this.sdk.getPeerListIterator(options);\n    return {\n      hasNext: () => iterator.hasNext(),\n      next: async () => {\n        const sdkPeers = await iterator.next();\n        return sdkPeers.map(peer => SDKToHMS.convertPeer(peer) as HMSPeer);\n      },\n      findPeers: async () => {\n        const sdkPeers = await iterator.findPeers();\n        return sdkPeers.map(peer => SDKToHMS.convertPeer(peer) as HMSPeer);\n      },\n      getTotal: () => iterator.getTotal(),\n    };\n  }\n\n  initAppData(appData: Record<string, any>) {\n    this.setState(store => {\n      store.appData = appData;\n    }, 'initAppData');\n  }\n\n  setAppData(key: string, value: any, merge?: boolean) {\n    const isValueObject = value?.constructor.name === 'Object';\n    this.setState(store => {\n      if (store.appData) {\n        if (merge && isValueObject) {\n          Object.assign(store.appData[key], value);\n        } else {\n          store.appData[key] = value;\n        }\n      } else {\n        const newAppData = {\n          [key]: value,\n        };\n        store.appData = newAppData;\n      }\n    }, `setAppData-${key}`);\n  }\n\n  /**\n   * @privateRemarks\n   * there is no corresponding sdk method for rejecting change role but as the store also maintains the full\n   * state of current pending requests, this method allows it to clean up when the request is rejected\n   */\n  rejectChangeRole(request: HMSRoleChangeRequest) {\n    this.removeRoleChangeRequest(request);\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    const permissions = this.store.getState(selectPermissions);\n    if (!permissions?.endRoom) {\n      HMSLogger.w('You are not allowed to perform this action - endRoom');\n      return;\n    }\n    const currentRoomState = this.store.getState(selectRoomState);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Disconnecting;\n    }, 'endingRoom');\n    try {\n      await this.sdk.endRoom(lock, reason);\n      this.resetState('endRoom');\n    } catch (err) {\n      HMSLogger.e('error in ending room - ', err);\n      this.setState(store => {\n        store.room.roomState = currentRoomState;\n      }, 'revertEndRoom');\n    }\n  }\n\n  async removePeer(peerID: string, reason: string) {\n    const localPeerId = this.sdk.getLocalPeer()?.peerId;\n    if (peerID !== localPeerId) {\n      await this.sdk.removePeer(peerID, reason);\n    }\n  }\n\n  async startRTMPOrRecording(params: sdkTypes.RTMPRecordingConfig) {\n    await this.sdk.startRTMPOrRecording(params);\n  }\n\n  async stopRTMPAndRecording() {\n    await this.sdk.stopRTMPAndRecording();\n  }\n\n  async startHLSStreaming(params?: sdkTypes.HLSConfig) {\n    await this.sdk.startHLSStreaming(params);\n  }\n\n  async stopHLSStreaming(params?: sdkTypes.StopHLSConfig): Promise<void> {\n    await this.sdk.stopHLSStreaming(params);\n  }\n\n  async startTranscription(params: sdkTypes.TranscriptionConfig) {\n    await this.sdk.startTranscription(params);\n  }\n\n  async stopTranscription(params: sdkTypes.TranscriptionConfig): Promise<void> {\n    await this.sdk.stopTranscription(params);\n  }\n\n  async sendHLSTimedMetadata(metadataList: sdkTypes.HLSTimedMetadata[]): Promise<void> {\n    await this.sdk.sendHLSTimedMetadata(metadataList);\n  }\n  async changeName(name: string) {\n    await this.sdk.changeName(name);\n  }\n\n  async changeMetadata(metadata: string | any) {\n    if (typeof metadata !== 'string') {\n      metadata = JSON.stringify(metadata);\n    }\n    await this.sdk.changeMetadata(metadata);\n  }\n\n  async setSessionMetadata(metadata: any) {\n    await this.sdk.setSessionMetadata(metadata);\n    this.setState(draftStore => {\n      draftStore.sessionMetadata = metadata;\n    }, 'setSessionMetadata');\n    this.setSessionStoreValueLocally({ key: 'default', value: metadata }, 'setSessionMetadata');\n  }\n\n  async populateSessionMetadata(): Promise<void> {\n    const metadata = await this.sdk.getSessionMetadata();\n    this.setState(draftStore => {\n      draftStore.sessionMetadata = metadata;\n    }, 'populateSessionMetadata');\n    this.setSessionStoreValueLocally({ key: 'default', value: metadata }, 'populateSessionmetadata');\n  }\n\n  async setRemoteTrackEnabled(trackID: HMSTrackID | HMSTrackID[], enabled: boolean) {\n    if (typeof trackID === 'string') {\n      const track = this.getTrackById(trackID);\n      if (track && isRemoteTrack(track)) {\n        await this.sdk.changeTrackState(track as SDKHMSRemoteTrack, enabled);\n      } else {\n        this.logPossibleInconsistency(`No remote track with ID ${trackID} found for change track state`);\n      }\n    } else if (Array.isArray(trackID)) {\n      trackID.forEach(id => this.setRemoteTrackEnabled(id, enabled));\n    }\n  }\n\n  async setRemoteTracksEnabled(params: HMSChangeMultiTrackStateParams) {\n    const sdkRequest: SDKHMSChangeMultiTrackStateParams = {\n      enabled: params.enabled,\n      type: params.type,\n      source: params.source,\n    };\n    if (params.roles) {\n      const rolesMap = this.store.getState(selectRolesMap);\n      sdkRequest.roles = params.roles.map(role => rolesMap[role]);\n    }\n    await this.sdk.changeMultiTrackState(sdkRequest);\n  }\n\n  setLogLevel(level: HMSLogLevel) {\n    HMSLogger.level = level;\n    this.sdk.setLogLevel(level);\n  }\n\n  setFrameworkInfo(frameworkInfo: sdkTypes.HMSFrameworkInfo) {\n    this.sdk.setFrameworkInfo(frameworkInfo);\n  }\n\n  ignoreMessageTypes(msgTypes: string[], replace = false) {\n    if (replace) {\n      this.ignoredMessageTypes = msgTypes;\n    } else {\n      for (const msgType of msgTypes) {\n        if (!this.ignoredMessageTypes.includes(msgType)) {\n          this.ignoredMessageTypes.push(msgType);\n        }\n      }\n    }\n  }\n\n  async enableBeamSpeakerLabelsLogging() {\n    if (!this.beamSpeakerLabelsLogger) {\n      HMSLogger.i('enabling beam speaker labels logging');\n      this.beamSpeakerLabelsLogger = new BeamSpeakerLabelsLogger(this.store, this);\n      await this.beamSpeakerLabelsLogger.start();\n    }\n  }\n  initDiagnostics() {\n    const diagnostics = new Diagnostics(this.sdk, {\n      onJoin: this.onJoin.bind(this),\n      onPreview: this.onPreview.bind(this),\n      onRoomUpdate: this.onRoomUpdate.bind(this),\n      onPeerUpdate: this.onPeerUpdate.bind(this),\n      onTrackUpdate: this.onTrackUpdate.bind(this),\n      onMessageReceived: this.onMessageReceived.bind(this),\n      onError: this.onError.bind(this),\n      onReconnected: this.onReconnected.bind(this),\n      onReconnecting: this.onReconnecting.bind(this),\n      onRoleChangeRequest: this.onRoleChangeRequest.bind(this),\n      onRoleUpdate: this.onRoleUpdate.bind(this),\n      onDeviceChange: this.onDeviceChange.bind(this),\n      onChangeTrackStateRequest: this.onChangeTrackStateRequest.bind(this),\n      onChangeMultiTrackStateRequest: this.onChangeMultiTrackStateRequest.bind(this),\n      onRemovedFromRoom: this.onRemovedFromRoom.bind(this),\n      onNetworkQuality: this.onNetworkQuality.bind(this),\n      onSessionStoreUpdate: this.onSessionStoreUpdate.bind(this),\n      onPollsUpdate: this.onPollsUpdate.bind(this),\n      onWhiteboardUpdate: this.onWhiteboardUpdate.bind(this),\n    });\n    this.sdk.addAudioListener({\n      onAudioLevelUpdate: this.onAudioLevelUpdate.bind(this),\n    });\n    this.sdk.addConnectionQualityListener({\n      onConnectionQualityUpdate: this.onConnectionQualityUpdate.bind(this),\n    });\n    return diagnostics;\n  }\n\n  private resetState(reason = 'resetState') {\n    this.isRoomJoinCalled = false;\n    HMSLogger.cleanup();\n    this.setState(store => {\n      Object.assign(store, createDefaultStoreState());\n    }, reason);\n  }\n\n  getDebugInfo() {\n    return this.sdk.getDebugInfo();\n  }\n\n  private async sdkJoinWithListeners(config: sdkTypes.HMSConfig) {\n    await this.sdk.join(config, {\n      onJoin: this.onJoin.bind(this),\n      onPreview: this.onPreview.bind(this),\n      onRoomUpdate: this.onRoomUpdate.bind(this),\n      onPeerUpdate: this.onPeerUpdate.bind(this),\n      onTrackUpdate: this.onTrackUpdate.bind(this),\n      onMessageReceived: this.onMessageReceived.bind(this),\n      onError: this.onError.bind(this),\n      onReconnected: this.onReconnected.bind(this),\n      onReconnecting: this.onReconnecting.bind(this),\n      onRoleChangeRequest: this.onRoleChangeRequest.bind(this),\n      onRoleUpdate: this.onRoleUpdate.bind(this),\n      onDeviceChange: this.onDeviceChange.bind(this),\n      onChangeTrackStateRequest: this.onChangeTrackStateRequest.bind(this),\n      onChangeMultiTrackStateRequest: this.onChangeMultiTrackStateRequest.bind(this),\n      onRemovedFromRoom: this.onRemovedFromRoom.bind(this),\n      onNetworkQuality: this.onNetworkQuality.bind(this),\n      onSessionStoreUpdate: this.onSessionStoreUpdate.bind(this),\n      onPollsUpdate: this.onPollsUpdate.bind(this),\n      onWhiteboardUpdate: this.onWhiteboardUpdate.bind(this),\n      onSFUMigration: this.onSFUMigration.bind(this),\n    });\n    this.sdk.addAudioListener({\n      onAudioLevelUpdate: this.onAudioLevelUpdate.bind(this),\n    });\n    this.sdk.addConnectionQualityListener({\n      onConnectionQualityUpdate: this.onConnectionQualityUpdate.bind(this),\n    });\n  }\n\n  private onSFUMigration() {\n    this.syncRoomState('SFUMigration');\n  }\n  private onRemovedFromRoom(request: SDKHMSLeaveRoomRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n    this.hmsNotifications.sendLeaveRoom({\n      ...request,\n      requestedBy: requestedBy || undefined,\n    });\n    const action = request.roomEnded || !requestedBy ? 'roomEnded' : 'removedFromRoom';\n    HMSLogger.i(`resetting state after peer removed ${action}`, request);\n    this.resetState(action);\n  }\n\n  private onDeviceChange(event: sdkTypes.HMSDeviceChangeEvent) {\n    const devices = event.devices;\n    if (!devices) {\n      return;\n    }\n    const localPeer = this.store.getState(selectLocalPeer);\n    this.setState(store => {\n      if (!areArraysEqual(store.devices.audioInput, devices.audioInput)) {\n        store.devices.audioInput = devices.audioInput;\n      }\n      if (!areArraysEqual(store.devices.videoInput, devices.videoInput)) {\n        store.devices.videoInput = devices.videoInput;\n      }\n      if (!areArraysEqual(store.devices.audioOutput, devices.audioOutput)) {\n        store.devices.audioOutput = devices.audioOutput;\n      }\n      const sdkLocalPeer = this.sdk.getLocalPeer();\n      if (localPeer?.id && sdkLocalPeer) {\n        Object.assign(store.settings, this.getMediaSettings(sdkLocalPeer));\n      }\n    }, 'deviceChange');\n    // send notification only on device change - selection is present\n    if (event.selection && !event.internal) {\n      const notification = SDKToHMS.convertDeviceChangeUpdate(event);\n      this.hmsNotifications.sendDeviceChange(notification);\n    }\n  }\n\n  private async sdkPreviewWithListeners(config: sdkTypes.HMSPreviewConfig) {\n    await this.sdk.preview(config, {\n      onPreview: this.onPreview.bind(this),\n      onError: this.onError.bind(this),\n      onReconnected: this.onReconnected.bind(this),\n      onReconnecting: this.onReconnecting.bind(this),\n      onDeviceChange: this.onDeviceChange.bind(this),\n      onRoomUpdate: this.onRoomUpdate.bind(this),\n      onPeerUpdate: this.onPeerUpdate.bind(this),\n      onNetworkQuality: this.onNetworkQuality.bind(this),\n      onTrackUpdate: this.onTrackUpdate.bind(this),\n    });\n    this.sdk.addAudioListener({\n      onAudioLevelUpdate: this.onAudioLevelUpdate.bind(this),\n    });\n  }\n\n  private onNetworkQuality(quality: number) {\n    this.setState(store => {\n      /*\n       * if store does not have peerId yet, fetch from sdk directly.\n       * sdk will have the localpeer already set.\n       */\n      const peerId = store.room.localPeer || this.sdk.getLocalPeer()?.peerId;\n      if (peerId) {\n        store.connectionQualities[peerId] = { peerID: peerId, downlinkQuality: quality };\n      }\n    }, 'ConnectionQuality');\n  }\n\n  private onSessionStoreUpdate(updates: SessionStoreUpdate[]) {\n    this.setSessionStoreValueLocally(updates, 'sessionStoreUpdate');\n  }\n\n  private onPollsUpdate(actionType: sdkTypes.HMSPollsUpdate, polls: sdkTypes.HMSPoll[]) {\n    const actionName = POLL_NOTIFICATION_TYPES[actionType];\n    this.setState(draftStore => {\n      const pollsObject = polls.reduce((acc, poll) => {\n        acc[poll.id] = {\n          ...poll,\n          questions: poll.questions?.map(question => ({\n            ...question,\n            answer: question.answer ? { ...question.answer } : undefined,\n            options: question.options?.map(option => ({ ...option })),\n            responses: question.responses?.map(response => ({ ...response })),\n          })),\n        };\n        return acc;\n      }, {} as { [key: string]: sdkTypes.HMSPoll });\n      mergeNewPollsInDraft(draftStore.polls, pollsObject);\n    }, actionName);\n    polls.forEach(poll => this.hmsNotifications.sendPollUpdate(actionType, poll.id));\n  }\n\n  private onWhiteboardUpdate(whiteboard: sdkTypes.HMSWhiteboard) {\n    this.setState(draftStore => {\n      draftStore.whiteboards[whiteboard.id] = whiteboard;\n    }, 'whiteboardUpdate');\n  }\n\n  private async startScreenShare(config?: HMSScreenShareConfig) {\n    const isScreenShared = this.store.getState(selectIsLocalScreenShared);\n    if (!isScreenShared) {\n      await this.sdk.startScreenShare(() => this.syncRoomState('screenshareStopped'), config);\n      this.syncRoomState('startScreenShare');\n    } else {\n      this.logPossibleInconsistency(\"start screenshare is called while it's on\");\n    }\n  }\n\n  private async stopScreenShare() {\n    const isScreenShared = this.store.getState(selectIsLocalScreenShared);\n    if (isScreenShared) {\n      await this.sdk.stopScreenShare();\n      this.syncRoomState('stopScreenShare');\n    } else {\n      this.logPossibleInconsistency(\"stop screenshare is called while it's not on\");\n    }\n  }\n\n  private async attachVideoInternal(trackID: string, videoElement: HTMLVideoElement) {\n    let sdkTrack = this.getTrackById(trackID);\n    // preview tracks are not added to the sdk store, so access from local peer.\n    if (!sdkTrack) {\n      sdkTrack = this.getLocalTrack(trackID);\n    }\n    if (sdkTrack && sdkTrack.type === 'video') {\n      await this.sdk.attachVideo(sdkTrack as SDKHMSVideoTrack, videoElement);\n    } else {\n      this.logPossibleInconsistency('no video track found to add sink');\n    }\n  }\n\n  /**\n   * This is a very important function as it's responsible for maintaining the source of\n   * truth with maximum efficiency. The efficiency comes from the fact that the only\n   * those portions of the store are updated which have actually changed.\n   * While making a change in this function don't use functions like map, reduce etc.\n   * which return a new copy of the data. Use Object.assign etc. to ensure that if the data\n   * doesn't change reference is also not changed.\n   * The UI and selectors rely on the fact that the store is immutable that is if there is\n   * any change and only if there is a change, they'll get a new copy of the data they're\n   * interested in with a new reference.\n   * @protected\n   */\n  protected syncRoomState(action: string) {\n    action = `${action}_fullSync`;\n    HMSLogger.time(`store-sync-${action}`);\n    const newHmsPeers: Record<HMSPeerID, Partial<HMSPeer>> = {};\n    const newHmsPeerIDs: HMSPeerID[] = []; // to add in room.peers\n    const newHmsTracks: Record<HMSTrackID, Partial<HMSTrack>> = {};\n    const newMediaSettings: Partial<HMSMediaSettings> = {};\n    const newNetworkQuality: Record<HMSPeerID, sdkTypes.HMSConnectionQuality> = {};\n    let newPreview: HMSStore['preview'];\n\n    const sdkPeers: sdkTypes.HMSPeer[] = this.sdk.getPeers();\n\n    // first convert everything in the new format\n    for (const sdkPeer of sdkPeers) {\n      const hmsPeer = SDKToHMS.convertPeer(sdkPeer);\n      newHmsPeers[hmsPeer.id] = hmsPeer;\n      newHmsPeerIDs.push(hmsPeer.id);\n      newNetworkQuality[hmsPeer.id] = {\n        peerID: hmsPeer.id,\n        downlinkQuality: sdkPeer.networkQuality || -1,\n      };\n\n      const sdkTracks = [sdkPeer.audioTrack, sdkPeer.videoTrack, ...sdkPeer.auxiliaryTracks];\n      for (const sdkTrack of sdkTracks) {\n        if (!sdkTrack) {\n          continue;\n        }\n        const hmsTrack = SDKToHMS.convertTrack(sdkTrack);\n        newHmsTracks[hmsTrack.id] = hmsTrack;\n      }\n\n      if (sdkPeer.isLocal) {\n        const localPeer = sdkPeer as sdkTypes.HMSLocalPeer;\n        newPreview = this.getPreviewFields(localPeer);\n        Object.assign(newMediaSettings, this.getMediaSettings(localPeer));\n      }\n    }\n\n    const recording = this.sdk.getRecordingState();\n    const rtmp = this.sdk.getRTMPState();\n    const hls = this.sdk.getHLSState();\n    const transcriptions = this.sdk.getTranscriptionState();\n\n    // then merge them carefully with our store so if something hasn't changed\n    // the reference shouldn't change. Note that the draftStore is an immer draft\n    // object.\n    this.setState(draftStore => {\n      draftStore.room.peers = newHmsPeerIDs;\n      const draftPeers = draftStore.peers;\n      const draftTracks = draftStore.tracks;\n      // the order of below statements are important as merge functions are mutating\n      mergeNewPeersInDraft(draftPeers, newHmsPeers);\n      mergeNewTracksInDraft(draftTracks, newHmsTracks);\n      Object.assign(draftStore.settings, newMediaSettings);\n      if (draftStore.room.isConnected) {\n        Object.assign(draftStore.connectionQualities, newNetworkQuality);\n      }\n\n      /**\n       * if preview is already present merge,\n       * else set as is(which will create/delete)\n       */\n      if (draftStore.preview?.localPeer && newPreview?.localPeer) {\n        Object.assign(draftStore.preview, newPreview);\n      } else {\n        draftStore.preview = newPreview;\n      }\n      Object.assign(draftStore.roles, SDKToHMS.convertRoles(this.sdk.getRoles()));\n      Object.assign(draftStore.playlist, SDKToHMS.convertPlaylist(this.sdk.getPlaylistManager()));\n      Object.assign(draftStore.room, SDKToHMS.convertRecordingStreamingState(recording, rtmp, hls, transcriptions));\n      Object.assign(draftStore.templateAppData, this.sdk.getTemplateAppData());\n    }, action);\n    HMSLogger.timeEnd(`store-sync-${action}`);\n  }\n\n  protected onPreview(sdkRoom: sdkTypes.HMSRoom) {\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(sdkRoom, this.sdk.getLocalPeer()?.peerId));\n      store.room.roomState = HMSRoomState.Preview;\n    }, 'previewStart');\n    this.syncRoomState('previewSync');\n  }\n\n  protected onJoin(sdkRoom: sdkTypes.HMSRoom) {\n    const playlistManager = this.sdk.getPlaylistManager();\n    this.audioPlaylist = new HMSPlaylist(\n      playlistManager,\n      HMSPlaylistType.audio,\n      this.syncPlaylistState.bind(this),\n      this.store,\n    );\n    this.videoPlaylist = new HMSPlaylist(\n      playlistManager,\n      HMSPlaylistType.video,\n      this.syncRoomState.bind(this),\n      this.store,\n    );\n    this.syncRoomState('joinSync');\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(sdkRoom, this.sdk.getLocalPeer()?.peerId));\n      store.room.isConnected = true;\n      store.room.roomState = HMSRoomState.Connected;\n    }, 'joined');\n\n    playlistManager.onProgress(this.setProgress);\n    playlistManager.onNewTrackStart((item: sdkTypes.HMSPlaylistItem<any>) => {\n      this.syncPlaylistState(`${item.type}PlaylistUpdate`);\n    });\n    playlistManager.onPlaylistEnded((type: HMSPlaylistType) => {\n      this.syncPlaylistState(`${type}PlaylistEnded`);\n    });\n    playlistManager.onCurrentTrackEnded((item: sdkTypes.HMSPlaylistItem<any>) => {\n      this.hmsNotifications.sendPlaylistTrackEnded(SDKToHMS.convertPlaylistItem(playlistManager, item));\n      this.syncPlaylistState(`${item.type}PlaylistItemEnded`);\n    });\n  }\n\n  protected onRoomUpdate(type: sdkTypes.HMSRoomUpdate, room: sdkTypes.HMSRoom) {\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(room, this.sdk.getLocalPeer()?.peerId));\n    }, type);\n    if (type === sdkTypes.HMSRoomUpdate.TRANSCRIPTION_STATE_UPDATED) {\n      this.hmsNotifications.sendTranscriptionUpdate(room.transcriptions);\n    }\n  }\n\n  protected onPeerUpdate(type: sdkTypes.HMSPeerUpdate, sdkPeer: sdkTypes.HMSPeer | sdkTypes.HMSPeer[]) {\n    if (\n      [sdkTypes.HMSPeerUpdate.BECAME_DOMINANT_SPEAKER, sdkTypes.HMSPeerUpdate.RESIGNED_DOMINANT_SPEAKER].includes(type)\n    ) {\n      return; // ignore, high frequency update so no point of syncing peers\n    }\n    if (Array.isArray(sdkPeer)) {\n      const storePeers = this.store.getState(selectPeersMap);\n      const newPeerIds = sdkPeer.filter(peer => !storePeers[peer.peerId]);\n      this.syncRoomState('peersJoined');\n      const connected = this.store.getState(selectIsConnectedToRoom);\n      // This is not send unnecessary notifications while in preview\n      // now room state also call peer list to handle large peers\n      if (connected) {\n        const hmsPeers = [];\n        for (const peer of sdkPeer) {\n          const hmsPeer = this.store.getState(selectPeerByID(peer.peerId));\n          if (hmsPeer) {\n            hmsPeers.push(hmsPeer);\n          }\n        }\n        this.hmsNotifications.sendPeerList(hmsPeers);\n      } else {\n        newPeerIds.forEach(peer => {\n          const hmsPeer = this.store.getState(selectPeerByID(peer.peerId));\n          if (hmsPeer) {\n            this.hmsNotifications.sendPeerUpdate(sdkTypes.HMSPeerUpdate.PEER_JOINED, hmsPeer);\n          }\n        });\n      }\n      return;\n    }\n    this.sendPeerUpdateNotification(type, sdkPeer);\n  }\n\n  protected onTrackUpdate(type: sdkTypes.HMSTrackUpdate, track: SDKHMSTrack, peer: sdkTypes.HMSPeer) {\n    // this check is needed because for track removed case, the notification needs to\n    // be send before the track is removed from store\n    if (type === sdkTypes.HMSTrackUpdate.TRACK_REMOVED) {\n      this.hmsNotifications.sendTrackUpdate(type, track.trackId);\n      this.handleTrackRemove(track, peer);\n    } else if ([sdkTypes.HMSTrackUpdate.TRACK_ADDED, sdkTypes.HMSTrackUpdate.TRACK_REMOVED].includes(type)) {\n      const actionName = TRACK_NOTIFICATION_TYPES[type];\n      this.syncRoomState(actionName);\n      this.hmsNotifications.sendTrackUpdate(type, track.trackId);\n    } else {\n      const actionName = TRACK_NOTIFICATION_TYPES[type] || 'trackUpdate';\n      const hmsTrack = SDKToHMS.convertTrack(track);\n      this.setState(draftStore => {\n        const storeTrack = draftStore.tracks[hmsTrack.id];\n        if (isEntityUpdated(storeTrack, hmsTrack)) {\n          mergeTrackArrayFields(storeTrack, hmsTrack);\n          Object.assign(storeTrack, hmsTrack);\n        }\n      }, actionName);\n      this.hmsNotifications.sendTrackUpdate(type, track.trackId);\n    }\n  }\n\n  protected onMessageReceived(message: MessageNotification) {\n    const hmsMessage = SDKToHMS.convertMessage(message, this.store.getState(selectLocalPeerID)) as HMSMessage;\n    hmsMessage.read = false;\n    hmsMessage.ignored = this.ignoredMessageTypes.includes(hmsMessage.type);\n    if (hmsMessage.type === 'hms_transcript') {\n      hmsMessage.ignored = true;\n    }\n    this.putMessageInStore(hmsMessage);\n    this.hmsNotifications.sendMessageReceived(hmsMessage);\n  }\n\n  protected putMessageInStore(hmsMessage: HMSMessage) {\n    if (hmsMessage.ignored) {\n      return;\n    }\n    this.actionBatcher.setState(\n      store => {\n        store.messages.byID[hmsMessage.id] = hmsMessage;\n        store.messages.allIDs.push(hmsMessage.id);\n      },\n      'newMessage',\n      150,\n    );\n  }\n\n  /*\n   * Note: speakers array contain the value only for peers who have audioLevel != 0\n   */\n  protected onAudioLevelUpdate(sdkSpeakers: sdkTypes.HMSSpeaker[]) {\n    this.setState(store => {\n      const trackIDAudioLevelMap: Record<HMSPeerID, number> = {};\n      sdkSpeakers.forEach(sdkSpeaker => {\n        if (!sdkSpeaker.track || !sdkSpeaker.peer) {\n          return;\n        }\n        const trackID = sdkSpeaker.track.trackId;\n        trackIDAudioLevelMap[trackID] = sdkSpeaker.audioLevel;\n        if (!store.speakers[trackID]) {\n          // Set store instances(peers, tracks) references in speaker, not the new ones received.\n          store.speakers[trackID] = {\n            audioLevel: sdkSpeaker.audioLevel,\n            peerID: sdkSpeaker.peer.peerId,\n            trackID: trackID,\n          };\n        }\n      });\n      const speakerEntries = Object.entries(store.speakers);\n      for (const [trackID, speaker] of speakerEntries) {\n        speaker.audioLevel = trackIDAudioLevelMap[trackID] || 0;\n        if (speaker.audioLevel === 0) {\n          delete store.speakers[trackID];\n        }\n      }\n    }, 'audioLevel');\n  }\n\n  /**\n   * The connection quality update is sent for all peers(one needs to know of) every time.\n   */\n  protected onConnectionQualityUpdate(newQualities: sdkTypes.HMSConnectionQuality[]) {\n    this.setState(store => {\n      newQualities.forEach(sdkUpdate => {\n        const peerID = sdkUpdate.peerID;\n        if (!peerID) {\n          return;\n        }\n        if (!store.connectionQualities[peerID]) {\n          store.connectionQualities[peerID] = sdkUpdate;\n        } else {\n          Object.assign(store.connectionQualities[peerID], sdkUpdate);\n        }\n      });\n    }, 'connectionQuality');\n  }\n\n  protected onChangeTrackStateRequest(request: SDKHMSChangeTrackStateRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n    const storeTrackID = this.getStoreLocalTrackIDfromSDKTrack(request.track);\n    const track = this.store.getState(selectTrackByID(storeTrackID));\n\n    if (!track) {\n      return this.logPossibleInconsistency(\n        `Not found track for which track state change was requested, ${request.track}`,\n      );\n    }\n\n    if (!request.enabled) {\n      this.syncRoomState('changeTrackStateRequest');\n    }\n\n    this.hmsNotifications.sendChangeTrackStateRequest({\n      requestedBy: requestedBy || undefined,\n      track,\n      enabled: request.enabled,\n    });\n  }\n\n  protected onChangeMultiTrackStateRequest(request: SDKHMSChangeMultiTrackStateRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n\n    if (!request.enabled) {\n      this.syncRoomState('changeMultiTrackStateRequest');\n    }\n\n    const tracks: HMSTrack[] = [];\n    const tracksMap = this.store.getState(selectTracksMap);\n    for (const track of request.tracks) {\n      const storeTrackID = this.getStoreLocalTrackIDfromSDKTrack(track);\n      if (storeTrackID && tracksMap[storeTrackID]) {\n        tracks.push(tracksMap[storeTrackID]);\n      }\n    }\n\n    this.hmsNotifications.sendChangeMultiTrackStateRequest({\n      requestedBy: requestedBy || undefined,\n      tracks,\n      enabled: request.enabled,\n      type: request.type,\n      source: request.source,\n    });\n  }\n\n  protected onReconnected() {\n    this.syncRoomState('reconnectedSync');\n    this.hmsNotifications.sendReconnected();\n    this.setState(store => {\n      store.room.roomState = store.room.isConnected ? HMSRoomState.Connected : HMSRoomState.Preview;\n    }, 'reconnected');\n  }\n\n  protected onReconnecting(sdkError: SDKHMSException) {\n    const error = SDKToHMS.convertException(sdkError);\n    HMSLogger.e('Reconnection: received error from sdk', error);\n    this.hmsNotifications.sendReconnecting(error);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Reconnecting;\n      store.errors.push(error);\n    }, 'reconnecting');\n  }\n\n  protected onError(sdkException: SDKHMSException) {\n    const error = SDKToHMS.convertException(sdkException);\n    if (error.isTerminal) {\n      // terminal error leave room as it is not recoverable\n      this.leave().then(() => HMSLogger.e('error from SDK, left room.'));\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Failed;\n        store.errors.push(error);\n      }, 'errorTerminal');\n    } else {\n      const numExistingErrors = this.store.getState().errors.length;\n      // just in case there is some infinite loop sending errors\n      if (numExistingErrors < 50) {\n        this.setState(store => {\n          store.errors.push(error);\n        }, 'error');\n      }\n    }\n    this.syncRoomState('errorSync'); //TODO: check if need to be done in a different way\n    // send notification\n    this.hmsNotifications.sendError(error);\n    HMSLogger.e('received error from sdk', error instanceof SDKHMSException ? `${error}` : error);\n  }\n\n  private handleTrackRemove(sdkTrack: SDKHMSTrack, sdkPeer: sdkTypes.HMSPeer) {\n    this.setState(draftStore => {\n      const hmsPeer = draftStore.peers[sdkPeer.peerId];\n      const draftTracks = draftStore.tracks;\n      const trackId = sdkTrack.trackId;\n\n      if (hmsPeer) {\n        if (trackId === hmsPeer.audioTrack) {\n          delete hmsPeer.audioTrack;\n        } else if (trackId === hmsPeer.videoTrack) {\n          delete hmsPeer.videoTrack;\n        } else {\n          const auxiliaryIndex = hmsPeer.auxiliaryTracks.indexOf(trackId);\n          if (auxiliaryIndex > -1) {\n            hmsPeer.auxiliaryTracks.splice(auxiliaryIndex, 1);\n          }\n        }\n      }\n      delete draftTracks[trackId];\n    }, 'trackRemoved');\n  }\n\n  private async setEnabledSDKTrack(trackID: string, enabled: boolean) {\n    const track = this.getLocalTrack(trackID);\n    if (track) {\n      await track.setEnabled(enabled);\n    } else {\n      this.logPossibleInconsistency(`track ${trackID} not present, unable to enabled/disable`);\n    }\n  }\n\n  private async setSDKLocalVideoTrackSettings(trackID: string, settings: Partial<sdkTypes.HMSVideoTrackSettings>) {\n    const track = this.getLocalTrack(trackID) as SDKHMSLocalVideoTrack;\n    if (track) {\n      await track.setSettings(settings);\n    } else {\n      this.logPossibleInconsistency(`local track ${trackID} not present, unable to set settings`);\n    }\n  }\n\n  private async setSDKLocalAudioTrackSettings(trackID: string, settings: Partial<sdkTypes.HMSAudioTrackSettings>) {\n    const track = this.getLocalTrack(trackID) as SDKHMSLocalAudioTrack;\n    if (track) {\n      await track.setSettings(settings);\n    } else {\n      this.logPossibleInconsistency(`local track ${trackID} not present, unable to set settings`);\n    }\n  }\n\n  private getMediaSettings(sdkPeer: sdkTypes.HMSPeer): Partial<HMSMediaSettings> {\n    const settings = this.store.getState(selectLocalMediaSettings);\n    const audioTrack = sdkPeer.audioTrack as SDKHMSLocalAudioTrack;\n    const videoTrack = sdkPeer.videoTrack as SDKHMSLocalVideoTrack;\n    return {\n      audioInputDeviceId: audioTrack?.settings.deviceId || settings.audioInputDeviceId,\n      videoInputDeviceId: videoTrack?.settings.deviceId || settings.videoInputDeviceId,\n      audioOutputDeviceId: this.sdk.getAudioOutput().getDevice()?.deviceId,\n      audioMode: audioTrack?.settings.audioMode || HMSAudioMode.VOICE,\n    };\n  }\n\n  private getPreviewFields(sdkLocalPeer: sdkTypes.HMSLocalPeer): HMSStore['preview'] {\n    // if room is not in preview, clear preview fields\n    if (!sdkLocalPeer.isInPreview()) {\n      return;\n    }\n\n    const hmsLocalPeer = SDKToHMS.convertPeer(sdkLocalPeer);\n\n    return {\n      localPeer: hmsLocalPeer.id,\n      audioTrack: hmsLocalPeer.audioTrack,\n      videoTrack: hmsLocalPeer.videoTrack,\n      asRole: sdkLocalPeer.asRole?.name || sdkLocalPeer.role?.name,\n    };\n  }\n\n  private async setTrackVolume(value: number, trackId: HMSTrackID) {\n    const track = this.getTrackById(trackId);\n    if (track) {\n      if (track instanceof SDKHMSAudioTrack) {\n        await track.setVolume(value);\n        this.setState(draftStore => {\n          const track = draftStore.tracks[trackId];\n          if (track && track.type === 'audio') {\n            track.volume = value;\n          }\n        }, 'trackVolume');\n      } else {\n        HMSLogger.w(`track ${trackId} is not an audio track`);\n      }\n    } else {\n      this.logPossibleInconsistency(`track ${trackId} not present, unable to set volume`);\n    }\n  }\n\n  /**\n   * Tells if the trackID is for local peer and video unmute is in process\n   * @private\n   */\n  private localAndVideoUnmuting(trackID: string) {\n    const localPeer = this.store.getState(selectLocalPeer);\n    if (localPeer?.videoTrack !== trackID) {\n      return false;\n    }\n    const displayEnabled = this.store.getState(selectIsLocalVideoDisplayEnabled);\n    const actuallyEnabled = this.store.getState(selectIsLocalVideoEnabled);\n    return displayEnabled && !actuallyEnabled;\n  }\n\n  private logPossibleInconsistency(inconsistency: string) {\n    HMSLogger.w('possible inconsistency detected - ', inconsistency);\n  }\n\n  private async addRemoveVideoPlugin(plugin: HMSVideoPlugin, action: 'add' | 'remove', pluginFrameRate?: number) {\n    if (!plugin) {\n      HMSLogger.w('Invalid plugin received in store');\n      return;\n    }\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      const sdkTrack = this.getLocalTrack(trackID);\n\n      if (sdkTrack) {\n        if (action === 'add') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).addPlugin(plugin, pluginFrameRate);\n        } else if (action === 'remove') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).removePlugin(plugin);\n        }\n        this.syncRoomState(`${action}VideoPlugin`);\n      } else {\n        this.logPossibleInconsistency(`track ${trackID} not present, unable to ${action} plugin`);\n      }\n    }\n  }\n\n  private async addRemoveMediaStreamVideoPlugins(plugins: HMSMediaStreamPlugin[], action: 'add' | 'remove') {\n    if (plugins.length === 0) {\n      HMSLogger.w('Invalid plugin received in store');\n      return;\n    }\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      const sdkTrack = this.getLocalTrack(trackID);\n      if (sdkTrack) {\n        if (action === 'add') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).addStreamPlugins(plugins);\n        } else if (action === 'remove') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).removeStreamPlugins(plugins);\n        }\n        this.syncRoomState(`${action}MediaStreamPlugin`);\n      } else {\n        this.logPossibleInconsistency(`track ${trackID} not present, unable to ${action} plugin`);\n      }\n    }\n  }\n\n  //eslint-disable-next-line complexity\n  private async addRemoveAudioPlugin(plugin: HMSAudioPlugin, action: 'add' | 'remove') {\n    try {\n      if (!plugin) {\n        HMSLogger.w('Invalid plugin received in store');\n        return;\n      }\n      const trackID = this.store.getState(selectLocalAudioTrackID);\n      if (trackID) {\n        const sdkTrack = this.getLocalTrack(trackID);\n        if (sdkTrack) {\n          if (action === 'add') {\n            await (sdkTrack as SDKHMSLocalAudioTrack).addPlugin(plugin);\n          } else if (action === 'remove') {\n            await (sdkTrack as SDKHMSLocalAudioTrack).removePlugin(plugin);\n          }\n          this.syncRoomState(`${action}AudioPlugin`);\n        } else {\n          this.logPossibleInconsistency(`track ${trackID} not present, unable to ${action} plugin`);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * convert new role change requests to store format and save.\n   * keep only one request at a time in store till we figure out how to handle multiple requests at the same time\n   */\n  private onRoleChangeRequest(request: SDKHMSRoleChangeRequest) {\n    this.setState(store => {\n      if (store.roleChangeRequests.length === 0) {\n        store.roleChangeRequests.push(SDKToHMS.convertRoleChangeRequest(request));\n      }\n    }, 'roleChangeRequest');\n  }\n\n  private removeRoleChangeRequest(toRemove: HMSRoleChangeRequest) {\n    this.setState(store => {\n      const index = store.roleChangeRequests.findIndex(req => {\n        return req.token === toRemove.token;\n      });\n      if (index !== -1) {\n        store.roleChangeRequests.splice(index, 1);\n      }\n    }, 'removeRoleChangeRequest');\n  }\n\n  private onRoleUpdate() {\n    this.syncRoomState('roleUpdate');\n  }\n\n  private getStoreLocalTrackIDfromSDKTrack(sdkTrack: SDKHMSLocalTrack) {\n    const trackIDs = this.store.getState(selectLocalTrackIDs);\n    return trackIDs.find(trackID => this.getTrackById(trackID)?.trackId === sdkTrack.trackId);\n  }\n\n  private setProgress = ({ type, progress }: sdkTypes.HMSPlaylistProgressEvent) => {\n    this.setState(draftStore => {\n      draftStore.playlist[type].progress = progress;\n      draftStore.playlist[type].currentTime = this.sdk.getPlaylistManager().getCurrentTime(type);\n    }, 'playlistProgress');\n  };\n\n  private syncPlaylistState = (action: string) => {\n    this.setState(draftStore => {\n      Object.assign(draftStore.playlist, SDKToHMS.convertPlaylist(this.sdk.getPlaylistManager()));\n    }, action);\n  };\n\n  // eslint-disable-next-line complexity\n  private sendPeerUpdateNotification = (type: sdkTypes.HMSPeerUpdate, sdkPeer: sdkTypes.HMSPeer) => {\n    let peer = this.store.getState(selectPeerByID(sdkPeer.peerId));\n    const actionName = PEER_NOTIFICATION_TYPES[type] || 'peerUpdate';\n    if (type === sdkTypes.HMSPeerUpdate.ROLE_UPDATED) {\n      this.syncRoomState(actionName);\n      this.updateMidCallPreviewRoomState(type, sdkPeer);\n    } else if ([sdkTypes.HMSPeerUpdate.PEER_JOINED, sdkTypes.HMSPeerUpdate.PEER_LEFT].includes(type)) {\n      this.syncRoomState(actionName);\n      // if peer wasn't available before sync(will happen if event is peer join)\n      if (!peer) {\n        peer = this.store.getState(selectPeerByID(sdkPeer.peerId));\n      }\n    } else if (\n      [\n        sdkTypes.HMSPeerUpdate.HAND_RAISE_CHANGED,\n        sdkTypes.HMSPeerUpdate.PEER_REMOVED,\n        sdkTypes.HMSPeerUpdate.PEER_ADDED,\n      ].includes(type)\n    ) {\n      this.syncRoomState(actionName);\n      if (!peer) {\n        peer = this.store.getState(selectPeerByID(sdkPeer.peerId));\n      }\n    } else {\n      const hmsPeer = SDKToHMS.convertPeer(sdkPeer) as HMSPeer;\n      this.setState(draftStore => {\n        const storePeer = draftStore.peers[hmsPeer.id];\n        if (isEntityUpdated(storePeer, hmsPeer)) {\n          if (areArraysEqual(storePeer.auxiliaryTracks, hmsPeer.auxiliaryTracks)) {\n            storePeer.auxiliaryTracks = hmsPeer.auxiliaryTracks;\n          }\n          Object.assign(storePeer, hmsPeer);\n        }\n        peer = hmsPeer;\n      }, actionName);\n    }\n    this.hmsNotifications.sendPeerUpdate(type, peer);\n  };\n\n  private updateMidCallPreviewRoomState(type: sdkTypes.HMSPeerUpdate, sdkPeer: sdkTypes.HMSPeer) {\n    if (sdkPeer.isLocal && type === sdkTypes.HMSPeerUpdate.ROLE_UPDATED && this.store.getState(selectIsInPreview)) {\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Connected;\n      }, 'midCallPreviewCompleted');\n    }\n  }\n\n  private setSessionStoreValueLocally(\n    updates: SessionStoreUpdate | SessionStoreUpdate[],\n    actionName = 'setSessionStore',\n  ) {\n    const updatesList: SessionStoreUpdate[] = Array.isArray(updates) ? updates : [updates];\n    this.setState(store => {\n      updatesList.forEach(update => {\n        store.sessionStore[update.key as keyof T['sessionStore']] = update.value;\n      });\n    }, actionName);\n  }\n\n  private getSDKHMSPeer = (peerID: HMSPeerID) => {\n    return this.sdk.getPeerMap()[peerID];\n  };\n\n  /**\n   * setState is separate so any future changes to how state change can be done from one place.\n   * @param fn\n   * @param name\n   */\n  private setState: NamedSetState<HMSStore<T>> = (fn, name) => {\n    return this.store.namedSetState(fn, name);\n  };\n\n  /**\n   * @internal\n   * This will be used by beam to check if the recording should continue, it will pass __hms.stats\n   * It will poll at a fixed interval and start an exit timer if the method fails twice consecutively\n   * The exit timer is stopped if the method returns true before that\n   * @param hmsStats\n   */\n  hasActiveElements(hmsStats: HMSStats): boolean {\n    const isWhiteboardPresent = Object.keys(this.store.getState().whiteboards).length > 0;\n    const isQuizOrPollPresent = Object.keys(this.store.getState().polls).length > 0;\n    const peerCount = Object.keys(this.store.getState().peers).length > 0;\n    const remoteTracks = hmsStats.getState().remoteTrackStats;\n    return (\n      peerCount &&\n      (isWhiteboardPresent ||\n        isQuizOrPollPresent ||\n        Object.values(remoteTracks).some(track => track && typeof track.bitrate === 'number' && track.bitrate > 0))\n    );\n  }\n}\n", "import { isBrowser } from '../internal';\n\nexport const storeNameWithTabTitle = (storeName: string) => {\n  return isBrowser ? `${storeName} ${document.title}` : storeName;\n};\n", "import AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { EventBus } from '../events/EventBus';\nimport { HMSUpdateListener } from '../interfaces';\nimport { NetworkHealth, ScoreMap } from '../signal/init/models';\nimport HMSLogger from '../utils/logger';\nimport { sleep } from '../utils/timer-utils';\n\nexport class NetworkTestManager {\n  private readonly TAG = '[NetworkTestManager]';\n  private controller = new AbortController();\n  private score?: number;\n  constructor(private eventBus: EventBus, private listener?: HMSUpdateListener) {}\n\n  start = async (networkHealth: NetworkHealth) => {\n    if (!networkHealth) {\n      return;\n    }\n    const { url, timeout, scoreMap } = networkHealth;\n    const signal = this.controller.signal;\n\n    const startTime = Date.now();\n    let downloadedSize = 0;\n    const timeoutPromise = sleep(timeout).then(() => {\n      this.controller.abort();\n    });\n    try {\n      const res = await fetch(`${url}?${Date.now()}`, { signal });\n      const reader = res.body?.getReader();\n      if (!reader) {\n        throw Error('unable to process request');\n      }\n      const readData = async () => {\n        if (!reader) {\n          return;\n        }\n        try {\n          let completed = false;\n          while (!completed) {\n            const { value, done } = await reader.read();\n            completed = done;\n            if (value) {\n              downloadedSize += value.byteLength;\n              this.sendScore({ scoreMap, downloadedSize, startTime });\n            }\n          }\n        } catch (error) {\n          if ((error as Error).name !== 'AbortError') {\n            HMSLogger.d(this.TAG, error);\n          }\n        }\n      };\n\n      return Promise.race([readData(), timeoutPromise])\n        .then(() => {\n          this.sendScore({ scoreMap, downloadedSize, startTime, finished: true });\n        })\n        .catch(error => {\n          HMSLogger.d(this.TAG, error);\n          this.updateScoreToListener(0);\n          this.eventBus.analytics.publish(\n            AnalyticsEventFactory.previewNetworkQuality({ error: (error as Error).message }),\n          );\n        });\n    } catch (error) {\n      if ((error as Error).name !== 'AbortError') {\n        HMSLogger.d(this.TAG, error);\n        this.updateScoreToListener(0);\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.previewNetworkQuality({ error: (error as Error).message }),\n        );\n      } else {\n        HMSLogger.d(this.TAG, error);\n      }\n    }\n  };\n\n  stop = () => {\n    if (!this.controller.signal.aborted) {\n      this.controller.abort();\n    }\n  };\n\n  private sendScore = ({\n    scoreMap,\n    downloadedSize,\n    startTime,\n    finished = false,\n  }: {\n    scoreMap: ScoreMap;\n    downloadedSize: number;\n    startTime: number;\n    finished?: boolean;\n  }) => {\n    const totalTimeInSecs = (Date.now() - startTime) / 1000;\n    const sizeInKB = downloadedSize / 1024;\n    const bitrate = (sizeInKB / totalTimeInSecs) * 8;\n    let calculatedScore = -1;\n    for (const score in scoreMap) {\n      const thresholds = scoreMap[score];\n      if (bitrate >= thresholds.low && (!thresholds.high || bitrate <= thresholds.high)) {\n        calculatedScore = Number(score);\n      }\n    }\n    this.updateScoreToListener(calculatedScore);\n    if (finished) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.previewNetworkQuality({ score: calculatedScore, downLink: bitrate.toFixed(2) }),\n      );\n    }\n  };\n\n  private updateScoreToListener(newQualityScore: number) {\n    if (newQualityScore === this.score) {\n      return;\n    }\n    this.score = newQualityScore;\n    this.listener?.onNetworkQuality?.(newQualityScore);\n  }\n}\n", "import { Store } from './store';\nimport { DeviceManager } from '../device-manager';\nimport { DeviceType, HMSRole } from '../interfaces';\nimport InitialSettings from '../interfaces/settings';\nimport { SimulcastLayers } from '../interfaces/simulcast-layers';\nimport { HMSPeerUpdate, HMSTrackUpdate, HMSUpdateListener } from '../interfaces/update-listener';\nimport { HMSLocalTrack } from '../media/tracks';\nimport HMSTransport from '../transport';\n\nexport default class RoleChangeManager {\n  constructor(\n    private store: Store,\n    private transport: HMSTransport,\n    private deviceManager: DeviceManager,\n    private publish: (settings: InitialSettings) => Promise<void>,\n    private removeAuxiliaryTrack: (trackId: string) => void,\n    private listener?: HMSUpdateListener,\n  ) {}\n\n  handleLocalPeerRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const localPeer = this.store.getLocalPeer();\n\n    if (!localPeer) {\n      return;\n    }\n\n    await this.diffRolesAndPublishTracks({ oldRole, newRole });\n    this.listener?.onPeerUpdate(HMSPeerUpdate.ROLE_UPDATED, localPeer);\n  };\n\n  diffRolesAndPublishTracks = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const wasPublishing = new Set(oldRole.publishParams.allowed);\n    const isPublishing = new Set(newRole.publishParams.allowed);\n\n    const removeVideo = this.removeTrack(wasPublishing, isPublishing, 'video');\n\n    const removeAudio = this.removeTrack(wasPublishing, isPublishing, 'audio');\n    const removeScreen = this.removeTrack(wasPublishing, isPublishing, 'screen');\n\n    const videoHasSimulcastDifference = this.hasSimulcastDifference(\n      oldRole.publishParams.simulcast?.video,\n      newRole.publishParams.simulcast?.video,\n    );\n    const screenHasSimulcastDifference = this.hasSimulcastDifference(\n      oldRole.publishParams.simulcast?.screen,\n      newRole.publishParams.simulcast?.screen,\n    );\n\n    const prevVideoEnabled = this.store.getLocalPeer()?.videoTrack?.enabled;\n\n    await this.removeAudioTrack(removeAudio);\n    await this.removeVideoTracks(removeVideo || videoHasSimulcastDifference);\n    await this.removeScreenTracks(removeScreen || screenHasSimulcastDifference);\n\n    const settings = this.getSettings();\n\n    if (videoHasSimulcastDifference) {\n      settings.isVideoMuted = !prevVideoEnabled;\n    }\n\n    // call publish with new settings, local track manager will diff policies\n    await this.publish(settings);\n    await this.syncDevices(settings, newRole);\n  };\n\n  private async syncDevices(initialSettings: InitialSettings, newRole: HMSRole) {\n    if ((!initialSettings.isAudioMuted || !initialSettings.isVideoMuted) && newRole.publishParams.allowed.length > 0) {\n      await this.deviceManager.init(true);\n    }\n  }\n  private async removeVideoTracks(removeVideo: boolean) {\n    if (!removeVideo) {\n      return;\n    }\n    const localPeer = this.store.getLocalPeer();\n    // TODO check auxillary tracks for regular audio and video too\n    if (localPeer?.videoTrack) {\n      // TODO: stop processed track and cleanup plugins loop non async\n      // vb can throw change role off otherwise\n      if (localPeer.videoTrack.isPublished) {\n        await this.transport.unpublish([localPeer.videoTrack]);\n      } else {\n        await localPeer.videoTrack.cleanup();\n      }\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, localPeer.videoTrack, localPeer);\n      localPeer.videoTrack = undefined;\n    }\n    await this.removeAuxTracks(track => track.source !== 'screen' && track.type === 'video');\n  }\n\n  private async removeAudioTrack(removeAudio: boolean) {\n    if (!removeAudio) {\n      return;\n    }\n    const localPeer = this.store.getLocalPeer();\n    if (localPeer?.audioTrack) {\n      if (localPeer.audioTrack.isPublished) {\n        await this.transport.unpublish([localPeer.audioTrack]);\n      } else {\n        await localPeer.audioTrack.cleanup();\n      }\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, localPeer.audioTrack, localPeer);\n      localPeer.audioTrack = undefined;\n    }\n    await this.removeAuxTracks(track => track.source !== 'screen' && track.type === 'audio');\n  }\n\n  private async removeScreenTracks(removeScreen: boolean) {\n    if (!removeScreen) {\n      return;\n    }\n    await this.removeAuxTracks(track => track.source === 'screen');\n  }\n\n  private async removeAuxTracks(predicate: (track: HMSLocalTrack) => boolean) {\n    const localPeer = this.store.getLocalPeer();\n    if (localPeer?.auxiliaryTracks) {\n      const localAuxTracks = [...localPeer.auxiliaryTracks];\n      for (const track of localAuxTracks) {\n        if (predicate(track)) {\n          await this.removeAuxiliaryTrack(track.trackId);\n        }\n      }\n    }\n  }\n\n  private removeTrack(wasPublishing: Set<string>, isPublishing: Set<string>, type: string) {\n    return wasPublishing.has(type) && !isPublishing.has(type);\n  }\n\n  private hasSimulcastDifference(oldLayers?: SimulcastLayers, newLayers?: SimulcastLayers) {\n    if (!oldLayers && !newLayers) {\n      return false;\n    }\n    if (oldLayers?.layers?.length !== newLayers?.layers?.length) {\n      return true;\n    }\n\n    // return true if anyone layer has different maxBitrate/maxFramerate\n    return !!oldLayers?.layers?.some(layer => {\n      const newLayer = newLayers?.layers?.find(newLayer => newLayer.rid === layer.rid);\n      return newLayer?.maxBitrate !== layer.maxBitrate || newLayer?.maxFramerate !== layer.maxFramerate;\n    });\n  }\n\n  private getSettings(): InitialSettings {\n    const { isAudioMuted, isVideoMuted } = this.getMutedStatus();\n    const { audioInputDeviceId, audioOutputDeviceId } = this.getAudioDeviceSettings();\n    const videoDeviceId = this.getVideoInputDeviceId();\n    return {\n      isAudioMuted: isAudioMuted,\n      isVideoMuted: isVideoMuted,\n      audioInputDeviceId: audioInputDeviceId,\n      audioOutputDeviceId: audioOutputDeviceId,\n      videoDeviceId: videoDeviceId,\n    };\n  }\n\n  private getMutedStatus(): { isAudioMuted: boolean; isVideoMuted: boolean } {\n    const initialSettings = this.store.getConfig()?.settings;\n    return {\n      isAudioMuted: initialSettings?.isAudioMuted ?? true,\n      isVideoMuted: initialSettings?.isVideoMuted ?? true,\n    };\n  }\n\n  private getAudioDeviceSettings(): { audioInputDeviceId: string; audioOutputDeviceId: string } {\n    const initialSettings = this.store.getConfig()?.settings;\n    const audioInputDeviceId =\n      this.deviceManager.currentSelection[DeviceType.audioInput]?.deviceId ||\n      initialSettings?.audioInputDeviceId ||\n      'default';\n    const audioOutputDeviceId =\n      this.deviceManager.currentSelection[DeviceType.audioOutput]?.deviceId ||\n      initialSettings?.audioOutputDeviceId ||\n      'default';\n\n    return {\n      audioInputDeviceId,\n      audioOutputDeviceId,\n    };\n  }\n\n  private getVideoInputDeviceId(): string {\n    const initialSettings = this.store.getConfig()?.settings;\n    return (\n      this.deviceManager.currentSelection[DeviceType.videoInput]?.deviceId ||\n      initialSettings?.videoDeviceId ||\n      'default'\n    );\n  }\n}\n", "import AnalyticsEvent from './AnalyticsEvent';\nimport { IAnalyticsTransportProvider } from './IAnalyticsTransportProvider';\nimport {\n  CLIENT_ANAYLTICS_PROD_ENDPOINT,\n  CLIENT_ANAYLTICS_QA_ENDPOINT,\n  CLIENT_ANAYLTICS_STORAGE_LIMIT,\n} from '../utils/constants';\nimport { LocalStorage } from '../utils/local-storage';\nimport HMSLogger from '../utils/logger';\nimport { ENV } from '../utils/support';\n\ninterface ClientEventBody {\n  event: string;\n  event_id: string;\n  peer: {\n    peer_id?: string;\n    role?: string;\n    joined_at?: number;\n    left_at?: number;\n    room_id?: string;\n    room_name?: string;\n    session_started_at?: number;\n    user_data?: string;\n    user_name?: string;\n    template_id?: string;\n    session_id?: string;\n  };\n  timestamp: number;\n  cluster: {\n    websocket_url: string;\n  };\n  payload: Record<string, any>;\n  device_id: string;\n}\n\nclass ClientAnalyticsTransport implements IAnalyticsTransportProvider {\n  readonly TAG = '[HTTPAnalyticsTransport]';\n  private failedEvents = new LocalStorage<AnalyticsEvent[]>('client-events');\n  isConnected = true;\n  private env: null | ENV = null;\n  private websocketURL = '';\n\n  setEnv(env: ENV) {\n    this.env = env;\n    this.flushFailedEvents();\n  }\n\n  setWebsocketEndpoint(ws: string) {\n    this.websocketURL = ws;\n  }\n\n  sendEvent(event: AnalyticsEvent) {\n    if (!this.env) {\n      this.addEventToStorage(event);\n      return;\n    }\n    const requestBody: ClientEventBody = {\n      event: event.name,\n      payload: event.properties,\n      event_id: String(event.timestamp),\n      peer: event.metadata.peer,\n      timestamp: event.timestamp,\n      device_id: event.device_id,\n      cluster: {\n        websocket_url: this.websocketURL,\n      },\n    };\n    const url = this.env === ENV.PROD ? CLIENT_ANAYLTICS_PROD_ENDPOINT : CLIENT_ANAYLTICS_QA_ENDPOINT;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${event.metadata.token}`,\n        user_agent_v2: event.metadata.userAgent,\n      },\n      body: JSON.stringify(requestBody),\n    })\n      .then(response => {\n        // Ignore invalid token or expired token messages\n        if (response.status === 401) {\n          this.removeFromStorage(event);\n          return;\n        }\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n        this.removeFromStorage(event);\n      })\n      .catch(error => {\n        HMSLogger.v(this.TAG, 'Failed to send event', error, event);\n        this.addEventToStorage(event);\n      });\n  }\n  flushFailedEvents() {\n    const events = this.failedEvents.get();\n    events?.forEach(event => this.sendEvent(event));\n  }\n\n  private addEventToStorage(event: AnalyticsEvent): void {\n    const existingEvents = this.failedEvents.get() || [];\n    if (!existingEvents.find(existingEvent => existingEvent.timestamp === event.timestamp)) {\n      if (existingEvents.length === CLIENT_ANAYLTICS_STORAGE_LIMIT) {\n        existingEvents.shift();\n      }\n      existingEvents.push(event);\n      this.failedEvents.set(existingEvents);\n    }\n  }\n\n  private removeFromStorage(event: AnalyticsEvent): void {\n    const events = this.failedEvents.get() || [];\n    const index = events.findIndex(storageEvent => storageEvent.timestamp === event.timestamp);\n    if (index > -1) {\n      events.splice(index, 1);\n      this.failedEvents.set(events);\n    }\n  }\n}\n\nexport const HTTPAnalyticsTransport = new ClientAnalyticsTransport();\n", "import { VideoTrackLayerUpdate } from '../connection/channel-messages';\nimport { HMSPeerType } from '../interfaces/peer/hms-peer';\nimport { HMSRole } from '../interfaces/role';\nimport { HMSLocalTrack } from '../media/tracks';\nimport { HMSTrack, HMSTrackSource } from '../media/tracks/HMSTrack';\nimport { PollInfoParams, PollResult, Track } from '../signal/interfaces';\n\n/**\n * Interfaces for message received from BIZ Signal through Websocket.\n * These messages are handled by NotificationManager\n * which will call the corresponding HMSUpdateListener callbacks.\n */\n\nexport interface ServerError {\n  code: number;\n  message?: string;\n}\n\nexport interface TrackStateNotification {\n  tracks: {\n    [track_id: string]: TrackState;\n  };\n  peer: PeerNotificationInfo;\n}\n\nexport interface OnTrackLayerUpdateNotification {\n  tracks: {\n    [track_id: string]: VideoTrackLayerUpdate;\n  };\n}\n\nexport interface PeerNotificationInfo {\n  peer_id: string;\n  role: string;\n  groups: string[];\n  info: Info;\n}\n\nexport interface Info {\n  name: string;\n  data: string;\n  user_id: string;\n  type: HMSPeerType;\n}\n\nexport interface FindPeerByNameInfo {\n  name: string;\n  peer_id: string;\n  role: string;\n  type: HMSPeerType;\n}\n\nexport enum HMSRecordingState {\n  NONE = 'none',\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  PAUSED = 'paused',\n  RESUMED = 'resumed',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\n\nexport enum HMSStreamingState {\n  NONE = 'none',\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\n\nexport enum HMSTranscriptionState {\n  INITIALISED = 'initialised',\n  STARTED = 'started',\n  STOPPED = 'stopped',\n  FAILED = 'failed',\n}\nexport enum HMSTranscriptionMode {\n  CAPTION = 'caption',\n}\nexport interface WhiteBoardPluginPermissions {\n  permissions?: {\n    // list of roles\n    admin?: Array<string>;\n    writer?: Array<string>;\n    reader?: Array<string>;\n  };\n}\n\nexport interface TranscriptionPluginPermissions {\n  permissions?: {\n    // list of roles\n    admin?: Array<string>;\n  };\n  mode: HMSTranscriptionMode;\n}\n\nexport interface NoiseCancellationPlugin {\n  enabled?: boolean;\n}\nexport enum Plugins {\n  WHITEBOARD = 'whiteboard',\n  TRANSCRIPTIONS = 'transcriptions',\n  NOISE_CANCELLATION = 'noiseCancellation',\n}\n\nexport interface PolicyParams {\n  name: string;\n  known_roles: {\n    [role: string]: HMSRole;\n  };\n  plugins: {\n    [Plugins.WHITEBOARD]?: WhiteBoardPluginPermissions;\n    [Plugins.TRANSCRIPTIONS]?: TranscriptionPluginPermissions[];\n    [Plugins.NOISE_CANCELLATION]?: NoiseCancellationPlugin;\n  };\n  template_id: string;\n  app_data?: Record<string, string>;\n}\n\n/**\n * This is in a format biz sends/received the track metadata\n */\nexport class TrackState implements Track {\n  mute: boolean;\n  type: 'audio' | 'video';\n  source: HMSTrackSource;\n  description: string;\n  track_id: string;\n  stream_id: string;\n\n  constructor(track: HMSLocalTrack | Track) {\n    this.type = track.type;\n    this.source = track.source || 'regular';\n    this.description = '';\n    if (track instanceof HMSTrack) {\n      this.mute = !track.enabled;\n      this.track_id = track.publishedTrackId!;\n      this.stream_id = track.stream.id;\n    } else {\n      this.mute = track.mute;\n      this.track_id = track.track_id;\n      this.stream_id = track.stream_id;\n    }\n  }\n}\n\nexport interface PeerNotification {\n  peer_id: string;\n  info: Info;\n  role: string;\n  joined_at?: number;\n  tracks: {\n    [track_id: string]: TrackState;\n  };\n  groups: string[];\n  realtime?: boolean;\n  is_from_room_state?: boolean;\n}\n\nexport interface TranscriptionNotification {\n  state?: HMSTranscriptionState;\n  mode?: HMSTranscriptionMode;\n  initialised_at?: number;\n  started_at?: number;\n  updated_at?: number;\n  stopped_at?: number;\n  peer?: PeerNotificationInfo;\n  error?: ServerError;\n}\n\nexport interface RoomState {\n  name: string;\n  session_id?: string;\n  started_at?: number;\n  recording?: {\n    sfu: {\n      started_at?: number;\n      enabled: boolean;\n      state?: HMSRecordingState;\n    };\n    browser: {\n      started_at?: number;\n      enabled: boolean;\n      state?: HMSRecordingState;\n    };\n    hls: {\n      initialised_at?: number;\n      started_at?: number;\n      enabled: boolean;\n      state?: HMSRecordingState;\n      config?: {\n        hls_vod: boolean;\n        single_file_per_layer: boolean;\n      };\n    };\n  };\n  streaming?: {\n    enabled: boolean;\n    rtmp: { enabled: boolean; started_at?: number; state?: HMSStreamingState };\n    hls: HLSNotification;\n  };\n  transcriptions?: TranscriptionNotification[];\n}\n\nexport interface PeerListNotification {\n  peers: {\n    [peer_id: string]: PeerNotification;\n  };\n  room: RoomState;\n}\n\nexport interface PeriodicRoomState {\n  peer_count: number;\n  room: RoomState;\n  peers?: {\n    [peer_id: string]: PeerNotification;\n  };\n}\n\ninterface Speaker {\n  peer_id: string;\n  track_id: string;\n  level: number;\n}\n\nexport interface SpeakerList {\n  'speaker-list': Speaker[];\n}\n\ninterface ConnectionQuality {\n  peer_id: string;\n  downlink_score: number;\n}\n\nexport interface ConnectionQualityList {\n  peers: ConnectionQuality[];\n}\n\n/**\n * Represents the role change request received from the server\n */\nexport interface RoleChangeRequestParams {\n  requested_by?: string;\n  role: string;\n  token: string;\n}\n\nexport interface TrackUpdateRequestNotification {\n  requested_by?: string;\n  track_id: string;\n  stream_id: string;\n  mute: boolean;\n}\n\nexport interface ChangeTrackMuteStateNotification {\n  requested_by?: string;\n  roles?: string[];\n  type?: 'audio' | 'video';\n  source?: HMSTrackSource;\n  value: boolean;\n}\n\nexport interface PeerLeaveRequestNotification {\n  requested_by?: string;\n  reason: string;\n  room_end: boolean;\n}\n\nexport interface MessageNotification {\n  peer?: {\n    peer_id: string;\n    groups: string[];\n    role: string;\n    info: {\n      name: string;\n      data: any;\n      user_id: string;\n    };\n  };\n  roles?: string[];\n  message_id: string;\n  private: boolean;\n  timestamp: number;\n  info: MessageNotificationInfo;\n}\n\nexport interface SendMessage {\n  info: MessageNotificationInfo;\n  roles?: string[];\n  peer_id?: string;\n}\n\nexport interface MessageNotificationInfo {\n  message: any;\n  type: string;\n}\nexport enum RecordingNotificationType {\n  SFU = 'sfu',\n  BROWSER = 'Browser',\n  HLS = 'HLS',\n}\nexport interface RecordingNotification {\n  type: RecordingNotificationType;\n  initialised_at?: number; // only used for type hls\n  started_at?: number;\n  peer?: PeerNotificationInfo;\n  error?: ServerError;\n  state?: HMSRecordingState;\n  hls_recording?: HLSRecording; // only used for type hls\n}\n\nexport interface RTMPNotification {\n  peer?: PeerNotificationInfo;\n  error?: ServerError;\n  started_at?: number;\n  state?: HMSStreamingState;\n}\n\nexport interface HLSRecording {\n  hls_vod: boolean;\n  single_file_per_layer: boolean;\n}\n\nexport interface HLSNotification {\n  enabled: boolean;\n  variants?: Array<HLSVariantInfo>;\n  error?: ServerError;\n  hls_recording?: HLSRecording;\n}\n\nexport enum HLSPlaylistType {\n  DVR = 'dvr',\n  NO_DVR = 'no-dvr',\n}\nexport enum HLSStreamType {\n  REGULAR = 'regular',\n  SCREEN = 'screen',\n  COMPOSITE = 'composite',\n}\nexport interface HLSVariantInfo {\n  url: string;\n  meeting_url?: string;\n  playlist_type?: HLSPlaylistType;\n  metadata?: string;\n  started_at?: number;\n  initialised_at?: number;\n  state?: HMSStreamingState;\n  stream_type?: HLSStreamType;\n}\n\nexport interface MetadataChangeNotification {\n  values: {\n    change_version?: number;\n    updated_by?: string;\n    data: any;\n    key: string;\n    updated_at?: number;\n  }[];\n}\n\nexport interface PollStartNotification {\n  polls: PollInfoParams[];\n}\n\nexport type PollStopNotification = PollStartNotification;\n\nexport interface PollStats extends PollResult {\n  poll_id: string;\n}\nexport interface PollStatsNotification {\n  polls: PollStats[];\n}\n\nexport interface RoomInfo {\n  room_id: string;\n  name: string;\n  description: string;\n  max_size: number;\n  large_room_optimization: boolean;\n}\n\nexport interface SessionInfo {\n  session_id: string;\n  room_id: string;\n  peer_count: number;\n  track_count: number;\n}\n\nexport interface WhiteboardInfo {\n  id: string;\n  title?: string;\n  owner?: string;\n  state?: string;\n  attributes?: Array<{ name: string; value: unknown }>;\n}\n\nexport interface NodeInfo {\n  sfu_node_id: string;\n}\n", "import { KnownRoles, TrackStateEntry } from './StoreInterfaces';\nimport { HTTPAnalyticsTransport } from '../../analytics/HTTPAnalyticsTransport';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport {\n  HMSConfig,\n  HMSFrameworkInfo,\n  HMSPermissionType,\n  HMSPoll,\n  HMSSpeaker,\n  HMSTranscriptionMode,\n  HMSWhiteboard,\n} from '../../interfaces';\nimport { SelectedDevices } from '../../interfaces/devices';\nimport { IErrorListener } from '../../interfaces/error-listener';\nimport {\n  HMSSimulcastLayerDefinition,\n  RID,\n  SimulcastLayer,\n  SimulcastLayers,\n  simulcastMapping,\n} from '../../interfaces/simulcast-layers';\nimport {\n  HMSAudioTrack,\n  HMSLocalTrack,\n  HMSRemoteAudioTrack,\n  HMSRemoteVideoTrack,\n  HMSTrack,\n  HMSTrackSource,\n  HMSTrackType,\n  HMSVideoTrack,\n} from '../../media/tracks';\nimport {\n  NoiseCancellationPlugin,\n  Plugins,\n  PolicyParams,\n  TranscriptionPluginPermissions,\n  WhiteBoardPluginPermissions,\n} from '../../notification-manager';\nimport HMSLogger from '../../utils/logger';\nimport { ENV } from '../../utils/support';\nimport { createUserAgent } from '../../utils/user-agent';\nimport HMSRoom from '../models/HMSRoom';\nimport { HMSLocalPeer, HMSPeer, HMSRemotePeer } from '../models/peer';\n\nclass Store {\n  private TAG = '[Store]:';\n  private room?: HMSRoom;\n  private knownRoles: KnownRoles = {};\n  private localPeerId?: string;\n  private peers: Record<string, HMSPeer> = {};\n  private tracks = new Map<HMSTrack, HMSTrack>();\n  private templateAppData?: Record<string, string>;\n  // Not used currently. Will be used exclusively for preview tracks.\n  // private previewTracks: Record<string, HMSTrack> = {};\n  private peerTrackStates: Record<string, TrackStateEntry> = {};\n  private speakers: HMSSpeaker[] = [];\n  private videoLayers?: SimulcastLayers;\n  // private screenshareLayers?: SimulcastLayers;\n  private config?: HMSConfig;\n  private errorListener?: IErrorListener;\n  private roleDetailsArrived = false;\n  private env: ENV = ENV.PROD;\n  private simulcastEnabled = false;\n  private userAgent: string = createUserAgent(this.env);\n  private polls = new Map<string, HMSPoll>();\n  private whiteboards = new Map<string, HMSWhiteboard>();\n\n  getConfig() {\n    return this.config;\n  }\n\n  setSimulcastEnabled(enabled: boolean) {\n    this.simulcastEnabled = enabled;\n  }\n\n  removeRemoteTracks() {\n    this.tracks.forEach(track => {\n      if (track instanceof HMSRemoteAudioTrack || track instanceof HMSRemoteVideoTrack) {\n        this.removeTrack(track);\n        delete this.peerTrackStates[track.trackId];\n      }\n    });\n  }\n\n  getEnv() {\n    return this.env;\n  }\n\n  getPublishParams() {\n    const peer = this.getLocalPeer();\n    const role = peer?.asRole || peer?.role;\n    return role?.publishParams;\n  }\n\n  getRoom() {\n    return this.room;\n  }\n\n  getPolicyForRole(role: string) {\n    return this.knownRoles[role];\n  }\n\n  getKnownRoles() {\n    return this.knownRoles;\n  }\n\n  getTemplateAppData() {\n    return this.templateAppData;\n  }\n\n  getLocalPeer() {\n    if (this.localPeerId && this.peers[this.localPeerId]) {\n      return this.peers[this.localPeerId] as HMSLocalPeer;\n    }\n    return undefined;\n  }\n\n  getRemotePeers() {\n    return Object.values(this.peers).filter(peer => !peer.isLocal) as HMSRemotePeer[];\n  }\n\n  getPeers(): HMSPeer[] {\n    return Object.values(this.peers);\n  }\n\n  getPeerMap() {\n    return this.peers;\n  }\n\n  getPeerById(peerId: string) {\n    if (this.peers[peerId]) {\n      return this.peers[peerId];\n    }\n    return undefined;\n  }\n\n  getTracksMap() {\n    return this.tracks;\n  }\n\n  getTracks() {\n    return Array.from(this.tracks.values());\n  }\n\n  getVideoTracks() {\n    return this.getTracks().filter(track => track.type === HMSTrackType.VIDEO) as HMSVideoTrack[];\n  }\n\n  getRemoteVideoTracks() {\n    return this.getTracks().filter(track => track instanceof HMSRemoteVideoTrack) as HMSRemoteVideoTrack[];\n  }\n\n  getAudioTracks() {\n    return this.getTracks().filter(track => track.type === HMSTrackType.AUDIO) as HMSAudioTrack[];\n  }\n\n  getPeerTracks(peerId?: string) {\n    const peer = peerId ? this.peers[peerId] : undefined;\n    const tracks: HMSTrack[] = [];\n    peer?.videoTrack && tracks.push(peer.videoTrack);\n    peer?.audioTrack && tracks.push(peer.audioTrack);\n    return tracks.concat(peer?.auxiliaryTracks || []);\n  }\n\n  getLocalPeerTracks() {\n    return this.getPeerTracks(this.localPeerId) as HMSLocalTrack[];\n  }\n\n  hasTrack(track: HMSTrack) {\n    return this.tracks.has(track);\n  }\n\n  getTrackById(trackId: string) {\n    const track = Array.from(this.tracks.values()).find(track => track.trackId === trackId);\n    if (track) {\n      return track;\n    }\n    const localPeer = this.getLocalPeer();\n    /**\n     * handle case of audio level coming from server for local peer's track where local peer\n     * didn't initially gave audio permission. So track.firstTrackId is that of dummy track and\n     * this.tracks[trackId] doesn't exist.\n     * Example repro which this solves -\n     * - call preview with audio muted, unmute audio in preview then join the room, now initial\n     * track id is that from dummy track but the track id which server knows will be different\n     */\n    if (localPeer) {\n      if (localPeer.audioTrack?.isPublishedTrackId(trackId)) {\n        return localPeer.audioTrack;\n      } else if (localPeer.videoTrack?.isPublishedTrackId(trackId)) {\n        return localPeer.videoTrack;\n      }\n    }\n    return undefined;\n  }\n\n  getPeerByTrackId(trackId: string) {\n    const track = Array.from(this.tracks.values()).find(track => track.trackId === trackId);\n    return track?.peerId ? this.peers[track.peerId] : undefined;\n  }\n\n  getSpeakers() {\n    return this.speakers;\n  }\n\n  getSpeakerPeers() {\n    return this.speakers.map(speaker => speaker.peer);\n  }\n\n  getUserAgent() {\n    return this.userAgent;\n  }\n\n  createAndSetUserAgent(frameworkInfo?: HMSFrameworkInfo) {\n    this.userAgent = createUserAgent(this.env, frameworkInfo);\n  }\n\n  setRoom(room: HMSRoom) {\n    this.room = room;\n  }\n\n  setKnownRoles(params: PolicyParams) {\n    this.knownRoles = params.known_roles;\n    this.addPluginsToRoles(params.plugins);\n    this.roleDetailsArrived = true;\n    this.templateAppData = params.app_data;\n    if (!this.simulcastEnabled) {\n      return;\n    }\n    const publishParams = this.knownRoles[params.name]?.publishParams;\n    this.videoLayers = this.convertSimulcastLayers(publishParams.simulcast?.video);\n    // this.screenshareLayers = this.convertSimulcastLayers(publishParams.simulcast?.screen);\n    this.updatePeersPolicy();\n  }\n\n  hasRoleDetailsArrived(): boolean {\n    return this.roleDetailsArrived;\n  }\n\n  // eslint-disable-next-line complexity\n  setConfig(config: HMSConfig) {\n    DeviceStorageManager.rememberDevices(Boolean(config.rememberDeviceSelection));\n    if (config.rememberDeviceSelection) {\n      const devices: SelectedDevices | undefined = DeviceStorageManager.getSelection();\n      if (devices) {\n        if (!config.settings) {\n          config.settings = {};\n        }\n        if (devices.audioInput?.deviceId) {\n          config.settings.audioInputDeviceId = config.settings.audioInputDeviceId || devices.audioInput.deviceId;\n        }\n        if (devices.audioOutput?.deviceId) {\n          config.settings.audioOutputDeviceId = config.settings.audioOutputDeviceId || devices.audioOutput.deviceId;\n        }\n        if (devices.videoInput?.deviceId) {\n          config.settings.videoDeviceId = config.settings.videoDeviceId || devices.videoInput.deviceId;\n        }\n      }\n    }\n    config.autoManageVideo = config.autoManageVideo !== false;\n    config.autoManageWakeLock = config.autoManageWakeLock !== false;\n    this.config = config;\n    this.setEnv();\n  }\n\n  addPeer(peer: HMSPeer) {\n    this.peers[peer.peerId] = peer;\n    if (peer.isLocal) {\n      this.localPeerId = peer.peerId;\n    }\n  }\n\n  /**\n   * @param {HMSTrack} track the published track that has to be added\n   *\n   * Note: Only use this method to add published tracks not preview traks\n   */\n  addTrack(track: HMSTrack) {\n    this.tracks.set(track, track);\n  }\n\n  getTrackState(trackId: string) {\n    return this.peerTrackStates[trackId];\n  }\n\n  setTrackState(trackStateEntry: TrackStateEntry) {\n    this.peerTrackStates[trackStateEntry.trackInfo.track_id] = trackStateEntry;\n  }\n\n  removeTrackState(trackId: string) {\n    delete this.peerTrackStates[trackId];\n  }\n\n  removePeer(peerId: string) {\n    if (this.localPeerId === peerId) {\n      this.localPeerId = undefined;\n    }\n    delete this.peers[peerId];\n  }\n\n  removeTrack(track: HMSTrack) {\n    this.tracks.delete(track);\n  }\n\n  updateSpeakers(speakers: HMSSpeaker[]) {\n    this.speakers = speakers;\n  }\n\n  async updateAudioOutputVolume(value: number) {\n    for (const track of this.getAudioTracks()) {\n      await track.setVolume(value);\n    }\n  }\n\n  async updateAudioOutputDevice(device: MediaDeviceInfo) {\n    const promises: Promise<void>[] = [];\n    this.getAudioTracks().forEach(track => {\n      if (track instanceof HMSRemoteAudioTrack) {\n        promises.push(track.setOutputDevice(device));\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  getSimulcastLayers(source: HMSTrackSource): SimulcastLayer[] {\n    // Enable only when backend enables and source is video or screen. ignore videoplaylist\n    if (!this.simulcastEnabled || !['screen', 'regular'].includes(source)) {\n      return [];\n    }\n    if (source === 'screen') {\n      return []; //this.screenshareLayers?.layers || []; uncomment this when screenshare simulcast supported\n    }\n    return this.videoLayers?.layers || [];\n  }\n\n  /**\n   * Convert maxBitrate from kbps to bps\n   * @internal\n   * @param simulcastLayers\n   * @returns {SimulcastLayers}\n   */\n  private convertSimulcastLayers(simulcastLayers?: SimulcastLayers) {\n    if (!simulcastLayers) {\n      return;\n    }\n    return {\n      ...simulcastLayers,\n      layers: (simulcastLayers.layers || []).map(layer => {\n        return {\n          ...layer,\n          maxBitrate: layer.maxBitrate * 1000,\n        };\n      }),\n    };\n  }\n\n  getSimulcastDefinitionsForPeer(peer: HMSPeer, source: HMSTrackSource) {\n    // TODO: remove screen check when screenshare simulcast is supported\n    if ([!peer || !peer.role, source === 'screen', !this.simulcastEnabled].some(value => !!value)) {\n      return [];\n    }\n\n    const publishParams = this.getPolicyForRole(peer.role!.name).publishParams;\n    let simulcastLayers: SimulcastLayers | undefined;\n    let width: number;\n    let height: number;\n    if (source === 'regular') {\n      simulcastLayers = publishParams.simulcast?.video;\n      width = publishParams.video.width;\n      height = publishParams.video.height;\n    } else if (source === 'screen') {\n      simulcastLayers = publishParams.simulcast?.screen;\n      width = publishParams.screen.width;\n      height = publishParams.screen.height;\n    }\n    return (\n      simulcastLayers?.layers?.map(value => {\n        const layer = simulcastMapping[value.rid as RID];\n        const resolution = {\n          width: Math.floor(width / value.scaleResolutionDownBy),\n          height: Math.floor(height / value.scaleResolutionDownBy),\n        };\n        return {\n          layer,\n          resolution,\n        } as HMSSimulcastLayerDefinition;\n      }) || []\n    );\n  }\n\n  setPoll(poll: HMSPoll) {\n    this.polls.set(poll.id, poll);\n  }\n\n  getPoll(id: string): HMSPoll | undefined {\n    return this.polls.get(id);\n  }\n\n  setWhiteboard(whiteboard: HMSWhiteboard) {\n    this.whiteboards.set(whiteboard.id, whiteboard);\n  }\n\n  getWhiteboards() {\n    return this.whiteboards;\n  }\n\n  getWhiteboard(id?: string): HMSWhiteboard | undefined {\n    return id ? this.whiteboards.get(id) : this.whiteboards.values().next().value;\n  }\n\n  getErrorListener() {\n    return this.errorListener;\n  }\n\n  cleanup() {\n    const tracks = this.getTracks();\n    for (const track of tracks) {\n      track.cleanup();\n    }\n    this.room = undefined;\n    this.config = undefined;\n    this.localPeerId = undefined;\n    this.roleDetailsArrived = false;\n  }\n\n  setErrorListener(listener: IErrorListener) {\n    this.errorListener = listener;\n  }\n\n  private updatePeersPolicy() {\n    this.getPeers().forEach(peer => {\n      if (!peer.role) {\n        this.errorListener?.onError(ErrorFactory.GenericErrors.InvalidRole(HMSAction.VALIDATION, ''));\n        return;\n      }\n      peer.role = this.getPolicyForRole(peer.role.name);\n    });\n  }\n  private addPluginsToRoles(plugins: PolicyParams['plugins']) {\n    if (!plugins) {\n      return;\n    }\n\n    Object.keys(plugins).forEach(plugin => {\n      const pluginName = plugin as keyof PolicyParams['plugins'];\n      switch (pluginName) {\n        case Plugins.WHITEBOARD: {\n          this.addWhiteboardPluginToRole(plugins[pluginName]);\n          break;\n        }\n        case Plugins.TRANSCRIPTIONS: {\n          this.addTranscriptionsPluginToRole(plugins[pluginName]);\n          break;\n        }\n        case Plugins.NOISE_CANCELLATION: {\n          this.handleNoiseCancellationPlugin(plugins[pluginName]);\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n  }\n  private addPermissionToRole = (\n    role: string,\n    pluginName: keyof PolicyParams['plugins'],\n    permission: HMSPermissionType,\n    mode?: HMSTranscriptionMode,\n  ) => {\n    if (!this.knownRoles[role]) {\n      HMSLogger.d(this.TAG, `role ${role} is not present in given roles`, this.knownRoles);\n      return;\n    }\n    const rolePermissions = this.knownRoles[role].permissions;\n    if (pluginName === Plugins.TRANSCRIPTIONS && mode) {\n      // currently only admin is allowed, so no issue\n      rolePermissions[pluginName] = {\n        ...rolePermissions[pluginName],\n        [mode]: [permission],\n      };\n    } else if (pluginName === Plugins.WHITEBOARD) {\n      if (!rolePermissions[pluginName]) {\n        rolePermissions[pluginName] = [];\n      }\n      rolePermissions[pluginName]?.push(permission);\n    }\n  };\n  private addWhiteboardPluginToRole = (plugin?: WhiteBoardPluginPermissions) => {\n    const permissions = plugin?.permissions;\n    permissions?.admin?.forEach(role => this.addPermissionToRole(role, Plugins.WHITEBOARD, 'admin'));\n    permissions?.reader?.forEach(role => this.addPermissionToRole(role, Plugins.WHITEBOARD, 'read'));\n    permissions?.writer?.forEach(role => this.addPermissionToRole(role, Plugins.WHITEBOARD, 'write'));\n  };\n  private addTranscriptionsPluginToRole = (plugin: TranscriptionPluginPermissions[] = []) => {\n    for (const transcription of plugin) {\n      transcription.permissions?.admin?.forEach(role =>\n        this.addPermissionToRole(role, Plugins.TRANSCRIPTIONS, 'admin', transcription.mode),\n      );\n    }\n  };\n  private handleNoiseCancellationPlugin = (plugin?: NoiseCancellationPlugin) => {\n    if (!this.room) {\n      return;\n    }\n    // it will be called again after internalConnect room initialization, even after network disconnection\n    this.room.isNoiseCancellationEnabled = !!plugin?.enabled && !!this.room.isNoiseCancellationEnabled;\n  };\n\n  private setEnv() {\n    const endPoint = this.config?.initEndpoint!;\n    const url = endPoint.split('https://')[1];\n    let env: ENV = ENV.PROD;\n    if (url.startsWith(ENV.PROD)) {\n      env = ENV.PROD;\n    } else if (url.startsWith(ENV.QA)) {\n      env = ENV.QA;\n    } else if (url.startsWith(ENV.DEV)) {\n      env = ENV.DEV;\n    }\n    this.env = env;\n    HTTPAnalyticsTransport.setEnv(env);\n  }\n}\n\nexport { Store };\n", "import HMSLogger from '../utils/logger';\n\nexport class WakeLockManager {\n  private readonly TAG = '[WakeLockManager]';\n  private wakeLock: WakeLockSentinel | null = null;\n\n  acquireLock = async () => {\n    await this.requestWakeLock();\n    document?.addEventListener('visibilitychange', this.visibilityHandler);\n  };\n\n  cleanup = async () => {\n    if (this.wakeLock && !this.wakeLock.released) {\n      try {\n        await this.wakeLock.release();\n        HMSLogger.d(this.TAG, 'Wake lock released');\n      } catch (err) {\n        const error = err as Error;\n        HMSLogger.w(this.TAG, 'Error while releasing wake lock', `name=${error.name}, message=${error.message}`);\n      }\n    }\n    document?.removeEventListener('visibilitychange', this.visibilityHandler);\n    this.wakeLock = null;\n  };\n\n  private visibilityHandler = async () => {\n    if (document?.visibilityState === 'visible' && (!this.wakeLock || this.wakeLock.released)) {\n      HMSLogger.d(this.TAG, 'Re-acquiring wake lock due to visibility change');\n      await this.requestWakeLock();\n    }\n  };\n\n  // Function that attempts to request a screen wake lock.\n  private requestWakeLock = async () => {\n    try {\n      if (!('wakeLock' in navigator)) {\n        HMSLogger.d(this.TAG, 'Wake lock feature not supported');\n        return;\n      }\n      this.wakeLock = await navigator.wakeLock.request('screen');\n      HMSLogger.d(this.TAG, 'Wake lock acquired');\n    } catch (err) {\n      const error = err as Error;\n      HMSLogger.w(this.TAG, 'Error acquiring wake lock', `name=${error.name}, message=${error.message}`);\n    }\n  };\n}\n", "import AnalyticsEvent from './AnalyticsEvent';\nimport { HMSAnalyticsLevel } from './AnalyticsEventLevel';\nimport { AnalyticsTransport } from './AnalyticsTransport';\nimport { HTTPAnalyticsTransport } from './HTTPAnalyticsTransport';\nimport { Store } from '../sdk/store';\nimport { ANALYTICS_BUFFER_SIZE } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\n\nexport class AnalyticsEventsService {\n  private bufferSize = ANALYTICS_BUFFER_SIZE;\n  private readonly TAG = '[AnalyticsEventsService]';\n\n  private transport: AnalyticsTransport | null = null;\n  private pendingEvents: AnalyticsEvent[] = [];\n\n  level: HMSAnalyticsLevel = HMSAnalyticsLevel.INFO;\n\n  constructor(private store: Store) {}\n\n  setTransport(transport: AnalyticsTransport) {\n    this.transport = transport;\n  }\n\n  reset() {\n    this.transport = null;\n    this.pendingEvents = [];\n  }\n\n  queue(event: AnalyticsEvent) {\n    if (event.level >= this.level) {\n      this.pendingEvents.push(event);\n\n      if (this.pendingEvents.length > this.bufferSize) {\n        const removedEvent = this.pendingEvents.shift();\n        HMSLogger.d(this.TAG, 'Max buffer size reached', 'Removed event to accommodate new events', removedEvent);\n      }\n    }\n    return this;\n  }\n\n  flushFailedClientEvents() {\n    HTTPAnalyticsTransport.flushFailedEvents();\n  }\n\n  flush() {\n    try {\n      while (this.pendingEvents.length > 0) {\n        const event = this.pendingEvents.shift();\n        if (event) {\n          event.metadata.peer.peer_id = this.store.getLocalPeer()?.peerId;\n          event.metadata.userAgent = this.store.getUserAgent();\n          if (this.transport && this.transport.transportProvider.isConnected) {\n            this.transport.sendEvent(event);\n          } else {\n            this.sendClientEventOnHTTP(event);\n          }\n        }\n      }\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'Flush Failed', error);\n    }\n  }\n\n  private sendClientEventOnHTTP(event: AnalyticsEvent) {\n    const room = this.store.getRoom();\n    const localPeer = this.store.getLocalPeer();\n    event.metadata.token = this.store.getConfig()?.authToken;\n    event.metadata.peer = {\n      session_id: room?.sessionId,\n      room_id: room?.id,\n      room_name: room?.name,\n      template_id: room?.templateId,\n      joined_at: room?.joinedAt?.getTime(),\n      session_started_at: room?.startedAt?.getTime(),\n      role: localPeer?.role?.name,\n      user_name: localPeer?.name,\n      user_data: localPeer?.metadata,\n      peer_id: localPeer?.peerId,\n    };\n    HTTPAnalyticsTransport.sendEvent(event);\n  }\n}\n", "import { v4 as uuid } from 'uuid';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { DeviceManager } from '../device-manager';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { EventBus } from '../events/EventBus';\nimport { HMSDeviceChangeEvent, HMSTrackUpdate, HMSUpdateListener } from '../interfaces';\nimport { HMSAudioContextHandler } from '../internal';\nimport { HMSRemoteAudioTrack } from '../media/tracks';\nimport { HMSRemotePeer } from '../sdk/models/peer';\nimport { Store } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\nimport { sleep } from '../utils/timer-utils';\n\n/**\n * Following are the errors thrown when autoplay is blocked in different browsers\n * Firefox - DOMException: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\n * Safari - NotAllowedError: The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\n * Chrome - DOMException: play() failed because the user didn't interact with the document first.\n * Brave - DOMException: play() can only be initiated by a user gesture.\n */\ntype AudioSinkState = {\n  autoplayFailed?: boolean;\n  initialized: boolean;\n  // this promise will be set for the first track. remaining tracks will be processed once it's know whether\n  // autoplay is allowed or not\n  autoplayCheckPromise?: Promise<void>;\n};\n\nconst INITIAL_STATE: AudioSinkState = {\n  autoplayFailed: undefined,\n  initialized: false,\n  autoplayCheckPromise: undefined,\n};\n\nexport class AudioSinkManager {\n  private audioSink?: HTMLElement;\n  private autoPausedTracks: Set<HMSRemoteAudioTrack> = new Set();\n  private readonly TAG = '[AudioSinkManager]:';\n  private volume = 100;\n  private state = { ...INITIAL_STATE };\n  private listener?: HMSUpdateListener;\n\n  constructor(private store: Store, private deviceManager: DeviceManager, private eventBus: EventBus) {\n    this.eventBus.audioTrackAdded.subscribe(this.handleTrackAdd);\n    this.eventBus.audioTrackRemoved.subscribe(this.handleTrackRemove);\n    this.eventBus.audioTrackUpdate.subscribe(this.handleTrackUpdate);\n    this.eventBus.deviceChange.subscribe(this.handleAudioDeviceChange);\n    this.eventBus.localVideoUnmutedNatively.subscribe(this.unpauseAudioTracks);\n    this.eventBus.localAudioUnmutedNatively.subscribe(this.unpauseAudioTracks);\n  }\n\n  setListener(listener?: HMSUpdateListener) {\n    this.listener = listener;\n  }\n\n  private get outputDevice() {\n    return this.deviceManager.outputDevice;\n  }\n\n  getVolume() {\n    return this.volume;\n  }\n\n  async setVolume(value: number) {\n    await this.store.updateAudioOutputVolume(value);\n    this.volume = value;\n  }\n\n  /**\n   *  This function is to be called only on user interaction when\n   *  autoplay error is received.\n   */\n  async unblockAutoplay() {\n    if (this.autoPausedTracks.size > 0) {\n      await this.unpauseAudioTracks();\n    }\n    await HMSAudioContextHandler.resumeContext();\n  }\n\n  init(elementId?: string) {\n    if (this.state.initialized || this.audioSink) {\n      return;\n    }\n    this.state.initialized = true;\n    const audioSink = document.createElement('div');\n    audioSink.id = `HMS-SDK-audio-sink-${uuid()}`;\n    const userElement = elementId && document.getElementById(elementId);\n    const audioSinkParent = userElement || document.body;\n    audioSinkParent.append(audioSink);\n\n    this.audioSink = audioSink;\n    HMSLogger.d(this.TAG, 'audio sink created', this.audioSink);\n  }\n\n  cleanup() {\n    this.audioSink?.remove();\n    this.audioSink = undefined;\n    this.eventBus.audioTrackAdded.unsubscribe(this.handleTrackAdd);\n    this.eventBus.audioTrackRemoved.unsubscribe(this.handleTrackRemove);\n    this.eventBus.audioTrackUpdate.unsubscribe(this.handleTrackUpdate);\n    this.eventBus.deviceChange.unsubscribe(this.handleAudioDeviceChange);\n    this.eventBus.localVideoUnmutedNatively.unsubscribe(this.unpauseAudioTracks);\n    this.eventBus.localAudioUnmutedNatively.unsubscribe(this.unpauseAudioTracks);\n    this.autoPausedTracks = new Set();\n    this.state = { ...INITIAL_STATE };\n  }\n\n  private handleAudioPaused = async (event: any) => {\n    // this means the audio paused because of external factors(headset removal, incoming phone call)\n    HMSLogger.d(this.TAG, 'Audio Paused', event.target.id);\n    const audioTrack = this.store.getTrackById(event.target.id);\n    if (audioTrack) {\n      this.autoPausedTracks.add(audioTrack as HMSRemoteAudioTrack);\n    }\n  };\n\n  private handleTrackUpdate = ({ track }: { track: HMSRemoteAudioTrack; enabled: boolean }) => {\n    HMSLogger.d(this.TAG, 'Track updated', `${track}`);\n  };\n\n  private handleTrackAdd = async ({\n    track,\n    peer,\n    callListener = true,\n  }: {\n    track: HMSRemoteAudioTrack;\n    peer: HMSRemotePeer;\n    callListener?: boolean;\n  }) => {\n    const audioEl = document.createElement('audio');\n    audioEl.style.display = 'none';\n    audioEl.id = track.trackId;\n    audioEl.addEventListener('pause', this.handleAudioPaused);\n\n    audioEl.onerror = async () => {\n      HMSLogger.e(this.TAG, 'error on audio element', audioEl.error);\n      const ex = ErrorFactory.TracksErrors.AudioPlaybackError(\n        `Audio playback error for track - ${track.trackId} code - ${audioEl?.error?.code}`,\n      );\n      this.eventBus.analytics.publish(AnalyticsEventFactory.audioPlaybackError(ex));\n      if (audioEl?.error?.code === MediaError.MEDIA_ERR_DECODE) {\n        // try to wait for main execution to complete first\n        this.removeAudioElement(audioEl, track);\n        await sleep(500);\n        await this.handleTrackAdd({ track, peer, callListener: false });\n        if (!this.state.autoplayFailed) {\n          this.eventBus.analytics.publish(\n            AnalyticsEventFactory.audioRecovered('Audio recovered after media decode error'),\n          );\n        }\n      }\n    };\n    track.setAudioElement(audioEl);\n    await track.setVolume(this.volume);\n    HMSLogger.d(this.TAG, 'Audio track added', `${track}`);\n    this.init(); // call to create sink element if not already created\n    this.audioSink?.append(audioEl);\n    this.outputDevice && (await track.setOutputDevice(this.outputDevice));\n    audioEl.srcObject = new MediaStream([track.nativeTrack]);\n    callListener && this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, peer);\n    await this.handleAutoplayError(track);\n  };\n\n  private handleAutoplayError = async (track: HMSRemoteAudioTrack) => {\n    /**\n     * if it's not known whether autoplay will succeed, wait for it to be known\n     */\n    if (this.state.autoplayFailed === undefined) {\n      if (!this.state.autoplayCheckPromise) {\n        // it's the first track, try to play it, that'll tell us whether autoplay is allowed\n        this.state.autoplayCheckPromise = new Promise<void>(resolve => {\n          this.playAudioFor(track).then(resolve);\n        });\n      }\n      // and wait for the result to be known\n      await this.state.autoplayCheckPromise;\n    }\n    /**\n     * Don't play the track if autoplay failed, add to paused list\n     */\n    if (this.state.autoplayFailed) {\n      this.autoPausedTracks.add(track);\n      return;\n    }\n    await this.playAudioFor(track);\n  };\n\n  private handleAudioDeviceChange = async (event: HMSDeviceChangeEvent) => {\n    // if there is no selection that means this is an init request. No need to do anything\n    if (event.isUserSelection || event.error || !event.selection || event.type === 'video') {\n      return;\n    }\n    await this.unpauseAudioTracks();\n  };\n\n  /**\n   * try to play audio for the passed in track, assume autoplay error happened if play fails\n   * @param track\n   * @private\n   */\n  private async playAudioFor(track: HMSRemoteAudioTrack) {\n    const audioEl = track.getAudioElement();\n    if (!audioEl) {\n      HMSLogger.w(this.TAG, 'No audio element found on track', track.trackId);\n      return;\n    }\n    try {\n      await audioEl.play();\n      this.state.autoplayFailed = false;\n      this.autoPausedTracks.delete(track);\n      HMSLogger.d(this.TAG, 'Played track', `${track}`);\n    } catch (err) {\n      this.autoPausedTracks.add(track);\n      HMSLogger.w(this.TAG, 'Failed to play track', `${track}`, err as Error);\n      const error = err as Error;\n      if (!this.state.autoplayFailed && error.name === 'NotAllowedError') {\n        this.state.autoplayFailed = true;\n        const ex = ErrorFactory.TracksErrors.AutoplayBlocked(HMSAction.AUTOPLAY, '');\n        ex.addNativeError(error);\n        this.eventBus.analytics.publish(AnalyticsEventFactory.autoplayError());\n        this.eventBus.autoplayError.publish(ex);\n      }\n    }\n  }\n\n  private handleTrackRemove = (track: HMSRemoteAudioTrack) => {\n    this.autoPausedTracks.delete(track);\n    const audioEl = document.getElementById(track.trackId) as HTMLAudioElement;\n    if (audioEl) {\n      this.removeAudioElement(audioEl, track);\n    }\n    // Reset autoplay error thrown because if all tracks are removed and a new track is added\n    // Autoplay error is thrown in safari\n    if (this.audioSink && this.audioSink.childElementCount === 0) {\n      this.state.autoplayCheckPromise = undefined;\n      this.state.autoplayFailed = undefined;\n    }\n    HMSLogger.d(this.TAG, 'Audio track removed', `${track}`);\n  };\n\n  private unpauseAudioTracks = async () => {\n    const promises: Promise<void>[] = [];\n    this.autoPausedTracks.forEach(track => {\n      promises.push(this.playAudioFor(track));\n    });\n    // Return after all pending tracks are played\n    await Promise.all(promises);\n  };\n\n  private removeAudioElement = (audioEl: HTMLAudioElement, track: HMSRemoteAudioTrack) => {\n    if (audioEl) {\n      HMSLogger.d(this.TAG, 'removing audio element', `${track}`);\n      audioEl.removeEventListener('pause', this.handleAudioPaused);\n      audioEl.srcObject = null;\n      audioEl.remove();\n      track.setAudioElement(null);\n    }\n  };\n}\n", "import AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport { EventBus } from '../events/EventBus';\n\nexport class PluginUsageTracker {\n  private pluginUsage: Map<string, number> = new Map<string, number>();\n  private pluginLastAddedAt: Map<string, number> = new Map<string, number>();\n\n  constructor(private eventBus: EventBus) {\n    this.eventBus.analytics.subscribe(e => this.updatePluginUsageData(e));\n  }\n\n  getPluginUsage = (name: string) => {\n    if (!this.pluginUsage.has(name)) {\n      this.pluginUsage.set(name, 0);\n    }\n    if (this.pluginLastAddedAt.has(name)) {\n      const lastAddedAt = this.pluginLastAddedAt.get(name) || 0;\n      const extraDuration = lastAddedAt ? Date.now() - lastAddedAt : 0;\n      this.pluginUsage.set(name, (this.pluginUsage.get(name) || 0) + extraDuration);\n      this.pluginLastAddedAt.delete(name);\n    }\n    const finalValue = this.pluginUsage.get(name);\n    return finalValue;\n  };\n\n  // eslint-disable-next-line complexity\n  updatePluginUsageData = (event: AnalyticsEvent) => {\n    const name = event.properties?.plugin_name || '';\n    switch (event.name) {\n      case 'mediaPlugin.toggled.on':\n      case 'mediaPlugin.added': {\n        const addedAt = event.properties.added_at || Date.now();\n        this.pluginLastAddedAt.set(name, addedAt);\n        break;\n      }\n      case 'mediaPlugin.toggled.off':\n      case 'mediaPlugin.stats': {\n        if (this.pluginLastAddedAt.has(name)) {\n          const duration = event.properties.duration || (Date.now() - (this.pluginLastAddedAt.get(name) || 0)) / 1000;\n          this.pluginUsage.set(name, (this.pluginUsage.get(name) || 0) + Math.max(duration, 0) * 1000);\n          this.pluginLastAddedAt.delete(name);\n        }\n        break;\n      }\n      default:\n    }\n  };\n\n  cleanup = () => {\n    this.pluginLastAddedAt.clear();\n    this.pluginUsage.clear();\n  };\n}\n", "import { DeviceStorageManager } from './DeviceStorage';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport { DeviceMap, HMSDeviceChangeEvent, SelectedDevices } from '../interfaces';\nimport { getAudioDeviceCategory, HMSAudioDeviceCategory, isIOS } from '../internal';\nimport { HMSAudioTrackSettingsBuilder, HMSVideoTrackSettingsBuilder } from '../media/settings';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack } from '../media/tracks';\nimport { HMSTrackExceptionTrackType } from '../media/tracks/HMSTrackExceptionTrackType';\nimport { Store } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\nimport { debounce, sleep } from '../utils/timer-utils';\n\ntype DeviceAndGroup = Partial<MediaTrackSettings>;\n\ninterface HMSDeviceManager extends DeviceMap {\n  outputDevice?: MediaDeviceInfo;\n  hasWebcamPermission: boolean;\n  hasMicrophonePermission: boolean;\n}\n\nexport class DeviceManager implements HMSDeviceManager {\n  audioInput: InputDeviceInfo[] = [];\n  audioOutput: MediaDeviceInfo[] = [];\n  videoInput: InputDeviceInfo[] = [];\n  outputDevice?: MediaDeviceInfo;\n  // true if user has allowed the permission\n  // false if user has denied the permission or prompt was never shown or ignored\n  // or if the camera/mic is not available in the device\n  hasWebcamPermission = false;\n  hasMicrophonePermission = false;\n\n  currentSelection: SelectedDevices = {\n    audioInput: undefined,\n    videoInput: undefined,\n    audioOutput: undefined,\n  };\n\n  private readonly TAG = '[Device Manager]:';\n  private initialized = false;\n  private videoInputChanged = false;\n  private audioInputChanged = false;\n  private earpieceSelected = false;\n  private timer: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(private store: Store, private eventBus: EventBus) {\n    const isLocalTrackEnabled = ({ enabled, track }: { enabled: boolean; track: HMSLocalTrack }) =>\n      enabled && track.source === 'regular';\n    this.eventBus.localVideoEnabled.waitFor(isLocalTrackEnabled).then(() => {\n      // Do this only if length is 0 i.e. when permissions are denied\n      if (this.videoInput.length === 0) {\n        this.init(true);\n      }\n    });\n    this.eventBus.localAudioEnabled.waitFor(isLocalTrackEnabled).then(() => {\n      // Do this only if length is 0 i.e. when permissions are denied\n      if (this.audioInput.length === 0) {\n        this.init(true);\n      }\n    });\n\n    this.eventBus.deviceChange.subscribe(({ type, isUserSelection, selection }) => {\n      if (isUserSelection) {\n        const inputType = type === 'video' ? 'videoInput' : type;\n        const newSelection = this[inputType].find(\n          device => this.createIdentifier(device) === this.createIdentifier(selection),\n        );\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.deviceChange({\n            selection: { [inputType]: newSelection },\n            devices: this.getDevices(),\n            type,\n            isUserSelection,\n          }),\n        );\n      }\n    });\n  }\n\n  updateOutputDevice = async (deviceId?: string, isUserSelection?: boolean) => {\n    const newDevice = this.audioOutput.find(device => device.deviceId === deviceId);\n    if (newDevice) {\n      this.outputDevice = newDevice;\n      await this.store.updateAudioOutputDevice(newDevice);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          isUserSelection,\n          selection: { audioOutput: newDevice },\n          devices: this.getDevices(),\n          type: 'audioOutput',\n        }),\n      );\n      DeviceStorageManager.updateSelection('audioOutput', { deviceId: newDevice.deviceId, groupId: newDevice.groupId });\n    }\n    return newDevice;\n  };\n\n  async init(force = false, logAnalytics = true) {\n    if (this.initialized && !force) {\n      return;\n    }\n    !this.initialized && navigator.mediaDevices.addEventListener('devicechange', this.handleDeviceChange);\n    this.initialized = true;\n    await this.enumerateDevices();\n    // do it only on initial load.\n    if (!force) {\n      await this.updateToActualDefaultDevice();\n      this.startPollingForDevices();\n    }\n    await this.autoSelectAudioOutput();\n    this.logDevices('Init');\n    await this.setOutputDevice();\n    this.eventBus.deviceChange.publish({\n      devices: this.getDevices(),\n    } as HMSDeviceChangeEvent);\n    if (logAnalytics) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: this.getCurrentSelection(),\n          type: 'list',\n          devices: this.getDevices(),\n        }),\n      );\n    }\n  }\n\n  getDevices(): DeviceMap {\n    return {\n      audioInput: this.audioInput,\n      audioOutput: this.audioOutput,\n      videoInput: this.videoInput,\n    };\n  }\n\n  cleanup() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n    this.initialized = false;\n    this.earpieceSelected = false;\n    this.audioInput = [];\n    this.audioOutput = [];\n    this.videoInput = [];\n    this.outputDevice = undefined;\n    navigator.mediaDevices.removeEventListener('devicechange', this.handleDeviceChange);\n  }\n\n  getCurrentSelection = (): SelectedDevices => {\n    const localPeer = this.store.getLocalPeer();\n    const audioDevice = this.createIdentifier(localPeer?.audioTrack?.getMediaTrackSettings());\n    const videoDevice = this.createIdentifier(localPeer?.videoTrack?.getMediaTrackSettings());\n    const audioSelection = this.audioInput.find(device => {\n      const id = this.createIdentifier(device);\n      return id === audioDevice;\n    });\n    const videoSelection = this.videoInput.find(device => this.createIdentifier(device) === videoDevice);\n    return {\n      audioInput: audioSelection,\n      videoInput: videoSelection,\n      audioOutput: this.outputDevice,\n    };\n  };\n\n  private createIdentifier(deviceInfo?: DeviceAndGroup) {\n    if (!deviceInfo) {\n      return '';\n    }\n    return `${deviceInfo.deviceId}${deviceInfo.groupId}`;\n  }\n\n  private computeChange = (prevDevices: string[], currentDevices: MediaDeviceInfo[]) => {\n    if (prevDevices.length !== currentDevices.length) {\n      return true;\n    }\n    return currentDevices.some(device => !prevDevices.includes(this.createIdentifier(device)));\n  };\n\n  private enumerateDevices = async () => {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const prevVideoInput = this.videoInput.map(this.createIdentifier);\n      const prevAudioInput = this.audioInput.map(this.createIdentifier);\n      this.audioInput = [];\n      this.audioOutput = [];\n      this.videoInput = [];\n      devices.forEach(device => {\n        if (device.kind === 'audioinput' && device.label) {\n          this.hasMicrophonePermission = true;\n          this.audioInput.push(device as InputDeviceInfo);\n        } else if (device.kind === 'audiooutput') {\n          this.audioOutput.push(device);\n        } else if (device.kind === 'videoinput' && device.label) {\n          this.hasWebcamPermission = true;\n          this.videoInput.push(device as InputDeviceInfo);\n        }\n      });\n      this.videoInputChanged = this.computeChange(prevVideoInput, this.videoInput);\n      this.audioInputChanged = this.computeChange(prevAudioInput, this.audioInput);\n      DeviceStorageManager.setDevices({\n        videoInput: [...this.videoInput],\n        audioInput: [...this.audioInput],\n        audioOutput: [...this.audioOutput],\n      });\n      this.logDevices('Enumerate Devices');\n    } catch (error) {\n      HMSLogger.e(this.TAG, 'Failed enumerating devices', error);\n    }\n  };\n\n  /**\n   * For example, if a different device, say OBS is selected as default from chrome settings, when you do getUserMedia with default, that is not the device\n   * you get. So update to the browser settings default device\n   * Update only when initial deviceId is not passed\n   */\n  private updateToActualDefaultDevice = async () => {\n    const localPeer = this.store.getLocalPeer();\n    const videoDeviceId = this.store.getConfig()?.settings?.videoDeviceId;\n    if (!videoDeviceId && localPeer?.videoTrack) {\n      await localPeer.videoTrack.setSettings({ deviceId: this.videoInput[0]?.deviceId }, true);\n    }\n    const audioDeviceId = this.store.getConfig()?.settings?.audioInputDeviceId;\n    if (!audioDeviceId && localPeer?.audioTrack) {\n      const getInitialDeviceId = () => {\n        const nonIPhoneDevice = this.audioInput.find(device => !device.label.toLowerCase().includes('iphone'));\n        return isIOS() && nonIPhoneDevice ? nonIPhoneDevice?.deviceId : this.getNewAudioInputDevice()?.deviceId;\n      };\n      const deviceIdToUpdate = getInitialDeviceId();\n      if (deviceIdToUpdate) {\n        await localPeer.audioTrack.setSettings({ deviceId: getInitialDeviceId() }, true);\n      }\n    }\n  };\n\n  private handleDeviceChange = debounce(async () => {\n    await this.enumerateDevices();\n    this.logDevices('After Device Change');\n    const localPeer = this.store.getLocalPeer();\n    await this.setOutputDevice(true);\n    await this.handleAudioInputDeviceChange(localPeer?.audioTrack);\n    await this.handleVideoInputDeviceChange(localPeer?.videoTrack);\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.deviceChange({\n        selection: this.getCurrentSelection(),\n        type: 'change',\n        devices: this.getDevices(),\n      }),\n    );\n  }, 500).bind(this);\n\n  /**\n   * Function to get the device after device change\n   * Chrome and Edge provide a default device from which we select the actual device\n   * Firefox and safari give 0th device as system default\n   * @returns {MediaDeviceInfo}\n   */\n  getNewAudioInputDevice() {\n    const manualSelection = this.getManuallySelectedAudioDevice();\n    if (manualSelection) {\n      return manualSelection;\n    }\n    // if manually selected device is not available, reset on the track\n    this.store.getLocalPeer()?.audioTrack?.resetManuallySelectedDeviceId();\n    const defaultDevice = this.audioInput.find(device => device.deviceId === 'default');\n    if (defaultDevice) {\n      // Selecting a non-default device so that the deviceId comparision does not give\n      // false positives when device is removed, because the other available device\n      // get's the deviceId as default once this device is removed\n      const nextDevice = this.audioInput.find(device => {\n        return device.deviceId !== 'default' && defaultDevice.label.includes(device.label);\n      });\n      return nextDevice;\n    }\n    return this.audioInput[0];\n  }\n\n  /**\n   * This method is to select the input/output from same group\n   * same group meaning both input/output are of same device\n   * This method might override the default coming from browser and system so as to select options from same\n   * device type. This is required in certain cases where browser's default is not correct.\n   * Algo:\n   * 1. find the non default input device if selected one is default by matching device label\n   * 2. find the corresponding output device which has the same group id or same label\n   * 3. select the previous selected device if nothing was found\n   * 4. select the default one if no matching device was found and previous device doesn't exist anymore\n   * 5. select the first option if there is no default\n   */\n  async setOutputDevice(deviceChange = false) {\n    const inputDevice = this.getNewAudioInputDevice();\n    const prevSelection = this.createIdentifier(this.outputDevice);\n    this.outputDevice = this.getAudioOutputDeviceMatchingInput(inputDevice);\n    if (!this.outputDevice) {\n      // there is no matching device, let's revert back to the prev selected device\n      this.outputDevice = this.audioOutput.find(device => this.createIdentifier(device) === prevSelection);\n      if (!this.outputDevice) {\n        // prev device doesn't exist as well, select default deviceId device if available, otherwise select 0th device\n        this.outputDevice = this.audioOutput.find(device => device.deviceId === 'default') || this.audioOutput[0];\n      }\n    }\n    await this.store.updateAudioOutputDevice(this.outputDevice);\n    // send event only on device change and device is not same as previous\n    if (deviceChange && prevSelection !== this.createIdentifier(this.outputDevice)) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioOutput: this.outputDevice },\n          devices: this.getDevices(),\n          type: 'audioOutput',\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        selection: this.outputDevice,\n        type: 'audioOutput',\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  }\n\n  private handleAudioInputDeviceChange = async (audioTrack?: HMSLocalAudioTrack) => {\n    if (!audioTrack) {\n      HMSLogger.d(this.TAG, 'No Audio track on local peer');\n      return;\n    }\n    // no need to proceed further if input has not changed\n    if (!this.audioInputChanged) {\n      HMSLogger.d(this.TAG, 'No Change in AudioInput Device');\n      return;\n    }\n    const newSelection = this.getNewAudioInputDevice();\n    if (!newSelection || !newSelection.deviceId) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioInput: newSelection },\n          error: ErrorFactory.TracksErrors.SelectedDeviceMissing(HMSTrackExceptionTrackType.AUDIO),\n          devices: this.getDevices(),\n          type: 'audioInput',\n        }),\n      );\n\n      HMSLogger.e(this.TAG, 'Audio device not found');\n      return;\n    }\n    const { settings } = audioTrack;\n    const newAudioTrackSettings = new HMSAudioTrackSettingsBuilder()\n      .codec(settings.codec)\n      .maxBitrate(settings.maxBitrate)\n      .deviceId(newSelection.deviceId)\n      .audioMode(settings.audioMode)\n      .build();\n    try {\n      await audioTrack.setSettings(newAudioTrackSettings, true);\n      this.eventBus.deviceChange.publish({\n        devices: this.getDevices(),\n        selection: newSelection,\n        type: 'audioInput',\n      } as HMSDeviceChangeEvent);\n      this.logDevices('Audio Device Change Success');\n    } catch (error) {\n      HMSLogger.e(this.TAG, '[Audio Device Change]', error);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioInput: newSelection },\n          devices: this.getDevices(),\n          type: 'audioInput',\n          error: error as HMSException,\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        error,\n        selection: newSelection,\n        type: 'audioInput',\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  };\n\n  private handleVideoInputDeviceChange = async (videoTrack?: HMSLocalVideoTrack) => {\n    if (!videoTrack) {\n      HMSLogger.d(this.TAG, 'No video track on local peer');\n      return;\n    }\n    // no need to proceed further if input has not changed\n    if (!this.videoInputChanged) {\n      HMSLogger.d(this.TAG, 'No Change in VideoInput Device');\n      return;\n    }\n    const newSelection = this.videoInput[0];\n    if (!newSelection || !newSelection.deviceId) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { videoInput: newSelection },\n          error: ErrorFactory.TracksErrors.SelectedDeviceMissing(HMSTrackExceptionTrackType.VIDEO),\n          devices: this.getDevices(),\n          type: 'video',\n        }),\n      );\n      HMSLogger.e(this.TAG, 'Video device not found');\n      return;\n    }\n    const { settings } = videoTrack;\n    const newVideoTrackSettings = new HMSVideoTrackSettingsBuilder()\n      .codec(settings.codec)\n      .maxBitrate(settings.maxBitrate)\n      .maxFramerate(settings.maxFramerate)\n      .setWidth(settings.width)\n      .setHeight(settings.height)\n      .deviceId(newSelection.deviceId)\n      .build();\n    try {\n      await videoTrack.setSettings(newVideoTrackSettings, true);\n      // On replace track, enabled will be true. Need to be set to previous state\n      // videoTrack.setEnabled(enabled); // TODO: remove this once verified on qa.\n      this.eventBus.deviceChange.publish({\n        devices: this.getDevices(),\n        selection: newSelection,\n        type: 'video',\n      } as HMSDeviceChangeEvent);\n      this.logDevices('Video Device Change Success');\n    } catch (error) {\n      HMSLogger.e(this.TAG, '[Video Device Change]', error);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { videoInput: newSelection },\n          devices: this.getDevices(),\n          type: 'video',\n          error: error as HMSException,\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        error: error as HMSException,\n        type: 'video',\n        selection: newSelection,\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  };\n\n  getManuallySelectedAudioDevice() {\n    const localPeer = this.store.getLocalPeer();\n    const audioTrack = localPeer?.audioTrack;\n    return this.audioInput.find(device => device.deviceId === audioTrack?.getManuallySelectedDeviceId());\n  }\n\n  // specifically used for mweb\n  categorizeAudioInputDevices() {\n    let bluetoothDevice: InputDeviceInfo | null = null;\n    let speakerPhone: InputDeviceInfo | null = null;\n    let wired: InputDeviceInfo | null = null;\n    let earpiece: InputDeviceInfo | null = null;\n\n    for (const device of this.audioInput) {\n      const deviceCategory = getAudioDeviceCategory(device.label);\n      if (deviceCategory === HMSAudioDeviceCategory.SPEAKERPHONE) {\n        speakerPhone = device;\n      } else if (deviceCategory === HMSAudioDeviceCategory.WIRED) {\n        wired = device;\n      } else if (deviceCategory === HMSAudioDeviceCategory.BLUETOOTH) {\n        bluetoothDevice = device;\n      } else if (deviceCategory === HMSAudioDeviceCategory.EARPIECE) {\n        earpiece = device;\n      }\n    }\n\n    return { bluetoothDevice, speakerPhone, wired, earpiece };\n  }\n\n  private startPollingForDevices = async () => {\n    const { earpiece } = this.categorizeAudioInputDevices();\n    // device change supported, no polling needed\n    if (!earpiece) {\n      return;\n    }\n    this.timer = setTimeout(() => {\n      (async () => {\n        await this.enumerateDevices();\n        await this.autoSelectAudioOutput();\n        this.startPollingForDevices();\n      })();\n    }, 5000);\n  };\n\n  /**\n   * Mweb is not able to play via call channel by default, this is to switch from media channel to call channel\n   */\n  // eslint-disable-next-line complexity\n  public autoSelectAudioOutput = async (delay?: number) => {\n    const { bluetoothDevice, earpiece, speakerPhone, wired } = this.categorizeAudioInputDevices();\n    const localAudioTrack = this.store.getLocalPeer()?.audioTrack;\n    if (!localAudioTrack || !earpiece) {\n      return;\n    }\n    const manualSelection = this.getManuallySelectedAudioDevice();\n    const externalDeviceID =\n      manualSelection?.deviceId || bluetoothDevice?.deviceId || wired?.deviceId || speakerPhone?.deviceId;\n    // already selected appropriate device\n    if (!delay && localAudioTrack.settings.deviceId === externalDeviceID && this.earpieceSelected) {\n      return;\n    }\n\n    try {\n      if (!this.earpieceSelected || delay) {\n        if (bluetoothDevice?.deviceId === externalDeviceID) {\n          this.earpieceSelected = true;\n        } else {\n          HMSLogger.d(this.TAG, 'selecting earpiece');\n          await localAudioTrack.setSettings({ deviceId: earpiece?.deviceId }, true);\n          if (delay) {\n            await sleep(delay);\n          }\n          this.earpieceSelected = true;\n        }\n      }\n      await localAudioTrack.setSettings(\n        {\n          deviceId: externalDeviceID,\n        },\n        true,\n      );\n      const groupId = this.audioInput.find(input => input.deviceId === externalDeviceID)?.groupId;\n      this.eventBus.deviceChange.publish({\n        isUserSelection: false,\n        type: 'audioInput',\n        selection: {\n          deviceId: externalDeviceID,\n          groupId: groupId,\n        },\n        devices: this.getDevices(),\n        internal: true,\n      });\n    } catch (error) {\n      this.eventBus.error.publish(error as HMSException);\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  private getAudioOutputDeviceMatchingInput(inputDevice?: MediaDeviceInfo) {\n    const blacklist = this.store.getConfig()?.settings?.speakerAutoSelectionBlacklist || [];\n    if (blacklist === 'all' || !inputDevice) {\n      return;\n    }\n\n    const inputLabel = inputDevice.label.toLowerCase() || '';\n    if (blacklist.some(label => inputLabel.includes(label.toLowerCase()))) {\n      return;\n    }\n\n    const matchingLabel = this.audioOutput.find(\n      device => inputDevice.deviceId !== 'default' && device.label === inputDevice.label,\n    );\n\n    if (matchingLabel) {\n      return matchingLabel;\n    }\n\n    const matchingGroupId = this.audioOutput.find(device => device.groupId === inputDevice.groupId);\n\n    // Select the device with matching group only when it is the default device\n    // if a earphone without mic is connected, the above would pick system speakers instead of the earphone\n    if (\n      matchingGroupId &&\n      this.audioOutput[0].deviceId === 'default' &&\n      matchingGroupId.groupId === this.audioOutput[0].groupId\n    ) {\n      return matchingGroupId;\n    }\n\n    return;\n  }\n\n  private logDevices(label = '') {\n    HMSLogger.d(\n      this.TAG,\n      label,\n      JSON.stringify(\n        {\n          videoInput: [...this.videoInput],\n          audioInput: [...this.audioInput],\n          audioOutput: [...this.audioOutput],\n          selected: this.getCurrentSelection(),\n        },\n        null,\n        4,\n      ),\n    );\n  }\n}\n", "import { DeviceManager } from './DeviceManager';\nimport { AudioSinkManager } from '../audio-sink-manager';\nimport { HMSAudioContextHandler } from '../utils/media';\n\nexport interface IAudioOutputManager {\n  getDevice(): MediaDeviceInfo | undefined;\n  setDevice(deviceId: string): Promise<MediaDeviceInfo | undefined>;\n  getVolume(): number;\n  setVolume(value: number): void;\n}\n\nexport class AudioOutputManager implements IAudioOutputManager {\n  constructor(private deviceManager: DeviceManager, private audioSinkManager: AudioSinkManager) {}\n\n  getVolume() {\n    return this.audioSinkManager.getVolume();\n  }\n\n  setVolume(value: number) {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    this.audioSinkManager.setVolume(value);\n  }\n\n  getDevice() {\n    return this.deviceManager.outputDevice;\n  }\n\n  setDevice(deviceId?: string) {\n    return this.deviceManager.updateOutputDevice(deviceId, true);\n  }\n\n  async unblockAutoplay() {\n    await this.audioSinkManager.unblockAutoplay();\n    /**\n     * similar to autoplay error when there's no user interaction,\n     * audio context is paused due to which empty audio tracks do not send any data and therefore it doesn't reach SFU.\n     * resume audio context on user interaction to enable empty audio tracks to send data and be forwarded to remote peers\n     */\n    await HMSAudioContextHandler.resumeContext();\n  }\n}\n", "import { HMSSessionFeedback, HMSSessionInfo } from './interface';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { HMSException } from '../internal';\nimport HMSLogger from '../utils/logger';\n\nexport class FeedbackService {\n  private static TAG = '[FeedbackService]';\n  private static handleError(response: Response) {\n    if (response.status === 404) {\n      throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.FEEDBACK, response.statusText);\n    }\n    if (response.status >= 400) {\n      throw ErrorFactory.APIErrors.ServerErrors(response.status, HMSAction.FEEDBACK, response?.statusText);\n    }\n    return;\n  }\n\n  static async sendFeedback({\n    token,\n    eventEndpoint = 'https://event.100ms.live',\n    info,\n    feedback,\n  }: {\n    token: string;\n    eventEndpoint?: string;\n    info: HMSSessionInfo;\n    feedback?: HMSSessionFeedback;\n  }): Promise<void> {\n    HMSLogger.d(\n      this.TAG,\n      `sendFeedback: feedbackEndpoint=${eventEndpoint} peerId=${info.peer.peer_id} session=${info.peer.session_id} `,\n    );\n    const url = new URL('v2/client/feedback', eventEndpoint);\n    const body = {\n      ...info,\n      payload: feedback,\n    };\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `Bearer ${token}` },\n        body: JSON.stringify(body),\n        method: 'POST',\n      });\n      try {\n        this.handleError(response);\n        return;\n      } catch (err) {\n        HMSLogger.e(this.TAG, 'error', (err as Error).message, response.status);\n        throw err instanceof HMSException\n          ? err\n          : ErrorFactory.APIErrors.ServerErrors(response.status, HMSAction.FEEDBACK, (err as Error).message);\n      }\n    } catch (err) {\n      const error = err as Error;\n      if (['Failed to fetch', 'NetworkError', 'ECONNRESET'].some(message => error.message.includes(message))) {\n        throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.FEEDBACK, error.message);\n      }\n      throw error;\n    }\n  }\n}\n", "import { EventEmitter2 as EventEmitter } from 'eventemitter2';\nimport { HMSInternalEvent } from './HMSInternalEvent';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport { HMSException } from '../error/HMSException';\nimport { HMSDeviceChangeEvent, HMSRole } from '../interfaces';\nimport {\n  HMSLocalAudioTrack,\n  HMSLocalVideoTrack,\n  HMSRemoteAudioTrack,\n  HMSRemoteVideoTrack,\n  HMSWebrtcStats,\n} from '../internal';\nimport { PolicyParams } from '../notification-manager/HMSNotifications';\nimport { HMSRemotePeer } from '../sdk/models/peer';\nimport { HMSEvents } from '../utils/constants';\nimport { ITrackAudioLevelUpdate } from '../utils/track-audio-level-monitor';\n\nexport class EventBus {\n  private eventEmitter: EventEmitter = new EventEmitter();\n  readonly analytics: HMSInternalEvent<AnalyticsEvent> = new HMSInternalEvent<AnalyticsEvent>(\n    HMSEvents.ANALYTICS,\n    this.eventEmitter,\n  );\n  readonly deviceChange = new HMSInternalEvent<HMSDeviceChangeEvent>(HMSEvents.DEVICE_CHANGE, this.eventEmitter);\n  readonly localAudioEnabled = new HMSInternalEvent<{ enabled: boolean; track: HMSLocalAudioTrack }>(\n    HMSEvents.LOCAL_AUDIO_ENABLED,\n    this.eventEmitter,\n  );\n  readonly localVideoEnabled = new HMSInternalEvent<{ enabled: boolean; track: HMSLocalVideoTrack }>(\n    HMSEvents.LOCAL_VIDEO_ENABLED,\n    this.eventEmitter,\n  );\n  readonly localVideoUnmutedNatively = new HMSInternalEvent(HMSEvents.LOCAL_VIDEO_UNMUTED_NATIVELY, this.eventEmitter);\n  readonly localAudioUnmutedNatively = new HMSInternalEvent(HMSEvents.LOCAL_AUDIO_UNMUTED_NATIVELY, this.eventEmitter);\n\n  /**\n   * Emitter which processes raw RTC stats from rtcStatsUpdate and calls client callback\n   */\n  readonly statsUpdate = new HMSInternalEvent<HMSWebrtcStats>(HMSEvents.STATS_UPDATE, this.eventEmitter);\n\n  readonly trackDegraded = new HMSInternalEvent<HMSRemoteVideoTrack>(HMSEvents.TRACK_DEGRADED, this.eventEmitter);\n  readonly trackRestored = new HMSInternalEvent<HMSRemoteVideoTrack>(HMSEvents.TRACK_RESTORED, this.eventEmitter);\n\n  /**\n   * Emits audio level updates for audio tracks(used with local track in preview)\n   */\n  readonly trackAudioLevelUpdate = new HMSInternalEvent<ITrackAudioLevelUpdate>(\n    HMSEvents.TRACK_AUDIO_LEVEL_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioPluginFailed = new HMSInternalEvent<HMSException>(HMSEvents.AUDIO_PLUGIN_FAILED, this.eventEmitter);\n\n  readonly localAudioSilence = new HMSInternalEvent<{ track: HMSLocalAudioTrack }>(\n    HMSEvents.LOCAL_AUDIO_SILENCE,\n    this.eventEmitter,\n  );\n\n  readonly policyChange = new HMSInternalEvent<PolicyParams>(HMSEvents.POLICY_CHANGE, this.eventEmitter);\n\n  readonly localRoleUpdate = new HMSInternalEvent<{ oldRole: HMSRole; newRole: HMSRole }>(\n    HMSEvents.LOCAL_ROLE_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackUpdate = new HMSInternalEvent<{ track: HMSRemoteAudioTrack; enabled: boolean }>(\n    HMSEvents.AUDIO_TRACK_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackAdded = new HMSInternalEvent<{ track: HMSRemoteAudioTrack; peer: HMSRemotePeer }>(\n    HMSEvents.AUDIO_TRACK_ADDED,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackRemoved = new HMSInternalEvent<HMSRemoteAudioTrack>(\n    HMSEvents.AUDIO_TRACK_REMOVED,\n    this.eventEmitter,\n  );\n\n  readonly autoplayError = new HMSInternalEvent<HMSException>(HMSEvents.AUTOPLAY_ERROR, this.eventEmitter);\n\n  readonly leave = new HMSInternalEvent<HMSException | undefined>(HMSEvents.LEAVE, this.eventEmitter);\n\n  readonly error = new HMSInternalEvent<HMSException>(HMSEvents.ERROR, this.eventEmitter);\n}\n", "import type { WaitForFilter, WaitForOptions } from 'eventemitter2';\nimport { EventEmitter2 as EventEmitter } from 'eventemitter2';\n\nexport class HMSInternalEvent<T> {\n  constructor(private eventName: string, private eventEmitter: EventEmitter) {}\n\n  publish = (event?: T) => {\n    this.eventEmitter.emit(this.eventName, event);\n  };\n  subscribe = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.on(this.eventName, fn);\n  };\n  subscribeOnce = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.once(this.eventName, fn);\n  };\n  unsubscribe = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.off(this.eventName, fn);\n  };\n  waitFor = (predicate: WaitForFilter) => {\n    return this.eventEmitter.waitFor(this.eventName, {\n      filter: predicate,\n    } as WaitForOptions);\n  };\n  removeAllListeners = () => {\n    this.eventEmitter.removeAllListeners(this.eventName);\n  };\n}\n", "import { HMSAudioListener, HMSPeerUpdate, HMSSpeaker, HMSUpdateListener } from '../../interfaces';\nimport { HMSAudioTrack } from '../../media/tracks';\nimport { Store } from '../../sdk/store';\nimport { SpeakerList } from '../HMSNotifications';\n\nexport class ActiveSpeakerManager {\n  constructor(private store: Store, public listener?: HMSUpdateListener, public audioListener?: HMSAudioListener) {}\n\n  handleActiveSpeakers(speakerList: SpeakerList) {\n    const speakers = speakerList['speaker-list'];\n    const hmsSpeakers: HMSSpeaker[] = speakers.map(speaker => ({\n      audioLevel: speaker.level,\n      peer: this.store.getPeerById(speaker.peer_id)!,\n      track: this.store.getTrackById(speaker.track_id) as HMSAudioTrack,\n    }));\n\n    this.audioListener?.onAudioLevelUpdate(hmsSpeakers);\n    this.store.updateSpeakers(hmsSpeakers);\n    const dominantSpeaker = speakers[0];\n\n    if (dominantSpeaker) {\n      const dominantSpeakerPeer = this.store.getPeerById(dominantSpeaker.peer_id);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.BECAME_DOMINANT_SPEAKER, dominantSpeakerPeer!);\n    } else {\n      this.listener?.onPeerUpdate(HMSPeerUpdate.RESIGNED_DOMINANT_SPEAKER, null);\n    }\n  }\n}\n", "import { HMSUpdateListener } from '../../interfaces';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { MessageNotification } from '../HMSNotifications';\n\nexport class BroadcastManager {\n  private readonly TAG = '[BroadcastManager]';\n  constructor(public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    if (method !== HMSNotificationMethod.BROADCAST) {\n      return;\n    }\n    this.handleBroadcast(notification);\n  }\n\n  private handleBroadcast(messageNotification: MessageNotification) {\n    HMSLogger.d(this.TAG, `Received Message from sender=${messageNotification?.peer?.peer_id}: ${messageNotification}`);\n    this.listener?.onMessageReceived(messageNotification);\n  }\n}\n", "import { HMSConnectionQuality, HMSConnectionQualityListener } from '../../interfaces';\nimport { Store } from '../../sdk/store';\nimport { ConnectionQualityList } from '../HMSNotifications';\n\nexport class ConnectionQualityManager {\n  constructor(private store: Store, public listener?: HMSConnectionQualityListener) {}\n\n  handleQualityUpdate(qualityList: ConnectionQualityList) {\n    const peers = qualityList.peers;\n    const hmsPeers: HMSConnectionQuality[] = peers.map(peer => {\n      const storePeer = this.store.getPeerById(peer.peer_id);\n      if (storePeer) {\n        storePeer.updateNetworkQuality(peer.downlink_score);\n      }\n      return {\n        peerID: peer.peer_id,\n        downlinkQuality: peer.downlink_score,\n      };\n    });\n    this.listener?.onConnectionQualityUpdate(hmsPeers);\n  }\n}\n", "import { createRemotePeer } from './utils';\nimport { VideoTrackLayerUpdate } from '../../connection/channel-messages';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSRemotePeer, HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack, HMSTrackType } from '../../media/tracks';\nimport { HMSPeer } from '../../sdk/models/peer';\nimport { Store } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { OnTrackLayerUpdateNotification, TrackState, TrackStateNotification } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Incoming track meta-data from BIZ(signal) to match a track to a peer.\n * - Incoming MediaStreamTracks(wrapped in HMSTracks) from RTCMediaChannel.\n * - Mute/unmute track meta-data updates from BIZ.\n *\n * Since track meta-data and RTC tracks come in asynchronously,\n * we store the track meta-data(TrackState) in SDK Store and tracks temporarily here in tracksToProcess.\n *\n * Once we have both TrackState and track,\n * we add it to peer, send listener.onTrackUpdate and remove it from tracksToProcess.\n *\n * Gotchas:\n * - TRACK_UPDATE comes before TRACK_ADD -> update state, process pending tracks when TRACK_ADD arrives.\n */\nexport class TrackManager {\n  public TAG = '[TrackManager]';\n  private tracksToProcess: Map<string, HMSRemoteTrack> = new Map();\n\n  constructor(public store: Store, public eventBus: EventBus, public listener?: HMSUpdateListener) {}\n\n  /**\n   * Add event from biz on track-add\n   * @param params TrackStateNotification\n   */\n  handleTrackMetadataAdd(params: TrackStateNotification) {\n    HMSLogger.d(this.TAG, `TRACK_METADATA_ADD`, JSON.stringify(params, null, 2));\n\n    for (const trackId in params.tracks) {\n      const trackInfo = params.tracks[trackId];\n      this.store.setTrackState({\n        peerId: params.peer.peer_id,\n        trackInfo,\n      });\n    }\n    this.processPendingTracks();\n  }\n\n  /**\n   * Sets the tracks to peer and returns the peer\n   */\n  handleTrackAdd = (track: HMSRemoteTrack) => {\n    HMSLogger.d(this.TAG, `ONTRACKADD`, `${track}`);\n    this.tracksToProcess.set(track.trackId, track);\n    this.processPendingTracks();\n  };\n\n  handleTrackRemovedPermanently = (notification: TrackStateNotification) => {\n    HMSLogger.d(this.TAG, `ONTRACKREMOVE permanently`, notification);\n    const trackIds = Object.keys(notification.tracks);\n\n    trackIds.forEach(trackId => {\n      const trackStateEntry = this.store.getTrackState(trackId);\n      if (!trackStateEntry) {\n        return;\n      }\n\n      const track = this.store.getTrackById(trackId);\n      if (!track) {\n        HMSLogger.d(this.TAG, 'Track not found in store');\n        return;\n      }\n\n      // emit this event here as peer will already be removed(if left the room) by the time this event is received\n      track.type === HMSTrackType.AUDIO && this.eventBus.audioTrackRemoved.publish(track as HMSRemoteAudioTrack);\n      this.store.removeTrack(track);\n      const hmsPeer = this.store.getPeerById(trackStateEntry.peerId);\n      if (!hmsPeer) {\n        return;\n      }\n      this.removePeerTracks(hmsPeer, track as HMSRemoteTrack);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n    });\n  };\n\n  /**\n   * Sets the track of corresponding peer to null and returns the peer\n   */\n  handleTrackRemove(track: HMSRemoteTrack, remove = true) {\n    HMSLogger.d(this.TAG, `ONTRACKREMOVE`, `${track}`);\n\n    const trackStateEntry = this.store.getTrackState(track.trackId);\n\n    if (!trackStateEntry) {\n      return;\n    }\n\n    const storeHasTrack = this.store.hasTrack(track);\n    if (!storeHasTrack) {\n      HMSLogger.d(this.TAG, 'Track not found in store');\n      return;\n    }\n\n    // remove tracks only when onDemandTracks flag is false\n    if (remove) {\n      this.store.removeTrack(track);\n      const hmsPeer = this.store.getPeerById(trackStateEntry.peerId);\n      if (!hmsPeer) {\n        return;\n      }\n      this.removePeerTracks(hmsPeer, track);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n\n      // emit this event here as peer will already be removed(if left the room) by the time this event is received\n      track.type === HMSTrackType.AUDIO && this.eventBus.audioTrackRemoved.publish(track as HMSRemoteAudioTrack);\n    }\n  }\n\n  handleTrackLayerUpdate = (params: OnTrackLayerUpdateNotification) => {\n    for (const trackId in params.tracks) {\n      const trackEntry = params.tracks[trackId];\n      const track = this.store.getTrackById(trackId);\n      if (!track) {\n        continue;\n      }\n\n      const peer = this.store.getPeerByTrackId(trackId)!;\n      if (!peer) {\n        continue;\n      }\n\n      if (track instanceof HMSRemoteVideoTrack) {\n        this.setLayer(track, trackEntry);\n      }\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  handleTrackUpdate = (params: TrackStateNotification, callListener = true) => {\n    let hmsPeer = this.store.getPeerById(params.peer.peer_id);\n    const notifPeer = params.peer;\n    if (!hmsPeer && !notifPeer) {\n      HMSLogger.d(this.TAG, 'Track Update ignored - Peer not added to store');\n      return;\n    }\n    if (!hmsPeer) {\n      hmsPeer = createRemotePeer(notifPeer, this.store);\n      this.store.addPeer(hmsPeer);\n    }\n\n    for (const trackId in params.tracks) {\n      const currentTrackStateInfo = Object.assign({}, this.store.getTrackState(trackId)?.trackInfo);\n\n      const trackEntry = params.tracks[trackId];\n      const track = this.store.getTrackById(trackId);\n\n      this.store.setTrackState({\n        peerId: params.peer.peer_id,\n        trackInfo: { ...currentTrackStateInfo, ...trackEntry },\n      });\n\n      // TRACK_UPDATE came before TRACK_ADD -> update state, process pending tracks when TRACK_ADD arrives.\n      if (!track || this.tracksToProcess.has(trackId)) {\n        this.processTrackInfo(trackEntry, params.peer.peer_id, callListener);\n        this.processPendingTracks();\n      } else {\n        track.setEnabled(!trackEntry.mute);\n        const eventType = this.processTrackUpdate(track as HMSRemoteTrack, currentTrackStateInfo, trackEntry);\n        if (eventType) {\n          this.listener?.onTrackUpdate(eventType, track, hmsPeer);\n        }\n      }\n    }\n  };\n\n  processTrackInfo = (_trackInfo: TrackState, _peerId: string, _callListener?: boolean) => {};\n\n  processPendingTracks = () => {\n    const tracksCopy = new Map(this.tracksToProcess);\n    tracksCopy.forEach(track => {\n      const state = this.store.getTrackState(track.trackId);\n      if (!state) {\n        HMSLogger.d(this.TAG, 'TrackState not added to store', `peerId - ${track.peerId}`, `trackId -${track.trackId}`);\n        return;\n      }\n\n      const hmsPeer = this.store.getPeerById(state.peerId);\n      if (!hmsPeer) {\n        HMSLogger.d(this.TAG, 'Peer not added to store, peerId', state.peerId);\n        return;\n      }\n\n      track.source = state.trackInfo.source;\n      track.peerId = hmsPeer.peerId;\n      // set log identifier to initial name of the peer\n      track.logIdentifier = hmsPeer.name;\n      track.setEnabled(!state.trackInfo.mute);\n      this.addAudioTrack(hmsPeer, track);\n      this.addVideoTrack(hmsPeer, track);\n      /**\n       * Don't call onTrackUpdate for audio elements immediately because the operations(eg: setVolume) performed\n       * on onTrackUpdate can be overriden in AudioSinkManager when audio element is created\n       **/\n      track.type === HMSTrackType.AUDIO\n        ? this.eventBus.audioTrackAdded.publish({ track: track as HMSRemoteAudioTrack, peer: hmsPeer as HMSRemotePeer })\n        : this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, hmsPeer);\n      this.tracksToProcess.delete(track.trackId);\n    });\n  };\n\n  private setLayer(track: HMSRemoteVideoTrack, layerUpdate: VideoTrackLayerUpdate) {\n    const peer = this.store.getPeerByTrackId(track.trackId);\n    if (!peer) {\n      return;\n    }\n    const isDegraded = track.setLayerFromServer(layerUpdate);\n    if (isDegraded) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_DEGRADED, track, peer);\n    } else {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_RESTORED, track, peer);\n    }\n  }\n\n  removePeerTracks(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    const auxiliaryTrackIndex = hmsPeer.auxiliaryTracks.indexOf(track);\n    if (auxiliaryTrackIndex > -1) {\n      hmsPeer.auxiliaryTracks.splice(auxiliaryTrackIndex, 1);\n      HMSLogger.d(this.TAG, 'auxiliary track removed', `${track}`);\n    } else {\n      if (track.type === HMSTrackType.AUDIO && hmsPeer.audioTrack === track) {\n        hmsPeer.audioTrack = undefined;\n        HMSLogger.d(this.TAG, 'audio track removed', `${track}`);\n      } else if (track.type === HMSTrackType.VIDEO && hmsPeer.videoTrack === track) {\n        hmsPeer.videoTrack = undefined;\n        HMSLogger.d(this.TAG, 'video track removed', `${track}`);\n      }\n    }\n  }\n\n  private addAudioTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    if (track.type !== HMSTrackType.AUDIO) {\n      return;\n    }\n    if (track.source === 'regular' && (!hmsPeer.audioTrack || hmsPeer.audioTrack?.trackId === track.trackId)) {\n      hmsPeer.audioTrack = track as HMSRemoteAudioTrack;\n    } else {\n      hmsPeer.auxiliaryTracks.push(track);\n    }\n    this.store.addTrack(track);\n    HMSLogger.d(this.TAG, 'audio track added', `${track}`);\n  }\n\n  addVideoTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    if (track.type !== HMSTrackType.VIDEO) {\n      return;\n    }\n    const remoteTrack = track as HMSRemoteVideoTrack;\n    const simulcastDefinitions = this.store.getSimulcastDefinitionsForPeer(hmsPeer, remoteTrack.source!);\n    remoteTrack.setSimulcastDefinitons(simulcastDefinitions);\n    if (this.addAsPrimaryVideoTrack(hmsPeer, remoteTrack)) {\n      if (!hmsPeer.videoTrack) {\n        hmsPeer.videoTrack = remoteTrack;\n      } else {\n        (hmsPeer.videoTrack as HMSRemoteVideoTrack).replaceTrack(remoteTrack);\n      }\n      this.store.addTrack(hmsPeer.videoTrack);\n    } else {\n      const index = hmsPeer.auxiliaryTracks.findIndex(track => track.trackId === remoteTrack.trackId);\n      if (index === -1) {\n        hmsPeer.auxiliaryTracks.push(remoteTrack);\n        this.store.addTrack(remoteTrack);\n      } else {\n        (hmsPeer.auxiliaryTracks[index] as HMSRemoteVideoTrack).replaceTrack(remoteTrack);\n        this.store.addTrack(hmsPeer.auxiliaryTracks[index]);\n      }\n    }\n    HMSLogger.d(this.TAG, 'video track added', `${track}`);\n  }\n\n  addAsPrimaryVideoTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    return track.source === 'regular' && (!hmsPeer.videoTrack || hmsPeer.videoTrack?.trackId === track.trackId);\n  }\n\n  private processTrackUpdate(track: HMSRemoteTrack, currentTrackState: TrackState, trackState: TrackState) {\n    let eventType;\n    if (currentTrackState.mute !== trackState.mute) {\n      eventType = trackState.mute ? HMSTrackUpdate.TRACK_MUTED : HMSTrackUpdate.TRACK_UNMUTED;\n      track.type === HMSTrackType.AUDIO &&\n        this.eventBus.audioTrackUpdate.publish({ track: track as HMSRemoteAudioTrack, enabled: !trackState.mute });\n    } else if (currentTrackState.description !== trackState.description) {\n      eventType = HMSTrackUpdate.TRACK_DESCRIPTION_CHANGED;\n    }\n    return eventType;\n  }\n}\n", "import { TrackManager } from './TrackManager';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSPeer, HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSRemoteStream } from '../../media/streams/HMSRemoteStream';\nimport { HMSRemoteTrack, HMSRemoteVideoTrack } from '../../media/tracks';\nimport { LocalTrackManager } from '../../sdk/LocalTrackManager';\nimport { Store } from '../../sdk/store';\nimport HMSTransport from '../../transport';\nimport HMSLogger from '../../utils/logger';\nimport { isEmptyTrack } from '../../utils/track';\nimport { TrackState, TrackStateNotification } from '../HMSNotifications';\n\nexport class OnDemandTrackManager extends TrackManager {\n  TAG = '[OnDemandTrackManager]';\n\n  constructor(store: Store, eventBus: EventBus, private transport: HMSTransport, listener?: HMSUpdateListener) {\n    super(store, eventBus, listener);\n  }\n\n  handleTrackMetadataAdd(params: TrackStateNotification) {\n    super.handleTrackMetadataAdd(params);\n    for (const trackId in params.tracks) {\n      if (params.tracks[trackId].type === 'video') {\n        this.processTrackInfo(params.tracks[trackId], params.peer.peer_id);\n      }\n    }\n  }\n\n  handleTrackRemove(track: HMSRemoteTrack) {\n    const isRegularVideo = track.type === 'video' && track.source === 'regular';\n    super.handleTrackRemove(track, !isRegularVideo);\n    if (isRegularVideo) {\n      this.processTrackInfo(\n        {\n          track_id: track.trackId,\n          mute: !track.enabled,\n          type: track.type,\n          source: track.source,\n          stream_id: track.stream.id,\n        } as TrackState,\n        track.peerId!,\n        false,\n      );\n    }\n  }\n\n  /**\n   * Add a blank track for the track received from biz so that the UI can render and show video element\n   * which will trigger the prefer-video-track-state request which results in the actual track being\n   * received from the sfu.\n   * This will also be called when track is removed, as it can be removed when none is sent to sfu to\n   * reduce the overall offer size\n   * @param {TrackState} trackInfo\n   * @param {string} peerId\n   * @param {boolean} callListener\n   * @returns\n   */\n  processTrackInfo = (trackInfo: TrackState, peerId: string, callListener = true) => {\n    if (trackInfo.type !== 'video') {\n      return;\n    }\n    const hmsPeer = this.store.getPeerById(peerId);\n    if (!hmsPeer || !this.isPeerRoleSubscribed(peerId)) {\n      HMSLogger.d(this.TAG, `no peer in store for peerId: ${peerId}`);\n      return;\n    }\n    const remoteStream = new HMSRemoteStream(new MediaStream(), this.transport.getSubscribeConnection()!);\n    const emptyTrack = LocalTrackManager.getEmptyVideoTrack();\n    emptyTrack.enabled = !trackInfo.mute;\n    const track = new HMSRemoteVideoTrack(\n      remoteStream,\n      emptyTrack,\n      trackInfo.source,\n      this.store.getRoom()?.disableNoneLayerRequest,\n    );\n    track.setTrackId(trackInfo.track_id);\n    track.peerId = hmsPeer.peerId;\n    track.logIdentifier = hmsPeer.name;\n    this.addVideoTrack(hmsPeer, track);\n    if (callListener) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, hmsPeer.videoTrack!, hmsPeer);\n    }\n  };\n\n  addAsPrimaryVideoTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    if (track.source !== 'regular') {\n      return false;\n    }\n    if (!hmsPeer.videoTrack) {\n      return true;\n    }\n    if (hmsPeer.videoTrack.trackId === track.trackId) {\n      return true;\n    }\n    return hmsPeer.videoTrack.enabled && isEmptyTrack(hmsPeer.videoTrack.nativeTrack);\n  }\n\n  private isPeerRoleSubscribed(peerId?: string) {\n    if (!peerId) {\n      return true;\n    }\n    const localPeer = this.store.getLocalPeer();\n    const peer = this.store.getPeerById(peerId);\n    return peer && localPeer?.role?.subscribeParams?.subscribeToRoles?.includes(peer.role?.name!);\n  }\n}\n", "import { PeerManager } from './PeerManager';\nimport { TrackManager } from './TrackManager';\nimport { HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSPeer } from '../../sdk/models/peer';\nimport { Store } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { PeerListNotification, PeerNotification, PeriodicRoomState } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Initial Peer List - get peer and track meta-data for peers who are already in the room when you join\n * - Reconnect Peer List - Handle peer and track changes in the room missed out due to reconnection\n *\n * Cases to handle in reconnect peer list:\n * - Add additional peers as peer join\n * - Remove missing peers as peer leave\n * - For existing peers:\n *    - Add new tracks as track add\n *    - Remove missing tracks as track remove\n *    - Track state change(enabled) as track update\n */\nexport class PeerListManager {\n  private readonly TAG = '[PeerListManager]';\n  constructor(\n    private store: Store,\n    private peerManager: PeerManager,\n    private trackManager: TrackManager,\n    public listener?: HMSUpdateListener,\n  ) {}\n\n  handleNotification(method: string, notification: any, isReconnecting: boolean) {\n    if (method === HMSNotificationMethod.PEER_LIST) {\n      const peerList = notification as PeerListNotification;\n      if (isReconnecting) {\n        HMSLogger.d(this.TAG, `RECONNECT_PEER_LIST event`, JSON.stringify(peerList, null, 2));\n        this.handleReconnectPeerList(peerList);\n      } else {\n        // TODO: Don't call initial peerlist if atleast 1room state had happen\n        HMSLogger.d(this.TAG, `PEER_LIST event`, JSON.stringify(peerList, null, 2));\n        this.handleInitialPeerList(peerList);\n      }\n    } else if (method === HMSNotificationMethod.ROOM_STATE) {\n      const roomState = notification as PeriodicRoomState;\n      this.handlePreviewRoomState(roomState);\n    }\n  }\n\n  private handleInitialPeerList = (peerList: PeerListNotification) => {\n    const peers = Object.values(peerList.peers);\n    this.peerManager.handlePeerList(peers);\n  };\n\n  private handleReconnectPeerList = (peerList: PeerListNotification) => {\n    this.handleRepeatedPeerList(peerList.peers);\n  };\n\n  private handlePreviewRoomState = (roomState: PeriodicRoomState) => {\n    if (!this.store.hasRoleDetailsArrived()) {\n      // we can't process the peers yet we don't know enough about them(role info)\n      return;\n    }\n    const roomPeers = roomState.peers;\n    if (roomPeers === null || roomPeers === undefined) {\n      // in this case, room state doesn't say anything about the peers,\n      // there can be optimisations in place to not send this field when it's unchanged from previously sent value.\n      // If there are no peers either roomState.peers will be empty object\n      // or peer_count will be 0(handled below)\n      if (roomState.peer_count === 0) {\n        this.handleRepeatedPeerList({});\n      }\n      return;\n    }\n    // we don't get tracks inside the peer object in room state, we're adding\n    // an empty value here so rest of the code flow can ignore this change, the below\n    // can be changed when tracks will be sent as a separate object in future\n    Object.keys(roomPeers).forEach(peer => {\n      roomPeers[peer].tracks = {};\n      roomPeers[peer].is_from_room_state = true;\n    });\n    this.handleRepeatedPeerList(roomPeers);\n  };\n\n  private handleRepeatedPeerList = (peersMap: Record<string, PeerNotification>) => {\n    const currentPeerList = this.store.getRemotePeers();\n    const peers = Object.values(peersMap);\n    const peersToRemove = currentPeerList.filter(hmsPeer => !peersMap[hmsPeer.peerId]);\n    if (peersToRemove.length > 0) {\n      HMSLogger.d(this.TAG, `${peersToRemove}`);\n    }\n\n    // Send peer-leave updates to all the missing peers\n    peersToRemove.forEach(peer => {\n      const peerNotification: PeerNotification = {\n        peer_id: peer.peerId,\n        role: peer.role?.name || '',\n        info: {\n          name: peer.name,\n          data: peer.metadata || '',\n          user_id: peer.customerUserId || '',\n          type: peer.type,\n        },\n        tracks: {},\n        groups: [],\n        realtime: peer.realtime,\n      };\n\n      this.peerManager.handlePeerLeave(peerNotification);\n    });\n\n    const peerList: PeerNotification[] = [];\n    // Check for any tracks which are added/removed\n    peers.forEach(newPeerNotification => {\n      const oldPeer = this.store.getPeerById(newPeerNotification.peer_id);\n      const newPeerTrackStates = Object.values(newPeerNotification.tracks);\n\n      if (oldPeer) {\n        // Peer already present in room, we take diff between the tracks\n        const tracks = this.store.getPeerTracks(oldPeer.peerId);\n\n        // Remove all the tracks which are not present in the peer.tracks\n        tracks.forEach(track => {\n          if (!newPeerNotification.tracks[track.trackId]) {\n            this.removePeerTrack(oldPeer, track.trackId);\n            this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, oldPeer);\n          }\n        });\n\n        // Add track-metadata for all the new tracks\n        newPeerTrackStates.forEach(trackData => {\n          if (!this.store.getTrackById(trackData.track_id)) {\n            // NOTE: We assume that, once the connection is re-established,\n            //  transport layer will send a native onTrackAdd\n            this.store.setTrackState({\n              peerId: oldPeer.peerId,\n              trackInfo: trackData,\n            });\n          }\n        });\n\n        // Handle RTC track add and track state change.\n        this.trackManager.handleTrackUpdate(\n          {\n            peer: newPeerNotification,\n            tracks: newPeerNotification.tracks,\n          },\n          false,\n        );\n\n        // Update peer's role locally, new role is received from the reconnect peer-list\n        this.peerManager.handlePeerUpdate(newPeerNotification);\n        peerList.push(newPeerNotification);\n      } else {\n        // New peer joined while reconnecting\n        peerList.push(newPeerNotification);\n      }\n    });\n    if (peerList.length > 0) {\n      this.peerManager.handlePeerList(peerList);\n    }\n  };\n\n  private removePeerTrack(peer: HMSPeer, trackId: string) {\n    HMSLogger.d(this.TAG, `removing track - ${trackId} from ${peer}`);\n    if (peer.audioTrack?.trackId === trackId) {\n      peer.audioTrack = undefined;\n    } else if (peer.videoTrack?.trackId === trackId) {\n      peer.videoTrack = undefined;\n    } else {\n      const trackIndex = peer.auxiliaryTracks.findIndex(track => track.trackId === trackId);\n      trackIndex >= 0 && peer.auxiliaryTracks.splice(trackIndex, 1);\n    }\n  }\n}\n", "export const convertDateNumToDate = (dateNum?: number): Date | undefined => {\n  return dateNum ? new Date(dateNum) : undefined;\n};\n", "import { TrackManager } from './TrackManager';\nimport { createRemotePeer } from './utils';\nimport { HMSPeerUpdate, HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSRemoteVideoTrack } from '../../media/tracks';\nimport { HMSPeer, HMSRemotePeer } from '../../sdk/models/peer';\nimport { Store } from '../../sdk/store';\nimport { HAND_RAISE_GROUP_NAME } from '../../utils/constants';\nimport { convertDateNumToDate } from '../../utils/date';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { PeerNotification } from '../HMSNotifications';\n\n/**\n * Handles:\n * - New peer join\n * - Peer Leave\n * - Role update for peer\n *\n * Notes:\n * - Peer join comes with track meta-data,\n * we add it to the store and call TrackManager to process it when RTC Track comes in.\n */\nexport class PeerManager {\n  private readonly TAG = '[PeerManager]';\n  constructor(private store: Store, private trackManager: TrackManager, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.PEER_JOIN: {\n        const peer = notification as PeerNotification;\n        this.handlePeerJoin(peer);\n        break;\n      }\n\n      case HMSNotificationMethod.PEER_LEAVE: {\n        const peer = notification as PeerNotification;\n        this.handlePeerLeave(peer);\n        break;\n      }\n      case HMSNotificationMethod.PEER_UPDATE:\n        this.handlePeerUpdate(notification as PeerNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  handlePeerList = (peers: PeerNotification[]) => {\n    if (peers.length === 0) {\n      this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, []);\n      return;\n    }\n    const hmsPeers: HMSRemotePeer[] = [];\n    const newPeers = new Set(peers.map(peer => peer.peer_id));\n    this.store.getRemotePeers().forEach(({ peerId, fromRoomState }) => {\n      /**\n       * Remove only if the peer join happened from preview roomstate update. This will prevent the peer joined\n       * from peer-join event post join from being removed from the store.\n       */\n      if (!newPeers.has(peerId) && fromRoomState) {\n        this.store.removePeer(peerId);\n      }\n    });\n    for (const peer of peers) {\n      hmsPeers.push(this.makePeer(peer));\n    }\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, hmsPeers);\n    this.trackManager.processPendingTracks();\n  };\n\n  handlePeerJoin = (peer: PeerNotification) => {\n    const hmsPeer = this.makePeer(peer);\n\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_JOINED, hmsPeer);\n    this.trackManager.processPendingTracks();\n  };\n\n  handlePeerLeave = (peer: PeerNotification) => {\n    const hmsPeer = this.store.getPeerById(peer.peer_id);\n    this.store.removePeer(peer.peer_id);\n    HMSLogger.d(this.TAG, `PEER_LEAVE`, peer.peer_id, `remainingPeers=${this.store.getPeers().length}`);\n\n    if (!hmsPeer) {\n      return;\n    }\n\n    if (hmsPeer.audioTrack) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.audioTrack, hmsPeer);\n    }\n\n    if (hmsPeer.videoTrack) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.videoTrack, hmsPeer);\n    }\n\n    hmsPeer.auxiliaryTracks?.forEach(track => {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n    });\n\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LEFT, hmsPeer);\n  };\n\n  // eslint-disable-next-line complexity\n  handlePeerUpdate(notification: PeerNotification) {\n    let peer = this.store.getPeerById(notification.peer_id);\n    if (!peer && notification.realtime) {\n      // create peer if not already created in store\n      peer = this.makePeer(notification);\n      this.listener?.onPeerUpdate(\n        peer.isHandRaised ? HMSPeerUpdate.HAND_RAISE_CHANGED : HMSPeerUpdate.PEER_ADDED,\n        peer,\n      );\n      return;\n    }\n\n    // if peer is present but not realtime now, remove it from store\n    if (peer && !peer.isLocal && !notification.realtime) {\n      this.store.removePeer(peer.peerId);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_REMOVED, peer);\n      return;\n    }\n\n    if (!peer) {\n      HMSLogger.d(this.TAG, `peer ${notification.peer_id} not found`);\n      return;\n    }\n\n    if (peer.role && peer.role.name !== notification.role) {\n      const newRole = this.store.getPolicyForRole(notification.role);\n      peer.updateRole(newRole);\n      this.updateSimulcastLayersForPeer(peer);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.ROLE_UPDATED, peer);\n    }\n    const wasHandRaised = peer.isHandRaised;\n    peer.updateGroups(notification.groups);\n    const isHandRaised = notification.groups?.includes(HAND_RAISE_GROUP_NAME);\n    if (wasHandRaised !== isHandRaised) {\n      this.listener?.onPeerUpdate(HMSPeerUpdate.HAND_RAISE_CHANGED, peer);\n    }\n    this.handlePeerInfoUpdate({ peer, ...notification.info });\n  }\n\n  handlePeerInfoUpdate({ peer, name, data }: { peer?: HMSPeer; name?: string; data?: string }) {\n    if (!peer) {\n      return;\n    }\n    if (name && peer.name !== name) {\n      peer.updateName(name);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.NAME_UPDATED, peer);\n    }\n    if (data && peer.metadata !== data) {\n      peer.updateMetadata(data);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.METADATA_UPDATED, peer);\n    }\n  }\n\n  private makePeer(peer: PeerNotification) {\n    let hmsPeer = this.store.getPeerById(peer.peer_id) as HMSRemotePeer;\n    if (!hmsPeer) {\n      hmsPeer = createRemotePeer(peer, this.store);\n      hmsPeer.realtime = peer.realtime;\n      hmsPeer.joinedAt = convertDateNumToDate(peer.joined_at);\n      hmsPeer.fromRoomState = !!peer.is_from_room_state;\n      this.store.addPeer(hmsPeer);\n      HMSLogger.d(this.TAG, `adding to the peerList`, `${hmsPeer}`);\n    }\n\n    for (const trackId in peer.tracks) {\n      const trackInfo = peer.tracks[trackId];\n      this.store.setTrackState({\n        peerId: peer.peer_id,\n        trackInfo,\n      });\n      if (trackInfo.type === 'video') {\n        this.trackManager.processTrackInfo(trackInfo, peer.peer_id, false);\n      }\n    }\n    return hmsPeer;\n  }\n\n  private updateSimulcastLayersForPeer(peer: HMSPeer) {\n    this.store.getPeerTracks(peer.peerId).forEach(track => {\n      if (track.type === 'video' && ['regular', 'screen'].includes(track.source!)) {\n        const remoteTrack = track as HMSRemoteVideoTrack;\n        const simulcastDefinitions = this.store.getSimulcastDefinitionsForPeer(peer, remoteTrack.source!);\n        remoteTrack.setSimulcastDefinitons(simulcastDefinitions);\n      }\n    });\n  }\n}\n", "import { EventBus } from '../../events/EventBus';\nimport { Store } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { PolicyParams } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Set policy with publishParams, simulcast layers to store\n * - Emit 'local-peer-role-update' to trigger RoleChangeManager to publish/unpublish local tracks\n * - Emit 'policy-change' to finish preview before calling listener.onPreview\n */\nexport class PolicyChangeManager {\n  constructor(private store: Store, private eventBus: EventBus) {}\n\n  handlePolicyChange(params: PolicyParams) {\n    const localPeer = this.store.getLocalPeer();\n\n    if (localPeer && !localPeer.role) {\n      const newRole = params.known_roles[params.name];\n      localPeer.updateRole(newRole);\n    }\n\n    this.store.setKnownRoles(params);\n    const room = this.store.getRoom();\n    if (room) {\n      room.templateId = params.template_id;\n    } else {\n      HMSLogger.w('[PolicyChangeManager]', 'on policy change - room not present');\n    }\n    // handle when role is not present in known_roles\n    // const publishParams = params.known_roles[params.name]?.publishParams;\n    // this.store.setPublishParams(publishParams);\n\n    this.updateLocalPeerRole(params);\n    this.eventBus.policyChange.publish(params);\n  }\n\n  private updateLocalPeerRole(params: PolicyParams) {\n    const localPeer = this.store.getLocalPeer();\n    if (localPeer?.role && localPeer.role.name !== params.name) {\n      const newRole = this.store.getPolicyForRole(params.name);\n      const oldRole = localPeer.role;\n      localPeer.updateRole(newRole);\n      if (newRole.name === localPeer.asRole?.name) {\n        delete localPeer.asRole;\n      }\n      this.eventBus.localRoleUpdate.publish({ oldRole, newRole });\n    }\n  }\n}\n", "/**\n * Thresholds for the network quality scores in kbps.\n * ex: { 1: { low: 300, high: 400 }}\n */\nexport type ScoreMap = Record<\n  number,\n  {\n    low: number;\n    high?: number;\n  }\n>;\n\n/**\n * Informantion necessary to test network quality. it provides a url to be\n * downloaded and timeout for the url download. And also the scores to be\n * assigned based on the downloaded data and time.\n */\nexport interface NetworkHealth {\n  url: string;\n  timeout: number;\n  scoreMap: ScoreMap;\n}\nexport interface InitConfig {\n  readonly endpoint: string;\n  readonly log_level: string;\n  readonly policy: string;\n  readonly rtcConfiguration: RTCConfiguration;\n  readonly pingTimeout?: number;\n  readonly config: {\n    readonly enabledFlags?: Array<InitFlags>;\n    readonly networkHealth: NetworkHealth;\n    readonly publishStats?: {\n      readonly maxSampleWindowSize: number;\n      readonly maxSamplePushInterval: number;\n    };\n    readonly subscribeStats?: {\n      readonly maxSampleWindowSize: number;\n      readonly maxSamplePushInterval: number;\n    };\n    readonly dtlsStateTimeouts?: {\n      readonly connecting: number;\n      readonly failed: number;\n    };\n    readonly vb?: {\n      readonly effectsKey: string;\n    };\n  };\n}\n\nexport enum InitFlags {\n  FLAG_SERVER_SUB_DEGRADATION = 'subscribeDegradation',\n  FLAG_SERVER_SIMULCAST = 'simulcast',\n  FLAG_NON_WEBRTC_DISABLE_OFFER = 'nonWebRTCDisableOffer',\n  FLAG_PUBLISH_STATS = 'publishStats',\n  FLAG_SUBSCRIBE_STATS = 'subscribeStats',\n  FLAG_ON_DEMAND_TRACKS = 'onDemandTracks',\n  // Don't unsubscribe for beam to prevent a/v sync in case of active speaker\n  FLAG_DISABLE_VIDEO_TRACK_AUTO_UNSUBSCRIBE = 'disableVideoTrackAutoUnsubscribe',\n  FLAG_WHITEBOARD_ENABLED = 'whiteboardEnabled',\n  FLAG_EFFECTS_SDK_ENABLED = 'effectsSDKEnabled',\n  FLAG_VB_ENABLED = 'vb',\n  FLAG_HIPAA_ENABLED = 'hipaa',\n  FLAG_NOISE_CANCELLATION = 'noiseCancellation',\n  FLAG_SCALE_SCREENSHARE_BASED_ON_PIXELS = 'scaleScreenshareBasedOnPixels',\n  FLAG_DISABLE_NONE_LAYER_REQUEST = 'disableNoneLayerRequest',\n}\n", "import { WHITEBOARD_ORIGIN, WHITEBOARD_QA_ORIGIN } from './constants';\nimport { ENV } from './support';\n\nexport const constructWhiteboardURL = (token: string, addr: string, env?: ENV) => {\n  const origin = env === ENV.QA ? WHITEBOARD_QA_ORIGIN : WHITEBOARD_ORIGIN;\n\n  const url = new URL(origin);\n  url.searchParams.set('endpoint', `https://${addr}`);\n  url.searchParams.set('token', token);\n\n  return url.toString();\n};\n", "import { HMSWhiteboard, InteractivityListener } from '../../interfaces';\nimport { HMSWhiteboardInteractivityCenter } from '../../interfaces/session-store/interactivity-center';\nimport { Store } from '../../sdk/store';\nimport { InitFlags } from '../../signal/init/models';\nimport { HMSWhiteboardCreateOptions } from '../../signal/interfaces';\nimport HMSTransport from '../../transport';\nimport HMSLogger from '../../utils/logger';\nimport { constructWhiteboardURL } from '../../utils/whiteboard';\n\nexport class WhiteboardInteractivityCenter implements HMSWhiteboardInteractivityCenter {\n  private TAG = '[HMSWhiteboardInteractivityCenter]';\n  constructor(\n    private readonly transport: HMSTransport,\n    private store: Store,\n    private listener?: InteractivityListener,\n  ) {}\n\n  // @TODO: remove when whiteboard released for general audience\n  get isEnabled() {\n    return this.transport.isFlagEnabled(InitFlags.FLAG_WHITEBOARD_ENABLED);\n  }\n\n  async open(createOptions?: HMSWhiteboardCreateOptions) {\n    if (!this.isEnabled) {\n      return HMSLogger.w(this.TAG, 'Whiteboard is not enabled for customer');\n    }\n    const prevWhiteboard = this.store.getWhiteboard(createOptions?.id);\n    let id = prevWhiteboard?.id;\n\n    if (!prevWhiteboard) {\n      const response = await this.transport.signal.createWhiteboard(this.getCreateOptionsWithDefaults(createOptions));\n      id = response.id;\n    }\n    if (!id) {\n      throw new Error(`Whiteboard ID: ${id} not found`);\n    }\n\n    const response = await this.transport.signal.getWhiteboard({ id });\n    const whiteboard: HMSWhiteboard = {\n      ...prevWhiteboard,\n      title: createOptions?.title,\n      attributes: createOptions?.attributes,\n      id: response.id,\n      url: constructWhiteboardURL(response.token, response.addr, this.store.getEnv()),\n      token: response.token,\n      addr: response.addr,\n      owner: response.owner,\n      permissions: response.permissions || [],\n      open: true,\n    };\n\n    this.store.setWhiteboard(whiteboard);\n    this.listener?.onWhiteboardUpdate(whiteboard);\n  }\n\n  async close(id?: string) {\n    if (!this.isEnabled) {\n      return HMSLogger.w(this.TAG, 'Whiteboard is not enabled for customer');\n    }\n\n    const prevWhiteboard = this.store.getWhiteboard(id);\n    if (!prevWhiteboard) {\n      throw new Error(`Whiteboard ID: ${id} not found`);\n    }\n    const whiteboard: HMSWhiteboard = { id: prevWhiteboard.id, title: prevWhiteboard.title, open: false };\n\n    this.store.setWhiteboard(whiteboard);\n    this.listener?.onWhiteboardUpdate(whiteboard);\n  }\n\n  setListener(listener?: InteractivityListener) {\n    this.listener = listener;\n  }\n\n  async handleLocalRoleUpdate() {\n    const whiteboards = this.store.getWhiteboards();\n\n    for (const whiteboard of whiteboards.values()) {\n      if (whiteboard.url) {\n        const response = await this.transport.signal.getWhiteboard({ id: whiteboard.id });\n        const localPeer = this.store.getLocalPeer();\n        const isOwner = localPeer?.customerUserId === response.owner;\n        const open = isOwner\n          ? localPeer.role?.permissions.whiteboard?.includes('admin')\n          : response.permissions.length > 0;\n        const newWhiteboard: HMSWhiteboard = {\n          ...whiteboard,\n          id: response.id,\n          url: constructWhiteboardURL(response.token, response.addr, this.store.getEnv()),\n          token: response.token,\n          addr: response.addr,\n          owner: response.owner,\n          permissions: response.permissions,\n          open,\n        };\n\n        this.store.setWhiteboard(newWhiteboard);\n        this.listener?.onWhiteboardUpdate(newWhiteboard);\n      }\n    }\n  }\n\n  private getCreateOptionsWithDefaults(createOptions?: HMSWhiteboardCreateOptions): HMSWhiteboardCreateOptions {\n    const roles = Object.values(this.store.getKnownRoles());\n    const reader: Array<string> = [];\n    const writer: Array<string> = [];\n    const admin: Array<string> = [];\n\n    roles.forEach(role => {\n      if (role.permissions.whiteboard?.includes('read')) {\n        reader.push(role.name);\n      }\n      if (role.permissions.whiteboard?.includes('write')) {\n        writer.push(role.name);\n      }\n      if (role.permissions.whiteboard?.includes('admin')) {\n        admin.push(role.name);\n      }\n    });\n\n    return {\n      title: createOptions?.title || `${this.store.getRoom()?.id} Whiteboard`,\n      reader: createOptions?.reader || reader,\n      writer: createOptions?.writer || writer,\n      admin: createOptions?.admin || admin,\n    };\n  }\n}\n", "import { WhiteboardInteractivityCenter } from './HMSWhiteboardCenter';\nimport {\n  HMSInteractivityCenter,\n  HMSPollQuestionCreateParams,\n  HMSPollsUpdate,\n  InteractivityListener,\n} from '../../interfaces';\nimport {\n  HMSPoll,\n  HMSPollCreateParams,\n  HMSPollQuestionAnswer,\n  HMSPollQuestionOption,\n  HMSPollQuestionResponse,\n  HMSPollQuestionResponseCreateParams,\n  HMSPollQuestionType,\n  HMSPollStates,\n  HMSPollUserTrackingMode,\n  HMSQuizLeaderboardResponse,\n} from '../../interfaces/session-store/polls';\nimport { Store } from '../../sdk/store';\nimport { PollInfoParams, PollQuestionParams, PollResponseParams } from '../../signal/interfaces';\nimport HMSTransport from '../../transport';\nimport { convertDateNumToDate } from '../../utils/date';\n\nexport class InteractivityCenter implements HMSInteractivityCenter {\n  whiteboard: WhiteboardInteractivityCenter;\n  constructor(private transport: HMSTransport, private store: Store, private listener?: InteractivityListener) {\n    this.whiteboard = new WhiteboardInteractivityCenter(transport, store, listener);\n  }\n\n  setListener(listener?: InteractivityListener) {\n    this.listener = listener;\n    this.whiteboard.setListener(listener);\n  }\n\n  async createPoll(pollParams: HMSPollCreateParams) {\n    const HMS_USER_TRACKING_MODE_MAP: Record<HMSPollUserTrackingMode, string> = {\n      customerID: 'userid',\n      peerID: 'peerid',\n      userName: 'username',\n    };\n\n    const { poll_id: serverPollID } = await this.transport.signal.setPollInfo({\n      ...pollParams,\n      mode: pollParams.mode ? HMS_USER_TRACKING_MODE_MAP[pollParams.mode] : undefined,\n      poll_id: pollParams.id,\n      vote: pollParams.rolesThatCanVote,\n      responses: pollParams.rolesThatCanViewResponses,\n    });\n\n    if (!pollParams.id) {\n      pollParams.id = serverPollID;\n    }\n\n    if (Array.isArray(pollParams.questions)) {\n      await this.addQuestionsToPoll(pollParams.id, pollParams.questions);\n    }\n\n    const questions = await this.transport.signal.getPollQuestions({ poll_id: pollParams.id, index: 0, count: 50 });\n\n    const poll = createHMSPollFromPollParams({\n      ...pollParams,\n      poll_id: pollParams.id,\n      state: 'created',\n      created_by: this.store.getLocalPeer()?.peerId,\n    });\n\n    poll.questions = questions.questions.map(({ question, options, answer }) => ({ ...question, options, answer }));\n    this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_CREATED, [poll]);\n  }\n\n  async startPoll(poll: string | HMSPollCreateParams): Promise<void> {\n    if (typeof poll === 'string') {\n      await this.transport.signal.startPoll({ poll_id: poll });\n    } else {\n      await this.createPoll(poll);\n      await this.transport.signal.startPoll({ poll_id: poll.id });\n    }\n  }\n\n  async addQuestionsToPoll(pollID: string, questions: HMSPollQuestionCreateParams[]): Promise<void> {\n    if (questions.length > 0) {\n      await this.transport.signal.setPollQuestions({\n        poll_id: pollID,\n        questions: questions.map((question, index) => this.createQuestionSetParams(question, index)),\n      });\n    }\n  }\n\n  async stopPoll(pollID: string): Promise<void> {\n    await this.transport.signal.stopPoll({ poll_id: pollID });\n  }\n\n  async addResponsesToPoll(pollID: string, responses: HMSPollQuestionResponseCreateParams[]) {\n    const poll = this.store.getPoll(pollID);\n    if (!poll) {\n      throw new Error('Invalid poll ID - Poll not found');\n    }\n    const responsesParams: PollResponseParams[] = responses.map(response => {\n      const question = this.getQuestionInPoll(poll, response.questionIndex);\n      if (question.type === HMSPollQuestionType.SINGLE_CHOICE) {\n        response.option = response.option || response.options?.[0] || -1;\n        delete response.text;\n        delete response.options;\n      } else if (question.type === HMSPollQuestionType.MULTIPLE_CHOICE) {\n        response.options?.sort();\n        delete response.text;\n        delete response.option;\n      } else {\n        delete response.option;\n        delete response.options;\n      }\n\n      if (response.skipped) {\n        delete response.option;\n        delete response.options;\n        delete response.text;\n      }\n\n      return { duration: 0, type: question.type, question: response.questionIndex, ...response };\n    });\n\n    await this.transport.signal.setPollResponses({ poll_id: pollID, responses: responsesParams });\n  }\n\n  async fetchLeaderboard(pollID: string, offset: number, count: number): Promise<HMSQuizLeaderboardResponse> {\n    const poll = this.store.getPoll(pollID);\n    if (!poll) {\n      throw new Error('Invalid poll ID - Poll not found');\n    }\n\n    const localPeerPermissions = this.store.getLocalPeer()?.role?.permissions;\n    const canViewSummary = !!(localPeerPermissions?.pollRead || localPeerPermissions?.pollWrite);\n\n    if (poll.anonymous || poll.state !== HMSPollStates.STOPPED || !canViewSummary) {\n      return { entries: [], hasNext: false };\n    }\n    const pollLeaderboard = await this.transport.signal.fetchPollLeaderboard({\n      poll_id: poll.id,\n      count,\n      offset,\n    });\n\n    const summary = {\n      avgScore: pollLeaderboard.avg_score,\n      avgTime: pollLeaderboard.avg_time,\n      votedUsers: pollLeaderboard.voted_users,\n      totalUsers: pollLeaderboard.total_users,\n      correctUsers: pollLeaderboard.correct_users,\n    };\n\n    const leaderboardEntries = pollLeaderboard.questions.map(question => {\n      return {\n        position: question.position,\n        totalResponses: question.total_responses,\n        correctResponses: question.correct_responses,\n        duration: question.duration,\n        peer: question.peer,\n        score: question.score,\n      };\n    });\n\n    return { entries: leaderboardEntries, hasNext: !pollLeaderboard.last, summary };\n  }\n\n  async getPollResponses(poll: HMSPoll, self: boolean) {\n    const serverResponseParams = await this.transport.signal.getPollResponses({\n      poll_id: poll.id,\n      index: 0,\n      count: 50,\n      self,\n    });\n    const pollCopy = JSON.parse(JSON.stringify(poll));\n    serverResponseParams.responses?.forEach(({ response, peer, final }) => {\n      const question = poll?.questions?.find(question => question.index === response.question);\n      if (question) {\n        const pollResponse: HMSPollQuestionResponse = {\n          id: response.response_id,\n          questionIndex: response.question,\n          option: response.option,\n          options: response.options,\n          text: response.text,\n          responseFinal: final,\n          peer: { peerid: peer.peerid, userHash: peer.hash, userid: peer.userid, username: peer.username },\n          skipped: response.skipped,\n          type: response.type,\n          update: response.update,\n        };\n        const existingResponses = question.responses && !self ? [...question.responses] : [];\n\n        if (pollCopy.questions?.[response.question - 1]) {\n          pollCopy.questions[response.question - 1].responses = [...existingResponses, pollResponse];\n        }\n      }\n    });\n    this.store.setPoll(pollCopy);\n    this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_STATS_UPDATED, [pollCopy]);\n  }\n  async getPolls(): Promise<HMSPoll[]> {\n    const launchedPollsList = await this.transport.signal.getPollsList({ count: 50, state: 'started' });\n    const polls: HMSPoll[] = [];\n    const canViewAllPolls = this.store.getLocalPeer()?.role?.permissions.pollWrite;\n\n    let visiblePolls = [...launchedPollsList.polls];\n    if (canViewAllPolls) {\n      const draftPollsList = await this.transport.signal.getPollsList({ count: 50, state: 'created' });\n      const completedPollsList = await this.transport.signal.getPollsList({ count: 50, state: 'stopped' });\n      visiblePolls = [...draftPollsList.polls, ...visiblePolls, ...completedPollsList.polls];\n    }\n\n    for (const pollParams of visiblePolls) {\n      const questions = await this.transport.signal.getPollQuestions({\n        poll_id: pollParams.poll_id,\n        index: 0,\n        count: 50,\n      });\n      const poll = createHMSPollFromPollParams(pollParams);\n      const existingPoll = this.store.getPoll(pollParams.poll_id);\n      poll.questions = questions.questions.map(({ question, options, answer }, index) => ({\n        ...question,\n        options,\n        answer,\n        responses: existingPoll?.questions?.[index]?.responses,\n      }));\n      polls.push(poll);\n      this.store.setPoll(poll);\n    }\n\n    this.listener?.onPollsUpdate(HMSPollsUpdate.POLLS_LIST, polls);\n    return polls;\n  }\n\n  // eslint-disable-next-line complexity\n  private createQuestionSetParams(questionParams: HMSPollQuestionCreateParams, index: number): PollQuestionParams {\n    // early return if the question has been saved before in a draft\n    if (questionParams.index) {\n      const optionsWithIndex = questionParams.options?.map((option, index) => {\n        return { ...option, index: index + 1 };\n      });\n      return {\n        question: { ...questionParams, index: index + 1 },\n        options: optionsWithIndex,\n        answer: questionParams.answer,\n      };\n    }\n    const question: PollQuestionParams['question'] = { ...questionParams, index: index + 1 };\n    let options: HMSPollQuestionOption[] | undefined;\n    const answer: HMSPollQuestionAnswer = questionParams.answer || { hidden: false };\n\n    if (\n      Array.isArray(questionParams.options) &&\n      [HMSPollQuestionType.SINGLE_CHOICE, HMSPollQuestionType.MULTIPLE_CHOICE].includes(questionParams.type)\n    ) {\n      options = questionParams.options?.map((option, index) => ({\n        index: index + 1,\n        text: option.text,\n        weight: option.weight,\n      }));\n\n      if (questionParams.type === HMSPollQuestionType.SINGLE_CHOICE) {\n        answer.option = questionParams.options.findIndex(option => option.isCorrectAnswer) + 1 || undefined;\n      } else {\n        answer.options = questionParams.options\n          .map((option, index) => (option.isCorrectAnswer ? index + 1 : undefined))\n          .filter((val): val is number => !!val);\n      }\n    } else {\n      delete answer?.options;\n      delete answer?.option;\n    }\n\n    return { question, options, answer };\n  }\n\n  private getQuestionInPoll(poll: HMSPoll, questionIndex: number) {\n    const question = poll?.questions?.find(question => question.index === questionIndex);\n    if (!question) {\n      throw new Error('Invalid question index - Question not found in poll');\n    }\n\n    return question;\n  }\n}\n\nexport const createHMSPollFromPollParams = (pollParams: PollInfoParams): HMSPoll => {\n  const BIZ_USER_TRACKING_MODE_MAP: Record<string, HMSPollUserTrackingMode> = {\n    userid: 'customerID',\n    peerid: 'peerID',\n    username: 'userName',\n  };\n\n  return {\n    id: pollParams.poll_id,\n    title: pollParams.title,\n    startedBy: pollParams.started_by,\n    createdBy: pollParams.created_by,\n    anonymous: pollParams.anonymous,\n    type: pollParams.type,\n    duration: pollParams.duration,\n    locked: pollParams.locked, // poll is locked automatically when it starts\n    mode: pollParams.mode ? BIZ_USER_TRACKING_MODE_MAP[pollParams.mode] : undefined,\n    visibility: pollParams.visibility,\n    rolesThatCanVote: pollParams.vote || [],\n    rolesThatCanViewResponses: pollParams.responses || [],\n    state: pollParams.state,\n    stoppedBy: pollParams.stopped_by,\n    startedAt: convertDateNumToDate(pollParams.started_at),\n    stoppedAt: convertDateNumToDate(pollParams.stopped_at),\n    createdAt: convertDateNumToDate(pollParams.created_at),\n  };\n};\n", "import { HMSPoll, HMSPollQuestionResponse, HMSPollsUpdate, HMSUpdateListener } from '../../interfaces';\nimport { Store } from '../../sdk/store';\nimport { createHMSPollFromPollParams } from '../../session-store/interactivity-center/HMSInteractivityCenter';\nimport { PollResult } from '../../signal/interfaces';\nimport HMSTransport from '../../transport';\nimport { convertDateNumToDate } from '../../utils/date';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { PollStartNotification, PollStatsNotification, PollStopNotification } from '../HMSNotifications';\n\nexport class PollsManager {\n  constructor(private store: Store, private transport: HMSTransport, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.POLL_START: {\n        this.handlePollStart(notification as PollStartNotification);\n        break;\n      }\n\n      case HMSNotificationMethod.POLL_STOP: {\n        this.handlePollStop(notification as PollStopNotification);\n        break;\n      }\n      case HMSNotificationMethod.POLL_STATS:\n        this.handlePollStats(notification as PollStatsNotification);\n\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async handlePollStart(notification: PollStartNotification) {\n    const polls: HMSPoll[] = [];\n\n    for (const pollParams of notification.polls) {\n      const pollInStore = this.store.getPoll(pollParams.poll_id);\n\n      if (pollInStore && pollInStore.state === 'started') {\n        this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_STARTED, [pollInStore]);\n        return;\n      }\n\n      const questions = await this.transport.signal.getPollQuestions({\n        poll_id: pollParams.poll_id,\n        index: 0,\n        count: 50,\n      });\n\n      const poll = createHMSPollFromPollParams(pollParams);\n      poll.questions = questions.questions.map(({ question, options, answer }) => ({ ...question, options, answer }));\n\n      await this.updatePollResponses(poll, true);\n\n      polls.push(poll);\n      this.store.setPoll(poll);\n    }\n    this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_STARTED, polls);\n  }\n\n  private async handlePollStop(notification: PollStopNotification) {\n    const stoppedPolls: HMSPoll[] = [];\n\n    for (const poll of notification.polls) {\n      const savedPoll = this.store.getPoll(poll.poll_id);\n      if (savedPoll) {\n        savedPoll.state = 'stopped';\n        savedPoll.stoppedAt = convertDateNumToDate(poll.stopped_at);\n        savedPoll.stoppedBy = poll.stopped_by;\n\n        const pollResult = await this.transport.signal.getPollResult({ poll_id: poll.poll_id });\n        this.updatePollResult(savedPoll, pollResult);\n        stoppedPolls.push(savedPoll);\n      }\n    }\n\n    if (stoppedPolls.length > 0) {\n      this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_STOPPED, stoppedPolls);\n    }\n  }\n\n  private async handlePollStats(notification: PollStatsNotification) {\n    const updatedPolls: HMSPoll[] = [];\n    for (const updatedPoll of notification.polls) {\n      const savedPoll = this.store.getPoll(updatedPoll.poll_id);\n      if (!savedPoll) {\n        return;\n      }\n\n      this.updatePollResult(savedPoll, updatedPoll);\n      updatedPolls.push(savedPoll);\n    }\n\n    if (updatedPolls.length > 0) {\n      this.listener?.onPollsUpdate(HMSPollsUpdate.POLL_STATS_UPDATED, updatedPolls);\n    }\n  }\n\n  private updatePollResult(savedPoll: HMSPoll, pollResult: PollResult) {\n    savedPoll.result = { ...savedPoll.result };\n    savedPoll.result.totalUsers = pollResult.user_count;\n    savedPoll.result.maxUsers = pollResult.max_user;\n    savedPoll.result.totalResponses = pollResult.total_response;\n\n    pollResult.questions?.forEach(updatedQuestion => {\n      const savedQuestion = savedPoll.questions?.find(question => question.index === updatedQuestion.question);\n      if (!savedQuestion) {\n        return;\n      }\n      savedQuestion.result = { ...savedQuestion.result };\n      savedQuestion.result.correctResponses = updatedQuestion.correct;\n      savedQuestion.result.skippedCount = updatedQuestion.skipped;\n      savedQuestion.result.totalResponses = updatedQuestion.total;\n\n      updatedQuestion.options?.forEach((updatedVoteCount, index) => {\n        const savedOption = savedQuestion.options?.[index];\n        if (savedOption && savedOption.voteCount !== updatedVoteCount) {\n          savedOption.voteCount = updatedVoteCount;\n        }\n      });\n    });\n  }\n\n  private async updatePollResponses(poll: HMSPoll, self: boolean) {\n    const serverResponseParams = await this.transport.signal.getPollResponses({\n      poll_id: poll.id,\n      index: 0,\n      count: 50,\n      self,\n    });\n\n    serverResponseParams.responses?.forEach(({ response, peer, final }) => {\n      const question = poll?.questions?.find(question => question.index === response.question);\n      if (!question) {\n        return;\n      }\n      const pollResponse: HMSPollQuestionResponse = {\n        id: response.response_id,\n        questionIndex: response.question,\n        option: response.option,\n        options: response.options,\n        text: response.text,\n        responseFinal: final,\n        peer: { peerid: peer.peerid, userHash: peer.hash, userid: peer.userid, username: peer.username },\n        skipped: response.skipped,\n        type: response.type,\n        update: response.update,\n      };\n\n      if (Array.isArray(question.responses) && question.responses.length > 0) {\n        if (!question.responses.find(({ id }) => id === pollResponse.id)) {\n          question.responses.push(pollResponse);\n        }\n      } else {\n        question.responses = [pollResponse];\n      }\n    });\n  }\n}\n", "import { HMSRemotePeer, HMSRoleChangeRequest, HMSUpdateListener } from '../../interfaces';\nimport { HMSLocalTrack, HMSTrackSource } from '../../media/tracks';\nimport { Store } from '../../sdk/store';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport {\n  ChangeTrackMuteStateNotification,\n  RoleChangeRequestParams,\n  TrackUpdateRequestNotification,\n} from '../HMSNotifications';\n\n/**\n * Handles request from remote peers to change something on the local side. For eg. role change, track mute/unmute.\n */\nexport class RequestManager {\n  constructor(private store: Store, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.ROLE_CHANGE_REQUEST:\n        this.handleRoleChangeRequest(notification as RoleChangeRequestParams);\n        break;\n\n      case HMSNotificationMethod.TRACK_UPDATE_REQUEST:\n        this.handleTrackUpdateRequest(notification as TrackUpdateRequestNotification);\n        break;\n\n      case HMSNotificationMethod.CHANGE_TRACK_MUTE_STATE_UPDATE:\n        this.handleChangeTrackStateRequest(notification as ChangeTrackMuteStateNotification);\n        break;\n      default:\n        return;\n    }\n  }\n\n  private handleRoleChangeRequest(notification: RoleChangeRequestParams) {\n    const request: HMSRoleChangeRequest = {\n      requestedBy: notification.requested_by\n        ? (this.store.getPeerById(notification.requested_by) as HMSRemotePeer)\n        : undefined,\n      role: this.store.getPolicyForRole(notification.role),\n      token: notification.token,\n    };\n\n    this.listener?.onRoleChangeRequest(request);\n  }\n\n  // eslint-disable-next-line complexity\n  private handleTrackUpdateRequest(trackUpdateRequest: TrackUpdateRequestNotification) {\n    const { requested_by, track_id, mute } = trackUpdateRequest;\n    const peer = requested_by ? this.store.getPeerById(requested_by) : undefined;\n    const track = this.store.getLocalPeerTracks().find(track => track.publishedTrackId === track_id);\n\n    if (!track) {\n      return;\n    }\n\n    const sendNotification = () => {\n      this.listener?.onChangeTrackStateRequest({ requestedBy: peer as HMSRemotePeer, track, enabled: !mute });\n    };\n\n    if (mute) {\n      // if track is already in the same state as change state, do nothing\n      if (track.enabled === !mute) {\n        return;\n      }\n      /**\n       * Directly mute track when request arrives\n       */\n      track.setEnabled(!mute).then(sendNotification);\n    } else {\n      /**\n       * Notify UI to unmute for requesting consent\n       */\n      sendNotification();\n    }\n  }\n\n  private handleChangeTrackStateRequest(request: ChangeTrackMuteStateNotification) {\n    const { type, source, value, requested_by } = request;\n    const peer = requested_by ? this.store.getPeerById(requested_by) : undefined;\n\n    // value true means the track has to be muted\n    const enabled = !value;\n    const tracksToBeUpdated = this.getTracksToBeUpdated({ type, source, enabled });\n    //Do nothing if all tracks are already in same state as the request\n    if (tracksToBeUpdated.length === 0) {\n      return;\n    }\n    // if track is to be muted, mute and send the notification, otherwise send notification\n    if (!enabled) {\n      const promises: Promise<void>[] = [];\n\n      for (const track of tracksToBeUpdated) {\n        promises.push(track.setEnabled(false));\n      }\n      Promise.all(promises).then(() => {\n        this.listener?.onChangeMultiTrackStateRequest({\n          requestedBy: peer as HMSRemotePeer,\n          tracks: tracksToBeUpdated,\n          enabled: false,\n        });\n      });\n    } else {\n      this.listener?.onChangeMultiTrackStateRequest({\n        requestedBy: peer as HMSRemotePeer,\n        tracks: tracksToBeUpdated,\n        type,\n        source,\n        enabled: true,\n      });\n    }\n  }\n\n  /**\n   * Filter the local tracks based on type, source and enabled state\n   * @returns {HMSLocalTrack[]}\n   */\n  private getTracksToBeUpdated({\n    type,\n    source,\n    enabled,\n  }: {\n    type?: 'audio' | 'video';\n    source?: HMSTrackSource;\n    enabled: boolean;\n  }) {\n    const localPeerTracks = this.store.getLocalPeerTracks();\n    let tracks: HMSLocalTrack[] = localPeerTracks;\n    if (type) {\n      tracks = tracks.filter(track => track.type === type);\n    }\n    if (source) {\n      tracks = tracks.filter(track => track.source === source);\n    }\n    // filter out tracks which are already in the desired state\n    return tracks.filter(track => track.enabled !== enabled);\n  }\n}\n", "import { HMSAction } from '../../error/HMSAction';\nimport { HMSException } from '../../error/HMSException';\nimport {\n  HLSVariant,\n  HMSBrowserRecording,\n  HMSHLS,\n  HMSHLSRecording,\n  HMSRoomUpdate,\n  HMSSFURecording,\n  HMSTranscriptionInfo,\n  HMSUpdateListener,\n} from '../../interfaces';\nimport { ServerError } from '../../interfaces/internal';\nimport { Store } from '../../sdk/store';\nimport { convertDateNumToDate } from '../../utils/date';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport {\n  HLSNotification,\n  HMSRecordingState,\n  HMSStreamingState,\n  PeerListNotification,\n  PeriodicRoomState,\n  RecordingNotification,\n  RecordingNotificationType,\n  RoomInfo,\n  RoomState,\n  RTMPNotification,\n  SessionInfo,\n  TranscriptionNotification,\n} from '../HMSNotifications';\n\nexport class RoomUpdateManager {\n  private readonly TAG = '[RoomUpdateManager]';\n\n  constructor(private store: Store, public listener?: HMSUpdateListener) {}\n\n  // eslint-disable-next-line complexity\n  handleNotification(method: HMSNotificationMethod, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.PEER_LIST:\n        this.onRoomState((notification as PeerListNotification).room);\n        break;\n      case HMSNotificationMethod.RTMP_UPDATE:\n        this.updateRTMPStatus(notification as RTMPNotification);\n        break;\n      case HMSNotificationMethod.RECORDING_UPDATE:\n        this.updateRecordingStatus(notification as RecordingNotification);\n        break;\n      case HMSNotificationMethod.ROOM_STATE:\n        this.handlePreviewRoomState(notification as PeriodicRoomState);\n        break;\n      case HMSNotificationMethod.ROOM_INFO:\n        this.handleRoomInfo(notification as RoomInfo);\n        break;\n      case HMSNotificationMethod.SESSION_INFO:\n        this.handleSessionInfo(notification as SessionInfo);\n        break;\n      case HMSNotificationMethod.HLS_UPDATE:\n        this.updateHLSStatus(notification as HLSNotification);\n        break;\n      case HMSNotificationMethod.TRANSCRIPTION_UPDATE:\n        this.handleTranscriptionStatus([notification as TranscriptionNotification]);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private handleRoomInfo(notification: RoomInfo) {\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on session info - room not present');\n      return;\n    }\n    room.description = notification.description;\n    room.large_room_optimization = notification.large_room_optimization;\n    room.max_size = notification.max_size;\n    room.name = notification.name;\n  }\n\n  private handleSessionInfo(notification: SessionInfo) {\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on session info - room not present');\n      return;\n    }\n    room.sessionId = notification.session_id;\n    if (room.peerCount !== notification.peer_count) {\n      room.peerCount = notification.peer_count;\n      this.listener?.onRoomUpdate(HMSRoomUpdate.ROOM_PEER_COUNT_UPDATED, room);\n    }\n  }\n\n  private handlePreviewRoomState(notification: PeriodicRoomState) {\n    const { room } = notification;\n    this.onRoomState(room);\n  }\n\n  private onRoomState(roomNotification: RoomState) {\n    const { recording, streaming, transcriptions, session_id, started_at, name } = roomNotification;\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on room state - room not present');\n      return;\n    }\n\n    room.name = name;\n\n    room.rtmp.running = this.isStreamingRunning(streaming?.rtmp?.state);\n    room.rtmp.startedAt = convertDateNumToDate(streaming?.rtmp?.started_at);\n    room.rtmp.state = streaming?.rtmp?.state;\n\n    room.recording.server = this.getPeerListSFURecording(recording);\n    room.recording.browser = this.getPeerListBrowserRecording(recording);\n    room.recording.hls = this.getPeerListHLSRecording(recording);\n\n    room.hls = this.convertHls(streaming?.hls);\n\n    room.transcriptions = this.addTranscriptionDetail(transcriptions);\n\n    room.sessionId = session_id;\n    room.startedAt = convertDateNumToDate(started_at);\n    this.listener?.onRoomUpdate(HMSRoomUpdate.RECORDING_STATE_UPDATED, room);\n  }\n\n  private addTranscriptionDetail(transcriptions?: TranscriptionNotification[]): HMSTranscriptionInfo[] {\n    if (!transcriptions) {\n      return [];\n    }\n    return transcriptions.map((transcription: TranscriptionNotification) => {\n      return {\n        state: transcription.state,\n        mode: transcription.mode,\n        initialised_at: convertDateNumToDate(transcription.initialised_at),\n        started_at: convertDateNumToDate(transcription.started_at),\n        stopped_at: convertDateNumToDate(transcription.stopped_at),\n        updated_at: convertDateNumToDate(transcription.updated_at),\n        error: this.toSdkError(transcription?.error),\n      };\n    });\n  }\n  private isRecordingRunning(state?: HMSRecordingState): boolean {\n    if (!state) {\n      return false;\n    }\n    return ![\n      HMSRecordingState.NONE,\n      HMSRecordingState.PAUSED,\n      HMSRecordingState.STOPPED,\n      HMSRecordingState.FAILED,\n    ].includes(state);\n  }\n\n  private isStreamingRunning(state?: HMSStreamingState): boolean {\n    if (!state) {\n      return false;\n    }\n    return ![HMSStreamingState.NONE, HMSStreamingState.STOPPED, HMSStreamingState.FAILED].includes(state);\n  }\n\n  private initHLS(notification?: HLSNotification): HMSHLS {\n    const room = this.store.getRoom();\n    const hls: HMSHLS = {\n      running: true,\n      variants: [],\n    };\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on hls - room not present');\n      return hls;\n    }\n    if (!notification?.variants) {\n      return hls;\n    }\n    notification.variants.forEach((variant: HLSVariant, index: number) => {\n      if (variant.state !== HMSStreamingState.INITIALISED) {\n        hls.variants.push({\n          meetingURL: variant?.meetingURL,\n          url: variant?.url,\n          metadata: variant?.metadata,\n          playlist_type: variant?.playlist_type,\n          startedAt: convertDateNumToDate(notification?.variants?.[index].started_at),\n          initialisedAt: convertDateNumToDate(notification?.variants?.[index].initialised_at),\n          state: variant.state,\n          stream_type: variant?.stream_type,\n        });\n      } else {\n        hls.variants.push({\n          initialisedAt: convertDateNumToDate(notification?.variants?.[index].initialised_at),\n          url: '',\n        });\n      }\n    });\n    return hls;\n  }\n  private updateHLSStatus(notification: HLSNotification) {\n    const room = this.store.getRoom();\n    const running =\n      notification.variants && notification.variants.length > 0\n        ? notification.variants.some(variant => this.isStreamingRunning(variant.state))\n        : false;\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on hls - room not present');\n      return;\n    }\n    notification.enabled = running;\n    room.hls = this.convertHls(notification);\n    this.listener?.onRoomUpdate(HMSRoomUpdate.HLS_STREAMING_STATE_UPDATED, room);\n  }\n\n  private handleTranscriptionStatus(notification: TranscriptionNotification[]) {\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on transcription - room not present');\n      return;\n    }\n    room.transcriptions = this.addTranscriptionDetail(notification) || [];\n    this.listener?.onRoomUpdate(HMSRoomUpdate.TRANSCRIPTION_STATE_UPDATED, room);\n  }\n  private convertHls(hlsNotification?: HLSNotification) {\n    // only checking for zeroth variant intialized\n    const isInitialised =\n      hlsNotification?.variants && hlsNotification.variants.length > 0\n        ? hlsNotification.variants.some(variant => variant.state === HMSStreamingState.INITIALISED)\n        : false;\n    // handling for initialized state\n    if (isInitialised) {\n      return this.initHLS(hlsNotification);\n    }\n    const hls: HMSHLS = {\n      running: !!hlsNotification?.enabled,\n      variants: [],\n      error: this.toSdkError(hlsNotification?.error),\n    };\n    hlsNotification?.variants?.forEach(variant => {\n      hls.variants.push({\n        meetingURL: variant?.meeting_url,\n        url: variant?.url,\n        metadata: variant?.metadata,\n        playlist_type: variant?.playlist_type,\n        startedAt: convertDateNumToDate(variant?.started_at),\n        initialisedAt: convertDateNumToDate(variant?.initialised_at),\n        state: variant.state,\n        stream_type: variant?.stream_type,\n      });\n    });\n    return hls;\n  }\n\n  private getHLSRecording(hlsNotification?: RecordingNotification): HMSHLSRecording {\n    let hlsRecording: HMSHLSRecording = { running: false };\n    const running = this.isRecordingRunning(hlsNotification?.state);\n    if (running || hlsNotification?.state === HMSRecordingState.PAUSED) {\n      hlsRecording = {\n        running,\n        singleFilePerLayer: !!hlsNotification?.hls_recording?.single_file_per_layer,\n        hlsVod: !!hlsNotification?.hls_recording?.hls_vod,\n        startedAt: convertDateNumToDate(hlsNotification?.started_at),\n        initialisedAt: convertDateNumToDate(hlsNotification?.initialised_at),\n        state: hlsNotification?.state,\n        error: this.toSdkError(hlsNotification?.error),\n      };\n    }\n    return hlsRecording;\n  }\n\n  private getPeerListHLSRecording(recording?: RoomState['recording']): HMSHLSRecording {\n    const hlsNotification = recording?.hls;\n    const running = this.isRecordingRunning(hlsNotification?.state);\n    return {\n      running,\n      startedAt: convertDateNumToDate(hlsNotification?.started_at),\n      initialisedAt: convertDateNumToDate(hlsNotification?.initialised_at),\n      state: hlsNotification?.state,\n      singleFilePerLayer: hlsNotification?.config?.single_file_per_layer,\n      hlsVod: hlsNotification?.config?.hls_vod,\n    };\n  }\n  private getPeerListBrowserRecording(recording?: RoomState['recording']): HMSBrowserRecording {\n    const browserNotification = recording?.browser;\n    const running = this.isRecordingRunning(browserNotification?.state);\n    return {\n      running,\n      startedAt: convertDateNumToDate(browserNotification?.started_at),\n      state: browserNotification?.state,\n    };\n  }\n  private getPeerListSFURecording(recording?: RoomState['recording']): HMSSFURecording {\n    const sfuNotification = recording?.sfu;\n    const running = this.isRecordingRunning(sfuNotification?.state);\n    return {\n      running,\n      startedAt: convertDateNumToDate(sfuNotification?.started_at),\n      state: sfuNotification?.state,\n    };\n  }\n\n  private updateRecordingStatus(notification: RecordingNotification) {\n    const room = this.store.getRoom();\n    const running = this.isRecordingRunning(notification.state);\n    if (!room) {\n      HMSLogger.w(this.TAG, `set recording status running=${running} - room not present`);\n      return;\n    }\n\n    let action: HMSRoomUpdate;\n    if (notification.type === RecordingNotificationType.SFU) {\n      room.recording.server = {\n        running,\n        startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n        error: this.toSdkError(notification.error),\n        state: notification.state,\n      };\n      action = HMSRoomUpdate.SERVER_RECORDING_STATE_UPDATED;\n    } else if (notification.type === RecordingNotificationType.HLS) {\n      room.recording.hls = this.getHLSRecording(notification);\n      action = HMSRoomUpdate.RECORDING_STATE_UPDATED;\n    } else {\n      room.recording.browser = {\n        running,\n        startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n        error: this.toSdkError(notification.error),\n        state: notification?.state,\n      };\n      action = HMSRoomUpdate.BROWSER_RECORDING_STATE_UPDATED;\n    }\n    this.listener?.onRoomUpdate(action, room);\n  }\n\n  private updateRTMPStatus(notification: RTMPNotification) {\n    const room = this.store.getRoom();\n    const running = this.isStreamingRunning(notification.state);\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on policy change - room not present');\n      return;\n    }\n    if (!running) {\n      room.rtmp = {\n        running,\n        state: notification.state,\n        error: this.toSdkError(notification.error),\n      };\n      this.listener?.onRoomUpdate(HMSRoomUpdate.RTMP_STREAMING_STATE_UPDATED, room);\n      return;\n    }\n    room.rtmp = {\n      running,\n      startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n      state: notification.state,\n      error: this.toSdkError(notification.error),\n    };\n    this.listener?.onRoomUpdate(HMSRoomUpdate.RTMP_STREAMING_STATE_UPDATED, room);\n  }\n\n  private toSdkError(error?: ServerError): HMSException | undefined {\n    if (!error?.code) {\n      return undefined;\n    }\n    const errMsg = error.message || 'error in streaming/recording';\n    const sdkError = new HMSException(error.code, 'ServerErrors', HMSAction.NONE, errMsg, errMsg);\n    HMSLogger.e(this.TAG, 'error in streaming/recording', sdkError);\n    return sdkError;\n  }\n}\n", "import { HMSUpdateListener, SessionStoreUpdate } from '../../interfaces';\nimport { Store } from '../../sdk/store';\nimport { convertDateNumToDate } from '../../utils/date';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { MetadataChangeNotification } from '../HMSNotifications';\n\nexport class SessionMetadataManager {\n  constructor(private store: Store, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    if (method !== HMSNotificationMethod.METADATA_CHANGE) {\n      return;\n    }\n    this.handleMetadataChange(notification);\n  }\n\n  private handleMetadataChange(notification: MetadataChangeNotification) {\n    const updates: SessionStoreUpdate[] = notification.values.map(update => ({\n      key: update.key,\n      value: update.data,\n      updatedAt: convertDateNumToDate(update.updated_at),\n      updatedBy: update.updated_by ? this.store.getPeerById(update.updated_by) : undefined,\n    }));\n    this.listener?.onSessionStoreUpdate(updates);\n  }\n}\n", "import { HMSUpdateListener, HMSWhiteboard } from '../../interfaces';\nimport { Store } from '../../sdk/store';\nimport HMSTransport from '../../transport';\nimport { constructWhiteboardURL } from '../../utils/whiteboard';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { WhiteboardInfo } from '../HMSNotifications';\n\nexport class WhiteboardManager {\n  constructor(private store: Store, private transport: HMSTransport, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.WHITEBOARD_UPDATE: {\n        this.handleWhiteboardUpdate(notification as WhiteboardInfo);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  private async handleWhiteboardUpdate(notification: WhiteboardInfo) {\n    const localPeer = this.store.getLocalPeer();\n    const prev = this.store.getWhiteboard(notification.id);\n    const isOwner = notification.owner === localPeer?.peerId || notification.owner === localPeer?.customerUserId;\n    const open = notification.state === 'open';\n    const whiteboard: HMSWhiteboard = {\n      id: notification.id,\n      title: notification.title,\n      attributes: notification.attributes,\n    };\n    whiteboard.open = isOwner ? prev?.open : open;\n    whiteboard.owner = whiteboard.open ? notification.owner : undefined;\n\n    if (whiteboard.open) {\n      if (isOwner) {\n        whiteboard.url = prev?.url;\n        whiteboard.token = prev?.token;\n        whiteboard.addr = prev?.addr;\n        whiteboard.permissions = prev?.permissions;\n      } else {\n        const response = await this.transport.signal.getWhiteboard({ id: notification.id });\n        whiteboard.url = constructWhiteboardURL(response.token, response.addr, this.store.getEnv());\n        whiteboard.token = response.token;\n        whiteboard.addr = response.addr;\n        whiteboard.permissions = response.permissions;\n        whiteboard.open = response.permissions.length > 0;\n      }\n    }\n\n    this.store.setWhiteboard(whiteboard);\n    this.listener?.onWhiteboardUpdate(whiteboard);\n  }\n}\n", "import { ActiveSpeakerManager } from './managers/ActiveSpeakerManager';\nimport { BroadcastManager } from './managers/BroadcastManager';\nimport { ConnectionQualityManager } from './managers/ConnectionQualityManager';\nimport { OnDemandTrackManager } from './managers/onDemandTrackManager';\nimport { PeerListManager } from './managers/PeerListManager';\nimport { PeerManager } from './managers/PeerManager';\nimport { PolicyChangeManager } from './managers/PolicyChangeManager';\nimport { PollsManager } from './managers/PollsManager';\nimport { RequestManager } from './managers/RequestManager';\nimport { RoomUpdateManager } from './managers/RoomUpdateManager';\nimport { SessionMetadataManager } from './managers/SessionMetadataManager';\nimport { TrackManager } from './managers/TrackManager';\nimport { WhiteboardManager } from './managers/WhiteboardManager';\nimport { HMSNotificationMethod } from './HMSNotificationMethod';\nimport {\n  ConnectionQualityList,\n  NodeInfo,\n  OnTrackLayerUpdateNotification,\n  PolicyParams,\n  SpeakerList,\n  TrackStateNotification,\n} from './HMSNotifications';\nimport { EventBus } from '../events/EventBus';\nimport { HMSAudioListener, HMSConnectionQualityListener, HMSUpdateListener } from '../interfaces';\nimport { HMSRemoteTrack } from '../media/tracks';\nimport { Store } from '../sdk/store';\nimport { InitFlags } from '../signal/init/models';\nimport HMSTransport from '../transport';\nimport HMSLogger from '../utils/logger';\n\nexport class NotificationManager {\n  private readonly TAG = '[HMSNotificationManager]';\n  private trackManager: TrackManager;\n  private peerManager: PeerManager;\n  private peerListManager: PeerListManager;\n  private activeSpeakerManager: ActiveSpeakerManager;\n  private connectionQualityManager: ConnectionQualityManager;\n  private broadcastManager: BroadcastManager;\n  private policyChangeManager: PolicyChangeManager;\n  private requestManager: RequestManager;\n  private roomUpdateManager: RoomUpdateManager;\n  private sessionMetadataManager: SessionMetadataManager;\n  private pollsManager: PollsManager;\n  private whiteboardManager: WhiteboardManager;\n  /**\n   * room state can be sent before join in preview stage as well but that is outdated, based on\n   * eventual consistency and doesn't have all data. If we get at least one consistent room update\n   * from that point onwards we can rely on live server updates and ignore periodic room state messages\n   */\n  private hasConsistentRoomStateArrived = false;\n\n  constructor(\n    private store: Store,\n    eventBus: EventBus,\n    private transport: HMSTransport,\n    private listener?: HMSUpdateListener,\n    private audioListener?: HMSAudioListener,\n    private connectionQualityListener?: HMSConnectionQualityListener,\n  ) {\n    const isOnDemandTracksEnabled = this.transport.isFlagEnabled(InitFlags.FLAG_ON_DEMAND_TRACKS);\n    this.trackManager = isOnDemandTracksEnabled\n      ? new OnDemandTrackManager(this.store, eventBus, this.transport, this.listener)\n      : new TrackManager(this.store, eventBus, this.listener);\n\n    this.peerManager = new PeerManager(this.store, this.trackManager, this.listener);\n    this.peerListManager = new PeerListManager(this.store, this.peerManager, this.trackManager, this.listener);\n    this.broadcastManager = new BroadcastManager(this.listener);\n    this.policyChangeManager = new PolicyChangeManager(this.store, eventBus);\n    this.requestManager = new RequestManager(this.store, this.listener);\n    this.activeSpeakerManager = new ActiveSpeakerManager(this.store, this.listener, this.audioListener);\n    this.connectionQualityManager = new ConnectionQualityManager(this.store, this.connectionQualityListener);\n    this.roomUpdateManager = new RoomUpdateManager(this.store, this.listener);\n    this.sessionMetadataManager = new SessionMetadataManager(this.store, this.listener);\n    this.pollsManager = new PollsManager(this.store, this.transport, this.listener);\n    this.whiteboardManager = new WhiteboardManager(this.store, this.transport, this.listener);\n  }\n\n  setListener(listener?: HMSUpdateListener) {\n    this.listener = listener;\n    this.trackManager.listener = listener;\n    this.peerManager.listener = listener;\n    this.peerListManager.listener = listener;\n    this.broadcastManager.listener = listener;\n    this.requestManager.listener = listener;\n    this.activeSpeakerManager.listener = listener;\n    this.roomUpdateManager.listener = listener;\n    this.sessionMetadataManager.listener = listener;\n    this.pollsManager.listener = listener;\n    this.whiteboardManager.listener = listener;\n  }\n\n  setAudioListener(audioListener?: HMSAudioListener) {\n    this.audioListener = audioListener;\n    this.activeSpeakerManager.audioListener = audioListener;\n  }\n\n  setConnectionQualityListener(qualityListener?: HMSConnectionQualityListener) {\n    this.connectionQualityListener = qualityListener;\n    this.connectionQualityManager.listener = qualityListener;\n  }\n\n  handleNotification(message: { method: string; params: any }, isReconnecting = false) {\n    const method = message.method as HMSNotificationMethod;\n    const notification = message.params;\n\n    if (\n      ![\n        HMSNotificationMethod.ACTIVE_SPEAKERS,\n        HMSNotificationMethod.SFU_STATS,\n        HMSNotificationMethod.CONNECTION_QUALITY,\n        undefined, // this is is to ignore notifications without any method\n      ].includes(method)\n    ) {\n      HMSLogger.d(this.TAG, `Received notification - ${method}`, { notification });\n    }\n    if (method === HMSNotificationMethod.SFU_STATS) {\n      if (window.HMS?.ON_SFU_STATS && typeof window.HMS?.ON_SFU_STATS === 'function') {\n        window.HMS.ON_SFU_STATS(message.params);\n      }\n    }\n\n    if (this.ignoreNotification(method)) {\n      return;\n    }\n\n    this.roomUpdateManager.handleNotification(method, notification);\n    this.peerManager.handleNotification(method, notification);\n    this.requestManager.handleNotification(method, notification);\n    this.peerListManager.handleNotification(method, notification, isReconnecting);\n    this.broadcastManager.handleNotification(method, notification);\n    this.sessionMetadataManager.handleNotification(method, notification);\n    this.pollsManager.handleNotification(method, notification);\n    this.whiteboardManager.handleNotification(method, notification);\n    this.handleIsolatedMethods(method, notification);\n  }\n\n  // eslint-disable-next-line complexity\n  handleIsolatedMethods(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.TRACK_METADATA_ADD: {\n        this.trackManager.handleTrackMetadataAdd(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.TRACK_UPDATE: {\n        this.trackManager.handleTrackUpdate(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.TRACK_REMOVE: {\n        if (!notification.peer) {\n          HMSLogger.d(this.TAG, `Ignoring sfu notification - ${method}`, { notification });\n          return;\n        }\n        this.trackManager.handleTrackRemovedPermanently(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ON_SFU_TRACK_LAYER_UPDATE: {\n        this.trackManager.handleTrackLayerUpdate(notification as OnTrackLayerUpdateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ACTIVE_SPEAKERS:\n        this.activeSpeakerManager.handleActiveSpeakers(notification as SpeakerList);\n        break;\n\n      case HMSNotificationMethod.CONNECTION_QUALITY:\n        this.connectionQualityManager.handleQualityUpdate(notification as ConnectionQualityList);\n        break;\n\n      case HMSNotificationMethod.POLICY_CHANGE:\n        this.policyChangeManager.handlePolicyChange(notification as PolicyParams);\n        break;\n\n      case HMSNotificationMethod.NODE_INFO:\n        this.transport.setSFUNodeId((notification as NodeInfo).sfu_node_id);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  ignoreNotification = (method: string): boolean => {\n    if (method === HMSNotificationMethod.PEER_LIST) {\n      this.hasConsistentRoomStateArrived = true;\n    } else if (method === HMSNotificationMethod.ROOM_STATE) {\n      // ignore periodic inconsistent room state if consistent one has arrived at least once\n      return this.hasConsistentRoomStateArrived;\n    }\n    return false;\n  };\n\n  handleTrackAdd = (track: HMSRemoteTrack) => {\n    this.trackManager.handleTrackAdd(track);\n  };\n\n  handleTrackRemove = (track: HMSRemoteTrack) => {\n    this.trackManager.handleTrackRemove(track);\n  };\n\n  updateLocalPeer = ({ name, metadata }: { name?: string; metadata?: string }) => {\n    const peer = this.store.getLocalPeer();\n    this.peerManager.handlePeerInfoUpdate({ peer, name, data: metadata });\n  };\n}\n", "import { HMSSessionStore } from '../interfaces';\nimport HMSTransport from '../transport';\nimport { convertDateNumToDate } from '../utils/date';\n\nexport class SessionStore implements HMSSessionStore {\n  private observedKeys: Set<string> = new Set();\n\n  constructor(private transport: HMSTransport) {}\n\n  async get(key: string) {\n    const { data, updated_at } = await this.transport.signal.getSessionMetadata(key);\n\n    return { value: data, updatedAt: convertDateNumToDate(updated_at) };\n  }\n\n  async set(key: string, data: any) {\n    const { data: value, updated_at } = await this.transport.signal.setSessionMetadata({ key, data });\n    const updatedAt = convertDateNumToDate(updated_at);\n    return { value, updatedAt };\n  }\n\n  async observe(keys: string[]) {\n    const prevObservedKeys = new Set(this.observedKeys);\n    keys.forEach(key => this.observedKeys.add(key));\n\n    if (this.observedKeys.size !== prevObservedKeys.size) {\n      try {\n        await this.transport.signal.listenMetadataChange(Array.from(this.observedKeys));\n      } catch (e) {\n        this.observedKeys = prevObservedKeys;\n        throw e;\n      }\n    }\n  }\n\n  async unobserve(keys: string[]) {\n    const prevObservedKeys = new Set(this.observedKeys);\n    this.observedKeys = new Set([...this.observedKeys].filter(key => !keys.includes(key)));\n\n    if (this.observedKeys.size !== prevObservedKeys.size) {\n      try {\n        await this.transport.signal.listenMetadataChange(Array.from(this.observedKeys));\n      } catch (e) {\n        this.observedKeys = prevObservedKeys;\n        throw e;\n      }\n    }\n  }\n}\n", "import { HMSICEServer } from '../../interfaces';\n\nexport class JoinParameters {\n  constructor(\n    public authToken: string,\n    public peerId: string,\n    public peerName: string = '',\n    public data: string = '',\n    public endpoint: string = 'https://prod-init.100ms.live/init',\n    public autoSubscribeVideo: boolean = false,\n    public iceServers?: HMSICEServer[],\n  ) {}\n}\n", "export enum TransportFailureCategory {\n  ConnectFailed,\n  SignalDisconnect,\n  JoinWSMessageFailed,\n  PublishIceConnectionFailed,\n  SubscribeIceConnectionFailed,\n}\n\nexport const Dependencies = {\n  [TransportFailureCategory.ConnectFailed]: [],\n  [TransportFailureCategory.SignalDisconnect]: [],\n  [TransportFailureCategory.JoinWSMessageFailed]: [TransportFailureCategory.SignalDisconnect],\n  [TransportFailureCategory.PublishIceConnectionFailed]: [TransportFailureCategory.SignalDisconnect],\n  [TransportFailureCategory.SubscribeIceConnectionFailed]: [TransportFailureCategory.SignalDisconnect],\n};\n", "export enum TransportState {\n  Disconnected = 'Disconnected',\n  Connecting = 'Connecting',\n  Joined = 'Joined',\n  Preview = 'Preview',\n  Failed = 'Failed',\n  Reconnecting = 'Reconnecting',\n  Leaving = 'Leaving',\n}\n", "export interface PromiseCallbacks<T, K = void> {\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n  metadata?: K;\n}\n\nexport class PromiseWithCallbacks<T> {\n  promise: Promise<T>;\n  resolve!: (value: T) => void;\n  reject!: (reason?: any) => void;\n\n  constructor(cb: (resolve: (value: T) => void, reject: (reason?: any) => void) => any) {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n      cb(resolve, reject);\n    });\n  }\n}\n", "import { Dependencies as TFCDependencies, TransportFailureCategory as TFC } from './models/TransportFailureCategory';\nimport { TransportState } from './models/TransportState';\nimport { HMSException } from '../error/HMSException';\nimport { MAX_TRANSPORT_RETRY_TIME } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { PromiseWithCallbacks } from '../utils/promise';\n\n/**\n * Task which is executed by [RetryScheduler.schedule] until max retry count\n * is reached.\n *\n * Any exception raised while executing the task assumes that task is failed.\n * Failed tasks are retried if max retry count is not reached.\n *\n * @returns True if the task if successful, otherwise False\n *\n *\n */\ntype RetryTask = () => Promise<boolean>;\n\ninterface ScheduleTaskParams {\n  category: TFC;\n  error: HMSException;\n  task: RetryTask;\n  originalState: TransportState;\n  maxRetryTime?: number;\n  changeState?: boolean;\n}\n\nexport class RetryScheduler {\n  private readonly TAG = '[RetryScheduler]';\n  private inProgress = new Map<TFC, PromiseWithCallbacks<number>>();\n  private retryTaskIds: number[] = [];\n\n  constructor(\n    private onStateChange: (state: TransportState, error?: HMSException) => Promise<void>,\n    private sendEvent: (error: HMSException, category: TFC) => void,\n  ) {}\n\n  async schedule({\n    category,\n    error,\n    task,\n    originalState,\n    maxRetryTime = MAX_TRANSPORT_RETRY_TIME,\n    changeState = true,\n  }: ScheduleTaskParams) {\n    await this.scheduleTask({ category, error, changeState, task, originalState, maxRetryTime, failedAt: Date.now() });\n  }\n\n  reset() {\n    this.retryTaskIds.forEach(future => clearTimeout(future));\n    this.retryTaskIds = [];\n    this.inProgress.clear();\n  }\n\n  isTaskInProgress(category: TFC) {\n    return !!this.inProgress.get(category);\n  }\n\n  // eslint-disable-next-line complexity\n  private async scheduleTask({\n    category,\n    error,\n    changeState,\n    task,\n    originalState,\n    failedAt,\n    maxRetryTime = MAX_TRANSPORT_RETRY_TIME,\n    failedRetryCount = 0,\n  }: ScheduleTaskParams & { failedAt: number; failedRetryCount?: number }): Promise<void> {\n    HMSLogger.d(this.TAG, 'schedule: ', { category: TFC[category], error });\n\n    // First schedule call\n    if (failedRetryCount === 0) {\n      const inProgressTask = this.inProgress.get(category);\n      if (inProgressTask) {\n        HMSLogger.d(this.TAG, `schedule: Already a task for ${TFC[category]} scheduled, waiting for its completion`);\n        await inProgressTask.promise;\n        return;\n      }\n\n      const taskPromise = new PromiseWithCallbacks<number>((_, __) => {});\n      this.inProgress.set(category, taskPromise);\n\n      this.sendEvent(error, category);\n    }\n\n    let hasFailedDependency = false;\n    const dependencies = TFCDependencies[category];\n\n    for (const dependencyIndexString in dependencies) {\n      const dependency = dependencies[parseInt(dependencyIndexString)];\n      try {\n        const dependencyTask = this.inProgress.get(dependency);\n        if (dependencyTask) {\n          HMSLogger.d(\n            this.TAG,\n            `schedule: Suspending retry task of ${TFC[category]}, waiting for ${TFC[dependency]} to recover`,\n          );\n          await dependencyTask.promise;\n          HMSLogger.d(\n            this.TAG,\n            `schedule: Resuming retry task ${TFC[category]} as it's dependency ${TFC[dependency]} is recovered`,\n          );\n        }\n      } catch (ex) {\n        HMSLogger.d(\n          this.TAG,\n          `schedule: Stopping retry task of ${TFC[category]} as it's dependency ${TFC[dependency]} failed to recover`,\n        );\n        hasFailedDependency = true;\n        break;\n      }\n    }\n\n    const handleTerminalError = (error: HMSException) => {\n      // @NOTE: Don't reject to throw error for dependencies, use onStateChange\n      // const taskPromise = this.inProgress.get(category);\n      this.inProgress.delete(category);\n      // taskPromise?.reject(error);\n      this.sendEvent(error, category);\n\n      this.reset();\n\n      if (changeState) {\n        this.onStateChange(TransportState.Failed, error);\n      } else {\n        throw error;\n      }\n\n      return;\n    };\n\n    const timeElapsedSinceError = Date.now() - failedAt;\n    if (timeElapsedSinceError >= maxRetryTime || hasFailedDependency) {\n      error.description += `. [${TFC[category]}] Could not recover after ${timeElapsedSinceError} milliseconds`;\n\n      if (hasFailedDependency) {\n        error.description += ` Could not recover all of it's required dependencies - [${(dependencies as Array<TFC>)\n          .map(dep => TFC[dep])\n          .toString()}]`;\n      }\n      error.isTerminal = true;\n      return handleTerminalError(error);\n    }\n\n    if (changeState) {\n      this.onStateChange(TransportState.Reconnecting, error);\n    }\n\n    const delay = this.getDelayForRetryCount(category);\n\n    HMSLogger.d(\n      this.TAG,\n      `schedule: [${TFC[category]}] [failedRetryCount=${failedRetryCount}] Scheduling retry task in ${delay}ms`,\n    );\n\n    let taskSucceeded: boolean;\n    try {\n      taskSucceeded = await this.setTimeoutPromise(task, delay);\n    } catch (ex) {\n      taskSucceeded = false;\n      const error = ex as HMSException;\n\n      if (error.isTerminal) {\n        HMSLogger.e(this.TAG, `[${TFC[category]}] Un-caught terminal exception ${error.name} in retry-task`, ex);\n        return handleTerminalError(error);\n      } else {\n        HMSLogger.w(\n          this.TAG,\n          `[${TFC[category]}] Un-caught exception ${error.name} in retry-task, initiating retry`,\n          ex,\n        );\n      }\n    }\n\n    if (taskSucceeded) {\n      const taskPromise = this.inProgress.get(category);\n      this.inProgress.delete(category);\n      taskPromise?.resolve(failedRetryCount);\n\n      if (changeState && this.inProgress.size === 0) {\n        this.onStateChange(originalState);\n      }\n      HMSLogger.d(\n        this.TAG,\n        `schedule: [${TFC[category]}] [failedRetryCount=${failedRetryCount}] Recovered \u267B\uFE0F after ${timeElapsedSinceError}ms`,\n      );\n    } else {\n      await this.scheduleTask({\n        category,\n        error,\n        changeState,\n        task,\n        originalState,\n        maxRetryTime,\n        failedAt,\n        failedRetryCount: failedRetryCount + 1,\n      });\n    }\n  }\n\n  private getDelayForRetryCount(category: TFC) {\n    const jitter = category === TFC.JoinWSMessageFailed ? Math.random() * 2 : Math.random();\n    let delaySeconds = 0;\n    if (category === TFC.JoinWSMessageFailed) {\n      // linear backoff(2 + jitter for every retry)\n      delaySeconds = 2 + jitter;\n    } else if (category === TFC.SignalDisconnect) {\n      delaySeconds = 1;\n    }\n    return delaySeconds * 1000;\n  }\n\n  private async setTimeoutPromise<T>(task: () => Promise<T>, delay: number): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = window.setTimeout(async () => {\n        try {\n          const value: T = await task();\n          value && this.retryTaskIds.splice(this.retryTaskIds.indexOf(timeoutId), 1);\n          resolve(value);\n        } catch (error) {\n          reject(error);\n        }\n      }, delay);\n\n      this.retryTaskIds.push(timeoutId);\n    });\n  }\n}\n", "import { ANALYTICS_BUFFER_SIZE } from '../../utils/constants';\nimport { LocalStorage } from '../../utils/local-storage';\nimport { Queue } from '../../utils/queue';\nimport AnalyticsEvent from '../AnalyticsEvent';\n\nexport class LocalStorageEvents extends Queue<AnalyticsEvent> {\n  private localStorage = new LocalStorage<AnalyticsEvent[]>('hms-analytics');\n\n  constructor() {\n    super(ANALYTICS_BUFFER_SIZE);\n    // @TODO: Currently we don't send failed events of old sessions. So reset localstorage for every session.\n    // Once support for failed events from old sessions is added, remove clear and init queue from localstorage.\n    this.localStorage.clear();\n    this.initLocalStorageQueue();\n  }\n\n  enqueue(event: AnalyticsEvent) {\n    super.enqueue(event);\n    this.localStorage.set(this.storage);\n  }\n\n  dequeue() {\n    const removedEvent = super.dequeue();\n    this.localStorage.set(this.storage);\n    return removedEvent;\n  }\n\n  private initLocalStorageQueue() {\n    this.localStorage.get()?.forEach(event => {\n      const eventInstance = new AnalyticsEvent(event);\n      super.enqueue(eventInstance);\n    });\n  }\n}\n", "import AnalyticsEvent from './AnalyticsEvent';\nimport { HTTPAnalyticsTransport } from './HTTPAnalyticsTransport';\nimport { IAnalyticsTransportProvider } from './IAnalyticsTransportProvider';\nimport HMSLogger from '../utils/logger';\nimport { Queue } from '../utils/queue';\n\nexport abstract class AnalyticsTransport {\n  abstract transportProvider: IAnalyticsTransportProvider;\n  abstract failedEvents: Queue<AnalyticsEvent>;\n  private readonly TAG = '[AnalyticsTransport]';\n\n  private eventCount = 0;\n  private lastResetTime: number = Date.now();\n  private readonly MAX_EVENTS_PER_MINUTE: number = 200;\n  private readonly RESET_INTERVAL_MS: number = 60000;\n\n  private checkRateLimit() {\n    const now = Date.now();\n    if (now - this.lastResetTime >= this.RESET_INTERVAL_MS) {\n      this.eventCount = 0;\n      this.lastResetTime = now;\n    }\n    if (this.eventCount >= this.MAX_EVENTS_PER_MINUTE) {\n      throw new Error('Too many events being sent, please check the implementation.');\n    }\n    this.eventCount++;\n  }\n\n  sendEvent(event: AnalyticsEvent) {\n    try {\n      this.checkRateLimit();\n    } catch (e) {\n      HMSLogger.w(this.TAG, 'Rate limit exceeded', e);\n      throw e;\n    }\n    try {\n      this.sendSingleEvent(event);\n      this.flushFailedEvents();\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'sendEvent failed', error);\n    }\n  }\n\n  flushFailedEvents(currentPeerId?: string) {\n    try {\n      HMSLogger.d(this.TAG, 'Flushing failed events', this.failedEvents);\n      while (this.failedEvents.size() > 0) {\n        const event = this.failedEvents.dequeue();\n        if (event) {\n          const isEventFromCurrentPeer = event.metadata?.peer.peer_id === currentPeerId;\n          if (isEventFromCurrentPeer || !event.metadata.peer.peer_id) {\n            this.sendSingleEvent(event);\n          } else {\n            HTTPAnalyticsTransport.sendEvent(event);\n          }\n        }\n      }\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'flushFailedEvents failed', error);\n    }\n  }\n\n  private sendSingleEvent(event: AnalyticsEvent) {\n    try {\n      this.transportProvider.sendEvent(event);\n      HMSLogger.d(this.TAG, 'Sent event', event.name, event);\n    } catch (error) {\n      HMSLogger.w(this.TAG, `${this.transportProvider.TAG}.sendEvent failed, adding to local storage events`, {\n        event,\n        error,\n      });\n      this.failedEvents.enqueue(event);\n      throw error;\n    }\n  }\n}\n", "import { LocalStorageEvents } from './LocalStoageEvents';\nimport JsonRpcSignal from '../../signal/jsonrpc';\nimport { AnalyticsTransport } from '../AnalyticsTransport';\n\nexport class SignalAnalyticsTransport extends AnalyticsTransport {\n  failedEvents = new LocalStorageEvents();\n\n  constructor(public transportProvider: JsonRpcSignal) {\n    super();\n  }\n}\n", "import {\n  LocalAudioTrackAnalytics,\n  LocalBaseSample,\n  LocalVideoSample,\n  LocalVideoTrackAnalytics,\n  PublishAnalyticPayload,\n  RemoteAudioSample,\n  RemoteAudioTrackAnalytics,\n  RemoteVideoSample,\n  RemoteVideoTrackAnalytics,\n  SubscribeAnalyticPayload,\n} from './interfaces';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSTrackStats } from '../../interfaces';\nimport { HMSTrack } from '../../internal';\nimport { HMSWebrtcStats } from '../../rtc-stats';\nimport { Store } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { sleep } from '../../utils/timer-utils';\n\nexport abstract class BaseStatsAnalytics {\n  private shouldSendEvent = false;\n  protected sequenceNum = 1;\n  protected abstract trackAnalytics: Map<string, RunningTrackAnalytics>;\n\n  constructor(\n    protected store: Store,\n    protected eventBus: EventBus,\n    protected readonly sampleWindowSize: number,\n    protected readonly pushInterval: number,\n  ) {\n    this.start();\n  }\n\n  start() {\n    if (this.shouldSendEvent) {\n      return;\n    }\n    this.stop();\n    this.shouldSendEvent = true;\n    this.eventBus.statsUpdate.subscribe(this.handleStatsUpdate.bind(this));\n    this.startLoop().catch(e => HMSLogger.e('[StatsAnalytics]', e.message));\n  }\n\n  stop = () => {\n    if (this.shouldSendEvent) {\n      this.sendEvent();\n    }\n    this.eventBus.statsUpdate.unsubscribe(this.handleStatsUpdate.bind(this));\n    this.shouldSendEvent = false;\n  };\n\n  private async startLoop() {\n    while (this.shouldSendEvent) {\n      await sleep(this.pushInterval * 1000);\n      this.sendEvent();\n    }\n  }\n\n  protected sendEvent(): void {\n    this.trackAnalytics.forEach(trackAnalytic => {\n      trackAnalytic.clearSamples();\n    });\n  }\n\n  protected cleanTrackAnalyticsAndCreateSample(shouldCreateSample: boolean) {\n    // delete track analytics if track is not present in store and no samples are present\n    this.trackAnalytics.forEach(trackAnalytic => {\n      if (!this.store.hasTrack(trackAnalytic.track) && !(trackAnalytic.samples.length > 0)) {\n        this.trackAnalytics.delete(trackAnalytic.track_id);\n      }\n    });\n\n    if (shouldCreateSample) {\n      this.trackAnalytics.forEach(trackAnalytic => {\n        trackAnalytic.createSample();\n      });\n    }\n  }\n\n  protected abstract toAnalytics(): PublishAnalyticPayload | SubscribeAnalyticPayload;\n\n  protected abstract handleStatsUpdate(hmsStats: HMSWebrtcStats): void;\n}\n\nexport type TempStats = HMSTrackStats & {\n  availableOutgoingBitrate?: number;\n  calculatedJitterBufferDelay?: number;\n  avSync?: number;\n  expectedFrameHeight?: number;\n  expectedFrameWidth?: number;\n};\n\nexport abstract class RunningTrackAnalytics {\n  readonly sampleWindowSize: number;\n  track: HMSTrack;\n  track_id: string;\n  source: string;\n  ssrc: string;\n  kind: string;\n  rid?: string;\n\n  samples: (LocalBaseSample | LocalVideoSample | RemoteAudioSample | RemoteVideoSample)[] = [];\n  protected tempStats: TempStats[] = [];\n  protected prevLatestStat?: TempStats;\n\n  constructor({\n    track,\n    ssrc,\n    rid,\n    kind,\n    sampleWindowSize,\n  }: {\n    track: HMSTrack;\n    ssrc: string;\n    kind: string;\n    rid?: string;\n    sampleWindowSize: number;\n  }) {\n    this.track = track;\n    this.ssrc = ssrc;\n    this.rid = rid;\n    this.kind = kind;\n    this.track_id = this.track.trackId;\n    this.source = this.track.source!;\n    this.sampleWindowSize = sampleWindowSize;\n  }\n\n  pushTempStat(stat: TempStats) {\n    this.tempStats.push(stat);\n  }\n\n  createSample() {\n    if (this.tempStats.length === 0) {\n      return;\n    }\n\n    this.samples.push(this.collateSample());\n    this.prevLatestStat = this.getLatestStat();\n    this.tempStats.length = 0;\n  }\n\n  clearSamples() {\n    this.samples.length = 0;\n  }\n\n  abstract shouldCreateSample: () => boolean;\n\n  protected abstract collateSample: () => LocalBaseSample | LocalVideoSample | RemoteAudioSample | RemoteVideoSample;\n\n  protected abstract toAnalytics: () =>\n    | LocalAudioTrackAnalytics\n    | LocalVideoTrackAnalytics\n    | RemoteAudioTrackAnalytics\n    | RemoteVideoTrackAnalytics;\n\n  getLatestStat() {\n    return this.tempStats[this.tempStats.length - 1];\n  }\n\n  protected getFirstStat() {\n    return this.tempStats[0];\n  }\n\n  protected calculateSum(key: keyof TempStats) {\n    const checkStat = this.getLatestStat()[key];\n    if (typeof checkStat !== 'number') {\n      return;\n    }\n    return this.tempStats.reduce((partialSum, stat) => {\n      return partialSum + ((stat[key] || 0) as number);\n    }, 0);\n  }\n\n  protected calculateAverage(key: keyof TempStats, round = true) {\n    const sum = this.calculateSum(key);\n    const avg = sum !== undefined ? sum / this.tempStats.length : undefined;\n    return avg ? (round ? Math.round(avg) : avg) : undefined;\n  }\n\n  protected calculateDifferenceForSample(key: keyof TempStats) {\n    const firstValue = Number(this.prevLatestStat?.[key]) || 0;\n    const latestValue = Number(this.getLatestStat()[key]) || 0;\n\n    return latestValue - firstValue;\n  }\n\n  protected calculateDifferenceAverage(key: keyof TempStats, round = true) {\n    const avg = this.calculateDifferenceForSample(key) / this.tempStats.length;\n    return round ? Math.round(avg) : avg;\n  }\n\n  protected calculateInstancesOfHigh(key: keyof TempStats, threshold: number) {\n    const checkStat = this.getLatestStat()[key];\n    if (typeof checkStat !== 'number') {\n      return;\n    }\n\n    return this.tempStats.reduce((partialSum, stat) => {\n      return partialSum + (((stat[key] || 0) as number) > threshold ? 1 : 0);\n    }, 0);\n  }\n}\n\nexport const hasResolutionChanged = (newStat: TempStats, prevStat: TempStats) =>\n  newStat && prevStat && (newStat.frameWidth !== prevStat.frameWidth || newStat.frameHeight !== prevStat.frameHeight);\n\nexport const hasEnabledStateChanged = (newStat: TempStats, prevStat: TempStats) =>\n  newStat && prevStat && newStat.enabled !== prevStat.enabled;\n\nexport const removeUndefinedFromObject = <T extends Record<string, any>>(data: T) => {\n  return Object.entries(data)\n    .filter(([, value]) => value !== undefined)\n    .reduce((obj, [key, value]) => {\n      obj[key as keyof T] = value;\n      return obj;\n    }, {} as T);\n};\n", "import {\n  BaseStatsAnalytics,\n  hasEnabledStateChanged,\n  hasResolutionChanged,\n  removeUndefinedFromObject,\n  RunningTrackAnalytics,\n} from './BaseStatsAnalytics';\nimport {\n  LocalAudioTrackAnalytics,\n  LocalBaseSample,\n  LocalVideoSample,\n  LocalVideoTrackAnalytics,\n  PublishAnalyticPayload,\n} from './interfaces';\nimport { HMSTrackStats } from '../../interfaces';\nimport { HMSWebrtcStats } from '../../rtc-stats';\nimport { PUBLISH_STATS_SAMPLE_WINDOW } from '../../utils/constants';\nimport AnalyticsEventFactory from '../AnalyticsEventFactory';\n\nexport class PublishStatsAnalytics extends BaseStatsAnalytics {\n  protected trackAnalytics: Map<string, RunningLocalTrackAnalytics> = new Map();\n\n  protected toAnalytics(): PublishAnalyticPayload {\n    const audio: LocalAudioTrackAnalytics[] = [];\n    const video: LocalVideoTrackAnalytics[] = [];\n    this.trackAnalytics.forEach(trackAnalytic => {\n      if (trackAnalytic.track.type === 'audio') {\n        audio.push(trackAnalytic.toAnalytics());\n      } else if (trackAnalytic.track.type === 'video') {\n        video.push(trackAnalytic.toAnalytics());\n      }\n    });\n    return {\n      audio,\n      video,\n      joined_at: this.store.getRoom()?.joinedAt?.getTime()!,\n      sequence_num: this.sequenceNum++,\n      max_window_sec: PUBLISH_STATS_SAMPLE_WINDOW,\n    };\n  }\n\n  protected sendEvent() {\n    this.eventBus.analytics.publish(AnalyticsEventFactory.publishStats(this.toAnalytics()));\n    super.sendEvent();\n  }\n\n  protected handleStatsUpdate(hmsStats: HMSWebrtcStats) {\n    let shouldCreateSample = false;\n\n    const localTracksStats = hmsStats.getLocalTrackStats();\n    Object.keys(localTracksStats).forEach(trackIDBeingSent => {\n      const trackStats = localTracksStats[trackIDBeingSent];\n      const track = this.store.getLocalPeerTracks().find(track => track.getTrackIDBeingSent() === trackIDBeingSent);\n      Object.keys(trackStats).forEach(statId => {\n        const layerStats = trackStats[statId];\n        if (!track) {\n          return;\n        }\n        const identifier = this.getTrackIdentifier(track.trackId, layerStats);\n        const newTempStats = {\n          ...layerStats,\n          availableOutgoingBitrate: hmsStats.getLocalPeerStats()?.publish?.availableOutgoingBitrate,\n        };\n        if (identifier && this.trackAnalytics.has(identifier)) {\n          this.trackAnalytics.get(identifier)?.pushTempStat(newTempStats);\n        } else {\n          if (track) {\n            const trackAnalytics = new RunningLocalTrackAnalytics({\n              track,\n              sampleWindowSize: this.sampleWindowSize,\n              rid: layerStats.rid,\n              ssrc: layerStats.ssrc.toString(),\n              kind: layerStats.kind,\n            });\n            trackAnalytics.pushTempStat(newTempStats);\n            this.trackAnalytics.set(this.getTrackIdentifier(track.trackId, layerStats), trackAnalytics);\n          }\n        }\n\n        const trackAnalytics = this.trackAnalytics.get(identifier);\n        if (trackAnalytics?.shouldCreateSample()) {\n          shouldCreateSample = true;\n        }\n      });\n    });\n\n    this.cleanTrackAnalyticsAndCreateSample(shouldCreateSample);\n  }\n\n  private getTrackIdentifier(trackId: string, stats: HMSTrackStats) {\n    return stats.rid ? `${trackId}:${stats.rid}` : trackId;\n  }\n}\n\nclass RunningLocalTrackAnalytics extends RunningTrackAnalytics {\n  samples: (LocalBaseSample | LocalVideoSample)[] = [];\n\n  protected collateSample = (): LocalBaseSample | LocalVideoSample => {\n    const latestStat = this.getLatestStat();\n\n    const qualityLimitationDurations = latestStat.qualityLimitationDurations;\n    const total_quality_limitation = qualityLimitationDurations && {\n      bandwidth_sec: qualityLimitationDurations.bandwidth,\n      cpu_sec: qualityLimitationDurations.cpu,\n      other_sec: qualityLimitationDurations.other,\n    };\n\n    const resolution = latestStat.frameHeight\n      ? {\n          height_px: this.getLatestStat().frameHeight,\n          width_px: this.getLatestStat().frameWidth,\n        }\n      : undefined;\n    const avg_jitter = this.calculateAverage('jitter', false);\n    const avg_jitter_ms = avg_jitter ? Math.round(avg_jitter * 1000) : undefined;\n\n    const avg_round_trip_time = this.calculateAverage('roundTripTime', false);\n    const avg_round_trip_time_ms = avg_round_trip_time ? Math.round(avg_round_trip_time * 1000) : undefined;\n\n    return removeUndefinedFromObject({\n      timestamp: Date.now(),\n      avg_available_outgoing_bitrate_bps: this.calculateAverage('availableOutgoingBitrate'),\n      avg_bitrate_bps: this.calculateAverage('bitrate'),\n      avg_fps: this.calculateAverage('framesPerSecond'),\n      total_packets_lost: this.getLatestStat().packetsLost,\n      total_packets_sent: this.getLatestStat().packetsSent,\n      total_packet_sent_delay_sec: parseFloat(this.calculateDifferenceForSample('totalPacketSendDelay').toFixed(4)),\n      total_fir_count: this.calculateDifferenceForSample('firCount'),\n      total_pli_count: this.calculateDifferenceForSample('pliCount'),\n      total_nack_count: this.calculateDifferenceForSample('nackCount'),\n      avg_jitter_ms,\n      avg_round_trip_time_ms,\n      total_quality_limitation,\n      resolution,\n    });\n  };\n\n  shouldCreateSample = () => {\n    const length = this.tempStats.length;\n    const newStat = this.tempStats[length - 1];\n    const prevStat = this.tempStats[length - 2];\n\n    return (\n      length === PUBLISH_STATS_SAMPLE_WINDOW ||\n      hasEnabledStateChanged(newStat, prevStat) ||\n      (newStat.kind === 'video' && hasResolutionChanged(newStat, prevStat))\n    );\n  };\n\n  toAnalytics = (): LocalAudioTrackAnalytics | LocalVideoTrackAnalytics => {\n    return {\n      track_id: this.track_id,\n      ssrc: this.ssrc,\n      source: this.source,\n      rid: this.rid,\n      samples: this.samples,\n    };\n  };\n}\n", "import {\n  BaseStatsAnalytics,\n  hasEnabledStateChanged,\n  hasResolutionChanged,\n  removeUndefinedFromObject,\n  RunningTrackAnalytics,\n  TempStats,\n} from './BaseStatsAnalytics';\nimport {\n  RemoteAudioSample,\n  RemoteAudioTrackAnalytics,\n  RemoteVideoSample,\n  RemoteVideoTrackAnalytics,\n  SubscribeAnalyticPayload,\n} from './interfaces';\nimport { HMSTrackStats } from '../../interfaces';\nimport { HMSRemoteVideoTrack } from '../../internal';\nimport { HMSWebrtcStats } from '../../rtc-stats';\nimport { MAX_SAFE_INTEGER, SUBSCRIBE_STATS_SAMPLE_WINDOW } from '../../utils/constants';\nimport AnalyticsEventFactory from '../AnalyticsEventFactory';\n\nexport class SubscribeStatsAnalytics extends BaseStatsAnalytics {\n  protected trackAnalytics: Map<string, RunningRemoteTrackAnalytics> = new Map();\n\n  protected toAnalytics(): SubscribeAnalyticPayload {\n    const audio: RemoteAudioTrackAnalytics[] = [];\n    const video: RemoteVideoTrackAnalytics[] = [];\n    this.trackAnalytics.forEach(trackAnalytic => {\n      if (trackAnalytic.track.type === 'audio') {\n        audio.push(trackAnalytic.toAnalytics());\n      } else if (trackAnalytic.track.type === 'video') {\n        video.push(trackAnalytic.toAnalytics());\n      }\n    });\n    return {\n      audio,\n      video,\n      joined_at: this.store.getRoom()?.joinedAt?.getTime()!,\n      sequence_num: this.sequenceNum++,\n      max_window_sec: SUBSCRIBE_STATS_SAMPLE_WINDOW,\n    };\n  }\n\n  protected sendEvent() {\n    this.eventBus.analytics.publish(AnalyticsEventFactory.subscribeStats(this.toAnalytics()));\n    super.sendEvent();\n  }\n\n  protected handleStatsUpdate(hmsStats: HMSWebrtcStats) {\n    const remoteTracksStats = hmsStats.getAllRemoteTracksStats();\n    let shouldCreateSample = false;\n    Object.keys(remoteTracksStats).forEach(trackID => {\n      const track = this.store.getTrackById(trackID);\n      const trackStats = remoteTracksStats[trackID];\n      const prevTrackStats = this.trackAnalytics.get(trackID)?.getLatestStat();\n\n      // eslint-disable-next-line complexity\n      const getCalculatedJitterBufferDelay = (trackStats: HMSTrackStats, prevTrackStats?: TempStats) => {\n        const prevJBDelay = prevTrackStats?.jitterBufferDelay || 0;\n        const prevJBEmittedCount = prevTrackStats?.jitterBufferEmittedCount || 0;\n        const currentJBDelay = (trackStats?.jitterBufferDelay || 0) - prevJBDelay;\n        const currentJBEmittedCount = (trackStats?.jitterBufferEmittedCount || 0) - prevJBEmittedCount;\n\n        return currentJBEmittedCount > 0\n          ? (currentJBDelay * 1000) / currentJBEmittedCount\n          : prevTrackStats?.calculatedJitterBufferDelay || 0;\n      };\n\n      const calculatedJitterBufferDelay = getCalculatedJitterBufferDelay(trackStats, prevTrackStats);\n\n      const avSync = this.calculateAvSyncForStat(trackStats, hmsStats);\n      const newTempStat: TempStats = { ...trackStats, calculatedJitterBufferDelay, avSync };\n      if (trackStats.kind === 'video') {\n        const definition = (track as HMSRemoteVideoTrack).getPreferredLayerDefinition();\n        newTempStat.expectedFrameHeight = definition?.resolution.height;\n        newTempStat.expectedFrameWidth = definition?.resolution.width;\n      }\n      if (this.trackAnalytics.has(trackID)) {\n        this.trackAnalytics.get(trackID)?.pushTempStat(newTempStat);\n      } else {\n        if (track) {\n          const trackAnalytics = new RunningRemoteTrackAnalytics({\n            track,\n            sampleWindowSize: this.sampleWindowSize,\n            ssrc: trackStats.ssrc.toString(),\n            kind: trackStats.kind,\n          });\n          trackAnalytics.pushTempStat(newTempStat);\n          this.trackAnalytics.set(trackID, trackAnalytics);\n        }\n      }\n      const trackAnalytics = this.trackAnalytics.get(trackID);\n      if (trackAnalytics?.shouldCreateSample()) {\n        shouldCreateSample = true;\n      }\n    });\n\n    this.cleanTrackAnalyticsAndCreateSample(shouldCreateSample);\n  }\n\n  // eslint-disable-next-line complexity\n  private calculateAvSyncForStat(trackStats: HMSTrackStats, hmsStats: HMSWebrtcStats) {\n    if (!trackStats.peerID || !trackStats.estimatedPlayoutTimestamp || trackStats.kind !== 'video') {\n      return;\n    }\n    const peer = this.store.getPeerById(trackStats.peerID);\n    const audioTrack = peer?.audioTrack;\n    const videoTrack = peer?.videoTrack;\n    /**\n     * 1. Send value as MAX_SAFE_INTEGER when either audio or value track is muted for the entire window\n     * 2. When both audio and video are unmuted for a part of window , then divide the difference by those many number of samples only\n     */\n    const areBothTracksEnabled = audioTrack && videoTrack && audioTrack.enabled && videoTrack.enabled;\n    if (!areBothTracksEnabled) {\n      return MAX_SAFE_INTEGER;\n    }\n    const audioStats = hmsStats.getRemoteTrackStats(audioTrack.trackId);\n    if (!audioStats) {\n      return MAX_SAFE_INTEGER;\n    }\n    if (!audioStats.estimatedPlayoutTimestamp) {\n      return;\n    }\n\n    // https://w3c.github.io/webrtc-stats/#dom-rtcinboundrtpstreamstats-estimatedplayouttimestamp\n    return audioStats.estimatedPlayoutTimestamp - trackStats.estimatedPlayoutTimestamp;\n  }\n}\n\nclass RunningRemoteTrackAnalytics extends RunningTrackAnalytics {\n  samples: (RemoteAudioSample | RemoteVideoSample)[] = [];\n\n  protected collateSample = (): RemoteAudioSample | RemoteVideoSample => {\n    const latestStat = this.getLatestStat();\n    const firstStat = this.getFirstStat();\n\n    const baseSample = {\n      timestamp: Date.now(),\n      total_pli_count: this.calculateDifferenceForSample('pliCount'),\n      total_nack_count: this.calculateDifferenceForSample('nackCount'),\n      avg_jitter_buffer_delay: this.calculateAverage('calculatedJitterBufferDelay', false),\n    };\n\n    if (latestStat.kind === 'video') {\n      return removeUndefinedFromObject<RemoteVideoSample>({\n        ...baseSample,\n        avg_av_sync_ms: this.calculateAvgAvSyncForSample(),\n        avg_frames_received_per_sec: this.calculateDifferenceAverage('framesReceived'),\n        avg_frames_dropped_per_sec: this.calculateDifferenceAverage('framesDropped'),\n        avg_frames_decoded_per_sec: this.calculateDifferenceAverage('framesDecoded'),\n        frame_width: this.calculateAverage('frameWidth'),\n        frame_height: this.calculateAverage('frameHeight'),\n        expected_frame_width: this.calculateAverage('expectedFrameWidth'),\n        expected_frame_height: this.calculateAverage('expectedFrameHeight'),\n        pause_count: this.calculateDifferenceForSample('pauseCount'),\n        pause_duration_seconds: this.calculateDifferenceForSample('totalPausesDuration'),\n        freeze_count: this.calculateDifferenceForSample('freezeCount'),\n        freeze_duration_seconds: this.calculateDifferenceForSample('totalFreezesDuration'),\n      });\n    } else {\n      const audio_concealed_samples =\n        (latestStat.concealedSamples || 0) -\n        (latestStat.silentConcealedSamples || 0) -\n        ((firstStat.concealedSamples || 0) - (firstStat.silentConcealedSamples || 0));\n\n      return removeUndefinedFromObject<RemoteAudioSample>({\n        ...baseSample,\n        audio_level: this.calculateInstancesOfHigh('audioLevel', 0.05),\n        audio_concealed_samples,\n        audio_total_samples_received: this.calculateDifferenceForSample('totalSamplesReceived'),\n        audio_concealment_events: this.calculateDifferenceForSample('concealmentEvents'),\n        fec_packets_discarded: this.calculateDifferenceForSample('fecPacketsDiscarded'),\n        fec_packets_received: this.calculateDifferenceForSample('fecPacketsReceived'),\n        total_samples_duration: this.calculateDifferenceForSample('totalSamplesDuration'),\n        total_packets_received: this.calculateDifferenceForSample('packetsReceived'),\n        total_packets_lost: this.calculateDifferenceForSample('packetsLost'),\n      });\n    }\n  };\n\n  shouldCreateSample = () => {\n    const length = this.tempStats.length;\n    const newStat = this.tempStats[length - 1];\n    const prevStat = this.tempStats[length - 2];\n\n    return (\n      length === SUBSCRIBE_STATS_SAMPLE_WINDOW ||\n      hasEnabledStateChanged(newStat, prevStat) ||\n      (newStat.kind === 'video' && hasResolutionChanged(newStat, prevStat))\n    );\n  };\n\n  toAnalytics = (): RemoteAudioTrackAnalytics | RemoteVideoTrackAnalytics => {\n    return {\n      track_id: this.track_id,\n      ssrc: this.ssrc,\n      source: this.source,\n      rid: this.rid,\n      samples: this.samples,\n    };\n  };\n\n  private calculateAvgAvSyncForSample() {\n    const avSyncValues = this.tempStats.map(stat => stat.avSync);\n    const validAvSyncValues: number[] = avSyncValues.filter(\n      (value): value is number => value !== undefined && value !== MAX_SAFE_INTEGER,\n    );\n    if (validAvSyncValues.length === 0) {\n      return MAX_SAFE_INTEGER;\n    }\n    return validAvSyncValues.reduce((a, b) => a + b, 0) / validAvSyncValues.length;\n  }\n}\n", "// Sent in trickle messages as target - biz understands only 0 and 1\nexport enum HMSConnectionRole {\n  Publish = 0,\n  Subscribe = 1,\n}\n\nexport interface HMSTrickle {\n  candidate: RTCIceCandidateInit;\n  target: HMSConnectionRole;\n}\n", "import * as sdpTransform from 'sdp-transform';\nimport { isPresent } from './validations';\nimport { TrackState } from '../notification-manager';\n\n/**\n * @DISCUSS: Should we have a wrapper over RTCSessionDescriptionInit(SDP) and have these methods in it?\n */\n\nexport function fixMsid(desc: RTCSessionDescriptionInit, tracks?: Map<string, TrackState>): RTCSessionDescriptionInit {\n  const parsedSdp = sdpTransform.parse(desc.sdp!);\n\n  if (!parsedSdp.origin?.username.startsWith('mozilla')) {\n    // This isn't firefox, so we return the original offer without doing anything\n    return desc;\n  }\n\n  const mediaTracks = tracks ? Array.from(tracks.values()) : [];\n\n  parsedSdp.media.forEach(m => {\n    const streamId = m.msid?.split(' ')[0];\n    // check for both type and streamid as both video and screenshare have same type but different stream_id\n    const trackId = mediaTracks.find(val => val.type === m.type && val.stream_id === streamId)?.track_id;\n    if (trackId) {\n      m.msid = m.msid?.replace(/\\s(.+)/, ` ${trackId}`);\n    }\n  });\n\n  return { type: desc.type, sdp: sdpTransform.write(parsedSdp) };\n}\n\n/**\n * Get the track ID from the SDP using the transceiver's mid from RTCTrackEvent\n * @TODO: This could take more processing time in a large room and when the SDP is big.\n * Consider using this for Firefox only?\n */\nexport function getSdpTrackIdForMid(\n  desc?: RTCSessionDescriptionInit | null,\n  mid?: RTCRtpTransceiver['mid'],\n): string | undefined {\n  if (!desc?.sdp || !mid) {\n    return undefined;\n  }\n  const parsedSdp = sdpTransform.parse(desc.sdp);\n  const trackSection = parsedSdp.media.find(media => isPresent(media.mid) && parseInt(media.mid!) === parseInt(mid));\n  const trackId = trackSection?.msid?.split(' ')[1];\n  return trackId;\n}\n\nexport function enableOpusDtx(desc: RTCSessionDescriptionInit): RTCSessionDescriptionInit {\n  if (desc.sdp!.includes('usedtx=1')) {\n    return desc;\n  }\n\n  return { type: desc.type, sdp: desc.sdp!.replace('useinbandfec=1', 'useinbandfec=1;usedtx=1') };\n}\n", "import IConnectionObserver, { RTCIceCandidatePair } from './IConnectionObserver';\nimport { HMSConnectionRole } from './model';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { HMSAudioTrackSettings, HMSVideoTrackSettings } from '../media/settings';\nimport { HMSLocalTrack, HMSLocalVideoTrack } from '../media/tracks';\nimport { TrackState } from '../notification-manager';\nimport JsonRpcSignal from '../signal/jsonrpc';\nimport HMSLogger from '../utils/logger';\nimport { enableOpusDtx, fixMsid } from '../utils/session-description';\n\nconst TAG = '[HMSConnection]';\n\nexport default abstract class HMSConnection {\n  readonly role: HMSConnectionRole;\n  protected readonly signal: JsonRpcSignal;\n\n  protected abstract readonly observer: IConnectionObserver;\n  abstract readonly nativeConnection: RTCPeerConnection;\n  /**\n   * We keep a list of pending IceCandidates received\n   * from the signalling server. When the peer-connection\n   * is initialized we call [addIceCandidate] for each.\n   *\n   * WARN:\n   *  - [HMSPublishConnection] keeps the complete list of candidates (for\n   *      ice-connection failed/disconnect) forever.\n   *  - [HMSSubscribeConnection] clears this list as soon as we call [addIceCandidate]\n   */\n  readonly candidates = new Array<RTCIceCandidateInit>();\n  // @ts-ignore\n  sfuNodeId?: string;\n\n  selectedCandidatePair?: RTCIceCandidatePair;\n\n  protected constructor(role: HMSConnectionRole, signal: JsonRpcSignal) {\n    this.role = role;\n    this.signal = signal;\n  }\n\n  public get iceConnectionState(): RTCIceConnectionState {\n    return this.nativeConnection.iceConnectionState;\n  }\n\n  public get connectionState(): RTCPeerConnectionState {\n    return this.nativeConnection.connectionState;\n  }\n\n  private get action() {\n    return this.role === HMSConnectionRole.Publish ? HMSAction.PUBLISH : HMSAction.SUBSCRIBE;\n  }\n\n  setSfuNodeId(nodeId?: string) {\n    this.sfuNodeId = nodeId;\n  }\n\n  addTransceiver(track: MediaStreamTrack, init: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this.nativeConnection.addTransceiver(track, init);\n  }\n\n  async createOffer(tracks?: Map<string, TrackState>, options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    try {\n      const offer = await this.nativeConnection.createOffer(options);\n      HMSLogger.d(TAG, `[role=${this.role}] createOffer offer=${JSON.stringify(offer, null, 1)}`);\n      return enableOpusDtx(fixMsid(offer, tracks));\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.CreateOfferFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async createAnswer(options: RTCOfferOptions | undefined = undefined): Promise<RTCSessionDescriptionInit> {\n    try {\n      const answer = await this.nativeConnection.createAnswer(options);\n      HMSLogger.d(TAG, `[role=${this.role}] createAnswer answer=${JSON.stringify(answer, null, 1)}`);\n      return answer;\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.CreateAnswerFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    try {\n      HMSLogger.d(TAG, `[role=${this.role}] setLocalDescription description=${JSON.stringify(description, null, 1)}`);\n      await this.nativeConnection.setLocalDescription(description);\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.SetLocalDescriptionFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    try {\n      HMSLogger.d(TAG, `[role=${this.role}] setRemoteDescription description=${JSON.stringify(description, null, 1)}`);\n      await this.nativeConnection.setRemoteDescription(description);\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.SetRemoteDescriptionFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\n    if (this.nativeConnection.signalingState === 'closed') {\n      HMSLogger.d(TAG, `[role=${this.role}] addIceCandidate signalling state closed`);\n      return;\n    }\n    HMSLogger.d(TAG, `[role=${this.role}] addIceCandidate candidate=${JSON.stringify(candidate, null, 1)}`);\n    await this.nativeConnection.addIceCandidate(candidate);\n  }\n\n  public get remoteDescription(): RTCSessionDescription | null {\n    return this.nativeConnection.remoteDescription;\n  }\n\n  getSenders(): Array<RTCRtpSender> {\n    return this.nativeConnection.getSenders();\n  }\n\n  handleSelectedIceCandidatePairs() {\n    /**\n     * for the very first peer in the room we don't have any subscribe ice candidates\n     * because the peer hasn't subscribed to anything.\n     *\n     * For all peers joining after this peer, we have published and subscribed at the time of join itself\n     * so we're able to log both publish and subscribe ice candidates.\n     * Added try catch for the whole section as the getSenders and getReceivers is throwing errors in load test\n     */\n    try {\n      const transmitters = this.role === HMSConnectionRole.Publish ? this.getSenders() : this.getReceivers();\n\n      transmitters.forEach(transmitter => {\n        const kindOfTrack = transmitter.track?.kind;\n        if (transmitter.transport) {\n          const iceTransport = transmitter.transport.iceTransport;\n\n          const handleSelectedCandidate = () => {\n            // @ts-expect-error\n            if (typeof iceTransport.getSelectedCandidatePair === 'function') {\n              // @ts-expect-error\n              this.selectedCandidatePair = iceTransport.getSelectedCandidatePair();\n              if (this.selectedCandidatePair) {\n                this.observer.onSelectedCandidatePairChange(this.selectedCandidatePair);\n                HMSLogger.d(\n                  TAG,\n                  `${HMSConnectionRole[this.role]} connection`,\n                  `selected ${kindOfTrack || 'unknown'} candidate pair`,\n                  JSON.stringify(this.selectedCandidatePair, null, 2),\n                );\n              }\n            }\n          };\n\n          // @ts-expect-error\n          if (typeof iceTransport.onselectedcandidatepairchange === 'function') {\n            // @ts-expect-error\n            iceTransport.onselectedcandidatepairchange = handleSelectedCandidate;\n          }\n          handleSelectedCandidate();\n        }\n      });\n    } catch (error) {\n      HMSLogger.w(\n        TAG,\n        `Error in logging selected ice candidate pair for ${HMSConnectionRole[this.role]} connection`,\n        error,\n      );\n    }\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    if (this.nativeConnection.signalingState !== 'closed') {\n      this.nativeConnection.removeTrack(sender);\n    }\n  }\n\n  // eslint-disable-next-line\n  async setMaxBitrateAndFramerate(\n    track: HMSLocalTrack,\n    updatedSettings?: HMSAudioTrackSettings | HMSVideoTrackSettings,\n  ) {\n    const maxBitrate = updatedSettings?.maxBitrate || track.settings.maxBitrate;\n    const maxFramerate = track instanceof HMSLocalVideoTrack && track.settings.maxFramerate;\n    const sender = this.getSenders().find(s => s?.track?.id === track.getTrackIDBeingSent());\n\n    if (sender) {\n      const params = sender.getParameters();\n      // modify only for non-simulcast encodings\n      if (params.encodings.length === 1) {\n        if (maxBitrate) {\n          params.encodings[0].maxBitrate = maxBitrate * 1000;\n        }\n        if (maxFramerate) {\n          // @ts-ignore\n          params.encodings[0].maxFramerate = maxFramerate;\n        }\n      }\n      await sender.setParameters(params);\n    } else {\n      HMSLogger.w(\n        TAG,\n        `no sender found to setMaxBitrate for track - ${track.trackId}, sentTrackId - ${track.getTrackIDBeingSent()}`,\n      );\n    }\n  }\n\n  async getStats() {\n    return await this.nativeConnection.getStats();\n  }\n\n  close() {\n    this.nativeConnection.close();\n  }\n\n  private getReceivers() {\n    return this.nativeConnection.getReceivers();\n  }\n}\n", "import { IPublishConnectionObserver } from './IPublishConnectionObserver';\nimport JsonRpcSignal from '../../signal/jsonrpc';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport HMSConnection from '../HMSConnection';\nimport { HMSConnectionRole } from '../model';\n\nexport default class HMSPublishConnection extends HMSConnection {\n  private readonly TAG = '[HMSPublishConnection]';\n  protected readonly observer: IPublishConnectionObserver;\n  readonly nativeConnection: RTCPeerConnection;\n  readonly channel: RTCDataChannel;\n\n  constructor(signal: JsonRpcSignal, config: RTCConfiguration, observer: IPublishConnectionObserver) {\n    super(HMSConnectionRole.Publish, signal);\n    this.observer = observer;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.channel = this.nativeConnection.createDataChannel(API_DATA_CHANNEL, {\n      protocol: 'SCTP',\n    });\n    this.channel.onerror = ev => HMSLogger.e(this.TAG, `publish data channel onerror ${ev}`, ev);\n\n    this.nativeConnection.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        this.observer.onIceCandidate(candidate);\n        signal.trickle(this.role, candidate);\n      }\n    };\n\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n\n    this.nativeConnection.onconnectionstatechange = () => {\n      this.observer.onConnectionStateChange(this.nativeConnection.connectionState);\n\n      // here it replaces the original listener if already present and\n      // handles cases where sctp transport is reinitialised\n      if (this.nativeConnection.sctp) {\n        this.nativeConnection.sctp.transport.onstatechange = () => {\n          this.observer.onDTLSTransportStateChange(this.nativeConnection.sctp?.transport.state);\n        };\n        this.nativeConnection.sctp.transport.onerror = (event: Event) => {\n          this.observer.onDTLSTransportError(\n            new Error((event as RTCErrorEvent)?.error?.errorDetail) || 'DTLS Transport failed',\n          );\n        };\n      }\n    };\n  }\n\n  close() {\n    super.close();\n    this.channel.close();\n  }\n\n  initAfterJoin() {\n    this.nativeConnection.onnegotiationneeded = async () => {\n      HMSLogger.d(this.TAG, `onnegotiationneeded`);\n      await this.observer.onRenegotiationNeeded();\n    };\n  }\n}\n", "import EventEmitter from 'eventemitter2';\nimport { v4 as uuid } from 'uuid';\nimport ISubscribeConnectionObserver from './ISubscribeConnectionObserver';\nimport { HMSRemoteStream, HMSSimulcastLayer } from '../../internal';\nimport { HMSRemoteAudioTrack } from '../../media/tracks/HMSRemoteAudioTrack';\nimport { HMSRemoteVideoTrack } from '../../media/tracks/HMSRemoteVideoTrack';\nimport { InitFlags } from '../../signal/init/models';\nimport JsonRpcSignal from '../../signal/jsonrpc';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport { getSdpTrackIdForMid } from '../../utils/session-description';\nimport { workerSleep } from '../../utils/timer-utils';\nimport { PreferAudioLayerParams, PreferLayerResponse, PreferVideoLayerParams } from '../channel-messages';\nimport HMSConnection from '../HMSConnection';\nimport HMSDataChannel from '../HMSDataChannel';\nimport { HMSConnectionRole } from '../model';\n\nexport default class HMSSubscribeConnection extends HMSConnection {\n  private readonly TAG = '[HMSSubscribeConnection]';\n  private readonly remoteStreams = new Map<string, HMSRemoteStream>();\n  protected readonly observer: ISubscribeConnectionObserver;\n  private readonly MAX_RETRIES = 3;\n\n  readonly nativeConnection: RTCPeerConnection;\n\n  private pendingMessageQueue: string[] = [];\n\n  private apiChannel?: HMSDataChannel;\n  private eventEmitter = new EventEmitter({ maxListeners: 60 });\n\n  private initNativeConnectionCallbacks() {\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n\n    // @TODO(eswar): Remove this. Use iceconnectionstate change with interval and threshold.\n    this.nativeConnection.onconnectionstatechange = () => {\n      this.observer.onConnectionStateChange(this.nativeConnection.connectionState);\n    };\n\n    this.nativeConnection.ondatachannel = e => {\n      if (e.channel.label !== API_DATA_CHANNEL) {\n        // TODO: this.observer.onDataChannel(e.channel);\n        return;\n      }\n\n      this.apiChannel = new HMSDataChannel(\n        e.channel,\n        {\n          onMessage: (value: string) => {\n            this.eventEmitter.emit('message', value);\n            this.observer.onApiChannelMessage(value);\n          },\n        },\n        `role=${this.role}`,\n      );\n\n      e.channel.onopen = this.handlePendingApiMessages;\n    };\n\n    this.nativeConnection.onicecandidate = e => {\n      if (e.candidate !== null) {\n        this.observer.onIceCandidate(e.candidate);\n        this.signal.trickle(this.role, e.candidate);\n      }\n    };\n\n    this.nativeConnection.ontrack = e => {\n      const stream = e.streams[0];\n      const streamId = stream.id;\n\n      if (!this.remoteStreams.has(streamId)) {\n        const remote = new HMSRemoteStream(stream, this);\n        this.remoteStreams.set(streamId, remote);\n      }\n\n      stream.addEventListener('removetrack', (ev: MediaStreamTrackEvent) => {\n        if (ev.track.id !== e.track.id) {\n          return;\n        }\n        /*\n         * this match has to be with nativetrack.id instead of track.trackId as the latter refers to sdp track id for\n         * ease of correlating update messages coming from the backend. The two track ids are usually the same, but\n         * can be different for some browsers. checkout sdptrackid field in HMSTrack for more details.\n         */\n        const toRemoveTrackIdx = remote.tracks.findIndex(\n          track => track.nativeTrack.id === ev.track.id && e.transceiver.mid === track.transceiver?.mid,\n        );\n        if (toRemoveTrackIdx >= 0) {\n          const toRemoveTrack = remote.tracks[toRemoveTrackIdx];\n          this.observer.onTrackRemove(toRemoveTrack);\n          remote.tracks.splice(toRemoveTrackIdx, 1);\n          // If the length becomes 0 we assume that stream is removed entirely\n          if (remote.tracks.length === 0) {\n            this.remoteStreams.delete(streamId);\n          }\n        }\n      });\n\n      const remote = this.remoteStreams.get(streamId)!;\n      const isAudioTrack = e.track.kind === 'audio';\n      const TrackCls = isAudioTrack ? HMSRemoteAudioTrack : HMSRemoteVideoTrack;\n      const track = isAudioTrack\n        ? new TrackCls(remote, e.track)\n        : new TrackCls(remote, e.track, undefined, this.isFlagEnabled(InitFlags.FLAG_DISABLE_NONE_LAYER_REQUEST));\n      // reset the simulcast layer to none when new video tracks are added, UI will subscribe when required\n      if (e.track.kind === 'video') {\n        remote.setVideoLayerLocally(HMSSimulcastLayer.NONE, 'addTrack', 'subscribeConnection');\n      }\n      track.transceiver = e.transceiver;\n      const trackId = getSdpTrackIdForMid(this.remoteDescription, e.transceiver?.mid);\n      trackId && track.setSdpTrackId(trackId);\n      remote.tracks.push(track);\n      this.observer.onTrackAdd(track);\n    };\n  }\n\n  constructor(\n    signal: JsonRpcSignal,\n    config: RTCConfiguration,\n    private isFlagEnabled: (flag: InitFlags) => boolean,\n    observer: ISubscribeConnectionObserver,\n  ) {\n    super(HMSConnectionRole.Subscribe, signal);\n    this.observer = observer;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.initNativeConnectionCallbacks();\n  }\n\n  sendOverApiDataChannel(message: string) {\n    if (this.apiChannel && this.apiChannel.readyState === 'open') {\n      this.apiChannel.send(message);\n    } else {\n      HMSLogger.w(this.TAG, `API Data channel not ${this.apiChannel ? 'open' : 'present'}, queueing`, message);\n      this.pendingMessageQueue.push(message);\n    }\n  }\n\n  async sendOverApiDataChannelWithResponse<T extends PreferAudioLayerParams | PreferVideoLayerParams>(\n    message: T,\n    requestId?: string,\n  ): Promise<PreferLayerResponse> {\n    const id = uuid();\n    if (message.method === 'prefer-video-track-state') {\n      const disableAutoUnsubscribe = this.isFlagEnabled(InitFlags.FLAG_DISABLE_VIDEO_TRACK_AUTO_UNSUBSCRIBE);\n      if (disableAutoUnsubscribe && message.params.max_spatial_layer === HMSSimulcastLayer.NONE) {\n        HMSLogger.d(this.TAG, 'video auto unsubscribe is disabled, request is ignored');\n        return { id } as PreferLayerResponse;\n      }\n    }\n    const request = JSON.stringify({\n      id: requestId || id,\n      jsonrpc: '2.0',\n      ...message,\n    });\n    return this.sendMessage(request, id);\n  }\n\n  close() {\n    super.close();\n    this.apiChannel?.close();\n  }\n\n  private handlePendingApiMessages = () => {\n    this.eventEmitter.emit('open', true);\n    if (this.pendingMessageQueue.length > 0) {\n      HMSLogger.d(this.TAG, 'Found pending message queue, sending messages');\n      this.pendingMessageQueue.forEach(msg => this.sendOverApiDataChannel(msg));\n      this.pendingMessageQueue.length = 0;\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  private sendMessage = async (request: string, requestId: string): Promise<PreferLayerResponse> => {\n    if (this.apiChannel?.readyState !== 'open') {\n      await this.eventEmitter.waitFor('open');\n    }\n    let response: PreferLayerResponse;\n    for (let i = 0; i < this.MAX_RETRIES; i++) {\n      this.apiChannel!.send(request);\n      response = await this.waitForResponse(requestId);\n      const error = response.error;\n      if (error) {\n        // Don't retry or do anything, track is already removed\n        if (error.code === 404) {\n          HMSLogger.d(this.TAG, `Track not found ${requestId}`, { request, try: i + 1, error });\n          break;\n        }\n        HMSLogger.d(this.TAG, `Failed sending ${requestId}`, { request, try: i + 1, error });\n        const shouldRetry = error.code / 100 === 5 || error.code === 429;\n        if (!shouldRetry) {\n          throw Error(`code=${error.code}, message=${error.message}`);\n        }\n        const delay = (2 + Math.random() * 2) * 1000;\n        await workerSleep(delay);\n      } else {\n        break;\n      }\n    }\n    return response!;\n  };\n\n  private waitForResponse = async (requestId: string): Promise<PreferLayerResponse> => {\n    const res = await this.eventEmitter.waitFor('message', function (value) {\n      return value.includes(requestId);\n    });\n    const response = JSON.parse(res[0] as string);\n    HMSLogger.d(this.TAG, `response for ${requestId} -`, JSON.stringify(response, null, 2));\n    return response;\n  };\n}\n", "import HMSLogger from '../utils/logger';\n\nexport interface DataChannelObserver {\n  onMessage(value: string): void;\n}\n\nexport default class HMSDataChannel {\n  private readonly TAG = '[HMSDataChannel]';\n  private readonly nativeChannel: RTCDataChannel;\n  private readonly observer: DataChannelObserver;\n  private readonly metadata: string;\n\n  public get id() {\n    return this.nativeChannel.id;\n  }\n\n  public get label() {\n    return this.nativeChannel.label;\n  }\n\n  public get readyState() {\n    return this.nativeChannel.readyState;\n  }\n\n  constructor(nativeChannel: RTCDataChannel, observer: DataChannelObserver, metadata = '') {\n    this.nativeChannel = nativeChannel;\n    this.observer = observer;\n    this.metadata = metadata;\n\n    nativeChannel.onmessage = e => {\n      // HMSLogger.d(this.TAG, `[${this.metadata}] onMessage: label=${this.label}, message=${e.data}`);\n      this.observer.onMessage(e.data);\n    };\n  }\n\n  send(message: string) {\n    HMSLogger.d(this.TAG, `[${this.metadata}] Sending [size=${message.length}] message=${message}`);\n    this.nativeChannel.send(message);\n  }\n\n  close() {\n    this.nativeChannel.close();\n  }\n}\n", "import { HMSICEServer } from '../interfaces';\n\nexport const transformIceServerConfig = (defaultConfig?: RTCIceServer[], iceServers?: HMSICEServer[]) => {\n  if (!iceServers || iceServers.length === 0) {\n    return defaultConfig;\n  }\n  const transformedIceServers = iceServers.map(server => {\n    return { urls: server.urls, credentialType: 'password', credential: server.password, username: server.userName };\n  });\n  return transformedIceServers;\n};\n", "import { InitConfig } from './models';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { HMSICEServer } from '../../interfaces';\nimport { HMSException } from '../../internal';\nimport { transformIceServerConfig } from '../../utils/ice-server-config';\nimport HMSLogger from '../../utils/logger';\n\nconst TAG = '[InitService]';\nexport default class InitService {\n  private static handleError(response: Response, body: { code: number; message: string }) {\n    switch (response.status) {\n      case 404:\n        throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.INIT, body.message || response.statusText);\n      case 200:\n        break;\n      default:\n        throw ErrorFactory.APIErrors.ServerErrors(\n          body.code || response.status,\n          HMSAction.INIT,\n          body.message || response?.statusText,\n        );\n    }\n  }\n\n  static async fetchInitConfig({\n    token,\n    peerId,\n    userAgent,\n    initEndpoint = 'https://prod-init.100ms.live',\n    region = '',\n    iceServers,\n  }: {\n    token: string;\n    peerId: string;\n    userAgent: string;\n    initEndpoint?: string;\n    region?: string;\n    iceServers?: HMSICEServer[];\n  }): Promise<InitConfig> {\n    HMSLogger.d(TAG, `fetchInitConfig: initEndpoint=${initEndpoint} token=${token} peerId=${peerId} region=${region} `);\n    const url = getUrl(initEndpoint, peerId, userAgent, region);\n    try {\n      const response = await fetch(url, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      try {\n        const config = await response.clone().json();\n        this.handleError(response, config);\n        HMSLogger.d(TAG, `config is ${JSON.stringify(config, null, 2)}`);\n        return transformInitConfig(config, iceServers);\n      } catch (err) {\n        const text = await response.text();\n        HMSLogger.e(TAG, 'json error', (err as Error).message, text);\n        throw err instanceof HMSException\n          ? err\n          : ErrorFactory.APIErrors.ServerErrors(response.status, HMSAction.INIT, (err as Error).message);\n      }\n    } catch (err) {\n      const error = err as Error;\n      if (['Failed to fetch', 'NetworkError', 'ECONNRESET'].some(message => error.message.includes(message))) {\n        throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.INIT, error.message);\n      }\n      throw error;\n    }\n  }\n}\n\nexport function getUrl(endpoint: string, peerId: string, userAgent: string, region?: string) {\n  try {\n    const url = new URL('/init', endpoint);\n\n    if (region && region.trim().length > 0) {\n      url.searchParams.set('region', region.trim());\n    }\n    url.searchParams.set('peer_id', peerId);\n    url.searchParams.set('user_agent_v2', userAgent);\n    return url.toString();\n  } catch (err) {\n    const error = err as Error;\n    HMSLogger.e(TAG, error.name, error.message);\n    throw error;\n  }\n}\n\nexport function transformInitConfig(config: any, iceServers?: HMSICEServer[]): InitConfig {\n  return {\n    ...config,\n    rtcConfiguration: {\n      ...config.rtcConfiguration,\n      iceServers: transformIceServerConfig(config.rtcConfiguration?.ice_servers, iceServers),\n    },\n  };\n}\n", "import { v4 as uuid } from 'uuid';\nimport { convertSignalMethodtoErrorAction, HMSSignalMethod, JsonRpcRequest, JsonRpcResponse } from './models';\nimport AnalyticsEvent from '../../analytics/AnalyticsEvent';\nimport { HMSConnectionRole, HMSTrickle } from '../../connection/model';\nimport { ErrorFactory } from '../../error/ErrorFactory';\nimport { HMSAction } from '../../error/HMSAction';\nimport { HMSException } from '../../error/HMSException';\nimport { PeerNotificationInfo, SendMessage } from '../../notification-manager';\nimport {\n  DEFAULT_SIGNAL_PING_INTERVAL,\n  DEFAULT_SIGNAL_PING_TIMEOUT,\n  LEAVE_REASON,\n  PONG_RESPONSE_TIMES_SIZE,\n} from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport { PromiseCallbacks } from '../../utils/promise';\nimport { Queue } from '../../utils/queue';\nimport { isPageHidden } from '../../utils/support';\nimport { workerSleep } from '../../utils/timer-utils';\nimport {\n  AcceptRoleChangeParams,\n  BroadcastResponse,\n  CreateWhiteboardResponse,\n  FindPeerByNameRequestParams,\n  FindPeerByNameResponse,\n  FindPeersRequestParams,\n  GetPeerRequestParams,\n  GetSessionMetadataResponse,\n  GetWhiteboardResponse,\n  HLSRequestParams,\n  HLSTimedMetadataParams,\n  HMSPermissionType,\n  HMSWhiteboardCreateOptions,\n  JoinLeaveGroupResponse,\n  MultiTrackUpdateRequestParams,\n  PeerIterRequestParams,\n  PeersIterationResponse,\n  PollInfoGetParams,\n  PollInfoGetResponse,\n  PollInfoSetParams,\n  PollInfoSetResponse,\n  PollLeaderboardGetParams,\n  PollLeaderboardGetResponse,\n  PollListParams,\n  PollListResponse,\n  PollQuestionsGetParams,\n  PollQuestionsGetResponse,\n  PollQuestionsSetParams,\n  PollQuestionsSetResponse,\n  PollResponseSetParams,\n  PollResponseSetResponse,\n  PollResponsesGetParams,\n  PollResponsesGetResponse,\n  PollResultParams,\n  PollResultResponse,\n  PollStartParams,\n  PollStartResponse,\n  PollStopParams,\n  PollStopResponse,\n  RemovePeerRequest,\n  RequestForBulkRoleChangeParams,\n  RequestForRoleChangeParams,\n  SetSessionMetadataParams,\n  SetSessionMetadataResponse,\n  StartRTMPOrRecordingRequestParams,\n  StartTranscriptionRequestParams,\n  Track,\n  TrackUpdateRequestParams,\n  UpdatePeerRequestParams,\n} from '../interfaces';\nimport { ISignalEventsObserver } from '../ISignalEventsObserver';\n\nexport default class JsonRpcSignal {\n  readonly TAG = '[SIGNAL]: ';\n  readonly observer: ISignalEventsObserver;\n  readonly pongResponseTimes = new Queue<number>(PONG_RESPONSE_TIMES_SIZE);\n\n  /**\n   * Sometimes before [join] is completed, there could be a lot of trickles\n   * Sending [HMSTrickle]` before [join] web socket message leads to\n   * error: [500] no rtc transport exists for this Peer\n   *\n   * We keep a list of pending trickles and send them immediately after [join]\n   * is done.\n   */\n  private isJoinCompleted = false;\n  private pendingTrickle: Array<HMSTrickle> = [];\n\n  private socket: WebSocket | null = null;\n\n  private callbacks = new Map<string, PromiseCallbacks<string, { method: HMSSignalMethod }>>();\n\n  private _isConnected = false;\n  private id = 0;\n  private sfuNodeId: string | undefined;\n\n  private onCloseHandler: (event: CloseEvent) => void = () => {};\n\n  public get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  setSfuNodeId(sfuNodeId?: string) {\n    this.sfuNodeId = sfuNodeId;\n  }\n\n  public setIsConnected(newValue: boolean, reason = '') {\n    HMSLogger.d(this.TAG, `isConnected set id: ${this.id}, oldValue: ${this._isConnected}, newValue: ${newValue}`);\n    if (this._isConnected === newValue) {\n      return;\n    }\n\n    if (this._isConnected && !newValue) {\n      // went offline\n      this._isConnected = newValue;\n      this.rejectPendingCalls(reason);\n      this.observer.onOffline(reason);\n    } else if (!this._isConnected && newValue) {\n      // went online\n      this._isConnected = newValue;\n      this.observer.onOnline();\n    }\n  }\n\n  constructor(observer: ISignalEventsObserver) {\n    this.observer = observer;\n    window.addEventListener('offline', this.offlineListener);\n    window.addEventListener('online', this.onlineListener);\n\n    this.onMessageHandler = this.onMessageHandler.bind(this);\n  }\n\n  getPongResponseTimes() {\n    return this.pongResponseTimes.toList();\n  }\n\n  private async internalCall<T>(method: string, params: any): Promise<T> {\n    const id = uuid();\n    const message = { method, params, id, jsonrpc: '2.0' } as JsonRpcRequest;\n\n    this.socket?.send(JSON.stringify(message));\n\n    try {\n      const response = await new Promise<any>((resolve, reject) => {\n        this.callbacks.set(id, { resolve, reject, metadata: { method: method as HMSSignalMethod } });\n      });\n\n      return response;\n    } catch (ex) {\n      if (ex instanceof HMSException) {\n        throw ex;\n      }\n\n      const error = ex as JsonRpcResponse['error'];\n      throw ErrorFactory.WebsocketMethodErrors.ServerErrors(\n        Number(error.code),\n        convertSignalMethodtoErrorAction(method as HMSSignalMethod),\n        error.message,\n      );\n    }\n  }\n\n  private notify(method: string, params: any) {\n    const message = { method, params };\n\n    if (this.socket?.readyState === WebSocket.OPEN) {\n      this.socket?.send(JSON.stringify(message));\n    }\n  }\n\n  open(uri: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let promiseSettled = false;\n      // cleanup\n      if (this.socket) {\n        this.socket.close();\n        this.socket.removeEventListener('close', this.onCloseHandler);\n        this.socket.removeEventListener('message', this.onMessageHandler);\n      }\n\n      this.socket = new WebSocket(uri); // @DISCUSS: Inject WebSocket as a dependency so that it can be easier to mock and test\n\n      const errorListener = () => {\n        /**\n         * there was an error received from websocket leading to disconnection, this can happen either if server\n         * disconnects the websocket for some reason, there is a network disconnect or a firewall/antivirus on user's\n         * device is breaking the websocket connecting(which can happen even after a successful connect).\n         */\n        HMSLogger.e(this.TAG, 'Error from websocket');\n        promiseSettled = true;\n        // above error does not contain any description hence not sent here\n        reject(\n          ErrorFactory.WebSocketConnectionErrors.FailedToConnect(HMSAction.JOIN, `Error opening websocket connection`),\n        );\n      };\n\n      this.onCloseHandler = (event: CloseEvent) => {\n        HMSLogger.w(`Websocket closed code=${event.code}`);\n        if (promiseSettled) {\n          this.setIsConnected(false, `code: ${event.code}${event.code !== 1000 ? ', unexpected websocket close' : ''}`);\n        } else {\n          promiseSettled = true;\n          reject(\n            ErrorFactory.WebSocketConnectionErrors.AbnormalClose(\n              HMSAction.JOIN,\n              `Error opening websocket connection - websocket closed unexpectedly with code=${event.code}`,\n            ),\n          );\n        }\n      };\n\n      this.socket.addEventListener('error', errorListener);\n\n      const openHandler = () => {\n        promiseSettled = true;\n        resolve();\n        this.setIsConnected(true);\n        this.id++;\n        this.socket?.removeEventListener('open', openHandler);\n        this.socket?.removeEventListener('error', errorListener);\n        this.pingPongLoop(this.id);\n      };\n\n      this.socket.addEventListener('open', openHandler);\n      this.socket.addEventListener('close', this.onCloseHandler);\n      this.socket.addEventListener('message', this.onMessageHandler);\n    });\n  }\n\n  async close(): Promise<void> {\n    window.removeEventListener('offline', this.offlineListener);\n    window.removeEventListener('online', this.onlineListener);\n\n    // For `1000` Refer: https://tools.ietf.org/html/rfc6455#section-7.4.1\n    if (this.socket) {\n      this.socket.close(1000, 'Normal Close');\n      this.setIsConnected(false, 'code: 1000, normal websocket close');\n      this.socket.removeEventListener('close', this.onCloseHandler);\n      this.socket.removeEventListener('message', this.onMessageHandler);\n    } else {\n      this.setIsConnected(false, 'websocket not connected yet');\n    }\n  }\n\n  async join(\n    name: string,\n    data: string,\n    disableVidAutoSub: boolean,\n    serverSubDegrade: boolean,\n    simulcast: boolean,\n    onDemandTracks: boolean,\n    offer?: RTCSessionDescriptionInit,\n  ): Promise<RTCSessionDescriptionInit & { sfu_node_id: string | undefined }> {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.JOIN,\n        'Failed to send join over WS connection',\n      );\n    }\n    const params = {\n      name,\n      disableVidAutoSub,\n      data,\n      offer,\n      server_sub_degrade: serverSubDegrade,\n      simulcast,\n      onDemandTracks,\n    };\n    const response: RTCSessionDescriptionInit & { sfu_node_id: string | undefined } = await this.internalCall(\n      HMSSignalMethod.JOIN,\n      params,\n    );\n\n    this.isJoinCompleted = true;\n    this.pendingTrickle.forEach(({ target, candidate }) => this.trickle(target, candidate));\n    this.pendingTrickle.length = 0;\n\n    HMSLogger.d(this.TAG, `join: response=${JSON.stringify(response, null, 1)}`);\n    return response;\n  }\n\n  trickle(target: HMSConnectionRole, candidate: RTCIceCandidateInit) {\n    if (this.isJoinCompleted) {\n      this.notify(HMSSignalMethod.TRICKLE, { target, candidate, sfu_node_id: this.sfuNodeId });\n    } else {\n      this.pendingTrickle.push({ target, candidate });\n    }\n  }\n\n  async offer(desc: RTCSessionDescriptionInit, tracks: Map<string, any>): Promise<RTCSessionDescriptionInit> {\n    const response = await this.call(HMSSignalMethod.OFFER, {\n      desc,\n      tracks: Object.fromEntries(tracks),\n      sfu_node_id: this.sfuNodeId,\n    });\n    return response as RTCSessionDescriptionInit;\n  }\n\n  answer(desc: RTCSessionDescriptionInit) {\n    this.notify(HMSSignalMethod.ANSWER, { desc, sfu_node_id: this.sfuNodeId });\n  }\n\n  trackUpdate(tracks: Map<string, Track>) {\n    this.notify(HMSSignalMethod.TRACK_UPDATE, { tracks: Object.fromEntries(tracks) });\n  }\n\n  async broadcast(message: SendMessage) {\n    return await this.call<BroadcastResponse>(HMSSignalMethod.BROADCAST, message);\n  }\n\n  leave(reason: LEAVE_REASON) {\n    this.notify(HMSSignalMethod.LEAVE, { client_reason: reason });\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    await this.call(HMSSignalMethod.END_ROOM, { lock, reason });\n  }\n\n  sendEvent(event: AnalyticsEvent) {\n    if (!this.isConnected) {\n      throw Error(`${this.TAG} not connected. Could not send event ${event}`);\n    }\n    this.notify(HMSSignalMethod.ANALYTICS, event.toSignalParams());\n  }\n\n  ping(timeout: number): Promise<number> {\n    const pingTime = Date.now();\n    const timer: Promise<number> = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(Date.now() - pingTime);\n      }, timeout + 1);\n    });\n    const pongTimeDiff = this.internalCall(HMSSignalMethod.PING, { timestamp: pingTime })\n      .then(() => Date.now() - pingTime)\n      .catch(() => Date.now() - pingTime);\n\n    return Promise.race([timer, pongTimeDiff]);\n  }\n\n  async requestRoleChange(params: RequestForRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE_REQUEST, params);\n  }\n\n  async requestBulkRoleChange(params: RequestForBulkRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE_REQUEST, params);\n  }\n\n  async acceptRoleChangeRequest(params: AcceptRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE, params);\n  }\n\n  async requestTrackStateChange(params: TrackUpdateRequestParams) {\n    await this.call(HMSSignalMethod.TRACK_UPDATE_REQUEST, params);\n  }\n\n  async requestMultiTrackStateChange(params: MultiTrackUpdateRequestParams) {\n    await this.call(HMSSignalMethod.CHANGE_TRACK_MUTE_STATE_REQUEST, params);\n  }\n\n  async removePeer(params: RemovePeerRequest) {\n    await this.call(HMSSignalMethod.PEER_LEAVE_REQUEST, params);\n  }\n\n  async startRTMPOrRecording(params: StartRTMPOrRecordingRequestParams) {\n    await this.call(HMSSignalMethod.START_RTMP_OR_RECORDING_REQUEST, { ...params });\n  }\n\n  async stopRTMPAndRecording() {\n    await this.call(HMSSignalMethod.STOP_RTMP_AND_RECORDING_REQUEST, {});\n  }\n\n  async startHLSStreaming(params: HLSRequestParams): Promise<void> {\n    await this.call(HMSSignalMethod.START_HLS_STREAMING, { ...params });\n  }\n\n  async stopHLSStreaming(params?: HLSRequestParams): Promise<void> {\n    await this.call(HMSSignalMethod.STOP_HLS_STREAMING, { ...params });\n  }\n\n  async startTranscription(params: StartTranscriptionRequestParams) {\n    await this.call(HMSSignalMethod.START_TRANSCRIPTION, { ...params });\n  }\n\n  async stopTranscription(params: StartTranscriptionRequestParams) {\n    await this.call(HMSSignalMethod.STOP_TRANSCRIPTION, { ...params });\n  }\n\n  async sendHLSTimedMetadata(params?: HLSTimedMetadataParams): Promise<void> {\n    await this.call(HMSSignalMethod.HLS_TIMED_METADATA, { ...params });\n  }\n\n  async updatePeer(params: UpdatePeerRequestParams) {\n    await this.call(HMSSignalMethod.UPDATE_PEER_METADATA, { ...params });\n  }\n\n  async getPeer(params: GetPeerRequestParams): Promise<PeerNotificationInfo | undefined> {\n    return await this.call(HMSSignalMethod.GET_PEER, { ...params });\n  }\n\n  async joinGroup(name: string): Promise<JoinLeaveGroupResponse> {\n    return await this.call(HMSSignalMethod.GROUP_JOIN, { name });\n  }\n\n  async leaveGroup(name: string): Promise<JoinLeaveGroupResponse> {\n    return await this.call(HMSSignalMethod.GROUP_LEAVE, { name });\n  }\n\n  async addToGroup(peerId: string, name: string) {\n    await this.call(HMSSignalMethod.GROUP_ADD, { name, peer_id: peerId });\n  }\n\n  async removeFromGroup(peerId: string, name: string): Promise<void> {\n    await this.call(HMSSignalMethod.GROUP_REMOVE, { name, peer_id: peerId });\n  }\n\n  async peerIterNext(params: PeerIterRequestParams): Promise<PeersIterationResponse> {\n    return await this.call(HMSSignalMethod.PEER_ITER_NEXT, params);\n  }\n\n  async findPeers(params: FindPeersRequestParams): Promise<PeersIterationResponse> {\n    return await this.call(HMSSignalMethod.FIND_PEER, params);\n  }\n\n  async findPeerByName(params: FindPeerByNameRequestParams): Promise<FindPeerByNameResponse> {\n    return await this.call(HMSSignalMethod.SEARCH_BY_NAME, params);\n  }\n\n  setSessionMetadata(params: SetSessionMetadataParams) {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to set session store value due to network disconnection',\n      );\n    }\n    return this.call<SetSessionMetadataResponse>(HMSSignalMethod.SET_METADATA, { ...params });\n  }\n\n  listenMetadataChange(keys: string[]): Promise<void> {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to observe session store key due to network disconnection',\n      );\n    }\n    return this.call(HMSSignalMethod.LISTEN_METADATA_CHANGE, { keys });\n  }\n\n  getSessionMetadata(key?: string) {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to set session store value due to network disconnection',\n      );\n    }\n    return this.call<GetSessionMetadataResponse>(HMSSignalMethod.GET_METADATA, { key });\n  }\n\n  setPollInfo(params: PollInfoSetParams) {\n    return this.call<PollInfoSetResponse>(HMSSignalMethod.POLL_INFO_SET, { ...params });\n  }\n\n  getPollInfo(params: PollInfoGetParams) {\n    return this.call<PollInfoGetResponse>(HMSSignalMethod.POLL_INFO_GET, { ...params });\n  }\n\n  setPollQuestions(params: PollQuestionsSetParams) {\n    return this.call<PollQuestionsSetResponse>(HMSSignalMethod.POLL_QUESTIONS_SET, { ...params });\n  }\n\n  startPoll(params: PollStartParams) {\n    return this.call<PollStartResponse>(HMSSignalMethod.POLL_START, { ...params });\n  }\n\n  stopPoll(params: PollStopParams) {\n    return this.call<PollStopResponse>(HMSSignalMethod.POLL_STOP, { ...params });\n  }\n\n  getPollQuestions(params: PollQuestionsGetParams): Promise<PollQuestionsGetResponse> {\n    return this.call<PollQuestionsGetResponse>(HMSSignalMethod.POLL_QUESTIONS_GET, { ...params });\n  }\n\n  setPollResponses(params: PollResponseSetParams): Promise<PollResponseSetResponse> {\n    return this.call<PollResponseSetResponse>(HMSSignalMethod.POLL_RESPONSE_SET, { ...params });\n  }\n\n  getPollResponses(params: PollResponsesGetParams): Promise<PollResponsesGetResponse> {\n    return this.call<PollResponsesGetResponse>(HMSSignalMethod.POLL_RESPONSES, { ...params });\n  }\n\n  getPollsList(params: PollListParams): Promise<PollListResponse> {\n    return this.call<PollListResponse>(HMSSignalMethod.POLL_LIST, { ...params });\n  }\n\n  getPollResult(params: PollResultParams): Promise<PollResultResponse> {\n    return this.call<PollResultResponse>(HMSSignalMethod.POLL_RESULT, { ...params });\n  }\n\n  createWhiteboard(params: HMSWhiteboardCreateOptions) {\n    this.validateConnection();\n    return this.call<CreateWhiteboardResponse>(HMSSignalMethod.WHITEBOARD_CREATE, { ...params });\n  }\n\n  getWhiteboard(params: { id: string; permission?: Array<HMSPermissionType> }) {\n    this.validateConnection();\n    return this.call<GetWhiteboardResponse>(HMSSignalMethod.WHITEBOARD_GET, { ...params });\n  }\n\n  fetchPollLeaderboard(params: PollLeaderboardGetParams): Promise<PollLeaderboardGetResponse> {\n    return this.call<PollLeaderboardGetResponse>(HMSSignalMethod.POLL_LEADERBOARD, { ...params });\n  }\n\n  private validateConnection() {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to send message due to network disconnection',\n      );\n    }\n  }\n\n  private onMessageHandler(event: MessageEvent) {\n    const text: string = event.data;\n    const response = JSON.parse(text);\n    this.resolvePingOnAnyResponse();\n    if (response.id) {\n      this.handleResponseWithId(response);\n    } else if (response.method) {\n      this.handleResponseWithMethod(response);\n    } else {\n      throw Error(`WebSocket message has no 'method' or 'id' field, message=${response}`);\n    }\n  }\n\n  private handleResponseWithId(response: any) {\n    /** This is a response to [call] */\n    const typedResponse = response as JsonRpcResponse;\n    const id: string = typedResponse.id;\n    if (this.callbacks.has(id)) {\n      const cb = this.callbacks.get(id)!;\n      this.callbacks.delete(id);\n      if (typedResponse.result) {\n        cb.resolve(typedResponse.result);\n      } else {\n        cb.reject(typedResponse.error);\n      }\n    } else {\n      this.observer.onNotification(typedResponse);\n    }\n  }\n\n  private handleResponseWithMethod(response: any) {\n    switch (response.method) {\n      case HMSSignalMethod.OFFER:\n        this.observer.onOffer(response.params);\n        break;\n      case HMSSignalMethod.TRICKLE:\n        this.observer.onTrickle(response.params);\n        break;\n      case HMSSignalMethod.SERVER_ERROR:\n        this.observer.onServerError(\n          ErrorFactory.WebsocketMethodErrors.ServerErrors(\n            Number(response.params.code),\n            HMSSignalMethod.SERVER_ERROR,\n            response.params.message,\n          ),\n        );\n        break;\n      case HMSSignalMethod.SERVER_WARNING:\n        HMSLogger.w(this.TAG, response.params);\n        break;\n      default:\n        this.observer.onNotification(response);\n        break;\n    }\n  }\n\n  private resolvePingOnAnyResponse = () => {\n    this.callbacks.forEach((callback, key) => {\n      if (callback.metadata?.method === HMSSignalMethod.PING) {\n        //@ts-ignore\n        callback.resolve({ timestamp: Date.now() });\n        this.callbacks.delete(key);\n      }\n    });\n  };\n\n  private rejectPendingCalls(reason = '') {\n    this.callbacks.forEach((callback, id) => {\n      if (callback.metadata?.method !== HMSSignalMethod.PING) {\n        HMSLogger.e(this.TAG, `rejecting pending callback ${callback.metadata?.method}, id=${id}`);\n        callback.reject(\n          ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n            callback.metadata?.method\n              ? convertSignalMethodtoErrorAction(callback.metadata?.method)\n              : HMSAction.RECONNECT_SIGNAL,\n            reason,\n          ),\n        );\n        this.callbacks.delete(id);\n      }\n    });\n  }\n\n  private async pingPongLoop(id: number) {\n    const pingTimeout = window.HMS?.PING_TIMEOUT || DEFAULT_SIGNAL_PING_TIMEOUT;\n    if (this.isConnected) {\n      const pongTimeDiff = await this.ping(pingTimeout);\n      this.pongResponseTimes.enqueue(pongTimeDiff);\n      if (pongTimeDiff > pingTimeout) {\n        HMSLogger.d(this.TAG, `Pong timeout ${id}, pageHidden=${isPageHidden()}`);\n        if (this.id === id) {\n          this.setIsConnected(false, 'ping pong failure');\n        }\n      } else {\n        setTimeout(() => this.pingPongLoop(id), window.HMS?.PING_INTERVAL || DEFAULT_SIGNAL_PING_INTERVAL);\n      }\n    }\n  }\n\n  private async call<T>(method: HMSSignalMethod, params: Record<string, any>): Promise<T> {\n    const MAX_RETRIES = 3;\n    let error: HMSException = ErrorFactory.WebsocketMethodErrors.ServerErrors(500, method, `Default ${method} error`);\n    let retry;\n    for (retry = 1; retry <= MAX_RETRIES; retry++) {\n      try {\n        this.validateConnection();\n        HMSLogger.d(this.TAG, `Try number ${retry} sending ${method}`, params);\n        return await this.internalCall(method, params);\n      } catch (err) {\n        error = err as HMSException;\n        HMSLogger.e(this.TAG, `Failed sending ${method} try: ${retry}`, { method, params, error });\n        // 1003 is websocket disconnect - could be because you are offline - retry with delay in this case as well\n        const shouldRetry = parseInt(`${error.code / 100}`) === 5 || error.code === 429 || error.code === 1003;\n        if (!shouldRetry) {\n          break;\n        }\n\n        const delay = (2 + Math.random() * 2) * 1000;\n        await workerSleep(delay);\n      }\n    }\n    HMSLogger.e(`Sending ${method} over WS failed after ${Math.min(retry, MAX_RETRIES)} retries`, {\n      method,\n      params,\n      error,\n    });\n    throw error;\n  }\n\n  private offlineListener = () => {\n    HMSLogger.d(this.TAG, 'Window network offline');\n    this.setIsConnected(false, 'Window network offline');\n  };\n\n  private onlineListener = () => {\n    HMSLogger.d(this.TAG, 'Window network online');\n    this.observer.onNetworkOnline();\n  };\n}\n", "// @ts-nocheck\nimport { isBrowser } from './support';\n\nexport const getNetworkInfo = () => {\n  if (!isBrowser || typeof navigator.connection === 'undefined') {\n    return;\n  }\n\n  const connection = navigator.connection;\n  const networkInfo = {\n    downlink: connection.downlink,\n    downlinkMax: connection.downlinkMax,\n    effectiveType: connection.effectiveType,\n    rtt: connection.rtt,\n    saveData: connection.saveData,\n    type: connection.type,\n  };\n  return networkInfo;\n};\n", "import { JoinParameters } from './models/JoinParameters';\nimport { TransportFailureCategory } from './models/TransportFailureCategory';\nimport { TransportState } from './models/TransportState';\nimport ITransportObserver from './ITransportObserver';\nimport { RetryScheduler } from './RetryScheduler';\nimport { AdditionalAnalyticsProperties } from '../analytics/AdditionalAnalyticsProperties';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { AnalyticsEventsService } from '../analytics/AnalyticsEventsService';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { HTTPAnalyticsTransport } from '../analytics/HTTPAnalyticsTransport';\nimport { SignalAnalyticsTransport } from '../analytics/signal-transport/SignalAnalyticsTransport';\nimport { PublishStatsAnalytics, SubscribeStatsAnalytics } from '../analytics/stats';\nimport { PluginUsageTracker } from '../common/PluginUsageTracker';\nimport { HMSConnectionRole, HMSTrickle } from '../connection/model';\nimport { IPublishConnectionObserver } from '../connection/publish/IPublishConnectionObserver';\nimport HMSPublishConnection from '../connection/publish/publishConnection';\nimport ISubscribeConnectionObserver from '../connection/subscribe/ISubscribeConnectionObserver';\nimport HMSSubscribeConnection from '../connection/subscribe/subscribeConnection';\nimport { DeviceManager } from '../device-manager';\nimport { HMSDiagnosticsConnectivityListener } from '../diagnostics/interfaces';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport { HMSICEServer, HMSRole, HMSTrackUpdate, HMSUpdateListener } from '../interfaces';\nimport { HMSLocalStream } from '../media/streams/HMSLocalStream';\nimport { HMSLocalTrack, HMSLocalVideoTrack, HMSTrack } from '../media/tracks';\nimport { TrackState } from '../notification-manager';\nimport { HMSWebrtcInternals } from '../rtc-stats/HMSWebrtcInternals';\nimport { Store } from '../sdk/store';\nimport InitService from '../signal/init';\nimport { InitConfig, InitFlags } from '../signal/init/models';\nimport { ISignalEventsObserver } from '../signal/ISignalEventsObserver';\nimport JsonRpcSignal from '../signal/jsonrpc';\nimport {\n  ICE_DISCONNECTION_TIMEOUT,\n  LEAVE_REASON,\n  PROTOCOL_SPEC,\n  PROTOCOL_VERSION,\n  PUBLISH_STATS_PUSH_INTERVAL,\n  PUBLISH_STATS_SAMPLE_WINDOW,\n  RENEGOTIATION_CALLBACK_ID,\n  SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID,\n  SUBSCRIBE_STATS_PUSH_INTERVAL,\n  SUBSCRIBE_STATS_SAMPLE_WINDOW,\n  SUBSCRIBE_TIMEOUT,\n} from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { getNetworkInfo } from '../utils/network-info';\nimport { PromiseCallbacks } from '../utils/promise';\n\nconst TAG = '[HMSTransport]:';\n\n// @DISCUSS: action and extra are not used at all.\ninterface CallbackTriple {\n  promise: PromiseCallbacks<boolean>;\n  action: HMSAction;\n  extra: any;\n}\n\ninterface NegotiateJoinParams {\n  name: string;\n  data: string;\n  autoSubscribeVideo: boolean;\n}\n\nexport default class HMSTransport {\n  private state: TransportState = TransportState.Disconnected;\n  private trackStates: Map<string, TrackState> = new Map();\n  private publishConnection: HMSPublishConnection | null = null;\n  private subscribeConnection: HMSSubscribeConnection | null = null;\n  private initConfig?: InitConfig;\n  private endpoint!: string;\n  private joinParameters?: JoinParameters;\n  private retryScheduler: RetryScheduler;\n  private webrtcInternals?: HMSWebrtcInternals;\n  private publishStatsAnalytics?: PublishStatsAnalytics;\n  private subscribeStatsAnalytics?: SubscribeStatsAnalytics;\n  private maxSubscribeBitrate = 0;\n  private connectivityListener?: HMSDiagnosticsConnectivityListener;\n  private sfuNodeId?: string;\n  joinRetryCount = 0;\n  private publishDisconnectTimer = 0;\n  private listener?: HMSUpdateListener;\n  private onScreenshareStop = () => {};\n  private screenStream = new Set<MediaStream>();\n\n  constructor(\n    private observer: ITransportObserver,\n    private deviceManager: DeviceManager,\n    private store: Store,\n    private eventBus: EventBus,\n    private analyticsEventsService: AnalyticsEventsService,\n    private analyticsTimer: AnalyticsTimer,\n    private pluginUsageTracker: PluginUsageTracker,\n  ) {\n    this.webrtcInternals = new HMSWebrtcInternals(this.store, this.eventBus);\n\n    const onStateChange = async (state: TransportState, error?: HMSException) => {\n      if (state !== this.state) {\n        this.state = state;\n        await this.observer.onStateChange(this.state, error);\n      }\n    };\n    this.retryScheduler = new RetryScheduler(onStateChange, this.sendErrorAnalyticsEvent.bind(this));\n\n    this.eventBus.statsUpdate.subscribe(stats => {\n      const currentSubscribeBitrate = stats.getLocalPeerStats()?.subscribe?.bitrate || 0;\n      this.maxSubscribeBitrate = Math.max(this.maxSubscribeBitrate, currentSubscribeBitrate);\n    });\n\n    this.eventBus.localAudioEnabled.subscribe(({ track, enabled }) => this.trackUpdate(track, enabled));\n    this.eventBus.localVideoEnabled.subscribe(({ track, enabled }) => this.trackUpdate(track, enabled));\n  }\n\n  /**\n   * Map of callbacks used to wait for an event to fire.\n   * Used here for:\n   *  1. publish/unpublish waits for [IPublishConnectionObserver.onRenegotiationNeeded] to complete\n   */\n  private readonly callbacks = new Map<string, CallbackTriple>();\n\n  setListener = (listener: HMSUpdateListener) => {\n    this.listener = listener;\n  };\n\n  setOnScreenshareStop = (onStop: () => void) => {\n    this.onScreenshareStop = onStop;\n  };\n\n  getWebsocketEndpoint(): string | undefined {\n    if (!this.initConfig) {\n      return;\n    }\n    return this.initConfig.endpoint;\n  }\n\n  private signalObserver: ISignalEventsObserver = {\n    // eslint-disable-next-line complexity\n    onOffer: async (jsep: RTCSessionDescriptionInit & { sfu_node_id?: string }) => {\n      try {\n        if (!this.subscribeConnection) {\n          return;\n        }\n        if (\n          jsep.sfu_node_id &&\n          this.subscribeConnection.sfuNodeId &&\n          this.subscribeConnection.sfuNodeId !== jsep.sfu_node_id\n        ) {\n          HMSLogger.d(TAG, 'ignoring old offer');\n          return;\n        }\n        await this.subscribeConnection.setRemoteDescription(jsep);\n        HMSLogger.d(\n          TAG,\n          `[SUBSCRIBE] Adding ${this.subscribeConnection.candidates.length} ice-candidates`,\n          this.subscribeConnection.candidates,\n        );\n        for (const candidate of this.subscribeConnection.candidates) {\n          await this.subscribeConnection.addIceCandidate(candidate);\n        }\n        this.subscribeConnection.candidates.length = 0;\n        const answer = await this.subscribeConnection.createAnswer();\n        await this.subscribeConnection.setLocalDescription(answer);\n        this.signal.answer(answer);\n        HMSLogger.d(TAG, '[role=SUBSCRIBE] onOffer renegotiation DONE \u2705');\n      } catch (err) {\n        HMSLogger.d(TAG, '[role=SUBSCRIBE] onOffer renegotiation FAILED \u274C', err);\n        this.state = TransportState.Failed;\n        let ex: HMSException;\n        if (err instanceof HMSException) {\n          ex = err;\n        } else {\n          ex = ErrorFactory.GenericErrors.Unknown(HMSAction.SUBSCRIBE, (err as Error).message);\n        }\n        this.observer.onFailure(ex);\n        this.eventBus.analytics.publish(AnalyticsEventFactory.subscribeFail(ex));\n      }\n    },\n\n    onTrickle: async (trickle: HMSTrickle) => {\n      const connection =\n        trickle.target === HMSConnectionRole.Publish ? this.publishConnection : this.subscribeConnection;\n      if (!connection?.remoteDescription) {\n        // ICE candidates can't be added without any remote session description\n        connection?.candidates.push(trickle.candidate);\n      } else {\n        await connection.addIceCandidate(trickle.candidate);\n      }\n    },\n\n    onNotification: (message: any) => this.observer.onNotification(message),\n\n    onServerError: async (error: HMSException) => {\n      await this.observer.onStateChange(TransportState.Failed, error);\n    },\n\n    onFailure: (error: HMSException) => {\n      // @DISCUSS: Should we remove this? Pong failure would have already scheduled signal retry.\n      if (this.joinParameters) {\n        this.retryScheduler.schedule({\n          category: TransportFailureCategory.SignalDisconnect,\n          error,\n          task: this.retrySignalDisconnectTask,\n          originalState: this.state,\n        });\n      }\n    },\n\n    onOffline: async (reason: string) => {\n      HMSLogger.d(TAG, 'socket offline', TransportState[this.state]);\n      try {\n        if (this.state !== TransportState.Leaving && this.joinParameters) {\n          this.retryScheduler.schedule({\n            category: TransportFailureCategory.SignalDisconnect,\n            error: ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(HMSAction.RECONNECT_SIGNAL, reason),\n            task: this.retrySignalDisconnectTask,\n            originalState: this.state,\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    // this is called when socket connection is successful\n    onOnline: () => {\n      HMSLogger.d(TAG, 'socket online', TransportState[this.state]);\n      this.analyticsSignalTransport.flushFailedEvents(this.store.getLocalPeer()?.peerId);\n    },\n    // this is called when window.online event is triggered\n    onNetworkOnline: () => {\n      this.analyticsEventsService.flushFailedClientEvents();\n    },\n  };\n\n  public readonly signal = new JsonRpcSignal(this.signalObserver);\n  private analyticsSignalTransport = new SignalAnalyticsTransport(this.signal);\n\n  private publishDtlsStateTimer = 0;\n  private lastPublishDtlsState: RTCDtlsTransportState = 'new';\n\n  getWebrtcInternals() {\n    return this.webrtcInternals;\n  }\n\n  isFlagEnabled(flag: InitFlags) {\n    const config = this.initConfig?.config;\n    const flags = config?.enabledFlags || [];\n    return flags.includes(flag);\n  }\n\n  setConnectivityListener(listener: HMSDiagnosticsConnectivityListener) {\n    this.connectivityListener = listener;\n  }\n\n  async preview(\n    token: string,\n    endpoint: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n    iceServers?: HMSICEServer[],\n  ): Promise<InitConfig | void> {\n    const initConfig = await this.connect(token, endpoint, peerId, customData, autoSubscribeVideo, iceServers);\n    this.state = TransportState.Preview;\n    this.observer.onStateChange(this.state);\n    return initConfig;\n  }\n\n  async join(\n    authToken: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    initEndpoint: string,\n    autoSubscribeVideo = false,\n    iceServers?: HMSICEServer[],\n  ): Promise<void> {\n    HMSLogger.d(TAG, 'join: started \u23F0');\n    try {\n      if (!this.signal.isConnected || !this.initConfig) {\n        await this.connect(authToken, initEndpoint, peerId, customData, autoSubscribeVideo, iceServers);\n      }\n\n      this.validateNotDisconnected('connect');\n\n      if (this.initConfig) {\n        await this.waitForLocalRoleAvailability();\n        await this.createConnectionsAndNegotiateJoin(customData, autoSubscribeVideo);\n        this.initStatsAnalytics();\n\n        HMSLogger.d(TAG, '\u2705 join: Negotiated over PUBLISH connection');\n      }\n    } catch (error) {\n      HMSLogger.e(TAG, `join: failed \u274C [token=${authToken}]`, error);\n      this.state = TransportState.Failed;\n      const ex = error as HMSException;\n      // set isTerminal to true if not already when error code is 500(internal biz server error)\n      ex.isTerminal = ex.isTerminal || ex.code === 500;\n      await this.observer.onStateChange(this.state, ex);\n      throw ex;\n    }\n\n    HMSLogger.d(TAG, '\u2705 join: successful');\n    this.state = TransportState.Joined;\n    this.observer.onStateChange(this.state);\n  }\n\n  async connect(\n    token: string,\n    endpoint: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n    iceServers?: HMSICEServer[],\n  ): Promise<InitConfig | void> {\n    this.setTransportStateForConnect();\n    this.joinParameters = new JoinParameters(\n      token,\n      peerId,\n      customData.name,\n      customData.metaData,\n      endpoint,\n      autoSubscribeVideo,\n      iceServers,\n    );\n    try {\n      const response = await this.internalConnect(token, endpoint, peerId, iceServers);\n      return response;\n    } catch (error) {\n      const shouldRetry =\n        error instanceof HMSException &&\n        ([\n          ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST,\n          ErrorCodes.WebSocketConnectionErrors.FAILED_TO_CONNECT,\n          ErrorCodes.WebSocketConnectionErrors.ABNORMAL_CLOSE,\n          ErrorCodes.APIErrors.ENDPOINT_UNREACHABLE,\n        ].includes(error.code) ||\n          error.code.toString().startsWith('5') ||\n          error.code.toString().startsWith('429'));\n\n      if (shouldRetry) {\n        const task = async () => {\n          await this.internalConnect(token, endpoint, peerId, iceServers);\n          return Boolean(this.initConfig && this.initConfig.endpoint);\n        };\n\n        await this.retryScheduler.schedule({\n          category: TransportFailureCategory.ConnectFailed,\n          error,\n          task,\n          originalState: this.state,\n          changeState: false,\n        });\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  async leave(notifyServer: boolean, reason = LEAVE_REASON.USER_REQUEST): Promise<void> {\n    this.retryScheduler.reset();\n    this.joinParameters = undefined;\n    HMSLogger.d(TAG, 'leaving in transport');\n    try {\n      const usage = this.pluginUsageTracker.getPluginUsage('HMSKrispPlugin');\n      if (usage) {\n        this.eventBus.analytics.publish(AnalyticsEventFactory.getKrispUsage(usage));\n      }\n      this.state = TransportState.Leaving;\n      this.publishStatsAnalytics?.stop();\n      this.subscribeStatsAnalytics?.stop();\n      this.webrtcInternals?.cleanup();\n      this.clearPeerConnections();\n      if (notifyServer) {\n        try {\n          this.signal.leave(reason);\n          HMSLogger.d(TAG, 'signal leave done');\n        } catch (err) {\n          HMSLogger.w(TAG, 'failed to send leave on websocket to server', err);\n        }\n      }\n      this.analyticsEventsService.flushFailedClientEvents();\n      this.analyticsEventsService.reset();\n      await this.signal.close();\n    } catch (err) {\n      this.eventBus.analytics.publish(AnalyticsEventFactory.disconnect(err as Error));\n      HMSLogger.e(TAG, 'leave: FAILED \u274C', err);\n    } finally {\n      this.state = TransportState.Disconnected;\n      this.observer.onStateChange(this.state);\n    }\n  }\n\n  handleLocalRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const changedFromNonWebRTCToWebRTC = !this.doesRoleNeedWebRTC(oldRole) && this.doesRoleNeedWebRTC(newRole);\n    if (!changedFromNonWebRTCToWebRTC) {\n      return;\n    }\n\n    HMSLogger.d(\n      TAG,\n      'Local peer role updated to webrtc role, creating PeerConnections and performing inital publish negotiation \u23F3',\n    );\n    this.createPeerConnections();\n    await this.negotiateOnFirstPublish();\n  };\n\n  async publish(tracks: Array<HMSLocalTrack>): Promise<void> {\n    for (const track of tracks) {\n      try {\n        await this.publishTrack(track);\n        this.connectivityListener?.onMediaPublished(track);\n      } catch (error) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.publish({\n            devices: this.deviceManager.getDevices(),\n            error: error as Error,\n          }),\n        );\n      }\n    }\n  }\n\n  async unpublish(tracks: Array<HMSLocalTrack>): Promise<void> {\n    for (const track of tracks) {\n      await this.unpublishTrack(track);\n    }\n  }\n\n  setSFUNodeId(id?: string) {\n    this.signal.setSfuNodeId(id);\n    if (!this.sfuNodeId) {\n      this.sfuNodeId = id;\n      this.publishConnection?.setSfuNodeId(id);\n      this.subscribeConnection?.setSfuNodeId(id);\n    } else if (id && this.sfuNodeId !== id) {\n      this.sfuNodeId = id;\n      this.handleSFUMigration();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  async handleSFUMigration() {\n    HMSLogger.time('sfu migration');\n    this.clearPeerConnections();\n    const peers = this.store.getPeerMap();\n    this.store.removeRemoteTracks();\n    for (const peerId in peers) {\n      const peer = peers[peerId];\n      if (peer.isLocal) {\n        continue;\n      }\n      peer.audioTrack = undefined;\n      peer.videoTrack = undefined;\n      peer.auxiliaryTracks = [];\n    }\n\n    const localPeer = this.store.getLocalPeer();\n    if (!localPeer) {\n      return;\n    }\n    this.createPeerConnections();\n    this.trackStates.clear();\n    await this.negotiateOnFirstPublish();\n    const streamMap = new Map<string, HMSLocalStream>();\n    if (localPeer.audioTrack) {\n      const stream = localPeer.audioTrack.stream as HMSLocalStream;\n      if (!streamMap.get(stream.id)) {\n        streamMap.set(stream.id, new HMSLocalStream(new MediaStream()));\n      }\n      const newTrack = localPeer.audioTrack.clone(streamMap.get(stream.id)!);\n      this.store.removeTrack(localPeer.audioTrack);\n      localPeer.audioTrack.cleanup();\n      await this.publishTrack(newTrack);\n      localPeer.audioTrack = newTrack;\n    }\n\n    if (localPeer.videoTrack) {\n      const stream = localPeer.videoTrack.stream as HMSLocalStream;\n      if (!streamMap.get(stream.id)) {\n        streamMap.set(stream.id, new HMSLocalStream(new MediaStream()));\n      }\n      this.store.removeTrack(localPeer.videoTrack);\n      const newTrack = localPeer.videoTrack.clone(streamMap.get(stream.id)!);\n      localPeer.videoTrack.cleanup();\n      await this.publishTrack(newTrack);\n      localPeer.videoTrack = newTrack;\n    }\n\n    const auxTracks = [];\n    while (localPeer.auxiliaryTracks.length > 0) {\n      const track = localPeer.auxiliaryTracks.shift();\n      if (track) {\n        const stream = track.stream as HMSLocalStream;\n        if (!streamMap.get(stream.id)) {\n          /**\n           *  For screenshare, you need to clone the current stream only, cloning the track will not work otherwise, it will have all\n           *  correct states but bytes sent and all other stats would be 0\n           **/\n          streamMap.set(\n            stream.id,\n            new HMSLocalStream(track.source === 'screen' ? stream.nativeStream.clone() : new MediaStream()),\n          );\n        }\n        this.store.removeTrack(track);\n        const newTrack = track.clone(streamMap.get(stream.id)!);\n        if (newTrack.type === 'video' && newTrack.source === 'screen') {\n          /**\n           * Store all the stream so they can be stopped when screenshare stopped. Stopping before is not helping\n           */\n          this.screenStream.add(stream.nativeStream);\n          this.screenStream.add(newTrack.stream.nativeStream);\n          newTrack.nativeTrack.addEventListener('ended', this.onScreenshareStop);\n        }\n        track.cleanup();\n        await this.publishTrack(newTrack);\n        auxTracks.push(newTrack);\n      }\n    }\n    localPeer.auxiliaryTracks = auxTracks;\n    streamMap.clear();\n    this.listener?.onSFUMigration?.();\n    HMSLogger.timeEnd('sfu migration');\n  }\n\n  /**\n   * TODO: check if track.publishedTrackId be used instead of the hack to match with track with same type and\n   * source. The hack won't work if there are multiple tracks with same source and type.\n   */\n  trackUpdate(track: HMSLocalTrack, enabled: boolean) {\n    const currentTrackStates = Array.from(this.trackStates.values());\n    const originalTrackState = currentTrackStates.find(\n      trackState => track.type === trackState.type && track.source === trackState.source,\n    );\n    /**\n     * on call interruption, we just send disabled track update to biz to send to remote peers WITHOUT sending to the local peer\n     * in this case, track.enabled would still be true which is why we are using the value from the localVideoEnabled event\n     *  */\n    if (originalTrackState) {\n      const newTrackState = new TrackState({\n        ...originalTrackState,\n        mute: !enabled,\n      });\n      this.trackStates.set(originalTrackState.track_id, newTrackState);\n      HMSLogger.d(TAG, 'Track Update', this.trackStates, track);\n      this.signal.trackUpdate(new Map([[originalTrackState.track_id, newTrackState]]));\n      const peer = this.store.getLocalPeer();\n      // don't send update in case of call interruption\n      if (peer && enabled === track.enabled) {\n        this.listener?.onTrackUpdate(enabled ? HMSTrackUpdate.TRACK_UNMUTED : HMSTrackUpdate.TRACK_MUTED, track, peer);\n      }\n    }\n  }\n\n  private async publishTrack(track: HMSLocalTrack): Promise<void> {\n    track.publishedTrackId = track.getTrackIDBeingSent();\n    HMSLogger.d(\n      TAG,\n      `\u23F3 publishTrack: trackId=${track.trackId}, toPublishTrackId=${track.publishedTrackId}`,\n      `${track}`,\n    );\n    this.trackStates.set(track.publishedTrackId, new TrackState(track));\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.PUBLISH,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.setConnection(this.publishConnection!);\n    const simulcastLayers = this.store.getSimulcastLayers(track.source!);\n    stream.addTransceiver(track, simulcastLayers);\n    HMSLogger.time(`publish-${track.trackId}-${track.type}`);\n    await p;\n    HMSLogger.timeEnd(`publish-${track.trackId}-${track.type}`);\n    // add track to store after publish\n    this.store.addTrack(track);\n\n    await stream\n      .setMaxBitrateAndFramerate(track)\n      .then(() => {\n        HMSLogger.d(\n          TAG,\n          `Setting maxBitrate=${track.settings.maxBitrate} kpbs${\n            track instanceof HMSLocalVideoTrack ? ` and maxFramerate=${track.settings.maxFramerate}` : ''\n          } for ${track.source} ${track.type} ${track.trackId}`,\n        );\n      })\n      .catch(error => HMSLogger.w(TAG, 'Failed setting maxBitrate and maxFramerate', error));\n\n    track.isPublished = true;\n\n    HMSLogger.d(TAG, `\u2705 publishTrack: trackId=${track.trackId}`, `${track}`, this.callbacks);\n  }\n\n  private async unpublishTrack(track: HMSLocalTrack): Promise<void> {\n    HMSLogger.d(TAG, `\u23F3 unpublishTrack: trackId=${track.trackId}`, `${track}`);\n    if (track.publishedTrackId && this.trackStates.has(track.publishedTrackId)) {\n      this.trackStates.delete(track.publishedTrackId);\n    } else {\n      // TODO: hotfix to unpublish replaced video track id, solve it properly\n      // it won't work when there are multiple regular video tracks, hmslocalvideotrack can store\n      // the original initial track id for a proper fix\n      const currentTrackStates = Array.from(this.trackStates.values());\n      const originalTrackState = currentTrackStates.find(\n        trackState => track.type === trackState.type && track.source === trackState.source,\n      );\n      if (originalTrackState) {\n        this.trackStates.delete(originalTrackState.track_id);\n      }\n    }\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.UNPUBLISH,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.removeSender(track);\n    await p;\n    await track.cleanup();\n    if (track.source === 'screen' && this.screenStream) {\n      // stop older screenshare tracks to remove the screenshare banner\n      this.screenStream.forEach(stream => {\n        stream.getTracks().forEach(_track => {\n          _track.stop();\n        });\n        this.screenStream.delete(stream);\n      });\n    }\n    // remove track from store on unpublish\n    this.store.removeTrack(track);\n    HMSLogger.d(TAG, `\u2705 unpublishTrack: trackId=${track.trackId}`, this.callbacks);\n  }\n\n  private async clearPeerConnections() {\n    clearTimeout(this.publishDtlsStateTimer);\n    this.publishDtlsStateTimer = 0;\n    clearTimeout(this.publishDisconnectTimer);\n    this.publishDisconnectTimer = 0;\n    this.lastPublishDtlsState = 'new';\n    this.publishConnection?.close();\n    this.subscribeConnection?.close();\n    this.publishConnection = null;\n    this.subscribeConnection = null;\n  }\n\n  private waitForLocalRoleAvailability() {\n    if (this.store.hasRoleDetailsArrived()) {\n      return;\n    } else {\n      return new Promise<void>(resolve => {\n        this.eventBus.policyChange.subscribeOnce(() => resolve());\n      });\n    }\n  }\n\n  private async createConnectionsAndNegotiateJoin(\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n  ) {\n    const isWebRTC = this.doesLocalPeerNeedWebRTC();\n    if (isWebRTC) {\n      this.createPeerConnections();\n    }\n\n    this.analyticsTimer.start(TimedEvent.JOIN_RESPONSE);\n    await this.negotiateJoinWithRetry({\n      name: customData.name,\n      data: customData.metaData,\n      autoSubscribeVideo,\n      isWebRTC,\n    });\n    this.analyticsTimer.end(TimedEvent.JOIN_RESPONSE);\n  }\n\n  private createPeerConnections() {\n    const logConnectionState = (\n      role: HMSConnectionRole,\n      newState: RTCIceConnectionState | RTCPeerConnectionState,\n      ice = false,\n    ) => {\n      const log = ['disconnected', 'failed'].includes(newState)\n        ? HMSLogger.w.bind(HMSLogger)\n        : HMSLogger.d.bind(HMSLogger);\n\n      log(TAG, `${HMSConnectionRole[role]} ${ice ? 'ice' : ''} connection state change: ${newState}`);\n    };\n    if (this.initConfig) {\n      const publishConnectionObserver: IPublishConnectionObserver = {\n        onRenegotiationNeeded: async () => {\n          await this.performPublishRenegotiation();\n        },\n\n        // eslint-disable-next-line complexity\n        onDTLSTransportStateChange: (state?: RTCDtlsTransportState) => {\n          const log = state === 'failed' ? HMSLogger.w.bind(HMSLogger) : HMSLogger.d.bind(HMSLogger);\n          log(TAG, `Publisher on dtls transport state change: ${state}`);\n\n          if (!state || this.lastPublishDtlsState === state) {\n            return;\n          }\n\n          this.lastPublishDtlsState = state;\n          if (this.publishDtlsStateTimer !== 0) {\n            clearTimeout(this.publishDtlsStateTimer);\n            this.publishDtlsStateTimer = 0;\n          }\n\n          if (state !== 'connecting' && state !== 'failed') {\n            return;\n          }\n\n          const timeout = this.initConfig?.config?.dtlsStateTimeouts?.[state];\n          if (!timeout || timeout <= 0) {\n            return;\n          }\n\n          // if we're in connecting check again after timeout\n          // hotfix: mitigate https://100ms.atlassian.net/browse/LIVE-1924\n          this.publishDtlsStateTimer = window.setTimeout(() => {\n            const newState = this.publishConnection?.nativeConnection.connectionState;\n            if (newState && state && newState === state) {\n              // stuck in either `connecting` or `failed` state for long time\n              const err = ErrorFactory.WebrtcErrors.ICEFailure(\n                HMSAction.PUBLISH,\n                `DTLS transport state ${state} timeout:${timeout}ms`,\n                true,\n              );\n              this.eventBus.analytics.publish(AnalyticsEventFactory.disconnect(err));\n              this.observer.onFailure(err);\n            }\n          }, timeout);\n        },\n\n        onDTLSTransportError: (error: Error) => {\n          HMSLogger.e(TAG, `onDTLSTransportError ${error.name} ${error.message}`, error);\n          this.eventBus.analytics.publish(AnalyticsEventFactory.disconnect(error));\n        },\n\n        onIceConnectionChange: async (newState: RTCIceConnectionState) => {\n          logConnectionState(HMSConnectionRole.Publish, newState, true);\n        },\n\n        onConnectionStateChange: async (newState: RTCPeerConnectionState) => {\n          logConnectionState(HMSConnectionRole.Publish, newState, false);\n          if (newState === 'new') {\n            return;\n          }\n\n          if (newState === 'connected') {\n            this.connectivityListener?.onICESuccess(true);\n            this.publishConnection?.handleSelectedIceCandidatePairs();\n          } else if (newState === 'failed') {\n            await this.handleIceConnectionFailure(\n              HMSConnectionRole.Publish,\n              ErrorFactory.WebrtcErrors.ICEFailure(\n                HMSAction.PUBLISH,\n                `local candidate - ${this.publishConnection?.selectedCandidatePair?.local?.candidate}; remote candidate - ${this.publishConnection?.selectedCandidatePair?.remote?.candidate}`,\n              ),\n            );\n          } else {\n            this.publishDisconnectTimer = window.setTimeout(() => {\n              if (this.publishConnection?.connectionState !== 'connected') {\n                this.handleIceConnectionFailure(\n                  HMSConnectionRole.Publish,\n                  ErrorFactory.WebrtcErrors.ICEDisconnected(\n                    HMSAction.PUBLISH,\n                    `local candidate - ${this.publishConnection?.selectedCandidatePair?.local?.candidate}; remote candidate - ${this.publishConnection?.selectedCandidatePair?.remote?.candidate}`,\n                  ),\n                );\n              }\n            }, ICE_DISCONNECTION_TIMEOUT);\n          }\n        },\n\n        onIceCandidate: candidate => {\n          this.connectivityListener?.onICECandidate(candidate, true);\n        },\n\n        onSelectedCandidatePairChange: candidatePair => {\n          this.connectivityListener?.onSelectedICECandidatePairChange(candidatePair, true);\n        },\n      };\n\n      const subscribeConnectionObserver: ISubscribeConnectionObserver = {\n        onApiChannelMessage: (message: string) => {\n          this.observer.onNotification(JSON.parse(message));\n        },\n\n        onTrackAdd: (track: HMSTrack) => {\n          HMSLogger.d(TAG, '[Subscribe] onTrackAdd', `${track}`);\n          this.observer.onTrackAdd(track);\n        },\n\n        onTrackRemove: (track: HMSTrack) => {\n          HMSLogger.d(TAG, '[Subscribe] onTrackRemove', `${track}`);\n          this.observer.onTrackRemove(track);\n        },\n\n        onIceConnectionChange: async (newState: RTCIceConnectionState) => {\n          logConnectionState(HMSConnectionRole.Subscribe, newState, true);\n\n          if (newState === 'connected') {\n            const callback = this.callbacks.get(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n            this.callbacks.delete(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n\n            this.connectivityListener?.onICESuccess(false);\n            if (callback) {\n              callback.promise.resolve(true);\n            }\n          }\n        },\n\n        onConnectionStateChange: async (newState: RTCPeerConnectionState) => {\n          logConnectionState(HMSConnectionRole.Subscribe, newState, false);\n\n          if (newState === 'failed') {\n            await this.handleIceConnectionFailure(\n              HMSConnectionRole.Subscribe,\n              ErrorFactory.WebrtcErrors.ICEFailure(\n                HMSAction.SUBSCRIBE,\n                `local candidate - ${this.subscribeConnection?.selectedCandidatePair?.local?.candidate}; remote candidate - ${this.subscribeConnection?.selectedCandidatePair?.remote?.candidate}`,\n              ),\n            );\n          } else if (newState === 'disconnected') {\n            setTimeout(() => {\n              if (this.subscribeConnection?.connectionState === 'disconnected') {\n                this.handleIceConnectionFailure(\n                  HMSConnectionRole.Subscribe,\n                  ErrorFactory.WebrtcErrors.ICEDisconnected(\n                    HMSAction.SUBSCRIBE,\n                    `local candidate - ${this.subscribeConnection?.selectedCandidatePair?.local?.candidate}; remote candidate - ${this.subscribeConnection?.selectedCandidatePair?.remote?.candidate}`,\n                  ),\n                );\n              }\n            }, ICE_DISCONNECTION_TIMEOUT);\n          } else if (newState === 'connected') {\n            this.subscribeConnection?.handleSelectedIceCandidatePairs();\n            const callback = this.callbacks.get(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n            this.callbacks.delete(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n\n            if (callback) {\n              callback.promise.resolve(true);\n            }\n          }\n        },\n\n        onIceCandidate: candidate => {\n          this.connectivityListener?.onICECandidate(candidate, false);\n        },\n\n        onSelectedCandidatePairChange: candidatePair => {\n          this.connectivityListener?.onSelectedICECandidatePairChange(candidatePair, false);\n        },\n      };\n      if (!this.publishConnection) {\n        this.publishConnection = new HMSPublishConnection(\n          this.signal,\n          this.initConfig.rtcConfiguration,\n          publishConnectionObserver,\n        );\n      }\n\n      if (!this.subscribeConnection) {\n        this.subscribeConnection = new HMSSubscribeConnection(\n          this.signal,\n          this.initConfig.rtcConfiguration,\n          this.isFlagEnabled.bind(this),\n          subscribeConnectionObserver,\n        );\n      }\n    }\n\n    this.webrtcInternals?.setPeerConnections({\n      publish: this.publishConnection?.nativeConnection,\n      subscribe: this.subscribeConnection?.nativeConnection,\n    });\n  }\n\n  private async negotiateJoinWithRetry({\n    name,\n    data,\n    autoSubscribeVideo,\n    isWebRTC = true,\n  }: NegotiateJoinParams & { isWebRTC: boolean }) {\n    try {\n      await this.negotiateJoin({ name, data, autoSubscribeVideo, isWebRTC });\n    } catch (error) {\n      HMSLogger.e(TAG, 'Join negotiation failed \u274C', error);\n      const hmsError =\n        error instanceof HMSException\n          ? error\n          : ErrorFactory.WebsocketMethodErrors.ServerErrors(\n              500,\n              HMSAction.JOIN,\n              `Websocket join error - ${(error as Error).message}`,\n            );\n      const shouldRetry =\n        parseInt(`${hmsError.code / 100}`) === 5 ||\n        [ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST, 429].includes(hmsError.code);\n\n      if (hmsError.code === 410) {\n        hmsError.isTerminal = true;\n      }\n\n      if (shouldRetry) {\n        this.joinRetryCount = 0;\n        hmsError.isTerminal = false;\n        const task = async () => {\n          this.joinRetryCount++;\n          return await this.negotiateJoin({ name, data, autoSubscribeVideo, isWebRTC });\n        };\n\n        await this.retryScheduler.schedule({\n          category: TransportFailureCategory.JoinWSMessageFailed,\n          error: hmsError,\n          task,\n          originalState: TransportState.Joined,\n          changeState: false,\n        });\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private async negotiateJoin({\n    name,\n    data,\n    autoSubscribeVideo,\n    isWebRTC = true,\n  }: NegotiateJoinParams & { isWebRTC: boolean }): Promise<boolean> {\n    if (isWebRTC) {\n      return await this.negotiateJoinWebRTC({ name, data, autoSubscribeVideo });\n    } else {\n      return await this.negotiateJoinNonWebRTC({ name, data, autoSubscribeVideo });\n    }\n  }\n\n  private async negotiateJoinWebRTC({ name, data, autoSubscribeVideo }: NegotiateJoinParams): Promise<boolean> {\n    HMSLogger.d(TAG, '\u23F3 join: Negotiating over PUBLISH connection');\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot negotiate');\n      return false;\n    }\n    const offer = await this.publishConnection.createOffer();\n    await this.publishConnection.setLocalDescription(offer);\n    const serverSubDegrade = this.isFlagEnabled(InitFlags.FLAG_SERVER_SUB_DEGRADATION);\n    const simulcast = this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST);\n    const onDemandTracks = this.isFlagEnabled(InitFlags.FLAG_ON_DEMAND_TRACKS);\n    const answer = await this.signal.join(\n      name,\n      data,\n      !autoSubscribeVideo,\n      serverSubDegrade,\n      simulcast,\n      onDemandTracks,\n      offer,\n    );\n    this.setSFUNodeId(answer?.sfu_node_id);\n    await this.publishConnection.setRemoteDescription(answer);\n    for (const candidate of this.publishConnection.candidates) {\n      await this.publishConnection.addIceCandidate(candidate);\n    }\n\n    this.publishConnection.initAfterJoin();\n    return !!answer;\n  }\n\n  private async negotiateJoinNonWebRTC({ name, data, autoSubscribeVideo }: NegotiateJoinParams): Promise<boolean> {\n    HMSLogger.d(TAG, '\u23F3 join: Negotiating Non-WebRTC');\n    const serverSubDegrade = this.isFlagEnabled(InitFlags.FLAG_SERVER_SUB_DEGRADATION);\n    const simulcast = this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST);\n    const onDemandTracks = this.isFlagEnabled(InitFlags.FLAG_ON_DEMAND_TRACKS);\n    const response = await this.signal.join(\n      name,\n      data,\n      !autoSubscribeVideo,\n      serverSubDegrade,\n      simulcast,\n      onDemandTracks,\n    );\n    this.setSFUNodeId(response?.sfu_node_id);\n    return !!response;\n  }\n\n  /**\n   * Negotiate on first publish after changing role from non-webrtc peer to webrtc peer by sending offer\n   */\n  private async negotiateOnFirstPublish() {\n    HMSLogger.d(TAG, '\u23F3 Negotiating offer over PUBLISH connection');\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot negotiate');\n      return false;\n    }\n    try {\n      const offer = await this.publishConnection.createOffer(this.trackStates);\n      await this.publishConnection.setLocalDescription(offer);\n      const answer = await this.signal.offer(offer, this.trackStates);\n      await this.publishConnection.setRemoteDescription(answer);\n      for (const candidate of this.publishConnection.candidates) {\n        await this.publishConnection.addIceCandidate(candidate);\n      }\n\n      this.publishConnection.initAfterJoin();\n      return !!answer;\n    } catch (ex) {\n      // resolve for now as this might happen during migration\n      if (ex instanceof HMSException && ex.code === 421) {\n        return true;\n      }\n      throw ex;\n    }\n  }\n\n  private async performPublishRenegotiation(constraints?: RTCOfferOptions) {\n    HMSLogger.d(TAG, `\u23F3 [role=PUBLISH] onRenegotiationNeeded START`, this.trackStates);\n    const callback = this.callbacks.get(RENEGOTIATION_CALLBACK_ID);\n    if (!callback) {\n      HMSLogger.w(TAG, 'no callback found for renegotiation');\n      return;\n    }\n\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot renegotiate');\n      return;\n    }\n\n    try {\n      const offer = await this.publishConnection.createOffer(this.trackStates, constraints);\n      await this.publishConnection.setLocalDescription(offer);\n      HMSLogger.time(`renegotiation-offer-exchange`);\n      const answer = await this.signal.offer(offer, this.trackStates);\n      this.callbacks.delete(RENEGOTIATION_CALLBACK_ID);\n      HMSLogger.timeEnd(`renegotiation-offer-exchange`);\n      await this.publishConnection.setRemoteDescription(answer);\n      callback.promise.resolve(true);\n      HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded DONE \u2705`);\n    } catch (err) {\n      let ex: HMSException;\n      if (err instanceof HMSException) {\n        ex = err;\n      } else {\n        ex = ErrorFactory.GenericErrors.Unknown(HMSAction.PUBLISH, (err as Error).message);\n      }\n\n      // resolve for now as this might happen during migration\n      if (ex.code === 421) {\n        callback.promise.resolve(true);\n      } else {\n        callback.promise.reject(ex);\n      }\n      HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded FAILED \u274C`);\n    }\n  }\n\n  private async handleIceConnectionFailure(role: HMSConnectionRole, error: HMSException) {\n    // ice retry is already in progress(from disconnect state)\n    if (\n      this.retryScheduler.isTaskInProgress(\n        HMSConnectionRole.Publish\n          ? TransportFailureCategory.PublishIceConnectionFailed\n          : TransportFailureCategory.SubscribeIceConnectionFailed,\n      )\n    ) {\n      return;\n    }\n\n    if (role === HMSConnectionRole.Publish) {\n      this.retryScheduler.schedule({\n        category: TransportFailureCategory.PublishIceConnectionFailed,\n        error,\n        task: this.retryPublishIceFailedTask,\n        originalState: TransportState.Joined,\n      });\n    } else {\n      this.retryScheduler.schedule({\n        category: TransportFailureCategory.SubscribeIceConnectionFailed,\n        error,\n        task: this.retrySubscribeIceFailedTask,\n        originalState: TransportState.Joined,\n      });\n    }\n  }\n\n  private async internalConnect(token: string, initEndpoint: string, peerId: string, iceServers?: HMSICEServer[]) {\n    HMSLogger.d(TAG, 'connect: started \u23F0');\n    const connectRequestedAt = new Date();\n    try {\n      this.analyticsTimer.start(TimedEvent.INIT);\n      this.initConfig = await InitService.fetchInitConfig({\n        token,\n        peerId,\n        userAgent: this.store.getUserAgent(),\n        initEndpoint,\n        iceServers,\n      });\n      this.connectivityListener?.onInitSuccess(this.initConfig.endpoint);\n      const room = this.store.getRoom();\n      if (room) {\n        room.effectsKey = this.initConfig.config.vb?.effectsKey;\n        room.isEffectsEnabled = this.isFlagEnabled(InitFlags.FLAG_EFFECTS_SDK_ENABLED);\n        room.disableNoneLayerRequest = this.isFlagEnabled(InitFlags.FLAG_DISABLE_NONE_LAYER_REQUEST);\n        room.isVBEnabled = this.isFlagEnabled(InitFlags.FLAG_VB_ENABLED);\n        room.isHipaaEnabled = this.isFlagEnabled(InitFlags.FLAG_HIPAA_ENABLED);\n        room.isNoiseCancellationEnabled = this.isFlagEnabled(InitFlags.FLAG_NOISE_CANCELLATION);\n      }\n      this.analyticsTimer.end(TimedEvent.INIT);\n      HTTPAnalyticsTransport.setWebsocketEndpoint(this.initConfig.endpoint);\n      // if leave was called while init was going on, don't open websocket\n      this.validateNotDisconnected('post init');\n      await this.openSignal(token, peerId);\n      this.observer.onConnected();\n      this.connectivityListener?.onSignallingSuccess();\n      this.store.setSimulcastEnabled(this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST));\n      HMSLogger.d(TAG, 'Adding Analytics Transport: JsonRpcSignal');\n      this.analyticsEventsService.setTransport(this.analyticsSignalTransport);\n      this.analyticsEventsService.flush();\n      return this.initConfig;\n    } catch (error) {\n      if (this.state !== TransportState.Reconnecting) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.connect(\n            error as Error,\n            this.getAdditionalAnalyticsProperties(),\n            connectRequestedAt,\n            new Date(),\n            initEndpoint,\n          ),\n        );\n      }\n      HMSLogger.e(TAG, '\u274C internal connect: failed', error);\n      throw error;\n    }\n  }\n\n  // leave could be called between any two async tasks, which would make\n  // the state disconnected instead of connecting, throw error for those cases.\n  private validateNotDisconnected(stage: string) {\n    if (this.state === TransportState.Disconnected) {\n      HMSLogger.w(TAG, 'aborting join as transport state is disconnected');\n      throw ErrorFactory.GenericErrors.ValidationFailed(`leave called before join could complete - stage=${stage}`);\n    }\n  }\n\n  private async openSignal(token: string, peerId: string) {\n    if (!this.initConfig) {\n      throw ErrorFactory.APIErrors.InitConfigNotAvailable(HMSAction.INIT, 'Init Config not found');\n    }\n\n    HMSLogger.d(TAG, '\u23F3 internal connect: connecting to ws endpoint', this.initConfig.endpoint);\n    const url = new URL(this.initConfig.endpoint);\n    url.searchParams.set('peer', peerId);\n    url.searchParams.set('token', token);\n    url.searchParams.set('user_agent_v2', this.store.getUserAgent());\n    url.searchParams.set('protocol_version', PROTOCOL_VERSION);\n    url.searchParams.set('protocol_spec', PROTOCOL_SPEC);\n\n    this.endpoint = url.toString();\n    this.analyticsTimer.start(TimedEvent.WEBSOCKET_CONNECT);\n    await this.signal.open(this.endpoint);\n    this.analyticsTimer.end(TimedEvent.WEBSOCKET_CONNECT);\n    this.analyticsTimer.start(TimedEvent.ON_POLICY_CHANGE);\n    this.analyticsTimer.start(TimedEvent.ROOM_STATE);\n    HMSLogger.d(TAG, '\u2705 internal connect: connected to ws endpoint');\n  }\n\n  private initStatsAnalytics() {\n    if (this.isFlagEnabled(InitFlags.FLAG_PUBLISH_STATS)) {\n      this.publishStatsAnalytics = new PublishStatsAnalytics(\n        this.store,\n        this.eventBus,\n        this.getValueFromInitConfig('publishStats', 'maxSampleWindowSize', PUBLISH_STATS_SAMPLE_WINDOW),\n        this.getValueFromInitConfig('publishStats', 'maxSamplePushInterval', PUBLISH_STATS_PUSH_INTERVAL),\n      );\n\n      this.getWebrtcInternals()?.start();\n    }\n\n    if (this.isFlagEnabled(InitFlags.FLAG_SUBSCRIBE_STATS)) {\n      this.subscribeStatsAnalytics = new SubscribeStatsAnalytics(\n        this.store,\n        this.eventBus,\n        this.getValueFromInitConfig('subscribeStats', 'maxSampleWindowSize', SUBSCRIBE_STATS_SAMPLE_WINDOW),\n        this.getValueFromInitConfig('subscribeStats', 'maxSamplePushInterval', SUBSCRIBE_STATS_PUSH_INTERVAL),\n      );\n\n      this.getWebrtcInternals()?.start();\n    }\n  }\n\n  private getValueFromInitConfig(\n    baseKey: 'publishStats' | 'subscribeStats',\n    subKey: 'maxSampleWindowSize' | 'maxSamplePushInterval',\n    defaultValue: number,\n  ) {\n    return this.initConfig?.config[baseKey]?.[subKey] || defaultValue;\n  }\n\n  /**\n   * Role does not need WebRTC(peer connections to communicate to SFU) if it cannot publish or subscribe to anything\n   * @returns boolean denoting if a peer cannot publish(video, audio or screen) and cannot subscribe to any role\n   */\n  private doesRoleNeedWebRTC(role: HMSRole) {\n    if (!this.isFlagEnabled(InitFlags.FLAG_NON_WEBRTC_DISABLE_OFFER)) {\n      return true;\n    }\n\n    const isPublishing = Boolean(role.publishParams.allowed && role.publishParams.allowed?.length > 0);\n    const isSubscribing = Boolean(\n      role.subscribeParams.subscribeToRoles && role.subscribeParams.subscribeToRoles?.length > 0,\n    );\n\n    return isPublishing || isSubscribing;\n  }\n\n  private doesLocalPeerNeedWebRTC() {\n    const localRole = this.store.getLocalPeer()?.role;\n    if (!localRole) {\n      return true;\n    }\n\n    return this.doesRoleNeedWebRTC(localRole);\n  }\n\n  private retryPublishIceFailedTask = async () => {\n    /**\n     * Proceed with the retry even if the connection state is connected as the offer could have failed\n     * which will cause missing tiles if it is not sent again.\n     * Do iceRestart only if not connected\n     */\n    if (this.publishConnection) {\n      const p = new Promise<boolean>((resolve, reject) => {\n        this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n          promise: { resolve, reject },\n          action: HMSAction.RESTART_ICE,\n          extra: {},\n        });\n      });\n      await this.performPublishRenegotiation({ iceRestart: this.publishConnection.connectionState !== 'connected' });\n      await p;\n    }\n\n    return true;\n  };\n\n  private retrySubscribeIceFailedTask = async () => {\n    if (this.subscribeConnection && this.subscribeConnection.connectionState !== 'connected') {\n      const p = new Promise<boolean>((resolve, reject) => {\n        // Use subscribe constant string\n        this.callbacks.set(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID, {\n          promise: { resolve, reject },\n          action: HMSAction.RESTART_ICE,\n          extra: {},\n        });\n      });\n\n      const timeout = new Promise(resolve => {\n        setTimeout(resolve, SUBSCRIBE_TIMEOUT, false);\n      });\n\n      return Promise.race([p, timeout]) as Promise<boolean>;\n    }\n\n    return true;\n  };\n\n  private retrySignalDisconnectTask = async () => {\n    HMSLogger.d(TAG, 'retrySignalDisconnectTask', { signalConnected: this.signal.isConnected });\n    // Check if ws is disconnected - otherwise if only publishIce fails\n    // and ws connect is success then we don't need to reconnect to WebSocket\n    if (!this.signal.isConnected) {\n      await this.internalConnect(\n        this.joinParameters!.authToken,\n        this.joinParameters!.endpoint,\n        this.joinParameters!.peerId,\n        this.joinParameters!.iceServers,\n      );\n    }\n\n    // Only retry publish failed task after joining the call - not needed in preview signal reconnect\n    const ok = this.store.getRoom()?.joinedAt\n      ? this.signal.isConnected && (await this.retryPublishIceFailedTask())\n      : this.signal.isConnected;\n    // Send track update to sync local track state changes during reconnection\n    this.signal.trackUpdate(this.trackStates);\n\n    return ok;\n  };\n\n  private setTransportStateForConnect() {\n    if (this.state === TransportState.Failed) {\n      this.state = TransportState.Disconnected;\n    }\n\n    if (this.state !== TransportState.Disconnected && this.state !== TransportState.Reconnecting) {\n      throw ErrorFactory.WebsocketMethodErrors.AlreadyJoined(\n        HMSAction.JOIN,\n        `Cannot join a meeting in ${this.state} state`,\n      );\n    }\n\n    if (this.state === TransportState.Disconnected) {\n      this.state = TransportState.Connecting;\n      this.observer.onStateChange(this.state);\n    }\n  }\n\n  private sendErrorAnalyticsEvent(error: HMSException, category: TransportFailureCategory) {\n    const additionalProps = this.getAdditionalAnalyticsProperties();\n    let event: AnalyticsEvent;\n    switch (category) {\n      case TransportFailureCategory.ConnectFailed:\n        event = AnalyticsEventFactory.connect(error, additionalProps);\n        break;\n      case TransportFailureCategory.SignalDisconnect:\n        event = AnalyticsEventFactory.disconnect(error, additionalProps);\n        break;\n      case TransportFailureCategory.JoinWSMessageFailed:\n        event = AnalyticsEventFactory.join({\n          error,\n          time: this.analyticsTimer.getTimeTaken(TimedEvent.JOIN),\n          init_response_time: this.analyticsTimer.getTimeTaken(TimedEvent.INIT),\n          ws_connect_time: this.analyticsTimer.getTimeTaken(TimedEvent.WEBSOCKET_CONNECT),\n          on_policy_change_time: this.analyticsTimer.getTimeTaken(TimedEvent.ON_POLICY_CHANGE),\n          local_audio_track_time: this.analyticsTimer.getTimeTaken(TimedEvent.LOCAL_AUDIO_TRACK),\n          local_video_track_time: this.analyticsTimer.getTimeTaken(TimedEvent.LOCAL_VIDEO_TRACK),\n          retries_join: this.joinRetryCount,\n        });\n        break;\n      case TransportFailureCategory.PublishIceConnectionFailed:\n        event = AnalyticsEventFactory.publish({ error });\n        break;\n      case TransportFailureCategory.SubscribeIceConnectionFailed:\n        event = AnalyticsEventFactory.subscribeFail(error);\n        break;\n    }\n    this.eventBus.analytics.publish(event!);\n  }\n\n  getSubscribeConnection() {\n    return this.subscribeConnection;\n  }\n\n  getAdditionalAnalyticsProperties(): AdditionalAnalyticsProperties {\n    const network_info = getNetworkInfo();\n    const document_hidden = typeof document !== 'undefined' && document.hidden;\n    const num_degraded_tracks = this.store.getRemoteVideoTracks().filter(track => track.degraded).length;\n    const publishBitrate = this.getWebrtcInternals()?.getCurrentStats()?.getLocalPeerStats()?.publish?.bitrate;\n    const subscribeBitrate = this.getWebrtcInternals()?.getCurrentStats()?.getLocalPeerStats()?.subscribe?.bitrate;\n\n    return {\n      network_info,\n      document_hidden,\n      num_degraded_tracks,\n      bitrate: {\n        publish: publishBitrate,\n        subscribe: subscribeBitrate,\n      },\n      max_sub_bitrate: this.maxSubscribeBitrate,\n      recent_pong_response_times: this.signal.getPongResponseTimes(),\n      transport_state: this.state,\n    };\n  }\n}\n", "import { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\n\nexport interface AuthToken {\n  roomId: string;\n  userId: string;\n  role: string;\n}\n\nexport default function decodeJWT(token?: string): AuthToken {\n  if (!token || token.length === 0) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      'Token cannot be an empty string or undefined or null',\n    );\n  }\n\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      `Expected 3 '.' separate fields - header, payload and signature respectively`,\n    );\n  }\n\n  const payloadStr = atob(parts[1]);\n  try {\n    const payload = JSON.parse(payloadStr);\n    return {\n      roomId: payload.room_id,\n      userId: payload.user_id,\n      role: payload.role,\n    } as AuthToken;\n  } catch (err) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      `couldn't parse to json - ${(err as Error).message}`,\n    );\n  }\n}\n", "import HMSRoom from './models/HMSRoom';\nimport { HMSLocalPeer } from './models/peer';\nimport { HMSPeerListIterator } from './HMSPeerListIterator';\nimport { LocalTrackManager } from './LocalTrackManager';\nimport { NetworkTestManager } from './NetworkTestManager';\nimport RoleChangeManager from './RoleChangeManager';\nimport { Store } from './store';\nimport { WakeLockManager } from './WakeLockManager';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { HMSAnalyticsLevel } from '../analytics/AnalyticsEventLevel';\nimport { AnalyticsEventsService } from '../analytics/AnalyticsEventsService';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { AudioSinkManager } from '../audio-sink-manager';\nimport { PluginUsageTracker } from '../common/PluginUsageTracker';\nimport { DeviceManager } from '../device-manager';\nimport { AudioOutputManager } from '../device-manager/AudioOutputManager';\nimport { DeviceStorageManager } from '../device-manager/DeviceStorage';\nimport { HMSDiagnosticsConnectivityListener } from '../diagnostics/interfaces';\nimport { FeedbackService, HMSSessionFeedback, HMSSessionInfo } from '../end-call-feedback';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory } from '../error/ErrorFactory';\nimport { HMSAction } from '../error/HMSAction';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport {\n  HMSAudioCodec,\n  HMSChangeMultiTrackStateParams,\n  HMSConfig,\n  HMSConnectionQualityListener,\n  HMSDeviceChangeEvent,\n  HMSFrameworkInfo,\n  HMSMessageInput,\n  HMSPeerType,\n  HMSPlaylistSettings,\n  HMSPlaylistType,\n  HMSPreviewConfig,\n  HMSRole,\n  HMSRoleChangeRequest,\n  HMSScreenShareConfig,\n  HMSVideoCodec,\n  TokenRequest,\n  TokenRequestOptions,\n} from '../interfaces';\nimport { DeviceChangeListener } from '../interfaces/devices';\nimport { IErrorListener } from '../interfaces/error-listener';\nimport { HLSConfig, HLSTimedMetadata, StopHLSConfig } from '../interfaces/hls-config';\nimport { HMSInterface } from '../interfaces/hms';\nimport { HMSLeaveRoomRequest } from '../interfaces/leave-room-request';\nimport { HMSPeerListIteratorOptions } from '../interfaces/peer-list-iterator';\nimport { HMSPreviewListener } from '../interfaces/preview-listener';\nimport { RTMPRecordingConfig } from '../interfaces/rtmp-recording-config';\nimport InitialSettings from '../interfaces/settings';\nimport { HMSAudioListener, HMSPeerUpdate, HMSTrackUpdate, HMSUpdateListener } from '../interfaces/update-listener';\nimport { PlaylistManager, TranscriptionConfig } from '../internal';\nimport { HMSAudioTrackSettingsBuilder, HMSVideoTrackSettingsBuilder } from '../media/settings';\nimport { HMSLocalStream } from '../media/streams/HMSLocalStream';\nimport {\n  HMSLocalAudioTrack,\n  HMSLocalTrack,\n  HMSLocalVideoTrack,\n  HMSRemoteTrack,\n  HMSTrackSource,\n  HMSTrackType,\n  HMSVideoTrack,\n} from '../media/tracks';\nimport {\n  HMSNotificationMethod,\n  PeerLeaveRequestNotification,\n  PeerNotificationInfo,\n  SendMessage,\n} from '../notification-manager';\nimport { createRemotePeer } from '../notification-manager/managers/utils';\nimport { NotificationManager } from '../notification-manager/NotificationManager';\nimport { DebugInfo } from '../schema';\nimport { SessionStore } from '../session-store';\nimport { InteractivityCenter } from '../session-store/interactivity-center';\nimport { InitConfig, InitFlags } from '../signal/init/models';\nimport {\n  FindPeerByNameRequestParams,\n  HLSRequestParams,\n  HLSTimedMetadataParams,\n  HLSVariant,\n  StartRTMPOrRecordingRequestParams,\n  StartTranscriptionRequestParams,\n} from '../signal/interfaces';\nimport HMSTransport from '../transport';\nimport ITransportObserver from '../transport/ITransportObserver';\nimport { TransportState } from '../transport/models/TransportState';\nimport { getAnalyticsDeviceId } from '../utils/analytics-deviceId';\nimport {\n  DEFAULT_PLAYLIST_AUDIO_BITRATE,\n  DEFAULT_PLAYLIST_VIDEO_BITRATE,\n  HAND_RAISE_GROUP_NAME,\n  LEAVE_REASON,\n} from '../utils/constants';\nimport { fetchWithRetry } from '../utils/fetch';\nimport decodeJWT from '../utils/jwt';\nimport HMSLogger, { HMSLogLevel } from '../utils/logger';\nimport { HMSAudioContextHandler } from '../utils/media';\nimport { isNode } from '../utils/support';\nimport { workerSleep } from '../utils/timer-utils';\nimport { validateMediaDevicesExistence, validatePublishParams, validateRTCPeerConnection } from '../utils/validations';\n\nconst INITIAL_STATE = {\n  published: false,\n  isInitialised: false,\n  isReconnecting: false,\n  isPreviewInProgress: false,\n  isPreviewCalled: false,\n  isJoinInProgress: false,\n  deviceManagersInitialised: false,\n};\n\nexport class HMSSdk implements HMSInterface {\n  private transport!: HMSTransport;\n  private readonly TAG = '[HMSSdk]:';\n  public listener?: HMSUpdateListener;\n  private errorListener?: IErrorListener;\n  private deviceChangeListener?: DeviceChangeListener;\n  private audioListener?: HMSAudioListener;\n  public store!: Store;\n  private notificationManager?: NotificationManager;\n  /** @internal */\n  public deviceManager!: DeviceManager;\n  private audioSinkManager!: AudioSinkManager;\n  private playlistManager!: PlaylistManager;\n  private audioOutput!: AudioOutputManager;\n  private transportState: TransportState = TransportState.Disconnected;\n  private roleChangeManager?: RoleChangeManager;\n  /** @internal */\n  public localTrackManager!: LocalTrackManager;\n  private analyticsEventsService!: AnalyticsEventsService;\n  private analyticsTimer = new AnalyticsTimer();\n  private eventBus!: EventBus;\n  private networkTestManager!: NetworkTestManager;\n  private wakeLockManager!: WakeLockManager;\n  private sessionStore!: SessionStore;\n  private interactivityCenter!: InteractivityCenter;\n  private pluginUsageTracker!: PluginUsageTracker;\n  private sdkState = { ...INITIAL_STATE };\n  private frameworkInfo?: HMSFrameworkInfo;\n  private isDiagnostics = false;\n  /**\n   * will be set post join\n   * this will not be reset on leave but after feedback success\n   * we will just clean token after successful submit feedback\n   * will be replaced when a newer join happens.\n   */\n  private sessionPeerInfo?: HMSSessionInfo;\n\n  private playlistSettings: HMSPlaylistSettings = {\n    video: {\n      bitrate: DEFAULT_PLAYLIST_VIDEO_BITRATE,\n    },\n    audio: {\n      bitrate: DEFAULT_PLAYLIST_AUDIO_BITRATE,\n    },\n  };\n\n  private setSessionPeerInfo(websocketURL: string, peer?: HMSLocalPeer) {\n    const room = this.store.getRoom();\n    if (!peer || !room) {\n      HMSLogger.e(this.TAG, 'setSessionPeerInfo> Local peer or room is undefined');\n      return;\n    }\n    this.sessionPeerInfo = {\n      peer: {\n        peer_id: peer.peerId,\n        role: peer.role?.name,\n        joined_at: peer.joinedAt?.valueOf() || 0,\n        room_name: room.name,\n        session_started_at: room.startedAt?.valueOf() || 0,\n        user_data: peer.customerUserId,\n        user_name: peer.name,\n        template_id: room.templateId,\n        session_id: room.sessionId,\n        token: this.store.getConfig()?.authToken,\n      },\n      agent: this.store.getUserAgent(),\n      device_id: getAnalyticsDeviceId(),\n      cluster: {\n        websocket_url: websocketURL,\n      },\n      timestamp: Date.now(),\n    };\n  }\n  private initNotificationManager() {\n    if (!this.notificationManager) {\n      this.notificationManager = new NotificationManager(\n        this.store,\n        this.eventBus,\n        this.transport!,\n        this.listener,\n        this.audioListener,\n      );\n    }\n  }\n\n  /** @internal */\n  initStoreAndManagers(listener: HMSPreviewListener | HMSUpdateListener | HMSDiagnosticsConnectivityListener) {\n    this.listener = listener as unknown as HMSUpdateListener;\n    this.errorListener = listener;\n    this.deviceChangeListener = listener;\n    this.store?.setErrorListener(this.errorListener);\n\n    if (this.sdkState.isInitialised) {\n      /**\n       * Set listener after both join and preview, since they can have different listeners\n       */\n      this.notificationManager?.setListener(this.listener);\n      this.audioSinkManager.setListener(this.listener);\n      this.interactivityCenter.setListener(this.listener);\n      this.transport.setListener(this.listener);\n      return;\n    }\n\n    this.sdkState.isInitialised = true;\n    this.store = new Store();\n    this.store.setErrorListener(this.errorListener);\n    this.eventBus = new EventBus();\n    this.pluginUsageTracker = new PluginUsageTracker(this.eventBus);\n    this.wakeLockManager = new WakeLockManager();\n    this.networkTestManager = new NetworkTestManager(this.eventBus, this.listener);\n    this.playlistManager = new PlaylistManager(this, this.eventBus);\n    this.deviceManager = new DeviceManager(this.store, this.eventBus);\n    this.audioSinkManager = new AudioSinkManager(this.store, this.deviceManager, this.eventBus);\n    this.audioOutput = new AudioOutputManager(this.deviceManager, this.audioSinkManager);\n    this.audioSinkManager.setListener(this.listener);\n    this.eventBus.autoplayError.subscribe(this.handleAutoplayError);\n    this.localTrackManager = new LocalTrackManager(\n      this.store,\n      this.observer,\n      this.deviceManager,\n      this.eventBus,\n      this.analyticsTimer,\n    );\n    this.analyticsEventsService = new AnalyticsEventsService(this.store);\n    this.transport = new HMSTransport(\n      this.observer,\n      this.deviceManager,\n      this.store,\n      this.eventBus,\n      this.analyticsEventsService,\n      this.analyticsTimer,\n      this.pluginUsageTracker,\n    );\n    // add diagnostics callbacks if present\n    if ('onInitSuccess' in listener) {\n      this.transport.setConnectivityListener(listener);\n    }\n    this.sessionStore = new SessionStore(this.transport);\n    this.interactivityCenter = new InteractivityCenter(this.transport, this.store, this.listener);\n    /**\n     * Note: Subscribe to events here right after creating stores and managers\n     * to not miss events that are published before the handlers are subscribed.\n     */\n    this.eventBus.analytics.subscribe(this.sendAnalyticsEvent);\n    this.eventBus.deviceChange.subscribe(this.handleDeviceChange);\n    this.eventBus.localVideoUnmutedNatively.subscribe(this.unpauseRemoteVideoTracks);\n    this.eventBus.localAudioUnmutedNatively.subscribe(this.unpauseRemoteVideoTracks);\n    this.eventBus.audioPluginFailed.subscribe(this.handleAudioPluginError);\n    this.eventBus.error.subscribe(this.handleError);\n  }\n\n  private validateJoined(name: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, `Not connected - ${name}`);\n    }\n  }\n\n  // @ts-ignore\n  private sendHLSAnalytics(error: HMSException) {\n    this.sendAnalyticsEvent(AnalyticsEventFactory.hlsPlayerError(error));\n  }\n\n  async refreshDevices() {\n    this.validateJoined('refreshDevices');\n    await this.deviceManager.init(true);\n  }\n\n  getWebrtcInternals() {\n    return this.transport?.getWebrtcInternals();\n  }\n\n  getDebugInfo(): DebugInfo | undefined {\n    if (!this.transport) {\n      HMSLogger.e(this.TAG, `Transport is not defined`);\n      throw new Error('getDebugInfo can only be called after join');\n    }\n    const websocketURL = this.transport.getWebsocketEndpoint();\n    const enabledFlags = Object.values(InitFlags).filter(flag => this.transport.isFlagEnabled(flag));\n    const initEndpoint = this.store.getConfig()?.initEndpoint;\n    return {\n      websocketURL,\n      enabledFlags,\n      initEndpoint,\n    };\n  }\n\n  getSessionStore() {\n    return this.sessionStore;\n  }\n\n  getPlaylistManager(): PlaylistManager {\n    return this.playlistManager;\n  }\n\n  getRecordingState() {\n    return this.store.getRoom()?.recording;\n  }\n\n  getRTMPState() {\n    return this.store.getRoom()?.rtmp;\n  }\n\n  getHLSState() {\n    return this.store.getRoom()?.hls;\n  }\n\n  getTranscriptionState() {\n    return this.store.getRoom()?.transcriptions;\n  }\n\n  getTemplateAppData() {\n    return this.store.getTemplateAppData();\n  }\n\n  getInteractivityCenter() {\n    return this.interactivityCenter;\n  }\n\n  getPeerListIterator(options?: HMSPeerListIteratorOptions) {\n    return new HMSPeerListIterator(this.transport, this.store, options);\n  }\n\n  updatePlaylistSettings(options: HMSPlaylistSettings) {\n    if (options.video) {\n      Object.assign(this.playlistSettings.video, options.video);\n    }\n    if (options.audio) {\n      Object.assign(this.playlistSettings.audio, options.audio);\n    }\n  }\n\n  private handleAutoplayError = (error: HMSException) => {\n    this.errorListener?.onError?.(error);\n  };\n\n  private get localPeer(): HMSLocalPeer | undefined {\n    return this.store?.getLocalPeer();\n  }\n\n  private observer: ITransportObserver = {\n    onNotification: (message: any) => {\n      if (message.method === HMSNotificationMethod.PEER_LEAVE_REQUEST) {\n        this.handlePeerLeaveRequest(message.params as PeerLeaveRequestNotification);\n        return;\n      }\n\n      switch (message.method) {\n        case HMSNotificationMethod.POLICY_CHANGE:\n          this.analyticsTimer.end(TimedEvent.ON_POLICY_CHANGE);\n          break;\n        case HMSNotificationMethod.PEER_LIST:\n          this.analyticsTimer.end(TimedEvent.PEER_LIST);\n          this.sendJoinAnalyticsEvent(this.sdkState.isPreviewCalled);\n          break;\n        case HMSNotificationMethod.ROOM_STATE:\n          this.analyticsTimer.end(TimedEvent.ROOM_STATE);\n          break;\n        default:\n      }\n\n      this.notificationManager?.handleNotification(message, this.sdkState.isReconnecting);\n    },\n\n    onConnected: () => {\n      this.initNotificationManager();\n    },\n\n    onTrackAdd: (track: HMSRemoteTrack) => {\n      this.notificationManager?.handleTrackAdd(track);\n    },\n\n    onTrackRemove: (track: HMSRemoteTrack) => {\n      this.notificationManager?.handleTrackRemove(track);\n    },\n\n    onFailure: (exception: HMSException) => {\n      this.errorListener?.onError(exception);\n    },\n\n    onStateChange: async (state: TransportState, error?: HMSException) => {\n      const handleFailedState = async (error?: HMSException) => {\n        await this.internalLeave(true, error);\n        /**\n         * no need to call onError here when preview/join is in progress\n         * since preview/join will call onError when they receive leave event from the above call\n         */\n        if (!this.sdkState.isPreviewInProgress && !this.sdkState.isJoinInProgress) {\n          this.errorListener?.onError?.(error!);\n        }\n        this.sdkState.isReconnecting = false;\n      };\n\n      switch (state) {\n        case TransportState.Preview:\n        case TransportState.Joined:\n          this.initNotificationManager();\n          if (this.transportState === TransportState.Reconnecting) {\n            this.listener?.onReconnected();\n          }\n          break;\n        case TransportState.Failed:\n          await handleFailedState(error);\n          break;\n        case TransportState.Reconnecting:\n          this.sdkState.isReconnecting = true;\n          this.listener?.onReconnecting(error!);\n          break;\n      }\n\n      this.transportState = state;\n      HMSLogger.d(this.TAG, 'Transport State Change', this.transportState);\n    },\n  };\n\n  private handlePeerLeaveRequest = (message: PeerLeaveRequestNotification) => {\n    const peer = message.requested_by ? this.store.getPeerById(message.requested_by) : undefined;\n    const request: HMSLeaveRoomRequest = {\n      roomEnded: message.room_end,\n      reason: message.reason,\n      requestedBy: peer,\n    };\n    this.listener?.onRemovedFromRoom(request);\n    this.internalLeave(false);\n  };\n\n  async preview(config: HMSPreviewConfig, listener: HMSPreviewListener) {\n    validateMediaDevicesExistence();\n    validateRTCPeerConnection();\n\n    if (this.sdkState.isPreviewInProgress) {\n      return Promise.reject(\n        ErrorFactory.GenericErrors.PreviewAlreadyInProgress(HMSAction.PREVIEW, 'Preview already called'),\n      );\n    }\n\n    if ([TransportState.Joined, TransportState.Reconnecting].includes(this.transportState)) {\n      return this.midCallPreview(config.asRole, config.settings);\n    }\n\n    this.analyticsTimer.start(TimedEvent.PREVIEW);\n    this.setUpPreview(config, listener);\n\n    let initSuccessful = false;\n    let networkTestFinished = false;\n    const timerId = setTimeout(() => {\n      // If init or network is not done by 3s send -1\n      if (!initSuccessful || !networkTestFinished) {\n        this.listener?.onNetworkQuality?.(-1);\n      }\n    }, 3000);\n    return new Promise<void>((resolve, reject) => {\n      const policyHandler = async () => {\n        if (this.localPeer) {\n          const newRole = config.asRole && this.store.getPolicyForRole(config.asRole);\n          this.localPeer.asRole = newRole || this.localPeer.role;\n        }\n        const tracks = await this.localTrackManager.getTracksToPublish(config.settings);\n        tracks.forEach(track => {\n          this.setLocalPeerTrack(track);\n          if (track.isTrackNotPublishing()) {\n            const error = ErrorFactory.TracksErrors.NoDataInTrack(\n              `${track.type} track has no data. muted: ${track.nativeTrack.muted}, readyState: ${track.nativeTrack.readyState}`,\n            );\n            HMSLogger.e(this.TAG, error);\n            this.sendAnalyticsEvent(\n              AnalyticsEventFactory.publish({\n                devices: this.deviceManager.getDevices(),\n                error: error,\n              }),\n            );\n            this.listener?.onError(error);\n          }\n        });\n        this.localPeer?.audioTrack && this.initPreviewTrackAudioLevelMonitor();\n        await this.initDeviceManagers();\n        this.sdkState.isPreviewInProgress = false;\n        this.analyticsTimer.end(TimedEvent.PREVIEW);\n        const room = this.store.getRoom();\n        if (room) {\n          listener.onPreview(room, tracks);\n        }\n        this.sendPreviewAnalyticsEvent();\n        resolve();\n      };\n\n      this.eventBus.policyChange.subscribeOnce(policyHandler);\n      this.eventBus.leave.subscribeOnce(this.handlePreviewError);\n      this.eventBus.leave.subscribeOnce(ex => reject(ex as HMSException));\n\n      this.transport\n        .preview(\n          config.authToken,\n          config.initEndpoint!,\n          this.localPeer!.peerId,\n          { name: config.userName, metaData: config.metaData || '' },\n          config.autoVideoSubscribe,\n          config.iceServers,\n        )\n        .then((initConfig: InitConfig | void) => {\n          initSuccessful = true;\n          clearTimeout(timerId);\n          if (initConfig && config.captureNetworkQualityInPreview) {\n            this.networkTestManager.start(initConfig.config?.networkHealth).then(() => {\n              networkTestFinished = true;\n            });\n          }\n        })\n        .catch(ex => {\n          this.handlePreviewError(ex);\n          reject(ex);\n        });\n    });\n  }\n\n  private handlePreviewError = (ex?: HMSException) => {\n    this.analyticsTimer.end(TimedEvent.PREVIEW);\n    ex && this.errorListener?.onError(ex);\n    this.sendPreviewAnalyticsEvent(ex);\n    this.sdkState.isPreviewInProgress = false;\n  };\n\n  private async midCallPreview(asRole?: string, settings?: InitialSettings): Promise<void> {\n    if (!this.localPeer || this.transportState !== TransportState.Joined) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'Not connected - midCallPreview');\n    }\n\n    const newRole = asRole && this.store.getPolicyForRole(asRole);\n    if (!newRole) {\n      throw ErrorFactory.GenericErrors.InvalidRole(HMSAction.PREVIEW, `role ${asRole} does not exist in policy`);\n    }\n    this.localPeer.asRole = newRole;\n\n    const tracks = await this.localTrackManager.getTracksToPublish(settings);\n    tracks.forEach(track => this.setLocalPeerTrack(track));\n    this.localPeer?.audioTrack && this.initPreviewTrackAudioLevelMonitor();\n    await this.initDeviceManagers();\n\n    this.listener?.onPreview(this.store.getRoom()!, tracks);\n  }\n\n  async cancelMidCallPreview() {\n    if (!this.localPeer || !this.localPeer.isInPreview()) {\n      HMSLogger.w(this.TAG, 'Cannot cancel mid call preview as preview is not in progress');\n    }\n\n    if (this.localPeer?.asRole && this.localPeer.role) {\n      const oldRole = this.localPeer.asRole;\n      const newRole = this.localPeer.role;\n      delete this.localPeer.asRole;\n      await this.roleChangeManager?.diffRolesAndPublishTracks({\n        oldRole,\n        newRole,\n      });\n\n      this.listener?.onPeerUpdate(HMSPeerUpdate.ROLE_UPDATED, this.localPeer);\n    }\n  }\n\n  private handleDeviceChange = (event: HMSDeviceChangeEvent) => {\n    if (event.isUserSelection) {\n      return;\n    }\n    HMSLogger.d(this.TAG, 'Device Change event', event);\n    this.deviceChangeListener?.onDeviceChange?.(event);\n    const disableTrackOnError = () => {\n      if (event.error && event.type) {\n        const track = event.type.includes('audio') ? this.localPeer?.audioTrack : this.localPeer?.videoTrack;\n        this.errorListener?.onError(event.error);\n        if (\n          [\n            ErrorCodes.TracksErrors.CANT_ACCESS_CAPTURE_DEVICE,\n            ErrorCodes.TracksErrors.DEVICE_IN_USE,\n            ErrorCodes.TracksErrors.DEVICE_NOT_AVAILABLE,\n          ].includes(event.error.code) &&\n          track\n        ) {\n          track.setEnabled(false);\n          this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_MUTED, track, this.localPeer!);\n        }\n      }\n    };\n    disableTrackOnError();\n  };\n\n  private handleAudioPluginError = (error: HMSException) => {\n    HMSLogger.e(this.TAG, 'Audio Plugin Error event', error);\n    this.errorListener?.onError(error);\n  };\n\n  /**\n   * This is to handle errors thrown from internal handling of audio video track changes\n   * For example, handling visibility change and making a new gum can throw an error which is currently\n   * unhandled. This will notify the app of the error.\n   * @param {HMSException} error\n   */\n  private handleError = (error: HMSException) => {\n    HMSLogger.e(this.TAG, error);\n    this.errorListener?.onError(error);\n  };\n\n  // eslint-disable-next-line complexity\n  async join(config: HMSConfig, listener: HMSUpdateListener) {\n    validateMediaDevicesExistence();\n    validateRTCPeerConnection();\n\n    if (this.sdkState.isPreviewInProgress) {\n      throw ErrorFactory.GenericErrors.NotReady(HMSAction.JOIN, \"Preview is in progress, can't join\");\n    }\n\n    // remove terminal error handling from preview(do not send preview.failed after join on disconnect)\n    this.eventBus?.leave?.unsubscribe(this.handlePreviewError);\n    this.analyticsTimer.start(TimedEvent.JOIN);\n    this.sdkState.isJoinInProgress = true;\n\n    const { roomId, userId, role } = decodeJWT(config.authToken);\n    const previewRole = this.localPeer?.asRole?.name || this.localPeer?.role?.name;\n    this.networkTestManager?.stop();\n    this.commonSetup(config, roomId, listener);\n    this.removeDevicesFromConfig(config);\n    this.store.setConfig(config);\n    /** set after config since we need config to get env for user agent */\n    this.store.createAndSetUserAgent(this.frameworkInfo);\n    HMSAudioContextHandler.resumeContext();\n    // acquire screen lock to stay awake while in call\n    const storeConfig = this.store.getConfig();\n    if (storeConfig?.autoManageWakeLock) {\n      this.wakeLockManager.acquireLock();\n    }\n\n    if (!this.localPeer) {\n      this.createAndAddLocalPeerToStore(config, role, userId);\n    } else {\n      this.localPeer.name = config.userName;\n      this.localPeer.role = this.store.getPolicyForRole(role);\n      this.localPeer.customerUserId = userId;\n      this.localPeer.metadata = config.metaData;\n      delete this.localPeer.asRole;\n    }\n\n    this.roleChangeManager = new RoleChangeManager(\n      this.store,\n      this.transport,\n      this.deviceManager,\n      this.getAndPublishTracks.bind(this),\n      this.removeTrack.bind(this),\n      this.listener,\n    );\n    this.eventBus.localRoleUpdate.subscribe(this.handleLocalRoleUpdate);\n\n    HMSLogger.d(this.TAG, `\u23F3 Joining room ${roomId}`);\n\n    HMSLogger.time(`join-room-${roomId}`);\n\n    try {\n      await this.transport.join(\n        config.authToken,\n        this.localPeer!.peerId,\n        { name: config.userName, metaData: config.metaData! },\n        config.initEndpoint!,\n        config.autoVideoSubscribe,\n        config.iceServers,\n      );\n      HMSLogger.d(this.TAG, `\u2705 Joined room ${roomId}`);\n      this.analyticsTimer.start(TimedEvent.PEER_LIST);\n      await this.notifyJoin();\n      this.sdkState.isJoinInProgress = false;\n      await this.publish(config.settings, previewRole);\n    } catch (error) {\n      this.analyticsTimer.end(TimedEvent.JOIN);\n      this.sdkState.isJoinInProgress = false;\n      this.listener?.onError(error as HMSException);\n      this.sendJoinAnalyticsEvent(this.sdkState.isPreviewCalled, error as HMSException);\n      HMSLogger.e(this.TAG, 'Unable to join room', error);\n      throw error;\n    }\n    HMSLogger.timeEnd(`join-room-${roomId}`);\n  }\n\n  private stringifyMetadata(config: HMSConfig) {\n    if (config.metaData && typeof config.metaData !== 'string') {\n      config.metaData = JSON.stringify(config.metaData);\n    } else if (!config.metaData) {\n      config.metaData = '';\n    }\n  }\n\n  private cleanup() {\n    this.cleanDeviceManagers();\n    this.eventBus.analytics.unsubscribe(this.sendAnalyticsEvent);\n    this.eventBus.localVideoUnmutedNatively.unsubscribe(this.unpauseRemoteVideoTracks);\n    this.eventBus.localAudioUnmutedNatively.unsubscribe(this.unpauseRemoteVideoTracks);\n    this.eventBus.error.unsubscribe(this.handleError);\n    this.analyticsTimer.cleanup();\n    DeviceStorageManager.cleanup();\n    this.playlistManager.cleanup();\n    this.wakeLockManager?.cleanup();\n    LocalTrackManager.cleanup();\n    this.notificationManager = undefined;\n    HMSLogger.cleanup();\n    this.sdkState = { ...INITIAL_STATE };\n    /**\n     * when leave is called after preview itself without join.\n     * Store won't have the tracks in this case\n     */\n    if (this.localPeer) {\n      this.localPeer.audioTrack?.cleanup();\n      this.localPeer.audioTrack = undefined;\n      this.localPeer.videoTrack?.cleanup();\n      this.localPeer.videoTrack = undefined;\n    }\n    this.store.cleanup();\n    this.listener = undefined;\n    if (this.roleChangeManager) {\n      this.eventBus.localRoleUpdate.unsubscribe(this.handleLocalRoleUpdate);\n    }\n  }\n\n  leave(notifyServer?: boolean) {\n    return this.internalLeave(notifyServer);\n  }\n\n  // eslint-disable-next-line complexity\n  private async internalLeave(notifyServer = true, error?: HMSException) {\n    const room = this.store?.getRoom();\n    if (room) {\n      // Wait for preview or join to finish to prevent any race conditions happening because preview/join are called multiple times\n      // This can happen when useEffects are not properly handled in case of react apps\n      // when error is terminal this will go into infinite loop so error?.isTerminal check is needed\n      while ((this.sdkState.isPreviewInProgress || this.sdkState.isJoinInProgress) && !error?.isTerminal) {\n        await workerSleep(100);\n      }\n      const roomId = room.id;\n      // setSessionJoin\n      this.setSessionPeerInfo(this.transport.getWebsocketEndpoint() || '', this.localPeer);\n      this.networkTestManager?.stop();\n      this.eventBus.leave.publish(error);\n      const peerId = this.localPeer?.peerId;\n      HMSLogger.d(this.TAG, `\u23F3 Leaving room ${roomId}, peerId=${peerId}`);\n      // browsers often put limitation on amount of time a function set on window onBeforeUnload can take in case of\n      // tab refresh or close. Therefore prioritise the leave action over anything else, if tab is closed/refreshed\n      // we would want leave to succeed to stop stucked peer for others. The followup cleanup however is important\n      // for cases where uses stays on the page post leave.\n      await this.transport?.leave(notifyServer, error ? LEAVE_REASON.SDK_REQUEST : LEAVE_REASON.USER_REQUEST);\n      this.cleanup();\n      HMSLogger.d(this.TAG, `\u2705 Left room ${roomId}, peerId=${peerId}`);\n    }\n  }\n\n  async getAuthTokenByRoomCode(tokenRequest: TokenRequest, tokenRequestOptions?: TokenRequestOptions): Promise<string> {\n    const tokenAPIURL = (tokenRequestOptions || {}).endpoint || 'https://auth.100ms.live/v2/token';\n    this.analyticsTimer.start(TimedEvent.GET_TOKEN);\n    const response = await fetchWithRetry(\n      tokenAPIURL,\n      {\n        method: 'POST',\n        body: JSON.stringify({ code: tokenRequest.roomCode, user_id: tokenRequest.userId }),\n      },\n      [429, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511],\n    );\n\n    const data = await response.json();\n    this.analyticsTimer.end(TimedEvent.GET_TOKEN);\n\n    if (!response.ok) {\n      throw ErrorFactory.APIErrors.ServerErrors(data.code, HMSAction.GET_TOKEN, data.message, false);\n    }\n\n    const { token } = data;\n    if (!token) {\n      throw Error(data.message);\n    }\n    return token;\n  }\n\n  getLocalPeer() {\n    return this.store.getLocalPeer();\n  }\n\n  getPeers() {\n    return this.store.getPeers();\n  }\n\n  getPeerMap() {\n    return this.store.getPeerMap();\n  }\n\n  getAudioOutput() {\n    return this.audioOutput;\n  }\n\n  sendMessage(type: string, message: string) {\n    this.sendMessageInternal({ message, type });\n  }\n\n  async sendBroadcastMessage(message: string, type?: string) {\n    return await this.sendMessageInternal({ message, type });\n  }\n\n  async sendGroupMessage(message: string, roles: HMSRole[], type?: string) {\n    const knownRoles = this.store.getKnownRoles();\n    const recipientRoles =\n      roles.filter(role => {\n        return knownRoles[role.name];\n      }) || [];\n    if (recipientRoles.length === 0) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No valid role is present', roles);\n    }\n    return await this.sendMessageInternal({ message, recipientRoles: roles, type });\n  }\n\n  async sendDirectMessage(message: string, peerId: string, type?: string) {\n    if (this.localPeer?.peerId === peerId) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Cannot send message to self');\n    }\n    const isLargeRoom = !!this.store.getRoom()?.large_room_optimization;\n    let recipientPeer = this.store.getPeerById(peerId);\n    if (!recipientPeer) {\n      if (isLargeRoom) {\n        const peer = await this.transport.signal.getPeer({ peer_id: peerId });\n        if (!peer) {\n          throw ErrorFactory.GenericErrors.ValidationFailed('Invalid peer - peer not present in the room', peerId);\n        }\n        recipientPeer = createRemotePeer(peer, this.store);\n      } else {\n        throw ErrorFactory.GenericErrors.ValidationFailed('Invalid peer - peer not present in the room', peerId);\n      }\n    }\n\n    return await this.sendMessageInternal({ message, recipientPeer, type });\n  }\n  async submitSessionFeedback(feedback: HMSSessionFeedback, eventEndpoint?: string) {\n    if (!this.sessionPeerInfo) {\n      HMSLogger.e(this.TAG, 'submitSessionFeedback> session is undefined');\n      throw new Error('session is undefined');\n    }\n    const token = this.sessionPeerInfo.peer.token;\n    if (!token) {\n      HMSLogger.e(this.TAG, 'submitSessionFeedback> token is undefined');\n      throw new Error('Internal error, token is not present');\n    }\n    try {\n      await FeedbackService.sendFeedback({\n        token: token,\n        info: this.sessionPeerInfo,\n        feedback,\n        eventEndpoint,\n      });\n      HMSLogger.i(this.TAG, 'submitSessionFeedback> submitted feedback');\n      this.sessionPeerInfo = undefined;\n    } catch (e) {\n      HMSLogger.e(this.TAG, 'submitSessionFeedback> error occured ', e);\n      throw new Error('Unable to submit feedback');\n    }\n  }\n  async getPeer(peerId: string) {\n    const response = await this.transport.signal.getPeer({ peer_id: peerId });\n    if (response) {\n      return createRemotePeer(response, this.store);\n    }\n    return undefined;\n  }\n\n  async findPeerByName({ query, limit = 10, offset }: FindPeerByNameRequestParams) {\n    const {\n      peers,\n      offset: responseOffset,\n      eof,\n    } = await this.transport.signal.findPeerByName({ query: query?.toLowerCase(), limit, offset });\n    if (peers.length > 0) {\n      return {\n        offset: responseOffset,\n        eof,\n        peers: peers.map(peerInfo => {\n          return createRemotePeer(\n            {\n              peer_id: peerInfo.peer_id,\n              role: peerInfo.role,\n              groups: [],\n              info: {\n                name: peerInfo.name,\n                data: '',\n                user_id: '',\n                type: peerInfo.type,\n              },\n            } as PeerNotificationInfo,\n            this.store,\n          );\n        }),\n      };\n    }\n    return { offset: responseOffset, peers: [] };\n  }\n\n  private async sendMessageInternal({ recipientRoles, recipientPeer, type = 'chat', message }: HMSMessageInput) {\n    if (message.replace(/\\u200b/g, ' ').trim() === '') {\n      HMSLogger.w(this.TAG, 'sendMessage', 'Ignoring empty message send');\n      throw ErrorFactory.GenericErrors.ValidationFailed('Empty message not allowed');\n    }\n    const sendParams: SendMessage = {\n      info: {\n        message,\n        type,\n      },\n    };\n    if (recipientRoles?.length) {\n      sendParams.roles = recipientRoles.map(role => role.name);\n    }\n    if (recipientPeer?.peerId) {\n      sendParams.peer_id = recipientPeer.peerId;\n    }\n    HMSLogger.d(this.TAG, 'Sending Message: ', sendParams);\n    return await this.transport.signal.broadcast(sendParams);\n  }\n\n  async startScreenShare(onStop: () => void, config?: HMSScreenShareConfig) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams) {\n      return;\n    }\n\n    const { allowed } = publishParams;\n    const canPublishScreen = allowed && allowed.includes('screen');\n\n    if (!canPublishScreen) {\n      HMSLogger.e(this.TAG, `Role ${this.localPeer?.role} cannot share screen`);\n      return;\n    }\n\n    if (this.localPeer?.auxiliaryTracks?.find(track => track.source === 'screen')) {\n      throw Error('Cannot share multiple screens');\n    }\n\n    const tracks = await this.getScreenshareTracks(onStop, config);\n    if (!this.localPeer) {\n      HMSLogger.d(this.TAG, 'Screenshared when not connected');\n      tracks.forEach(track => {\n        track.cleanup();\n      });\n      return;\n    }\n    this.transport.setOnScreenshareStop(() => {\n      this.stopEndedScreenshare(onStop);\n    });\n    await this.transport.publish(tracks);\n    tracks.forEach(track => {\n      track.peerId = this.localPeer?.peerId;\n      this.localPeer?.auxiliaryTracks.push(track);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, this.localPeer!);\n    });\n  }\n\n  private async stopEndedScreenshare(onStop: () => void) {\n    HMSLogger.d(this.TAG, `\u2705 Screenshare ended natively`);\n    await this.stopScreenShare();\n    onStop();\n  }\n\n  async stopScreenShare() {\n    HMSLogger.d(this.TAG, `\u2705 Screenshare ended from app`);\n    const screenTracks = this.localPeer?.auxiliaryTracks.filter(t => t.source === 'screen');\n    if (screenTracks) {\n      for (const track of screenTracks) {\n        await this.removeTrack(track.trackId);\n      }\n    }\n  }\n\n  async addTrack(track: MediaStreamTrack, source: HMSTrackSource = 'regular'): Promise<void> {\n    if (!track) {\n      HMSLogger.w(this.TAG, 'Please pass a valid MediaStreamTrack');\n      return;\n    }\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot addTrack');\n    }\n    const isTrackPresent = this.localPeer.auxiliaryTracks.find(t => t.trackId === track.id);\n    if (isTrackPresent) {\n      return;\n    }\n\n    const type = track.kind;\n    const nativeStream = new MediaStream([track]);\n    const stream = new HMSLocalStream(nativeStream);\n\n    const TrackKlass = type === 'audio' ? HMSLocalAudioTrack : HMSLocalVideoTrack;\n    const hmsTrack = new TrackKlass(stream, track, source, this.eventBus);\n    await this.applySettings(hmsTrack);\n    await this.setPlaylistSettings({\n      track,\n      hmsTrack,\n      source,\n    });\n\n    await this.transport?.publish([hmsTrack]);\n    hmsTrack.peerId = this.localPeer?.peerId;\n    this.localPeer?.auxiliaryTracks.push(hmsTrack);\n    this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, hmsTrack, this.localPeer!);\n  }\n\n  async removeTrack(trackId: string, internal = false) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot removeTrack');\n    }\n    const trackIndex = this.localPeer.auxiliaryTracks.findIndex(t => t.trackId === trackId);\n    if (trackIndex > -1) {\n      const track = this.localPeer.auxiliaryTracks[trackIndex];\n      if (track.isPublished) {\n        await this.transport!.unpublish([track]);\n      } else {\n        await track.cleanup();\n      }\n      // Stop local playback when playlist track is removed\n      if (!internal) {\n        this.stopPlaylist(track);\n      }\n      this.localPeer.auxiliaryTracks.splice(trackIndex, 1);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, this.localPeer);\n    } else {\n      HMSLogger.w(this.TAG, `No track found for ${trackId}`);\n    }\n  }\n\n  setAnalyticsLevel(level: HMSAnalyticsLevel) {\n    this.analyticsEventsService.level = level;\n  }\n\n  setLogLevel(level: HMSLogLevel) {\n    HMSLogger.level = level;\n  }\n\n  autoSelectAudioOutput(delay?: number) {\n    this.deviceManager?.autoSelectAudioOutput(delay);\n  }\n\n  addAudioListener(audioListener: HMSAudioListener) {\n    this.audioListener = audioListener;\n    this.notificationManager?.setAudioListener(audioListener);\n  }\n\n  addConnectionQualityListener(qualityListener: HMSConnectionQualityListener) {\n    this.notificationManager?.setConnectionQualityListener(qualityListener);\n  }\n\n  /** @internal */\n  setIsDiagnostics(isDiagnostics: boolean) {\n    this.isDiagnostics = isDiagnostics;\n  }\n\n  async changeRole(forPeerId: string, toRole: string, force = false) {\n    await this.transport?.signal.requestRoleChange({\n      requested_for: forPeerId,\n      role: toRole,\n      force,\n    });\n  }\n\n  async changeRoleOfPeer(forPeerId: string, toRole: string, force = false) {\n    await this.transport?.signal.requestRoleChange({\n      requested_for: forPeerId,\n      role: toRole,\n      force,\n    });\n  }\n\n  async changeRoleOfPeersWithRoles(roles: HMSRole[], toRole: string) {\n    if (roles.length <= 0 || !toRole) {\n      return;\n    }\n    await this.transport?.signal.requestBulkRoleChange({\n      roles: roles.map((role: HMSRole) => role.name),\n      role: toRole,\n      force: true,\n    });\n  }\n\n  async acceptChangeRole(request: HMSRoleChangeRequest) {\n    await this.transport?.signal.acceptRoleChangeRequest({\n      requested_by: request.requestedBy?.peerId,\n      role: request.role.name,\n      token: request.token,\n    });\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot end room');\n    }\n    await this.transport?.signal.endRoom(lock, reason);\n    await this.leave();\n  }\n\n  async removePeer(peerId: string, reason: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot remove peer');\n    }\n    await this.transport?.signal.removePeer({ requested_for: peerId, reason });\n  }\n\n  async startRTMPOrRecording(params: RTMPRecordingConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot start streaming or recording',\n      );\n    }\n    const signalParams: StartRTMPOrRecordingRequestParams = {\n      meeting_url: params.meetingURL,\n      record: params.record,\n    };\n\n    if (params.rtmpURLs?.length) {\n      signalParams.rtmp_urls = params.rtmpURLs;\n    }\n\n    if (params.resolution) {\n      signalParams.resolution = params.resolution;\n    }\n\n    await this.transport?.signal.startRTMPOrRecording(signalParams);\n  }\n\n  async stopRTMPAndRecording() {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot stop streaming or recording',\n      );\n    }\n\n    await this.transport?.signal.stopRTMPAndRecording();\n  }\n\n  async startHLSStreaming(params?: HLSConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot start HLS streaming',\n      );\n    }\n    const hlsParams: HLSRequestParams = {};\n    if (params && params.variants && params.variants.length > 0) {\n      hlsParams.variants = params.variants.map(variant => {\n        const hlsVariant: HLSVariant = { meeting_url: variant.meetingURL };\n        if (variant.metadata) {\n          hlsVariant.metadata = variant.metadata;\n        }\n        return hlsVariant;\n      });\n    }\n    if (params?.recording) {\n      hlsParams.hls_recording = {\n        single_file_per_layer: params.recording.singleFilePerLayer,\n        hls_vod: params.recording.hlsVod,\n      };\n    }\n    await this.transport?.signal.startHLSStreaming(hlsParams);\n  }\n\n  async stopHLSStreaming(params?: StopHLSConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot stop HLS streaming',\n      );\n    }\n    if (params) {\n      const hlsParams: HLSRequestParams = {\n        variants: params?.variants?.map(variant => {\n          const hlsVariant: HLSVariant = { meeting_url: variant.meetingURL };\n          if (variant.metadata) {\n            hlsVariant.metadata = variant.metadata;\n          }\n          return hlsVariant;\n        }),\n        stop_reason: params.stop_reason,\n      };\n\n      await this.transport?.signal.stopHLSStreaming(hlsParams);\n    } else {\n      await this.transport?.signal.stopHLSStreaming();\n    }\n  }\n\n  async startTranscription(params: TranscriptionConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot start transcriptions',\n      );\n    }\n    const transcriptionParams: StartTranscriptionRequestParams = {\n      mode: params.mode,\n    };\n    await this.transport?.signal.startTranscription(transcriptionParams);\n  }\n\n  async stopTranscription(params: TranscriptionConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot stop transcriptions',\n      );\n    }\n    if (!params) {\n      throw ErrorFactory.GenericErrors.Signalling(HMSAction.VALIDATION, 'No mode is passed to stop the transcription');\n    }\n    const transcriptionParams: StartTranscriptionRequestParams = {\n      mode: params.mode,\n    };\n    await this.transport?.signal.stopTranscription(transcriptionParams);\n  }\n\n  async sendHLSTimedMetadata(metadataList: HLSTimedMetadata[]) {\n    this.validateJoined('sendHLSTimedMetadata');\n    if (metadataList.length > 0) {\n      const hlsMtParams: HLSTimedMetadataParams = {\n        metadata_objs: metadataList,\n      };\n      await this.transport?.signal.sendHLSTimedMetadata(hlsMtParams);\n    }\n  }\n\n  async changeName(name: string) {\n    this.validateJoined('changeName');\n    const peer = this.store.getLocalPeer();\n    if (peer && peer.name !== name) {\n      await this.transport?.signal.updatePeer({\n        name: name,\n      });\n      this.notificationManager?.updateLocalPeer({ name });\n    }\n  }\n\n  async changeMetadata(metadata: string) {\n    this.validateJoined('changeMetadata');\n    await this.transport?.signal.updatePeer({\n      data: metadata,\n    });\n    this.notificationManager?.updateLocalPeer({ metadata });\n  }\n\n  async setSessionMetadata(metadata: any) {\n    await this.transport?.signal.setSessionMetadata({ key: 'default', data: metadata });\n  }\n\n  async getSessionMetadata() {\n    const response = await this.transport?.signal.getSessionMetadata('default');\n    return response.data;\n  }\n\n  getRoles(): HMSRole[] {\n    return Object.values(this.store.getKnownRoles());\n  }\n\n  async changeTrackState(forRemoteTrack: HMSRemoteTrack, enabled: boolean) {\n    if (forRemoteTrack.type === HMSTrackType.VIDEO && forRemoteTrack.source !== 'regular') {\n      HMSLogger.w(this.TAG, `Muting non-regular video tracks is currently not supported`);\n      return;\n    }\n\n    if (forRemoteTrack.enabled === enabled) {\n      HMSLogger.w(this.TAG, `Aborting change track state, track already has enabled - ${enabled}`, forRemoteTrack);\n      return;\n    }\n\n    if (!this.store.getTrackById(forRemoteTrack.trackId)) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No track found for change track state', forRemoteTrack);\n    }\n\n    const peer = this.store.getPeerByTrackId(forRemoteTrack.trackId);\n\n    if (!peer) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No peer found for change track state', forRemoteTrack);\n    }\n\n    await this.transport?.signal.requestTrackStateChange({\n      requested_for: peer.peerId,\n      track_id: forRemoteTrack.trackId,\n      stream_id: forRemoteTrack.stream.id,\n      mute: !enabled,\n    });\n  }\n\n  async changeMultiTrackState(params: HMSChangeMultiTrackStateParams) {\n    if (typeof params.enabled !== 'boolean') {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Pass a boolean for enabled');\n    }\n    const { enabled, roles, type, source } = params;\n    await this.transport?.signal.requestMultiTrackStateChange({\n      value: !enabled,\n      type,\n      source,\n      roles: roles?.map(role => role?.name),\n    });\n  }\n\n  async raiseLocalPeerHand() {\n    this.validateJoined('raiseLocalPeerHand');\n    await this.transport?.signal.joinGroup(HAND_RAISE_GROUP_NAME);\n  }\n  async lowerLocalPeerHand() {\n    this.validateJoined('lowerLocalPeerHand');\n    await this.transport?.signal.leaveGroup(HAND_RAISE_GROUP_NAME);\n  }\n  async raiseRemotePeerHand(peerId: string) {\n    await this.transport?.signal.addToGroup(peerId, HAND_RAISE_GROUP_NAME);\n  }\n  async lowerRemotePeerHand(peerId: string) {\n    await this.transport?.signal.removeFromGroup(peerId, HAND_RAISE_GROUP_NAME);\n  }\n\n  setFrameworkInfo(frameworkInfo: HMSFrameworkInfo) {\n    this.frameworkInfo = { ...this.frameworkInfo, ...frameworkInfo };\n  }\n\n  async attachVideo(track: HMSVideoTrack, videoElement: HTMLVideoElement) {\n    const config = this.store.getConfig();\n    if (config?.autoManageVideo) {\n      track.attach(videoElement);\n    } else {\n      await track.addSink(videoElement);\n    }\n  }\n\n  async detachVideo(track: HMSVideoTrack, videoElement: HTMLVideoElement) {\n    const config = this.store.getConfig();\n    if (config?.autoManageVideo) {\n      track.detach(videoElement);\n    } else {\n      await track.removeSink(videoElement);\n    }\n  }\n\n  private async publish(initialSettings?: InitialSettings, oldRole?: string) {\n    if ([this.store.getPublishParams(), !this.sdkState.published, !isNode].every(value => !!value)) {\n      // if preview asRole(oldRole) is used, use roleChangeManager to diff policy and publish, else do normal publish\n      const publishAction =\n        oldRole && oldRole !== this.localPeer?.role?.name\n          ? () =>\n              this.roleChangeManager?.diffRolesAndPublishTracks({\n                oldRole: this.store.getPolicyForRole(oldRole),\n                newRole: this.localPeer!.role!,\n              })\n          : () => this.getAndPublishTracks(initialSettings);\n\n      await publishAction?.()?.catch(error => {\n        HMSLogger.e(this.TAG, 'Error in publish', error);\n        this.listener?.onError(error);\n      });\n    }\n  }\n\n  private async getAndPublishTracks(initialSettings?: InitialSettings) {\n    const tracks = await this.localTrackManager.getTracksToPublish(initialSettings);\n    await this.initDeviceManagers();\n    await this.setAndPublishTracks(tracks);\n    this.localPeer?.audioTrack?.initAudioLevelMonitor();\n    this.sdkState.published = true;\n  }\n\n  private handleLocalRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    this.deviceManager.currentSelection = this.deviceManager.getCurrentSelection();\n    await this.transport.handleLocalRoleUpdate({ oldRole, newRole });\n    await this.roleChangeManager?.handleLocalPeerRoleUpdate({ oldRole, newRole });\n    await this.interactivityCenter.whiteboard.handleLocalRoleUpdate();\n  };\n\n  private async setAndPublishTracks(tracks: HMSLocalTrack[]) {\n    for (const track of tracks) {\n      await this.transport.publish([track]);\n      if (track.isTrackNotPublishing()) {\n        const error = ErrorFactory.TracksErrors.NoDataInTrack(\n          `${track.type} track has no data. muted: ${track.nativeTrack.muted}, readyState: ${track.nativeTrack.readyState}`,\n        );\n        HMSLogger.e(this.TAG, error);\n        this.sendAnalyticsEvent(\n          AnalyticsEventFactory.publish({\n            devices: this.deviceManager.getDevices(),\n            error: error,\n          }),\n        );\n        this.listener?.onError(error);\n      }\n      await this.setLocalPeerTrack(track);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, this.localPeer!);\n    }\n  }\n\n  private async setLocalPeerTrack(track: HMSLocalTrack) {\n    track.peerId = this.localPeer?.peerId;\n    switch (track.type) {\n      case HMSTrackType.AUDIO:\n        this.localPeer!.audioTrack = track as HMSLocalAudioTrack;\n        await this.deviceManager.autoSelectAudioOutput();\n        break;\n\n      case HMSTrackType.VIDEO:\n        this.localPeer!.videoTrack = track as HMSLocalVideoTrack;\n        break;\n    }\n  }\n\n  private async initDeviceManagers() {\n    // No need to initialise and add listeners if already initialised in preview\n    if (this.sdkState.deviceManagersInitialised) {\n      return;\n    }\n    this.sdkState.deviceManagersInitialised = true;\n    await this.deviceManager.init();\n    if (!(await this.deviceManager.updateOutputDevice(this.store.getConfig()?.settings?.audioOutputDeviceId))) {\n      await this.deviceManager.updateOutputDevice(DeviceStorageManager.getSelection()?.audioOutput?.deviceId);\n    }\n    this.audioSinkManager.init(this.store.getConfig()?.audioSinkElementId);\n  }\n\n  private cleanDeviceManagers() {\n    this.eventBus.deviceChange.unsubscribe(this.handleDeviceChange);\n    this.eventBus.audioPluginFailed.unsubscribe(this.handleAudioPluginError);\n    this.eventBus.autoplayError.unsubscribe(this.handleAutoplayError);\n    this.deviceManager.cleanup();\n    this.audioSinkManager.cleanup();\n  }\n\n  /** @internal */\n  initPreviewTrackAudioLevelMonitor() {\n    const localAudioTrack = this.localPeer?.audioTrack;\n    localAudioTrack?.initAudioLevelMonitor();\n    this.eventBus.trackAudioLevelUpdate.subscribe(audioLevelUpdate => {\n      const hmsSpeakers =\n        audioLevelUpdate && audioLevelUpdate.track.trackId === localAudioTrack?.trackId\n          ? [{ audioLevel: audioLevelUpdate.audioLevel, peer: this.localPeer!, track: localAudioTrack! }]\n          : [];\n      this.store.updateSpeakers(hmsSpeakers);\n      this.audioListener?.onAudioLevelUpdate(hmsSpeakers);\n    });\n    this.eventBus.localAudioSilence.subscribe(this.sendAudioPresenceFailed);\n  }\n\n  private notifyJoin() {\n    const localPeer = this.store.getLocalPeer();\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'notify join - room not present');\n      return;\n    }\n\n    room.joinedAt = new Date();\n    if (localPeer) {\n      localPeer.joinedAt = room.joinedAt;\n    }\n\n    if (localPeer?.role) {\n      this.analyticsTimer.end(TimedEvent.JOIN);\n      this.listener?.onJoin(room);\n      return;\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      this.eventBus.policyChange.subscribeOnce(() => {\n        this.analyticsTimer.end(TimedEvent.JOIN);\n        this.listener?.onJoin(room);\n        resolve();\n      });\n\n      this.eventBus.leave.subscribeOnce(ex => {\n        reject(ex);\n      });\n    });\n  }\n\n  /**\n   * Init store and other managers, setup listeners, create local peer, room\n   * @param {HMSConfig} config\n   * @param {HMSPreviewListener} listener\n   */\n  private setUpPreview(config: HMSPreviewConfig, listener: HMSPreviewListener) {\n    this.sdkState.isPreviewCalled = true;\n    this.sdkState.isPreviewInProgress = true;\n    const { roomId, userId, role } = decodeJWT(config.authToken);\n    this.commonSetup(config, roomId, listener);\n    this.store.setConfig(config);\n    /** set after config since we need config to get env for user agent */\n    this.store.createAndSetUserAgent(this.frameworkInfo);\n    this.createAndAddLocalPeerToStore(config, role, userId, config.asRole);\n  }\n\n  /**\n   * Set bitrate and dimensions for playlist track\n   */\n  private async setPlaylistSettings({\n    track,\n    hmsTrack,\n    source,\n  }: {\n    track: MediaStreamTrack;\n    hmsTrack: HMSLocalAudioTrack | HMSLocalVideoTrack;\n    source: string;\n  }) {\n    if (source === 'videoplaylist') {\n      const settings: { maxBitrate?: number; width?: number; height?: number } = {};\n      if (track.kind === 'audio') {\n        settings.maxBitrate = this.playlistSettings.audio?.bitrate || DEFAULT_PLAYLIST_AUDIO_BITRATE;\n      } else {\n        settings.maxBitrate = this.playlistSettings.video?.bitrate || DEFAULT_PLAYLIST_VIDEO_BITRATE;\n        const { width, height } = track.getSettings();\n        settings.width = width;\n        settings.height = height;\n      }\n      // TODO: rt update from policy once policy is updated\n      await hmsTrack.setSettings(settings);\n    } else if (source === 'audioplaylist') {\n      // TODO: rt update from policy once policy is updated\n      await hmsTrack.setSettings({ maxBitrate: 64 });\n    }\n  }\n\n  /**\n   * @param {HMSConfig} config\n   * @param {string} role\n   * @param {string} userId\n   */\n  private createAndAddLocalPeerToStore(config: HMSConfig, role: string, userId: string, asRole?: string) {\n    const policy = this.store.getPolicyForRole(role);\n    const asRolePolicy = asRole ? this.store.getPolicyForRole(asRole) : undefined;\n    const localPeer = new HMSLocalPeer({\n      name: config.userName || '',\n      customerUserId: userId,\n      metadata: config.metaData || '',\n      role: policy,\n      // default value is the original role if user didn't pass asRole in config\n      asRole: asRolePolicy || policy,\n      type: HMSPeerType.REGULAR,\n    });\n\n    this.store.addPeer(localPeer);\n  }\n\n  /**\n   * init managers and set listeners - common for join and preview\n   * @param {HMSConfig} config\n   * @param {string} roomId\n   * @param {HMSPreviewListener | HMSUpdateListener} listener\n   */\n  private commonSetup(config: HMSConfig, roomId: string, listener: HMSPreviewListener | HMSUpdateListener) {\n    this.stringifyMetadata(config);\n    if (!config.initEndpoint) {\n      config.initEndpoint = 'https://prod-init.100ms.live';\n    }\n\n    this.initStoreAndManagers(listener);\n    if (!this.store.getRoom()) {\n      this.store.setRoom(new HMSRoom(roomId));\n    }\n  }\n\n  /**\n   * Remove deviceId's passed in config for join if preview was already called\n   * @param {HMSConfig} config\n   */\n  private removeDevicesFromConfig(config: HMSConfig) {\n    const storedConfig = this.store.getConfig();\n    if (storedConfig && config.settings) {\n      // preview was called\n      delete config.settings.audioOutputDeviceId;\n      delete config.settings.videoDeviceId;\n      delete config.settings.audioInputDeviceId;\n    }\n  }\n\n  /**\n   * Get screenshare based on policy and audioOnly flag\n   * @param {function} onStop\n   * @param config\n   * @returns\n   */\n  private async getScreenshareTracks(onStop: () => void, config?: HMSScreenShareConfig) {\n    const isOptimizedScreenShare = this.transport.isFlagEnabled(InitFlags.FLAG_SCALE_SCREENSHARE_BASED_ON_PIXELS);\n    const [videoTrack, audioTrack] = await this.localTrackManager.getLocalScreen(config, isOptimizedScreenShare);\n\n    const handleEnded = () => {\n      this.stopEndedScreenshare(onStop);\n    };\n\n    const tracks = [];\n    if (config?.audioOnly) {\n      videoTrack.nativeTrack.stop();\n      if (!audioTrack) {\n        throw ErrorFactory.TracksErrors.NothingToReturn(\n          HMSAction.TRACK,\n          'Select share audio when sharing screen',\n          'No audio found',\n        );\n      }\n      tracks.push(audioTrack);\n      audioTrack.nativeTrack.addEventListener('ended', handleEnded);\n    } else {\n      tracks.push(videoTrack);\n      videoTrack.nativeTrack.addEventListener('ended', handleEnded);\n      // audio track is not always available\n      if (audioTrack) {\n        tracks.push(audioTrack);\n      }\n    }\n    return tracks;\n  }\n\n  private unpauseRemoteVideoTracks = () => {\n    this.store.getRemoteVideoTracks().forEach(track => track.handleTrackUnmute());\n  };\n\n  private sendAudioPresenceFailed = () => {\n    const error = ErrorFactory.TracksErrors.NoAudioDetected(HMSAction.PREVIEW);\n    HMSLogger.w(this.TAG, 'Audio Presence Failure', this.transportState, error);\n    // this.sendAnalyticsEvent(\n    //   AnalyticsEventFactory.audioDetectionFail(error, this.deviceManager.getCurrentSelection().audioInput),\n    // );\n    if (this.isDiagnostics) {\n      this.listener?.onError(error);\n    }\n  };\n\n  private sendJoinAnalyticsEvent = (is_preview_called = false, error?: HMSException) => {\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.join({\n        error,\n        ...this.analyticsTimer.getTimes(),\n        time: this.analyticsTimer.getTimeTaken(TimedEvent.JOIN),\n        is_preview_called,\n        retries_join: this.transport.joinRetryCount,\n      }),\n    );\n  };\n\n  private sendPreviewAnalyticsEvent = (error?: HMSException) => {\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.preview({\n        error,\n        ...this.analyticsTimer.getTimes(),\n        time: this.analyticsTimer.getTimeTaken(TimedEvent.PREVIEW),\n      }),\n    );\n  };\n\n  private sendAnalyticsEvent = (event: AnalyticsEvent) => {\n    // don't send analytics for diagnostics\n    if (this.isDiagnostics) {\n      return;\n    }\n    this.analyticsEventsService.queue(event).flush();\n  };\n\n  private stopPlaylist(track: HMSLocalTrack) {\n    if (track.source === 'audioplaylist') {\n      this.playlistManager.stop(HMSPlaylistType.audio);\n    } else if (track.source === 'videoplaylist') {\n      this.playlistManager.stop(HMSPlaylistType.video);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private async applySettings(track: HMSLocalTrack) {\n    validatePublishParams(this.store);\n    const publishParams = this.store.getPublishParams();\n    // this is not needed but added for avoiding ? later\n    if (!publishParams) {\n      return;\n    }\n    if (track instanceof HMSLocalVideoTrack) {\n      const publishKey = track.source === 'regular' ? 'video' : track.source === 'screen' ? 'screen' : '';\n      if (!publishKey || !publishParams.allowed.includes(publishKey)) {\n        return;\n      }\n      const video = publishParams[publishKey];\n      if (!video) {\n        return;\n      }\n      const settings = new HMSVideoTrackSettingsBuilder()\n        .codec(video.codec as HMSVideoCodec)\n        .maxBitrate(video.bitRate)\n        .maxFramerate(video.frameRate)\n        .setWidth(video.width)\n        .setHeight(video.height)\n        .build();\n\n      await track.setSettings(settings);\n    } else if (track instanceof HMSLocalAudioTrack) {\n      if (!publishParams.allowed.includes('audio')) {\n        return;\n      }\n      const settings = new HMSAudioTrackSettingsBuilder()\n        .codec(publishParams.audio.codec as HMSAudioCodec)\n        .maxBitrate(publishParams.audio.bitRate)\n        .build();\n      await track.setSettings(settings);\n    }\n  }\n}\n", "import { IHMSStatsStore, IHMSStore } from '../IHMSStore';\nimport { HMSPeerStats, HMSTrackStats } from '../interfaces';\nimport { mergeLocalTrackStats, mergeNewIndividualStatsInDraft } from '../reactive-store/sdkUtils/storeMergeUtils';\nimport { HMSWebrtcStats } from '../rtc-stats';\nimport { createDefaultStatsStore, HMSPeerID, HMSRoomState, HMSTrack, HMSTrackID } from '../schema';\nimport { HMSSdk } from '../sdk';\nimport {\n  selectLocalAudioTrackID,\n  selectLocalPeerID,\n  selectLocalVideoTrackID,\n  selectRoomState,\n  selectTracksMap,\n} from '../selectors';\n\ntype Unsubscribe = (() => void) | undefined;\nexport const subscribeToSdkWebrtcStats = (sdk: HMSSdk, webrtcStore: IHMSStatsStore, store: IHMSStore) => {\n  // also used as flag to check if webrtc internals has been initialised\n  let unsubscribe: Unsubscribe;\n  /**\n   * Connected to room, webrtc internals can be initialized\n   */\n  if (store.getState(selectRoomState) === HMSRoomState.Connected) {\n    unsubscribe = initAndSubscribeWebrtcStore(sdk, webrtcStore, store);\n  }\n\n  /**\n   * Subscribe to room state for 2 purposes:\n   * - unsubscribe on leave\n   * - if internals is called before join is completed, init internals when roomState changes to connected\n   */\n  store.subscribe(roomState => {\n    if ([HMSRoomState.Connected, HMSRoomState.Reconnecting].includes(roomState)) {\n      if (!unsubscribe) {\n        unsubscribe = initAndSubscribeWebrtcStore(sdk, webrtcStore, store);\n      }\n      // room state can go to disconnecting and back to connected if leave fails, we don't want to resubscribe in that case\n    } else if ([HMSRoomState.Disconnected, HMSRoomState.Failed].includes(roomState)) {\n      if (unsubscribe) {\n        resetHMSStatsStore(webrtcStore, roomState);\n        unsubscribe();\n        // set flag to defined after unsubscribing to enable subscribing again\n        unsubscribe = undefined;\n      }\n    }\n  }, selectRoomState);\n};\n\nconst initAndSubscribeWebrtcStore = (sdk: HMSSdk, webrtcStore: IHMSStatsStore, store: IHMSStore) => {\n  const unsubLocalPeer = updateLocalPeerInWebrtcStore(store, webrtcStore);\n\n  sdk.getWebrtcInternals()?.start();\n  const unsubSdkStats = sdk\n    .getWebrtcInternals()\n    ?.onStatsChange(stats => updateWebrtcStoreStats(webrtcStore, stats, store, sdk));\n\n  return () => {\n    unsubLocalPeer();\n    unsubSdkStats && unsubSdkStats();\n  };\n};\n\nconst updateLocalPeerInWebrtcStore = (store: IHMSStore, webrtcStore: IHMSStatsStore) => {\n  let unsubID: Unsubscribe, unsubVideoTrackID: Unsubscribe, unsubAudioTrackID: Unsubscribe;\n  if (store.getState(selectLocalPeerID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.id = store.getState(selectLocalPeerID);\n    }, 'localpeer-id');\n  } else {\n    unsubID = store.subscribe(localPeerID => {\n      localPeerID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.id = localPeerID;\n        }, 'localpeer-id');\n    }, selectLocalPeerID);\n  }\n\n  if (store.getState(selectLocalVideoTrackID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.videoTrack = store.getState(selectLocalVideoTrackID);\n    }, 'localpeer-videotrack-id');\n  } else {\n    unsubVideoTrackID = store.subscribe(videoTrackID => {\n      videoTrackID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.videoTrack = videoTrackID;\n        }, 'localpeer-videotrack-id');\n    }, selectLocalVideoTrackID);\n  }\n\n  if (store.getState(selectLocalAudioTrackID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.audioTrack = store.getState(selectLocalAudioTrackID);\n    }, 'localpeer-audiotrack-id');\n  } else {\n    unsubAudioTrackID = store.subscribe(audioTrackID => {\n      audioTrackID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.audioTrack = audioTrackID;\n        }, 'localpeer-audiotrack-id');\n    }, selectLocalAudioTrackID);\n  }\n\n  return () => {\n    unsubID?.();\n    unsubVideoTrackID?.();\n    unsubAudioTrackID?.();\n  };\n};\n\nconst updateWebrtcStoreStats = (\n  webrtcStore: IHMSStatsStore,\n  stats: HMSWebrtcStats,\n  hmsStore: IHMSStore,\n  sdk: HMSSdk,\n) => {\n  const tracks: Record<HMSTrackID, HMSTrack> = hmsStore.getState(selectTracksMap);\n  webrtcStore.namedSetState(store => {\n    const localPeerID = hmsStore.getState(selectLocalPeerID);\n    const newTrackStats: Record<HMSTrackID, HMSTrackStats> = {};\n    const trackIDs = Object.keys(tracks).filter(trackID => tracks[trackID].peerId !== localPeerID);\n\n    for (const trackID of trackIDs) {\n      const sdkTrackStats = stats.getRemoteTrackStats(trackID);\n      if (sdkTrackStats) {\n        newTrackStats[trackID] = sdkTrackStats;\n      }\n    }\n\n    mergeNewIndividualStatsInDraft<HMSTrackID, HMSTrackStats>(store.remoteTrackStats, newTrackStats);\n\n    // @TODO: Include all peer stats, own ticket, transmit local peer stats to other peer's using biz\n    const newPeerStats = { [localPeerID]: stats.getLocalPeerStats() };\n    mergeNewIndividualStatsInDraft<HMSPeerID, HMSPeerStats>(store.peerStats, newPeerStats);\n    // @ts-ignore\n    mergeLocalTrackStats(store.localTrackStats, stats.getLocalTrackStats(), sdk.store.getLocalPeerTracks());\n  }, 'webrtc-stats');\n};\n\nconst resetHMSStatsStore = (store: IHMSStatsStore, reason = 'resetState') => {\n  store.namedSetState(draft => {\n    Object.assign(draft, createDefaultStatsStore());\n  }, reason);\n};\n", "import { Subscribe } from 'zustand/vanilla';\nimport { HMSReactiveStore } from './internal';\nimport { subscribeToSdkWebrtcStats } from './webrtc-stats-store';\nimport { storeNameWithTabTitle } from '../common/storeName';\nimport { GetState, IHMSStatsStore, IHMSStatsStoreReadOnly, IHMSStore } from '../IHMSStore';\nimport { createDefaultStatsStore, HMSStatsStore } from '../schema';\nimport { HMSSdk } from '../sdk';\nimport { selectRoomState } from '../selectors';\n\n/**\n * @internal\n */\nexport class HMSStats implements IHMSStatsStoreReadOnly {\n  readonly getState: GetState<HMSStatsStore>;\n  readonly subscribe: Subscribe<HMSStatsStore>;\n  readonly getPublishPeerConnection: () => Promise<RTCPeerConnection | undefined>;\n  readonly getSubscribePeerConnection: () => Promise<RTCPeerConnection | undefined>;\n  private readonly store: IHMSStatsStore;\n\n  constructor(private hmsStore: IHMSStore, private sdk?: HMSSdk) {\n    this.store = HMSReactiveStore.createNewHMSStore<HMSStatsStore>(\n      storeNameWithTabTitle('HMSStatsStore'),\n      createDefaultStatsStore,\n    );\n\n    this.getState = this.store.getState;\n    this.subscribe = this.store.subscribe;\n\n    this.getPublishPeerConnection = () =>\n      new Promise<RTCPeerConnection | undefined>(resolve => {\n        if (this.hmsStore.getState(selectRoomState) === 'Connected') {\n          resolve(this.sdk?.getWebrtcInternals()?.getPublishPeerConnection());\n        } else {\n          this.hmsStore.subscribe(roomState => {\n            if (roomState === 'Connected') {\n              resolve(this.sdk?.getWebrtcInternals()?.getPublishPeerConnection());\n            }\n          }, selectRoomState);\n        }\n      });\n\n    this.getSubscribePeerConnection = () =>\n      new Promise<RTCPeerConnection | undefined>(resolve => {\n        if (this.hmsStore.getState(selectRoomState) === 'Connected') {\n          resolve(this.sdk?.getWebrtcInternals()?.getSubscribePeerConnection());\n        } else {\n          this.hmsStore.subscribe(roomState => {\n            if (roomState === 'Connected') {\n              resolve(this.sdk?.getWebrtcInternals()?.getSubscribePeerConnection());\n            }\n          }, selectRoomState);\n        }\n      });\n\n    if (!this.sdk) {\n      return;\n    }\n\n    subscribeToSdkWebrtcStats(this.sdk, this.store, this.hmsStore);\n  }\n}\n", "import { createSelector } from 'reselect';\nimport { HMSPreferredSimulcastLayer, RID, simulcastMapping } from '../internal';\nimport { HMSPeerID, HMSStatsStore, HMSTrackID } from '../schema';\nimport { byIDCurry } from '../selectors/common';\n\nconst selectLocalPeerID = (store: HMSStatsStore) => store.localPeer.id;\nconst selectLocalAudioTrackID = (store: HMSStatsStore) => store.localPeer.audioTrack;\nconst selectLocalVideoTrackID = (store: HMSStatsStore) => store.localPeer.videoTrack;\nconst selectPeerID = (_store: HMSStatsStore, peerID: HMSPeerID | undefined) => peerID;\nconst selectTrackID = (_store: HMSStatsStore, trackID: HMSTrackID | undefined) => trackID;\nconst selectRemoteTrackStatsMap = (store: HMSStatsStore) => store.remoteTrackStats;\nconst selectPeerStatsMap = (store: HMSStatsStore) => store.peerStats;\nconst selectLocalTrackStatsMap = (store: HMSStatsStore) => store.localTrackStats;\n\n/**\n * Local peer stats selectors\n */\nconst localPeerStats = createSelector(\n  [selectPeerStatsMap, selectLocalPeerID],\n  (storePeerStats, localPeerID) => storePeerStats[localPeerID],\n);\n\n/**\n *  The total number of packets lost during the call\n */\nconst packetsLost = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.packetsLost);\n\nconst jitter = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.jitter);\n\n/**\n * The bitrate at which all the local tracks are being published at\n */\nconst publishBitrate = createSelector(localPeerStats, localPeerStats => localPeerStats?.publish?.bitrate);\n\n/**\n * The bitrate at which all the remote tracks are being received at\n */\nconst subscribeBitrate = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.bitrate);\n\n/**\n * The total bitrate available for publishing\n */\nconst availablePublishBitrate = createSelector(\n  localPeerStats,\n  localPeerStats => localPeerStats?.publish?.availableOutgoingBitrate,\n);\n\n/**\n * The total bitrate available for subscribing to remote peers\n */\nconst availableSubscribeBitrate = createSelector(\n  localPeerStats,\n  localPeerStats => localPeerStats?.subscribe?.availableIncomingBitrate,\n);\n\n/**\n * The total bytes sent by the local peer\n */\nconst totalBytesSent = createSelector(localPeerStats, localPeerStats => localPeerStats?.publish?.bytesSent);\n\n/**\n * The total bytes received by the local peer\n */\nconst totalBytesReceived = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.bytesReceived);\n\n/**\n * By ID Selectors\n * To be used for remote tracks\n */\n\nconst selectPeerStatsByIDBare = createSelector([selectPeerStatsMap, selectPeerID], (storePeerStats, peerID) =>\n  peerID ? storePeerStats[peerID] : undefined,\n);\n\nconst selectTrackStatsByIDBare = createSelector(\n  [selectRemoteTrackStatsMap, selectTrackID],\n  (storeTrackStats, trackID) => (trackID ? storeTrackStats[trackID] : undefined),\n);\n\nconst selectLocalTrackStatsByIDBare = createSelector(\n  [selectLocalTrackStatsMap, selectTrackID],\n  (storeLocalTrackStats, trackID) => (trackID ? storeLocalTrackStats[trackID] : undefined),\n);\n\n/**\n * Stats(bitrate, bytes sent/received, etc...) for a single peer given the peer ID\n */\nconst peerStatsByID = byIDCurry(selectPeerStatsByIDBare);\n\n/**\n * Stats(bitrate, bytes sent/received, framerate, FPS, etc...) for a remote track\n */\nconst trackStatsByID = byIDCurry(selectTrackStatsByIDBare);\n\n/**\n * Local track stats selectors\n */\n\nconst localAudioTrackStats = createSelector(\n  [selectLocalTrackStatsMap, selectLocalAudioTrackID],\n  (trackStats, trackID) => (trackID ? trackStats[trackID]?.[0] : undefined),\n);\n\nconst localAudioTrackStatsByID = byIDCurry(\n  createSelector(selectLocalTrackStatsByIDBare, trackStats => trackStats?.[0]),\n);\n\nconst localVideoTrackStats = createSelector(\n  [selectLocalTrackStatsMap, selectLocalVideoTrackID],\n  (trackStats, trackID) => (trackID ? trackStats[trackID]?.[0] : undefined),\n);\n\nconst localVideoTrackStatsByID = byIDCurry(createSelector(selectLocalTrackStatsByIDBare, trackStats => trackStats));\n\nconst localVideoTrackStatsByLayer = (layer?: HMSPreferredSimulcastLayer) =>\n  byIDCurry(\n    createSelector(selectLocalTrackStatsByIDBare, stats => {\n      const rid = (Object.keys(simulcastMapping) as RID[]).find(key => simulcastMapping[key] === layer);\n      return layer ? stats?.find(stat => stat.rid === rid) || stats?.[0] : stats?.[0];\n    }),\n  );\n\nexport const selectHMSStats = {\n  localPeerStats,\n  packetsLost,\n  jitter,\n  publishBitrate,\n  subscribeBitrate,\n  availablePublishBitrate,\n  availableSubscribeBitrate,\n  totalBytesSent,\n  totalBytesReceived,\n  peerStatsByID,\n  trackStatsByID,\n  localAudioTrackStatsByID,\n  localVideoTrackStatsByID,\n  localVideoTrackStatsByLayer,\n  localAudioTrackStats,\n  localVideoTrackStats,\n};\n", "import {\n  EventBus,\n  HMSAudioPlugin,\n  HMSAudioPluginType,\n  HMSPluginSupportResult,\n} from \"@100mslive/hms-video-store\";\nimport KrispSDK, { AudioFilterNode } from \"./krisp\";\nimport { getAnalyticsEvent } from \"./utils\";\n\nexport class HMSKrispPlugin implements HMSAudioPlugin {\n  private sdk: KrispSDK | null = null;\n  private readonly TAG = \"[HMSKrispPlugin]\";\n  private filterNode: AudioFilterNode | undefined = undefined;\n  private eventBus?: EventBus;\n\n  checkSupport(): HMSPluginSupportResult {\n    return {\n      isSupported: KrispSDK.isSupported(),\n    };\n  }\n\n  setEventBus(eventBus: EventBus) {\n    this.eventBus = eventBus;\n  }\n  async init() {\n    this.sdk = new KrispSDK({\n      params: {\n        debugLogs: false,\n        logProcessStats: false,\n        useSharedArrayBuffer: false,\n        // useBVC: true,\n        models: {\n          // modelBVC: 'https://assets.100ms.live/krisp/models/model_bvc.kw',\n          model8: \"https://assets.100ms.live/krisp/models/model_8.kw\",\n          model16: \"https://assets.100ms.live/krisp/models/model_16.kw\",\n          model32: \"https://assets.100ms.live/krisp/models/model_32.kw\",\n        },\n      },\n    });\n    await this.sdk.init();\n  }\n  getPluginType() {\n    return HMSAudioPluginType.TRANSFORM;\n  }\n\n  getName() {\n    return \"HMSKrispPlugin\";\n  }\n  isSupported() {\n    return KrispSDK.isSupported();\n  }\n\n  toggle() {\n    const isKrispEnabled = this.isEnabled();\n    const eventName = `mediaPlugin.toggled.${isKrispEnabled ? \"off\" : \"on\"}`;\n    this.eventBus?.analytics.publish(getAnalyticsEvent(eventName));\n    this.filterNode?.toggle();\n  }\n\n  isEnabled() {\n    return this.filterNode?.isEnabled();\n  }\n\n  async processAudioTrack(ctx: AudioContext, source: AudioNode) {\n    this.filterNode = await this.sdk?.createNoiseFilter(\n      ctx,\n      () => {\n        if (this.filterNode) {\n          this.filterNode?.enable();\n          console.log(this.TAG, \"filter node created and enabled\");\n          source.connect(this.filterNode);\n        }\n      },\n      () => {},\n    );\n    return this.filterNode!;\n  }\n  stop() {\n    this.sdk = null;\n  }\n}\n", "/*   KRISP TECHNOLOGIES, INC\n  __________________\n\n  [2018] - [2023] Krisp Technologies, Inc\n  All Rights Reserved.\n\n  NOTICE: By accessing this programming code, you acknowledge that you have read, understood, and agreed to the User Agreement available at\n  https://krisp.ai/terms-of-use.\n  Please note that ALL information contained herein is and remains the property of Krisp Technologies, Inc., and its affiliates or assigns, if any. The intellectual property\n  contained herein is proprietary to Krisp Technologies, Inc. and may be covered by pending and granted U.S. and Foreign Patents, and is further protected by\n  copyright, trademark and/or other forms of intellectual property protection.\n  Dissemination of this information or reproduction of this material IS STRICTLY FORBIDDEN.\n */\nfunction a0_0x4e70(){const _0x5d6085=['\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<div>','LOG_INPUT_AUDIO','ak5370','jbl\\x20xtreme','j5create\\x20meeting\\x20mic','disposing\\x20Krisp\\x20filter','1374rMsVjx','AudioFilterNode','_free','promedia\\x202.0','_inputData','cp700','map','jbl\\x20charge','BYTES_PER_ELEMENT','ready','fmt\\x20','collectFrom','majority\\x20rs1','thronmax\\x20mdrill\\x20','bluetooth\\x20soundbar','startedAt','ugreen-40758e','fantech\\x20leviosa','edifier\\x20s880','webcam','razer\\x20nommo\\x20chroma','enumerateDevices','srs-xb43','usb/xlr\\x20dynamic\\x20microphone','responseURL','277218WfDGdn','STATE','logic\\x20sp2','\\x22><source\\x20src=\\x22','dell\\x20slim\\x20soundbar\\x20sb522a','models','live\\x20microphone','audioContext','AudioFilterNode:dispose','attachShadow','SUPPORTED_INBOUND_SAMPLE_RATES','akg\\x20s30','jabra\\x20speak\\x20','logPort','dataCache','yas-108\\x20yamaha','avantree\\x20saturn\\x20pro','impulse','baseLatency','_outputData','zv-e10','secondsCounterInterval','logitech\\x20z337','lifecam','jbl\\x20clip\\x20','fifine\\x20k658d\\x20microphone','__esModule','clientY','runtimeAllowedDevices','buffer_overflow','trust\\x20gxt\\x20232\\x20microphone','hd\\x20450bt','disable','yoyo','inboundModels','toISOString','edifier\\x20g2000','418924BhpHNI','INVALID_AUDIO_CONTEXT','AudioFiletrNode:constructor','ue\\x20boom','innerHTML','setUint32','reaxt\\x20omni-1.0\\x20pair','moman\\x20em','from','redcam\\x20rc-250','absolute','usb\\x20lavalier\\x20microphone','3Prtkcb','send\\x20toggle\\x20NC\\x20message','paths','charCodeAt','isFloat','info','join','anua\\x20mic\\x20cm\\x20900','hk\\x20esquire\\x20mini','BVC:isCompatible','elgato\\x20wave','kilburn\\x20ii','INVALID_ASSET_URL','error','button','ModelLoader','template','BUFFER_OVERFLOW_MS','dm-40bt','Logger','WORKER_URL','logitech\\x20usb\\x20speaker','uc40m\\x20audio','INIT_WASM_PROCESSOR','hd\\x20458bt','woburn\\x20speaker','</div>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<details>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<summary>Logs</summary>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<pre>','pushOutput','154877pobZMK','onmouseup','10px','sony:srs-x5','beoplay\\x20a','t&v\\x20kurbis\\x20cinema','BVC:init','BVC:add','setOptions','getModelName','getAudioTracks','klipsch\\x20groove','logAudio','sk010','aavante\\x20bar\\x201160','bluetooth\\x20music','toLowerCase','soundstation\\x207\\x20lite','beosound\\x20a','dockpro','LOG_OUTPUT_AUDIO','logi\\x20mx\\x20sound','clientX','force-cache','SET_AUDIO_PROCESSOR_READY','SharedArrayBuffer\\x27s\\x20has\\x20been\\x20initialized','logi\\x20z407','shure\\x20mv7','params','top','SUPPORTED_SAMPLE_RATES','vanatoo\\x20t0','stanmore\\x20ii','ugreen-70303e','INVALID_MODEL_URL','KrispSDK','isCompatible','ay-spkf4','huawei\\x20sound\\x20joy-14974','aukey\\x20pc-lm1a\\x20microphone','by-pm700','sdy019','_isReady','send\\x20disable\\x20NC\\x20message','fifine\\x20k678\\x20microphone','<p>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<audio\\x20controls\\x20title=\\x22recording-input-','left','blasterx\\x20senz3d\\x20vf0810','unloadModuleModel','camera','indexOf','BVC_BLOCKED_DEVICES','brio','onerror','setPrototypeOf','Logger\\x20is\\x20not\\x20initialized','querySelector','parameters','polycom','bietrun\\x20one','edifier\\x20r','READ_INDEX','konftel\\x20ego','addEventListener','ptsb-80w','baf-0845','audioWorklet','g300','data','position','leviosa\\x20live\\x20mcx02','isInbound','tronsmart\\x20element\\x20force','downloadBlob','cybertrack\\x20h6','heyday\\x20microphone','Apple','jbl\\x20tuner\\x20fm','arozzi\\x20sfera\\x20microphone','preloadModels','KrispSDK\\x20-\\x20unable\\x20to\\x20download\\x20the\\x20report!','debugLogs','createNoiseFilter','exportToWavBlob','sanitizeModelPath','\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<p>Recording:\\x20','bose\\x20videobar\\x20vb1','KrispSDK:init','[samsung]\\x20allconnect','connectclip\\x201.0','logi\\x204k','140bOusmn','logitech\\x20speakerphone\\x20p710e','SharedRingBuffer','fifine\\x20microphone','warn','set','text','_getAvailableRead','response','BVC:remove','KrispSDK:constructor','numFrames','spark\\x2040\\x20audio','file','mic_test','KrispSDK:preload','cybertrack\\x20h7','_malloc','sigma\\x20fp','_channelData','sb\\x20katana','body','validateModels','megaboom\\x203','log','application/javascript','ht-ct80','r\u00F8de\\x20videomic','boom2','antlion\\x20wireless\\x20microphone','hyperx\\x20solocast','audio/wav;codecs=wav','trenbader\\x20artlink','macbook\\x20air','soundflower','t-2359','rode\\x20podcaster','printAvailableReadAndWrite','createElement','blue\\x20eyeball\\x202.0','event','mam-thinkplus-k3','report-','main','onmousedown','624980nPwLop','dispatchEvent','downloadReport','live\\x20streamer\\x20cam313\\x20microphone','tribit\\x20maxboom','buffer','SDK_BROWSER_NOT_SUPPORTED','pickModel','getAvailableSamples','seconds','open','web\\x20cam','srs-xb23','createWAVBlob','sigma\\x20fp\\x20l','onload','postMessage','fifine\\x20k658\\x20microphone','xech\\x20t2s','useSharedArrayBuffer','crestron-uc-soundbar','content','wasmParams','maono\\x20fairy','DebugRecorder','text/html','subarray','vipex\\x20vx-sk001','remove','thinkvision\\x20t22v\\x20wide\\x20monitor\\x20for\\x20usb-audio','huawei\\x20cm510','NOT_SUPPORTED_SAMPLE_RATE','jbl\\x20flip\\x204','audiopro\\x20x5\\x20microphone','sampleModelMap','_state','\\x20is\\x20BVC\\x20compatible','enacfire\\x20soundbar','stadia\\x20controller\\x20rev.\\x20a','message','stanmore\\x20speaker','ws-900','ipevo\\x20v4k','dell\\x20slim\\x20soundbar\\x20sb521a','hk\\x20soundsticks\\x204','substr','c-1u','srs-xb33','useBVC','BUFFER_DROP_KEEP_MS','8bitdo\\x20twincube','AudioFilterNode:enable','WEB_AUDIO_CHUNK_SIZE','loadFromURL','jbl\\x20irx112bt','AudioFilterNode:checkReadiness','sg\\x20control\\x20mic','3164nRzHOI','blue\\x20snowball','worklet','shure\\x20digital','ausdom\\x20microphone','connectedCallback','soundcore\\x20sport\\x20xl','audioengine\\x202+','rog\\x20eye\\x20s','jbl\\x20wind','logitech\\x20mx\\x20sound','push','jbl\\x20horizon','postLog','modelBVC','bind','KrispSDK:createNoiseFilter','logitech\\x20z537','worker','isMobile','exports','preload','allowedDevicesExt','sharedBuffers','INVALID_MEDIA_STREAM','emeet','dispose','processor','room\\x20speakerphone','rode\\x20nt-usb','get','edifier\\x20m1370bt','mifa_a1','createSharedBuffers','bt\\x20hifi\\x20audio','g560\\x20gaming\\x20speaker','numChannels','dell\\x20speakerphone\\x20sp3022','behringer\\x20mpa40bt\\x20pro','usb\\x20condenser\\x20microphone','pc-lm1e','krisp-debug-widget','defineProperty','ts-14000\\x20klar','responseType','yu4\\x20by\\x20kanto','port1','CriOS','logProcessStats','pocketaudio\\x20microphone','movo-um700','boom\\x203','all','Send\\x20init\\x20WASM\\x20processor\\x20event','at9934usb','KWebWorker','load','office\\x20speaker','loadModel','t27hv-20','\\x22>Output</audio>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20','miniso\\x20d40f','\u043A\u043E\u043B\u043E\u043D\u043A\u0438','uac\\x201.0\\x20microphone\\x20&\\x20hid-mediakey','sampleRate','mu900','1943360OcteKa','The\\x20KrispSDK\\x20is\\x20duplicated.\\x20Please\\x20ensure\\x20that\\x20the\\x20SDK\\x20is\\x20only\\x20imported\\x20once.','lspx-s3','findIndex','obsbot\\x20meet\\x20microphone','bb5115','test','SET_LOGGING_PORT','display','stream','onloadend','BVC_ALLOWED_DEVICES','srs-xb10','sc-ux100','AudioFilterNode:disable','model8','mts-2026','Connecting\\x20with\\x20other\\x20threads\\x20for\\x20logging','sm900\\x20microphone','arraybuffer','evga\\x20xr1\\x20pro\\x20capture\\x20box\\x20audio','removeDebugWidget','style','INITIALIZED','hypemic','BVC','HEAPU8','sembrandt\\x20ms200','mediaDevices','logi\\x20z207','hk\\x20omni\\x2010','live\\x20streamer\\x20cam\\x20513','marley\\x20chant\\x20mini','gxt\\x20256\\x20microphone','BUFFER_DROP_SIZE_MS','soundcore\\x20flare','mallocModel','jbl\\x20cinema\\x20sb150','setLoggingPort','sm950\\x20microphone','assign','onmousemove','keys','echo\\x20show','creating\\x20audioWorklet','ue\\x20megaboom','cloneNode',']:\\x20','userAgent','filter','room\\x20kit\\x20mini\\x20digital\\x20audio','at2005usb','WORKLET_URL','download','aukey\\x20mi-u2\\x20usb\\x20mic','thronmax\\x20stream\\x20go\\x20pro\\x20microphone','hasInvalidFilePath','_bufferLength','ifine\\x20\\x20microphone','SDK_ALREADY_INITIALIZED','bt\\x20speaker','magic\\x20mic','klipsch\\x20r-51pm','channel','creative\\x20stage','r-talk\\x20900','ekacom-k','powerconf\\x20','bass\\x20master\\x2080bt','usb\\x20lcs','forEach','obsbot\\x20tiny\\x20audio','jbl\\x20jr\\x20pop','channelCount','sound\\x20blaster','audio/wav;\\x20codecs=wav','length','outputLatency','BUFFER_OVERFLOW','echo\\x20dot','URL','mevo','klipsch\\x20the\\x20fives','BVC:loadFromURL','TOGGLE','checkReadiness','q30\\x20-\\x20glauber','fifine\\x20k420','SDK_FRAME_DURATION_10MS','jbl\\x20go','auna\\x20mic\\x20cm900','startSecondsCounter','djack','state','emberton','vivan\\x20vs12','philips\\x20s3505','audioContext\\x20or\\x20audioContext.audioWorklet\\x20not\\x20found','soundcore\\x20boost','isCompatibleStream','usb-mic','SUSPEND','location','odyssey\\x20microphone','jbl\\x20pulse\\x203','stringify','WASM\\x20processor\\x20initialized','add','edifier_r','click','sembrandt\\x20ht3000','creative\\x20t100','gxt\\x20258\\x20microphone','miniso-a18','sennheiser\\x20xs\\x20lav\\x20usb-c','port','blockedDevices','sr600202','mc-d800','isSafari','clickshare','wba31','pushInput','bufferOverflowMS','SDK\\x20is\\x20not\\x20initialized','tula\\x20mobile\\x20microphone','usb\\x20microphone','soundsticks','logAudioInputSamples','threadName','model16','soundbar\\x20lp-s08','</pre>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</details>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20','conferencecam','vendor','\\x20is\\x20not\\x20BVC\\x20compatible','tg-116','includes','r\u00F8de\\x20nt-usb','send','meeting\\x20owl','oontz\\x20angle\\x203\\x20dca','blobToBase64','stockwell\\x20ii','sennheiser\\x20458bt','blue\\x20icicle','appendChild','realtek','lg\\x20sh5(58)','values','_fetchFile','SharedArrayByffer\\x20is\\x20not\\x20supported\\x20by\\x20browser.\\x20Make\\x20sure\\x20all\\x20security\\x20requirements\\x20are\\x20present.\\x20See\\x20https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements','AudioFilterNode:constructor','toString','Loading\\x20compatible\\x20devices\\x20from:\\x20','WRITE_INDEX','instances','AudioFilterNode:_onWasmWorkerMessage','KrispSDK\\x20-','toggle','allowBVC','cmteck','_getAvailableWrite','emeet\\x20m2\\x20max','big\\x20jambox\\x20by\\x20jawbone','ankerwork\\x20b600\\x20video\\x20bar','razer\\x20stargazer-microphone','recorder','logi\\x20rally\\x20bar\\x20mini\\x20audio','createDebugWidget','jbl\\x20flip\\x20','isFrameAvailable','sp-ad70-a','isSupported','chat\\x20150','stanmore\\x20bluetooth','MIN_BVC_SUPPORT_SAMPLE_RATE','WORKLET_NOT_SUPPORTED','enabled','edifier\\x20mp120','jounivo\\x20jv','WAVE','brother\\x20nw-1000','WORKLET_PROCESSOR_NAME','revolabs\\x20digital\\x20audio\\x20device','at2020usb','INITIAL','srs-xb','sennheiser\\x20sp\\x2020\\x20for\\x20lync','poly\\x20studio','no\\x20available\\x20Model\\x20for\\x20current\\x20audioContext','readAsDataURL','1062s','spark\\x2040\\x20usb','uac\\x201.0\\x20microphone','WORKER_NOT_SUPPORTED','cam\\x20sync\\x201080p','init','plasma\\x20microphone','logs','RIFF','iloud\\x20micro-monitor','string','sennheiser\\x20sp\\x2030','byteLength','mobiola\\x20microphone','function\\x20a1_0x3c7c(){var\\x20_0x43aab5=[\\x27data:application/octet-stream;base64,\\x27,\\x27KRISP_AUDIO_FRAME_DURATION_10MS\\x27,\\x27lengthBytesUTF32\\x27,\\x27lengthBytesUTF8\\x27,\\x27_dataInput\\x27,\\x27arguments\\x27,\\x27__importDefault\\x27,\\x27aukey\\x5cx20pc-lm1a\\x5cx20microphone\\x27,\\x27ugreen-40758e\\x27,\\x27atime\\x27,\\x27mmap\\x27,\\x27overrideMimeType\\x27,\\x27pop\\x27,\\x27functionsInTableMap\\x27,\\x27processUsingSAB\\x27,\\x27addOnPreRun\\x27,\\x27hd\\x5cx20450bt\\x27,\\x27anker\\x5cx20soundcore\\x5cx20boost\\x27,\\x27/proc\\x27,\\x27office\\x5cx20node\\x5cx20bt\\x27,\\x27soundtech\\x27,\\x27j5create\\x5cx20meeting\\x5cx20mic\\x27,\\x27registerType\\x5cx20registeredInstance\\x5cx20requires\\x5cx20argPackAdvance\\x27,\\x27findEventTarget\\x27,\\x27t-2359\\x27,\\x27_inputData\\x27,\\x27tempFixedLengthArray\\x27,\\x27All:\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20Count:\\x5cx20\\x27,\\x27inetNtop6\\x27,\\x27size\\x27,\\x27bass\\x5cx20master\\x5cx2080bt\\x27,\\x27brio\\x27,\\x27write\\x27,\\x27\\x5cx20encountered\\x5cx20when\\x5cx20serializing\\x5cx20a\\x5cx20JS\\x5cx20string\\x5cx20to\\x5cx20a\\x5cx20UTF-8\\x5cx20string\\x5cx20in\\x5cx20wasm\\x5cx20memory!\\x5cx20(Valid\\x5cx20unicode\\x5cx20code\\x5cx20points\\x5cx20should\\x5cx20be\\x5cx20in\\x5cx20range\\x5cx200-0x10FFFF).\\x27,\\x27/dev/tty\\x27,\\x27refcount\\x27,\\x27module\\x5cx20initialized!\\x27,\\x27fifine\\x5cx20k690\\x5cx20microphone\\x27,\\x27overrunSum\\x27,\\x27worker\\x27,\\x27startedAt\\x27,\\x27setErrNo\\x27,\\x27shared\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Please\\x5cx20add\\x5cx20model\\x5cx20path\\x5cx20before\\x5cx20loading\\x27,\\x27onMessage\\x27,\\x27</pre>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20</details>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x27,\\x27emscriptenWebGLGetTexPixelData\\x27,\\x27load\\x27,\\x27getattr\\x27,\\x27anker\\x5cx20powerconf\\x27,\\x27room\\x5cx20speakerphone\\x27,\\x27Invalid\\x5cx20exchange\\x27,\\x27isClosed\\x27,\\x27dynCall_viijii\\x27,\\x27_setNetworkCallback\\x27,\\x27promiseMap\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20Maximum:\\x5cx20\\x27,\\x27abs\\x27,\\x27Stale\\x5cx20file\\x5cx20handle\\x27,\\x27updateTableMap\\x27,\\x27destructorFunction\\x27,\\x27getExceptionMessage\\x27,\\x27INITIAL_MEMORY\\x5cx20should\\x5cx20be\\x5cx20larger\\x5cx20than\\x5cx20STACK_SIZE,\\x5cx20was\\x5cx20\\x27,\\x27Address\\x5cx20already\\x5cx20in\\x5cx20use\\x27,\\x27jbl\\x5cx20flip\\x5cx204\\x27,\\x27unloadModel\\x27,\\x27dynCall\\x27,\\x27REQUEST_NOISE_CANCELLATION\\x27,\\x27jbl\\x5cx20charge\\x27,\\x27`\\x5cx20not\\x5cx20included\\x5cx20in\\x5cx20INCOMING_MODULE_JS_API\\x27,\\x27url\\x27,\\x27Destination\\x5cx20address\\x5cx20required\\x27,\\x272805228YcvvKx\\x27,\\x27Communication\\x5cx20error\\x5cx20on\\x5cx20send\\x27,\\x27tribit\\x5cx20maxsound\\x5cx20plus\\x27,\\x27creating\\x5cx20db\\x27,\\x27overloadTable\\x27,\\x27stringToUTF32\\x27,\\x27ungotten\\x27,\\x27intArrayFromString\\x27,\\x27/home\\x27,\\x27Memory\\x5cx20size\\x5cx20incompatibility\\x5cx20issues\\x5cx20may\\x5cx20be\\x5cx20due\\x5cx20to\\x5cx20changing\\x5cx20INITIAL_MEMORY\\x5cx20at\\x5cx20runtime\\x5cx20to\\x5cx20something\\x5cx20too\\x5cx20large.\\x5cx20Use\\x5cx20ALLOW_MEMORY_GROWTH\\x5cx20to\\x5cx20allow\\x5cx20any\\x5cx20size\\x5cx20memory\\x5cx20(and\\x5cx20also\\x5cx20make\\x5cx20sure\\x5cx20not\\x5cx20to\\x5cx20set\\x5cx20INITIAL_MEMORY\\x5cx20at\\x5cx20runtime\\x5cx20to\\x5cx20something\\x5cx20smaller\\x5cx20than\\x5cx20it\\x5cx20was\\x5cx20at\\x5cx20compile\\x5cx20time).\\x27,\\x27beoplay\\x5cx20a\\x27,\\x27This\\x5cx20browser\\x5cx20does\\x5cx20not\\x5cx20support\\x5cx20Math.trunc(),\\x5cx20build\\x5cx20with\\x5cx20LEGACY_VM_SUPPORT\\x5cx20or\\x5cx20POLYFILL_OLD_MATH_FUNCTIONS\\x5cx20to\\x5cx20add\\x5cx20in\\x5cx20a\\x5cx20polyfill\\x27,\\x27HEAPU32\\x27,\\x27_setThrew\\x27,\\x27program\\x5cx20exited\\x5cx20(with\\x5cx20status:\\x5cx20\\x27,\\x27SUPPORTED_SAMPLE_RATES\\x27,\\x27structRegistrations\\x27,\\x27_dataPtr\\x27,\\x27November\\x27,\\x27unshift\\x27,\\x27live\\x5cx20microphone\\x27,\\x27Content-length\\x27,\\x27LazyFiles\\x5cx20on\\x5cx20gzip\\x5cx20forces\\x5cx20download\\x5cx20of\\x5cx20the\\x5cx20whole\\x5cx20file\\x5cx20when\\x5cx20length\\x5cx20is\\x5cx20accessed\\x27,\\x27parentObject\\x27,\\x27dynCall_jiji\\x27,\\x27unknown\\x5cx20function\\x5cx20pointer\\x5cx20with\\x5cx20signature\\x5cx20\\x27,\\x27konftel\\x5cx20ego\\x27,\\x27huawei\\x5cx20sound\\x5cx20joy-14974\\x27,\\x27shure\\x5cx20mv5\\x27,\\x27Multihop\\x5cx20attempted\\x27,\\x27initWasm\\x27,\\x27soundlink\\x27,\\x27blob:\\x27,\\x27shure\\x5cx20mv7\\x27,\\x27ExitStatus\\x27,\\x27canOwn\\x27,\\x27memoryInitializerPrefixURL\\x27,\\x27jbl\\x5cx20jr\\x5cx20pop\\x27,\\x27sm900\\x5cx20microphone\\x27,\\x27parent\\x27,\\x27ino\\x27,\\x27Too\\x5cx20many\\x5cx20open\\x5cx20files\\x5cx20in\\x5cx20system\\x27,\\x27December\\x27,\\x27ignoreDuplicateRegistrations\\x27,\\x27empty\\x27,\\x27GLFW\\x27,\\x27Text\\x5cx20file\\x5cx20busy\\x27,\\x27WasmProcessor:waitOnNCRequest\\x27,\\x27tm_mon\\x27,\\x27Unknown\\x5cx20file\\x5cx20open\\x5cx20mode:\\x5cx20\\x27,\\x27to:\\x27,\\x27HEAPF32\\x27,\\x27edifier\\x5cx20r\\x27,\\x27utf-16le\\x27,\\x27forceLoadFile\\x27,\\x27\\x5cx27\\x5cx20called\\x5cx20with\\x5cx20an\\x5cx20invalid\\x5cx20number\\x5cx20of\\x5cx20arguments\\x5cx20(\\x27,\\x27usb\\x5cx20lavalier\\x5cx20microphone\\x27,\\x27fillMouseEventData\\x27,\\x27camera\\x27,\\x27\\x5cx22><source\\x5cx20src=\\x5cx22\\x27,\\x27getSocketFromFD\\x27,\\x27map\\x27,\\x27hashAddNode\\x27,\\x27Instance\\x27,\\x27_channelCount\\x27,\\x27toISOString\\x27,\\x27filePackagePrefixURL\\x27,\\x27sharedBuffers\\x27,\\x27normalize\\x27,\\x27getMode\\x27,\\x27defineProperty\\x27,\\x27auna\\x5cx20mic\\x5cx20cm900\\x27,\\x27errored\\x27,\\x27RegisteredPointer_deleteObject\\x27,\\x27Read\\x5cx20only\\x5cx20file\\x5cx20system\\x27,\\x27dependency:\\x5cx20\\x27,\\x27Advertise\\x5cx20error\\x27,\\x27HeapAudioBuffer\\x27,\\x27convertPCtoSourceLocation\\x27,\\x27alignment\\x5cx20argument\\x5cx20is\\x5cx20required\\x27,\\x27uncaughtExceptionCount\\x27,\\x27createSpecialDirectories\\x27,\\x27getBasestPointer\\x27,\\x27aavante\\x5cx20bar\\x5cx201160\\x27,\\x27jstoi_s\\x27,\\x27from\\x27,\\x27writeI53ToU64Signaling\\x27,\\x27\\x5cx20bytes,\\x5cx20but\\x5cx20got\\x5cx20error:\\x5cx20\\x27,\\x27model\\x5cx20unloaded\\x5cx20from\\x5cx20memory\\x27,\\x27set_rethrown\\x27,\\x27flagModes\\x27,\\x27requestPointerLock\\x27,\\x27dynCall_iiiiiijj\\x27,\\x27onExit\\x27,\\x27lookupPath\\x27,\\x27logi\\x5cx20z207\\x27,\\x27_allocateHeap\\x27,\\x27getTypeName\\x27,\\x27done\\x27,\\x27OUTPUT_CLEAN_AUDIO_DATA\\x27,\\x27devices\\x27,\\x27anker\\x5cx20powerconf\\x5cx20s3\uFF08\u5927\u4F1A\u8B70\u5BA4\uFF09\\x27,\\x27\\x5cx20arguments,\\x5cx20expected\\x5cx20\\x27,\\x27FS.createLink\\x5cx20has\\x5cx20been\\x5cx20removed;\\x5cx20use\\x5cx20FS.symlink\\x5cx20instead\\x27,\\x27office\\x5cx20speaker\\x27,\\x27runDestructor\\x27,\\x27Protocol\\x5cx20driver\\x5cx20not\\x5cx20attached\\x27,\\x27odyssey\\x5cx20microphone\\x27,\\x27mc-d800\\x27,\\x27\\x5cx20FS.syncfs\\x5cx20operations\\x5cx20in\\x5cx20flight\\x5cx20at\\x5cx20once,\\x5cx20probably\\x5cx20just\\x5cx20doing\\x5cx20extra\\x5cx20work\\x27,\\x27replace\\x27,\\x27utf8\\x27,\\x27desktop\\x5cx20speakers\\x5cx20-\\x5cx20home\\x27,\\x27echo\\x5cx20dot\\x27,\\x27jbl\\x5cx20pulse\\x5cx203\\x27,\\x27impulse\\x27,\\x27writeI53ToI64\\x27,\\x27Failed\\x5cx20to\\x5cx20grow\\x5cx20the\\x5cx20heap\\x5cx20from\\x5cx20\\x27,\\x27srs-xb23\\x27,\\x27initialized\\x27,\\x27demangle\\x27,\\x27\\x5cx20bytes,\\x5cx20but\\x5cx20the\\x5cx20limit\\x5cx20is\\x5cx20\\x27,\\x27frameProcessStatistics\\x27,\\x27SharedRingBuffer\\x27,\\x27polycom\\x27,\\x27ian\\x5cx20layugan\u2019s\\x5cx20double\\x5cx20chill\\x5cx20speaker\\x27,\\x27%H:%M\\x27,\\x27FS_unlink\\x27,\\x27exiting\\x5cx20due\\x5cx20to\\x5cx20exception:\\x5cx20\\x27,\\x27bluetooth\\x5cx20soundbar\\x27,\\x27_logError\\x27,\\x27Stack\\x5cx20overflow!\\x5cx20Stack\\x5cx20cookie\\x5cx20has\\x5cx20been\\x5cx20overwritten\\x5cx20at\\x5cx20\\x27,\\x27set\\x27,\\x27requireRegisteredType\\x27,\\x27get_type\\x27,\\x27dropBuffer\\x27,\\x27chown\\x27,\\x27getMounts\\x27,\\x27DB_NAME\\x27,\\x27UnboundTypeError\\x27,\\x27registerFocusEventCallback\\x27,\\x27hk\\x5cx20omni\\x5cx2010\\x27,\\x27_sharedOutputRingBuffer\\x27,\\x27fillOrientationChangeEventData\\x27,\\x27getFullYear\\x27,\\x27onAudioProcessSuccessCB\\x27,\\x27File\\x5cx20or\\x5cx20path\\x5cx20name\\x5cx20too\\x5cx20long\\x27,\\x27lastIndexOf\\x27,\\x27getStreamFromFD\\x27,\\x27getFunctionTables\\x27,\\x27Channel\\x5cx20number\\x5cx20out\\x5cx20of\\x5cx20range\\x27,\\x27filter\\x27,\\x27result\\x27,\\x27.\\x5cx20Status:\\x5cx20\\x27,\\x27waitOnNCRequest\\x27,\\x27Sockets\\x27,\\x27pushInput\\x27,\\x27dynCall_iiiiij\\x27,\\x27allocated\\x27,\\x27Given\\x5cx20log.\\x5cx20name\\x5cx20not\\x5cx20unique\\x27,\\x27September\\x27,\\x27_emscripten_stack_init\\x27,\\x27detachFinalizer_deps\\x27,\\x27print\\x27,\\x27__cxa_is_pointer_type\\x27,\\x27kz-dc4k\\x5cx20audio\\x27,\\x27warnOnce\\x27,\\x27.html\\x27,\\x27Network\\x5cx20interface\\x5cx20is\\x5cx20not\\x5cx20configured\\x27,\\x27pebble\\x5cx20v3\\x27,\\x27simpleReadValueFromPointer\\x27,\\x27ENVIRONMENT\\x27,\\x27Network\\x5cx20error\\x5cx20during\\x5cx20model\\x5cx20loading\\x27,\\x27edifier\\x5cx20mp120\\x27,\\x27decode\\x27,\\x27getEmptyTableSlot\\x27,\\x27sony:srs-x5\\x27,\\x27buffer\\x27,\\x27revolabs\\x5cx20digital\\x5cx20audio\\x5cx20device\\x27,\\x27Math\\x5cx20arg\\x5cx20out\\x5cx20of\\x5cx20domain\\x5cx20of\\x5cx20func\\x27,\\x27exports\\x27,\\x27_channelData\\x27,\\x27onmessage\\x27,\\x27FS.joinPath\\x5cx20has\\x5cx20been\\x5cx20removed;\\x5cx20use\\x5cx20PATH.join\\x5cx20instead\\x27,\\x27registerInheritedInstance\\x27,\\x27convertJsFunctionToWasm\\x27,\\x27_emscripten_stack_get_end\\x27,\\x27UTF16ToString\\x27,\\x27InternalError\\x27,\\x27warning:\\x5cx20build\\x5cx20with\\x5cx20-sDEMANGLE_SUPPORT\\x5cx20to\\x5cx20link\\x5cx20in\\x5cx20libcxxabi\\x5cx20demangling\\x27,\\x27getdents\\x27,\\x27locateFile\\x27,\\x27registerGamepadEventCallback\\x27,\\x27Bad\\x5cx20font\\x5cx20file\\x5cx20fmt\\x27,\\x27at9934usb\\x27,\\x27sennheiser\\x5cx20458bt\\x27,\\x27bugani\\x5cx20m83\\x27,\\x27.lib\\x5cx20section\\x5cx20in\\x5cx20a.out\\x5cx20corrupted\\x27,\\x27g560\\x5cx20gaming\\x5cx20speaker\\x27,\\x27trenbader\\x5cx20artlink\\x27,\\x27char_0\\x27,\\x27display\\x27,\\x27floatReadValueFromPointer\\x27,\\x27init\\x27,\\x27constNoSmartPtrRawPointerToWireType\\x27,\\x27by-pm500\\x27,\\x27Connection\\x5cx20refused\\x27,\\x27\\x5cx20bytes!\\x27,\\x27jbl\\x5cx20irx112bt\\x27,\\x27createWAVBlob\\x27,\\x27baf-0845\\x27,\\x27stanmore\\x5cx20speaker\\x27,\\x27report-\\x27,\\x27envy\\x5cx2034\\x27,\\x27tm_min\\x27,\\x27Cannot\\x5cx20use\\x5cx20deleted\\x5cx20val.\\x5cx20handle\\x5cx20=\\x5cx20\\x27,\\x27_free\\x27,\\x27arozzi\\x5cx20sfera\\x5cx20microphone\\x27,\\x27ClassHandle_deleteLater\\x27,\\x27_heapInputBuffer\\x27,\\x27calledRun\\x27,\\x27\\x5cx20args!\\x27,\\x27copyWithin\\x27,\\x27c2422he\\x27,\\x27fround\\x27,\\x27This\\x5cx20browser\\x5cx20does\\x5cx20not\\x5cx20support\\x5cx20Math.clz32(),\\x5cx20build\\x5cx20with\\x5cx20LEGACY_VM_SUPPORT\\x5cx20or\\x5cx20POLYFILL_OLD_MATH_FUNCTIONS\\x5cx20to\\x5cx20add\\x5cx20in\\x5cx20a\\x5cx20polyfill\\x27,\\x27emeet\\x27,\\x27validateThis\\x27,\\x27readFiles\\x27,\\x27Cannot\\x5cx20do\\x5cx20synchronous\\x5cx20binary\\x5cx20XHRs\\x5cx20outside\\x5cx20webworkers\\x5cx20in\\x5cx20modern\\x5cx20browsers.\\x5cx20Use\\x5cx20--embed-file\\x5cx20or\\x5cx20--preload-file\\x5cx20in\\x5cx20emcc\\x27,\\x27spark\\x5cx2040\\x5cx20audio\\x27,\\x27Arguments\\x5cx20to\\x5cx20path.resolve\\x5cx20must\\x5cx20be\\x5cx20strings\\x27,\\x27simmons\\x5cx20sd600\\x27,\\x27isFolder\\x27,\\x27throw\\x27,\\x27splice\\x27,\\x27setCanvasElementSize\\x27,\\x27filesystems\\x27,\\x27Cannot\\x5cx20enlarge\\x5cx20memory,\\x5cx20asked\\x5cx20to\\x5cx20go\\x5cx20up\\x5cx20to\\x5cx20\\x27,\\x27obsbot\\x5cx20tiny\\x5cx20audio\\x27,\\x27input\\x27,\\x27registerVisibilityChangeEventCallback\\x27,\\x27includes\\x27,\\x27href\\x27,\\x27April\\x27,\\x27logitech\\x5cx20mx\\x5cx20sound\\x27,\\x27xech\\x5cx20t2s\\x27,\\x27bytes\\x27,\\x27unSign\\x27,\\x27WasmProcessor:processUsingSAB\\x27,\\x27miniso\\x5cx20d40f\\x27,\\x27maybeExit\\x27,\\x27forEach\\x27,\\x27at2020\\x5cx20usb\\x27,\\x27registerBeforeUnloadEventCallback\\x27,\\x27bietrun\\x5cx20one\\x27,\\x27Invalid\\x5cx20argument\\x27,\\x27RegisteredClass\\x27,\\x27Function\\x5cx20\\x5cx27\\x27,\\x27gamedac\\x27,\\x27HEAPF64\\x27,\\x27nodePermissions\\x27,\\x27lg\\x5cx20ph1(2a)\\x27,\\x27undefined\\x27,\\x27srs-xb43\\x27,\\x27logic\\x5cx20sp2\\x27,\\x27tronsmart\\x5cx20element\\x5cx20force\\x27,\\x27location\\x27,\\x27Socket\\x5cx20operation\\x5cx20on\\x5cx20non-socket\\x27,\\x27emval_handle_array\\x27,\\x27___cxa_free_exception\\x27,\\x27soundstation\\x5cx207\\x5cx20lite\\x27,\\x27_modelInited\\x27,\\x27get_exception_ptr\\x27,\\x27uleb128Encode\\x27,\\x27setUint16\\x27,\\x27registerWheelEventCallback\\x27,\\x27responseType\\x27,\\x27shell\\x5cx20environment\\x5cx20detected\\x5cx20but\\x5cx20not\\x5cx20enabled\\x5cx20at\\x5cx20build\\x5cx20time.\\x5cx20\\x5cx20Add\\x5cx20\\x5cx27shell\\x5cx27\\x5cx20to\\x5cx20`-sENVIRONMENT`\\x5cx20to\\x5cx20enable.\\x27,\\x27powerconf\\x5cx20s3\\x27,\\x27_sharedInputRingBuffer\\x27,\\x27runMainThreadEmAsm\\x27,\\x27get_rethrown\\x27,\\x27title\\x27,\\x27getBufferLength\\x27,\\x27uc40m\\x5cx20audio\\x27,\\x27values\\x27,\\x27node\\x5cx20environment\\x5cx20detected\\x5cx20but\\x5cx20not\\x5cx20enabled\\x5cx20at\\x5cx20build\\x5cx20time.\\x5cx20\\x5cx20Add\\x5cx20\\x5cx27node\\x5cx27\\x5cx20to\\x5cx20`-sENVIRONMENT`\\x5cx20to\\x5cx20enable.\\x27,\\x27miniTempWebGLFloatBuffers\\x27,\\x27edifier\\x5cx20mp380\\x27,\\x27`\\x5cx20is\\x5cx20a\\x5cx20library\\x5cx20symbol\\x5cx20and\\x5cx20not\\x5cx20included\\x5cx20by\\x5cx20default;\\x5cx20add\\x5cx20it\\x5cx20to\\x5cx20your\\x5cx20library.js\\x5cx20__deps\\x5cx20or\\x5cx20to\\x5cx20DEFAULT_LIBRARY_FUNCS_TO_INCLUDE\\x5cx20on\\x5cx20the\\x5cx20command\\x5cx20line\\x27,\\x27errno\\x27,\\x27getTime\\x27,\\x27megablast\\x27,\\x27Accept-Ranges\\x27,\\x27charCodeAt\\x27,\\x27stringToAscii\\x27,\\x27ioctl\\x27,\\x27emval_registeredMethods\\x27,\\x27chunks\\x27,\\x27setDelayFunction\\x27,\\x27DB_STORE_NAME\\x27,\\x27shown\\x27,\\x27logi\\x5cx20group\\x5cx20speakerphone\\x27,\\x27_embind_initialize_bindings\\x27,\\x27writeI53ToI64Signaling\\x27,\\x27miniso-a18\\x27,\\x27DB_VERSION\\x27,\\x27mobiola\\x5cx20microphone\\x27,\\x27WorkerProcessor:onWasmModuleInitialized\\x27,\\x27put_char\\x27,\\x27emeet\\x5cx20m2\\x5cx20max\\x27,\\x27sony:srs-x2\\x27,\\x27setMonth\\x27,\\x27embindRepr\\x27,\\x27no\\x5cx20exception\\x5cx20to\\x5cx20throw\\x27,\\x27quit\\x27,\\x27lookup\\x27,\\x27getPromise\\x27,\\x27addOnInit\\x27,\\x27logAudio\\x27,\\x27lookupNode\\x27,\\x27/dev\\x27,\\x27read\\x27,\\x27free\\x27,\\x27razer\\x5cx20kiyo\\x27,\\x27enacfire\\x5cx20soundbar\\x27,\\x27void\\x27,\\x27usb-mic\\x27,\\x27/dev/stderr\\x27,\\x27softFullscreenResizeWebGLRenderTarget\\x27,\\x27ClassHandle_clone\\x27,\\x27Remote\\x5cx20address\\x5cx20changed\\x27,\\x27_maxChannelCount\\x27,\\x27downloadBlob\\x27,\\x27follow_mount\\x27,\\x27cacheLength\\x27,\\x27numArguments\\x27,\\x27logitech\\x5cx20x50\\x27,\\x27position\\x27,\\x27KrispAudioSamplingRate\\x27,\\x27FS.createFolder\\x5cx20has\\x5cx20been\\x5cx20removed;\\x5cx20use\\x5cx20FS.mkdir\\x5cx20instead\\x27,\\x27ausdom\\x5cx20microphone\\x27,\\x27Cannot\\x5cx20register\\x5cx20multiple\\x5cx20overloads\\x5cx20of\\x5cx20a\\x5cx20function\\x5cx20with\\x5cx20the\\x5cx20same\\x5cx20number\\x5cx20of\\x5cx20arguments\\x5cx20(\\x27,\\x27audiopro\\x5cx20x5\\x5cx20microphone\\x27,\\x27options\\x27,\\x27stream_ops\\x27,\\x27isAbs\\x27,\\x27Use\\x5cx20of\\x5cx20`wasmMemory`\\x5cx20detected.\\x5cx20\\x5cx20Use\\x5cx20-sIMPORTED_MEMORY\\x5cx20to\\x5cx20define\\x5cx20wasmMemory\\x5cx20externally\\x27,\\x27jabra\\x5cx20speak\\x27,\\x27createNamedFunction\\x27,\\x27msIndexedDB\\x27,\\x27major\\x27,\\x27sb-50\\x27,\\x27FS_createPath\\x27,\\x27allocateUTF8\\x27,\\x27soundcore\\x5cx20mini\\x5cx203\\x5cx20pro\\x27,\\x27audioengine\\x27,\\x27createStandardStreams\\x27,\\x27emscripten_realloc_buffer\\x27,\\x27Host\\x5cx20is\\x5cx20down\\x27,\\x27reSign\\x27,\\x27FSStream\\x27,\\x27tm_mday\\x27,\\x27setStatus\\x27,\\x27min\\x27,\\x27stringToUTF8\\x27,\\x27join2\\x27,\\x27Protocol\\x5cx20wrong\\x5cx20type\\x5cx20for\\x5cx20socket\\x27,\\x27/dev/shm\\x27,\\x27WASM\\x5cx20Module\\x5cx20initialized\\x27,\\x27constructor\\x27,\\x27addPath\\x27,\\x27edifier\\x5cx20luna\\x5cx20eclipse\\x27,\\x27MAX_VALUE\\x27,\\x27bind\\x27,\\x27mounted\\x27,\\x27___start_em_js\\x27,\\x27Too\\x5cx20many\\x5cx20users\\x27,\\x27Browser\\x27,\\x27creative\\x5cx20t100\\x27,\\x27chunkSize\\x27,\\x27ExceptionInfo\\x27,\\x27Module.TOTAL_MEMORY\\x5cx20has\\x5cx20been\\x5cx20renamed\\x5cx20Module.INITIAL_MEMORY\\x27,\\x27PATH\\x27,\\x27registerTouchEventCallback\\x27,\\x27node\\x27,\\x27adaptChannel\\x27,\\x27lengthKnown\\x27,\\x27getDevice\\x27,\\x27doWritev\\x27,\\x27Exec\\x5cx20format\\x5cx20error\\x27,\\x27Input:\\x5cx20\\x27,\\x27marley\\x5cx20chant\\x5cx20mini\\x27,\\x27autoResumeAudioContext\\x27,\\x27epson\\x5cx20projector\\x5cx20mpp\\x5cx20audio\\x27,\\x27ops_table\\x27,\\x27lg\\x5cx20sh5(58)\\x27,\\x27status\\x27,\\x27\\x5cx20encountered\\x5cx20when\\x5cx20deserializing\\x5cx20a\\x5cx20UTF-8\\x5cx20string\\x5cx20in\\x5cx20wasm\\x5cx20memory\\x5cx20to\\x5cx20a\\x5cx20JS\\x5cx20string!\\x27,\\x27default_tty_ops\\x27,\\x27decrementExceptionRefcount\\x27,\\x27Unhandled\\x5cx20message\\x5cx20received\\x5cx20during\\x5cx20workerRegistration\\x27,\\x27(end\\x5cx20of\\x5cx20list)\\x27,\\x27worklet\\x27,\\x27tonor\\x5cx20tc-2030\\x5cx20audio\\x5cx20device\\x27,\\x27environment\\x5cx20detection\\x5cx20error\\x27,\\x27This\\x5cx20browser\\x5cx20does\\x5cx20not\\x5cx20support\\x5cx20Math.fround(),\\x5cx20build\\x5cx20with\\x5cx20LEGACY_VM_SUPPORT\\x5cx20or\\x5cx20POLYFILL_OLD_MATH_FUNCTIONS\\x5cx20to\\x5cx20add\\x5cx20in\\x5cx20a\\x5cx20polyfill\\x27,\\x27soundcore\\x5cx20flare\\x27,\\x27processor\\x27,\\x27sound\\x5cx20blaster\\x27,\\x27Can\\x5cx27t\\x5cx20send\\x5cx20after\\x5cx20socket\\x5cx20shutdown\\x27,\\x27soundcore\\x5cx20sport\\x5cx20xl\\x27,\\x27nonConstNoSmartPtrRawPointerToWireType\\x27,\\x27unloadModuleModel\\x27,\\x27subarray\\x27,\\x27jbl\\x5cx20horizon\\x27,\\x27ALLOC_STACK\\x27,\\x27anker\\x5cx20soundcore\\x27,\\x27logi\\x5cx20rally\\x5cx20bar\\x5cx20mini\\x5cx20audio\\x27,\\x27integerReadValueFromPointer\\x27,\\x27Module.instantiateWasm\\x5cx20callback\\x5cx20failed\\x5cx20with\\x5cx20error:\\x5cx20\\x27,\\x27logAudioOutputSamples\\x27,\\x27The\\x5cx20object\\x5cx20is\\x5cx20remote\\x27,\\x27anua\\x5cx20mic\\x5cx20cm\\x5cx20900\\x27,\\x27onRuntimeInitialized\\x27,\\x27random\\x27,\\x27KrispSDK\\x5cx20-\\x5cx20unable\\x5cx20to\\x5cx20download\\x5cx20the\\x5cx20report!\\x27,\\x27/proc/self\\x27,\\x27rmdir\\x27,\\x27UTF16Decoder\\x27,\\x27useSharedArrayBuffer\\x27,\\x27createDefaultDirectories\\x27,\\x27plasma\\x5cx20microphone\\x27,\\x27polycom\\x5cx20voxbox\\x27,\\x27makeClassHandle\\x27,\\x27log\\x27,\\x27isFile\\x27,\\x27Message\\x5cx20too\\x5cx20long\\x27,\\x27runAndAbortIfError\\x27,\\x27Logger\\x27,\\x27shure\\x5cx20digital\\x27,\\x27onWasmProcessorErrorCB\\x27,\\x27obsbot\\x5cx20meet\\x5cx20microphone\\x27,\\x27getInheritedInstance\\x27,\\x27create\\x27,\\x27getDate\\x27,\\x27get_char\\x27,\\x27then\\x27,\\x27Math\\x5cx20result\\x5cx20not\\x5cx20representable\\x27,\\x27compiled\\x5cx20without\\x5cx20a\\x5cx20main,\\x5cx20but\\x5cx20one\\x5cx20is\\x5cx20present.\\x5cx20if\\x5cx20you\\x5cx20added\\x5cx20it\\x5cx20from\\x5cx20JS,\\x5cx20use\\x5cx20Module[\\x5cx22onRuntimeInitialized\\x5cx22]\\x27,\\x27onload\\x27,\\x27No\\x5cx20data\\x5cx20(for\\x5cx20no\\x5cx20delay\\x5cx20io)\\x27,\\x27set_adjusted_ptr\\x27,\\x27</div>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<details>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<summary>Logs</summary>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<pre>\\x27,\\x27nextInode\\x27,\\x27bt\\x5cx20hifi\\x5cx20audio\\x27,\\x27stream\\x27,\\x27wonderboom\\x27,\\x27Cannot\\x5cx20call\\x5cx20\\x27,\\x27Interrupted\\x5cx20system\\x5cx20call\\x27,\\x27bose\\x5cx20sliii\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<div>\\x27,\\x27sampleRate\\x27,\\x27pushOutput\\x27,\\x27versions\\x27,\\x27the\\x5cx20stack\\x5cx20size\\x5cx20can\\x5cx20no\\x5cx20longer\\x5cx20be\\x5cx20determined\\x5cx20at\\x5cx20runtime\\x27,\\x27/home/web_user\\x27,\\x27web\\x5cx20cam\\x27,\\x27Function\\x5cx20not\\x5cx20implemented\\x27,\\x27magic\\x5cx20mic\\x27,\\x27ziisound\\x5cx20d5\\x27,\\x27750wFWjof\\x27,\\x27Block\\x5cx20device\\x5cx20required\\x27,\\x27hk\\x5cx20onyx\\x5cx20studio\\x5cx204\\x27,\\x27logAudioInputSamples\\x27,\\x27Mismatched\\x5cx20type\\x5cx20converter\\x5cx20count\\x27,\\x27BUFFER_DROP_SIZE_MS\\x27,\\x27_isInitialized\\x27,\\x27___errno_location\\x27,\\x27redmi\\x5cx20tv\\x5cx20soundbar\\x27,\\x27getLiveInheritedInstances\\x27,\\x27\\x5cx20bytes\\x5cx20available!\\x5cx20programmer\\x5cx20error!\\x27,\\x27./this.program\\x27,\\x27bw02-bt\\x27,\\x27HeapAudioBufferFactory\\x27,\\x27room1\\x5cx20bluetooth\\x27,\\x271205661KyFbxR\\x27,\\x27modelPath\\x27,\\x27hardwareConcurrency\\x27,\\x27getBoundingClientRect\\x27,\\x27setLoggingPort\\x27,\\x2716848MQtXOd\\x27,\\x27stdin\\x27,\\x27Connection\\x5cx20reset\\x5cx20by\\x5cx20network\\x27,\\x27)\\x5cx20-\\x5cx20expects\\x5cx20one\\x5cx20of\\x5cx20(\\x27,\\x27expandFileStorage\\x27,\\x27imul\\x27,\\x27String\\x5cx20has\\x5cx20UTF-16\\x5cx20code\\x5cx20units\\x5cx20that\\x5cx20do\\x5cx20not\\x5cx20fit\\x5cx20in\\x5cx208\\x5cx20bits\\x27,\\x27numFrames\\x27,\\x27addEventListener\\x27,\\x27Couldn\\x5cx27t\\x5cx20load\\x5cx20\\x27,\\x27collectFrom\\x27,\\x27webglGetUniformLocation\\x27,\\x27edifier_r\\x27,\\x27throwBindingError\\x27,\\x27imported\\x5cx20Memory\\x27,\\x27setDataGetter\\x27,\\x27IDBStore\\x27,\\x27tupleRegistrations\\x27,\\x27malloc\\x27,\\x27getInheritedInstanceCount\\x27,\\x27charAt\\x27,\\x27trunc\\x27,\\x27`\\x5cx20was\\x5cx20supplied\\x5cx20but\\x5cx20`\\x27,\\x27stdout\\x27,\\x27sigToWasmTypes\\x27,\\x27fantech\\x5cx20leviosa\\x27,\\x27Not\\x5cx20enough\\x5cx20core\\x27,\\x27_unknown\\x27,\\x27Loading\\x5cx20data\\x5cx20file\\x5cx20\\x5cx22\\x27,\\x27shift\\x27,\\x27Cross-device\\x5cx20link\\x27,\\x27wba31\\x27,\\x27polyfillSetImmediate\\x27,\\x27PureVirtualError\\x27,\\x27makedev\\x27,\\x27bytes=\\x27,\\x27detachFinalizer\\x27,\\x27writeStringToMemory\\x27,\\x27nlink\\x27,\\x27flagsToPermissionString\\x27,\\x27onerror\\x27,\\x27getCompilerSetting\\x27,\\x27path\\x27,\\x27getLEB\\x27,\\x27wasm-instantiate\\x27,\\x27Streams\\x5cx20pipe\\x5cx20error\\x27,\\x27bedroom\\x5cx20speaker\\x27,\\x27ln01a\\x27,\\x27readAsDataURL\\x27,\\x27checkStackCookie\\x27,\\x27number\\x27,\\x27hasOwnProperty\\x27,\\x27tm_yday\\x27,\\x27message\\x27,\\x27getDay\\x27,\\x27rode\\x5cx20nt-usb\\x27,\\x27dlopenMissingError\\x27,\\x27fillDeviceMotionEventData\\x27,\\x27doRequestFullscreen\\x27,\\x27transaction\\x27,\\x27clz32\\x27,\\x27getHeapMax\\x27,\\x27ankerwork\\x5cx20b600\\x5cx20video\\x5cx20bar\\x27,\\x27error\\x27,\\x27FS_createPreloadedFile\\x27,\\x27streams\\x27,\\x27createDataFile\\x27,\\x27crestron\\x5cx20mercury\\x27,\\x27instances\\x27,\\x27byteLength\\x27,\\x27sembrandt\\x5cx20ms200\\x27,\\x27truncate\\x27,\\x27READ_INDEX\\x27,\\x27readwrite\\x27,\\x27stderr\\x27,\\x27port2\\x27,\\x27ALLOC_NORMAL\\x27,\\x27onWasmProcessorSuccessCB\\x27,\\x27stat\\x27,\\x27big\\x5cx20jambox\\x5cx20by\\x5cx20jawbone\\x27,\\x27EGL\\x27,\\x27edifier\\x5cx20s880\\x27,\\x27data\\x27,\\x27handleException\\x27,\\x27emval_allocateDestructors\\x27,\\x27yoyo\\x27,\\x27screenOrientation\\x27,\\x27encoding\\x27,\\x27tm_hour\\x27,\\x27stackAlloc\\x27,\\x27value\\x27,\\x27createStream\\x27,\\x27ModelLoader\\x27,\\x27__embind_initialize_bindings\\x27,\\x27link\\x27,\\x27fillBatteryEventData\\x27,\\x27Emval\\x27,\\x27attachFinalizer\\x27,\\x27phonak\\x5cx20compilot\\x5cx20ii\\x27,\\x27\\x5cx27\\x5cx20was\\x5cx20not\\x5cx20exported.\\x5cx20add\\x5cx20it\\x5cx20to\\x5cx20EXPORTED_RUNTIME_METHODS\\x5cx20(see\\x5cx20the\\x5cx20FAQ)\\x27,\\x27indexOf\\x27,\\x27throwUnboundTypeError\\x27,\\x27isChrdev\\x27,\\x27Out\\x5cx20of\\x5cx20streams\\x5cx20resources\\x27,\\x27wireless\\x5cx20go\\x5cx20ii\\x5cx20rx\\x27,\\x27getAvailableSamples\\x27,\\x27blobToBase64\\x27,\\x27registerPointerlockErrorEventCallback\\x27,\\x27assign\\x27,\\x27releaseClassHandle\\x27,\\x27/dev/tty1\\x27,\\x27emscripten_stack_init\\x27,\\x27fillVisibilityChangeEventData\\x27,\\x27Monday\\x27,\\x27flushPendingDeletes\\x27,\\x27dm-40bt\\x27,\\x27mts-2026\\x27,\\x27pull\\x27,\\x27evga\\x5cx20xr1\\x5cx20pro\\x5cx20capture\\x5cx20box\\x5cx20audio\\x27,\\x27std::string\\x27,\\x27readLatin1String\\x27,\\x27exceptionLast\\x27,\\x27arguments_\\x27,\\x27avantree\\x5cx20saturn\\x5cx20pro\\x27,\\x27Replacing\\x5cx20nonexistant\\x5cx20public\\x5cx20symbol\\x27,\\x271289108ZEmaqP\\x27,\\x27Module.setWindowTitle\\x5cx20option\\x5cx20was\\x5cx20removed\\x5cx20(modify\\x5cx20setWindowTitle\\x5cx20in\\x5cx20JS)\\x27,\\x27SUPPORTED_INBOUND_SAMPLE_RATES\\x27,\\x27emscriptenWebGLGetUniform\\x27,\\x27ClassHandle_isAliasOf\\x27,\\x27emeet\\x5cx20m2\\x27,\\x27soundbar\\x5cx20lp-s08\\x27,\\x27safeSetTimeout\\x27,\\x27Too\\x5cx20many\\x5cx20open\\x5cx20files\\x27,\\x27stack\\x27,\\x27unregisterInheritedInstance\\x27,\\x27ports\\x27,\\x27put\\x27,\\x27WASM_PROCESSOR_INITIALIZED\\x27,\\x27info\\x27,\\x27WORKLET_PROCESSOR_NAME\\x27,\\x27Aborted(\\x27,\\x27stackTrace\\x27,\\x27BYTES_PER_ELEMENT\\x27,\\x27listenOnce\\x27,\\x27freeTableIndexes\\x27,\\x27doReadv\\x27,\\x27mknod\\x27,\\x27MEMFS\\x27,\\x27missing\\x5cx20table\\x5cx20entry\\x5cx20in\\x5cx20dynCall:\\x5cx20\\x27,\\x27string\\x27,\\x27No\\x5cx20record\\x5cx20locks\\x5cx20available\\x27,\\x27init_RegisteredPointer\\x27,\\x27sennheiser\\x5cx20xs\\x5cx20lav\\x5cx20usb-c\\x27,\\x27DebugRecorder\\x27,\\x27closeStream\\x27,\\x27readdir\\x27,\\x27set_refcount\\x27,\\x27edifier\\x5cx20g2000\\x27,\\x27getStream\\x27,\\x27q30\\x5cx20-\\x5cx20glauber\\x27,\\x27nameTable\\x27,\\x27noFSInit\\x27,\\x27postLog\\x27,\\x27antlion\\x5cx20wireless\\x5cx20microphone\\x27,\\x27Identifier\\x5cx20removed\\x27,\\x27Module.readAsync\\x5cx20option\\x5cx20was\\x5cx20removed\\x5cx20(modify\\x5cx20readAsync\\x5cx20in\\x5cx20JS)\\x27,\\x27Detected\\x5cx20runtime\\x5cx20INITIAL_MEMORY\\x5cx20setting.\\x5cx20\\x5cx20Use\\x5cx20-sIMPORTED_MEMORY\\x5cx20to\\x5cx20define\\x5cx20wasmMemory\\x5cx20dynamically\\x27,\\x27Device\\x5cx20not\\x5cx20a\\x5cx20stream\\x27,\\x27RegisteredPointer_destructor\\x27,\\x27getDynCaller\\x27,\\x27setMainLoop\\x27,\\x27threadName\\x27,\\x27ptrToString\\x27,\\x27writeSockaddr\\x27,\\x27no\\x5cx20cryptographic\\x5cx20support\\x5cx20found\\x5cx20for\\x5cx20randomDevice.\\x5cx20consider\\x5cx20polyfilling\\x5cx20it\\x5cx20if\\x5cx20you\\x5cx20want\\x5cx20to\\x5cx20use\\x5cx20something\\x5cx20insecure\\x5cx20like\\x5cx20Math.random(),\\x5cx20e.g.\\x5cx20put\\x5cx20this\\x5cx20in\\x5cx20a\\x5cx20--pre-js:\\x5cx20var\\x5cx20crypto\\x5cx20=\\x5cx20{\\x5cx20getRandomValues:\\x5cx20function(array)\\x5cx20{\\x5cx20for\\x5cx20(var\\x5cx20i\\x5cx20=\\x5cx200;\\x5cx20i\\x5cx20<\\x5cx20array.length;\\x5cx20i++)\\x5cx20array[i]\\x5cx20=\\x5cx20(Math.random()*256)|0\\x5cx20}\\x5cx20};\\x27,\\x27Tuesday\\x27,\\x27ht-ct80\\x27,\\x27GLFW_Window\\x27,\\x27mevo\\x27,\\x27hashName\\x27,\\x27name\\x27,\\x27join\\x27,\\x27munmap\\x27,\\x27analyzePath\\x27,\\x27SetModel\\x27,\\x27setUint32\\x27,\\x27soundcore\\x5cx20motion\\x5cx20b\\x27,\\x27soundcore\\x5cx202\\x27,\\x27SDL_audio\\x27,\\x27warning:\\x5cx20\\x27,\\x27invalid\\x5cx20range\\x5cx20(\\x27,\\x27registerFunctions\\x27,\\x27poly\\x5cx20sync\\x27,\\x27_getAvailableRead\\x27,\\x27wasmBinary\\x27,\\x27setTempRet0\\x27,\\x27Module.pthreadMainPrefixURL\\x5cx20option\\x5cx20was\\x5cx20removed,\\x5cx20use\\x5cx20Module.locateFile\\x5cx20instead\\x27,\\x27hyperx\\x5cx20solocast\\x27,\\x27init_ClassHandle\\x27,\\x27read_\\x27,\\x27readEmAsmArgs\\x27,\\x27t27hv-20\\x27,\\x27stringToUTF8Array\\x27,\\x27REQUEST_NOISE_CANCELATION\\x27,\\x27blksize\\x27,\\x27debugLogs\\x27,\\x27hd\\x5cx20458bt\\x27,\\x27quit_\\x27,\\x27GET\\x27,\\x27printAvailableReadAndWrite\\x27,\\x27Bad\\x5cx20address\\x27,\\x27tm_year\\x27,\\x27Level\\x5cx203\\x5cx20halted\\x27,\\x27FILE_DATA\\x27,\\x27allocateUTF8OnStack\\x27,\\x27chmod\\x27,\\x27soundflower\\x27,\\x27unlink\\x27,\\x27removeFunction\\x27,\\x27init_emval\\x27,\\x27vivan\\x5cx20vs12\\x27,\\x27failed\\x5cx20to\\x5cx20compile\\x5cx20wasm\\x5cx20module:\\x5cx20\\x27,\\x27sr600202\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Buffer\\x5cx20not\\x5cx20enough\\x5cx20samples\\x27,\\x27Host\\x5cx20is\\x5cx20unreachable\\x27,\\x27instantiateWasm\\x27,\\x27_emscripten_stack_get_base\\x27,\\x27\\x5cx22\\x5cx20from\\x5cx20JS\\x5cx20side\\x5cx20to\\x5cx20C/C++\\x5cx20side\\x5cx20to\\x5cx20an\\x5cx20argument\\x5cx20of\\x5cx20type\\x5cx20\\x5cx22\\x27,\\x27indexedDB\\x27,\\x27Socket\\x5cx20type\\x5cx20not\\x5cx20supported\\x27,\\x27embind_init_charCodes\\x27,\\x27djack\\x27,\\x27getResponseHeader\\x27,\\x27klipsch\\x5cx20r-51pm\\x27,\\x27ERRNO_CODES\\x27,\\x27max\\x27,\\x27emscripten_stack_get_current\\x27,\\x27logPort\\x27,\\x27get_first_emval\\x27,\\x27dockpro\\x27,\\x27setattr\\x27,\\x27registerBatteryEventCallback\\x27,\\x27_sessionId\\x27,\\x27Cannot\\x5cx20load\\x5cx20without\\x5cx20read()\\x5cx20or\\x5cx20XMLHttpRequest.\\x27,\\x27name_next\\x27,\\x27apply\\x27,\\x27Invalid\\x5cx20UTF-8\\x5cx20leading\\x5cx20byte\\x5cx20\\x27,\\x27Too\\x5cx20many\\x5cx20symbolic\\x5cx20links\\x27,\\x27getCFunc\\x27,\\x27usb\\x5cx20mic\\x27,\\x27start\\x27,\\x27mount\\x27,\\x27destroyNode\\x27,\\x27__esModule\\x27,\\x27seekable\\x27,\\x27)\\x5cx20or\\x5cx20no\\x5cx20bytes\\x5cx20requested!\\x27,\\x27writeI53ToI64Clamped\\x27,\\x27May\\x27,\\x27preInit\\x27,\\x27October\\x27,\\x27monster\\x5cx20s310\\x27,\\x27currentPath\\x27,\\x27objectStore\\x27,\\x27%Y-%m-%d\\x27,\\x27gid\\x27,\\x27BUFFER_DROP_KEEP_MS\\x27,\\x27enum\\x27,\\x27register\\x27,\\x27INITIAL_MEMORY\\x27,\\x27BUFFER_OVERFLOW\\x27,\\x27MIN_BVC_SUPPORT_SAMPLE_RATE\\x27,\\x27yu6\\x5cx20by\\x5cx20kanto\\x27,\\x27sennheiser\\x5cx20sp\\x5cx2020\\x5cx20for\\x5cx20lync\\x27,\\x27yvc-330\\x5cx20yamaha\\x27,\\x27blue\\x5cx20icicle\\x27,\\x27usb\\x5cx20lcs\\x27,\\x27Assertion\\x5cx20failed\\x27,\\x27Runtime\\x5cx20error:\\x5cx20expected\\x5cx20the\\x5cx20system\\x5cx20to\\x5cx20be\\x5cx20little-endian!\\x5cx20(Run\\x5cx20with\\x5cx20-sSUPPORT_BIG_ENDIAN\\x5cx20to\\x5cx20bypass)\\x27,\\x27jabra\\x5cx20speak\\x5cx20\\x27,\\x27null\\x27,\\x27ccall\\x27,\\x27syncfs\\x27,\\x27release_ref\\x27,\\x27__awaiter\\x27,\\x27f.d.\\x5cx20invalid\\x5cx20for\\x5cx20this\\x5cx20operation\\x27,\\x27sb\\x5cx20katana\\x27,\\x27Level\\x5cx202\\x5cx20not\\x5cx20synchronized\\x27,\\x27stringToNewUTF8\\x27,\\x27createObjectURL\\x27,\\x27No\\x5cx20medium\\x5cx20(in\\x5cx20tape\\x5cx20drive)\\x27,\\x27Friday\\x27,\\x27defineProperties\\x27,\\x27FS.init\\x5cx20was\\x5cx20previously\\x5cx20called.\\x5cx20If\\x5cx20you\\x5cx20want\\x5cx20to\\x5cx20initialize\\x5cx20later\\x5cx20with\\x5cx20custom\\x5cx20parameters,\\x5cx20remove\\x5cx20any\\x5cx20earlier\\x5cx20calls\\x5cx20(note\\x5cx20that\\x5cx20one\\x5cx20is\\x5cx20automatically\\x5cx20added\\x5cx20to\\x5cx20the\\x5cx20generated\\x5cx20code)\\x27,\\x27hk\\x5cx20soundsticks\\x5cx204\\x27,\\x27wait\\x27,\\x27rename\\x27,\\x27strings\\x27,\\x27Runtime\\x5cx20error:\\x5cx20The\\x5cx20application\\x5cx20has\\x5cx20corrupted\\x5cx20its\\x5cx20heap\\x5cx20memory\\x5cx20area\\x5cx20(address\\x5cx20zero)!\\x27,\\x27perdana\\x27,\\x27getDynCaller\\x5cx20should\\x5cx20only\\x5cx20be\\x5cx20called\\x5cx20with\\x5cx20i64\\x5cx20sigs\\x27,\\x27handledByPreloadPlugin\\x27,\\x27Cross\\x5cx20mount\\x5cx20point\\x5cx20(not\\x5cx20really\\x5cx20error)\\x27,\\x27new_\\x27,\\x27chrdev\\x27,\\x27finalizationRegistry\\x27,\\x27stackSave\\x27,\\x27RegisteredPointer_fromWireType\\x27,\\x27gxt\\x5cx20258\\x5cx20microphone\\x27,\\x27web_user\\x27,\\x27iloud\\x5cx20micro-monitor\\x27,\\x27msync\\x27,\\x27floor\\x27,\\x27%a\\x5cx20%b\\x5cx20%d\\x5cx20%H:%M:%S\\x5cx20%Y\\x27,\\x27_state\\x27,\\x27!\\x5cx20(STACK_SIZE=\\x27,\\x27Range\\x27,\\x27philips\\x5cx20s3505\\x27,\\x27mallocModel\\x27,\\x27emscripten_stack_get_free\\x27,\\x27mayDelete\\x27,\\x27callMain\\x27,\\x27throwInstanceAlreadyDeleted\\x27,\\x27\\x5cx22>Input</audio>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<audio\\x5cx20controls\\x5cx20title=\\x5cx22recording-output-\\x27,\\x27mam-thinkplus-k3\\x27,\\x27getHostByName\\x27,\\x27hyperx\\x5cx20quadcast\\x27,\\x27File\\x5cx20exists\\x27,\\x27usb\\x5cx20condenser\\x5cx20microphone\\x27,\\x27Bad\\x5cx20file\\x5cx20number\\x27,\\x27setErrno\\x27,\\x27June\\x27,\\x27typeDependencies\\x27,\\x27URL\\x27,\\x27Exchange\\x5cx20full\\x27,\\x27Module.memoryInitializerPrefixURL\\x5cx20option\\x5cx20was\\x5cx20removed,\\x5cx20use\\x5cx20Module.locateFile\\x5cx20instead\\x27,\\x27memory\\x5cx20import\\x27,\\x27soundcore\\x5cx20mini\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20Average:\\x5cx20\\x27,\\x27onloadend\\x27,\\x27handleAllocator\\x27,\\x27sigma\\x5cx20fp\\x5cx20l\\x27,\\x27PIPEFS\\x27,\\x27lifecam\\x27,\\x27fromCharCode\\x27,\\x27Not\\x5cx20a\\x5cx20directory\\x27,\\x27allocate\\x27,\\x27lgtg-210\\x27,\\x27Worker:onmessage\\x27,\\x27Unknown\\x5cx20integer\\x5cx20type:\\x5cx20\\x27,\\x27TTY\\x27,\\x27writeAsciiToMemory\\x27,\\x27registeredPointers\\x27,\\x27concat\\x27,\\x27addFunction\\x27,\\x27stringToUTF8(str,\\x5cx20outPtr,\\x5cx20maxBytesToWrite)\\x5cx20is\\x5cx20missing\\x5cx20the\\x5cx20third\\x5cx20parameter\\x5cx20that\\x5cx20specifies\\x5cx20the\\x5cx20length\\x5cx20of\\x5cx20the\\x5cx20output\\x5cx20buffer!\\x27,\\x27conferencecam\\x27,\\x27crestron-uc-soundbar\\x27,\\x27loadModel\\x27,\\x27emval_newers\\x27,\\x27getRate\\x27,\\x27taotronics\\x5cx20tt-sk023\\x27,\\x27February\\x27,\\x27fromWireType\\x27,\\x27llseek\\x27,\\x27Package\\x5cx20not\\x5cx20installed\\x27,\\x27set_destructor\\x27,\\x27.UTF-8\\x27,\\x27findCanvasEventTarget\\x27,\\x27\\x5cx20:\\x5cx20\\x27,\\x27open\\x27,\\x27writeStackCookie\\x27,\\x27tula\\x5cx20mobile\\x5cx20microphone\\x27,\\x27beosound\\x5cx20a\\x27,\\x27edifier\\x5cx20m1370bt\\x27,\\x27STACK_SIZE\\x27,\\x27SET_LOGGING_PORT\\x27,\\x27SDK_FRAME_DURATION_10MS\\x27,\\x27wireless\\x5cx20microphone\\x5cx20rx\\x27,\\x27relative\\x27,\\x27err\\x27,\\x27Unsupported\\x5cx20data\\x5cx20type\\x27,\\x27downloadReport\\x27,\\x27readBinary\\x27,\\x27now\\x27,\\x27WasmProcessor:initWasm\\x27,\\x27function\\x27,\\x27bufferLength\\x27,\\x27taotronics\\x5cx20tt-sk\\x27,\\x27thisProgram\\x27,\\x27binary\\x27,\\x27exec\\x27,\\x27mkdev\\x27,\\x27.\\x5cx20Alternatively,\\x5cx20forcing\\x5cx20filesystem\\x5cx20support\\x5cx20(-sFORCE_FILESYSTEM)\\x5cx20can\\x5cx20export\\x5cx20this\\x5cx20for\\x5cx20you\\x27,\\x27SharedArrayBuffers\\x5cx20are\\x5cx20not\\x5cx20properly\\x5cx20initialized\\x27,\\x27heap32VectorToArray\\x27,\\x27isFIFO\\x27,\\x27genericPointerToWireType\\x27,\\x27bose\\x5cx20solo\\x27,\\x27ClassHandle_delete\\x27,\\x27_getAvailableWrite\\x27,\\x27m799b\\x27,\\x27registerOrientationChangeEventCallback\\x27,\\x27Wednesday\\x27,\\x27runtimeKeepalivePush\\x27,\\x27array\\x27,\\x27shallowCopyInternalPointer\\x27,\\x27getPath\\x27,\\x27registerUiEventCallback\\x27,\\x27using\\x5cx20Atomics\\x5cx20notify\\x27,\\x27traverseStack\\x27,\\x27nextfd\\x27,\\x27tg-116\\x27,\\x27yeti\\x27,\\x27Invalid\\x5cx20request\\x5cx20descriptor\\x27,\\x27samsung\\x5cx20slimfit\\x5cx20cam\\x27,\\x27cam\\x5cx20sync\\x5cx201080p\\x27,\\x27writeArrayToMemory\\x5cx20array\\x5cx20must\\x5cx20have\\x5cx20a\\x5cx20length\\x5cx20(should\\x5cx20be\\x5cx20an\\x5cx20array\\x5cx20or\\x5cx20typed\\x5cx20array)\\x27,\\x27registerDeviceMotionEventCallback\\x27,\\x27Too\\x5cx20many\\x5cx20links\\x27,\\x27Module.read\\x5cx20option\\x5cx20was\\x5cx20removed\\x5cx20(modify\\x5cx20read_\\x5cx20in\\x5cx20JS)\\x27,\\x27cambridge\\x5cx20audio\\x5cx20one\\x27,\\x27Init\\x27,\\x27argTypes\\x5cx20array\\x5cx20size\\x5cx20mismatch!\\x5cx20Must\\x5cx20at\\x5cx20least\\x5cx20get\\x5cx20return\\x5cx20value\\x5cx20and\\x5cx20\\x5cx27this\\x5cx27\\x5cx20types!\\x27,\\x27push\\x27,\\x27clickshare\\x27,\\x27bluetooth\\x5cx20music\\x27,\\x27outputRingBuffer\\x27,\\x27Invalid\\x5cx20slot\\x27,\\x27onAudioSuccessProcessCB\\x27,\\x27_heapOutputBuffer\\x27,\\x27fantech\\x5cx20luminous\\x5cx20c30\\x27,\\x27mozIndexedDB\\x27,\\x27_emscripten_builtin_memalign\\x27,\\x27registerFullscreenChangeEventCallback\\x27,\\x27hk\\x5cx20esquire\\x5cx20mini\\x27,\\x27toWireType\\x27,\\x27registeredTypes\\x27,\\x27startsWith\\x27,\\x27postMessage\\x27,\\x27Character\\x5cx20code\\x5cx20\\x27,\\x27preRun\\x27,\\x27logs\\x27,\\x27recorder\\x27,\\x27WasmProcessor:_logError\\x27,\\x27ready\\x5cx20elite\\x27,\\x27ws-900\\x27,\\x27flags\\x27,\\x27dell\\x5cx20speakerphone\\x5cx20sp3022\\x27,\\x27stringToUTF32(str,\\x5cx20outPtr,\\x5cx20maxBytesToWrite)\\x5cx20is\\x5cx20missing\\x5cx20the\\x5cx20third\\x5cx20parameter\\x5cx20that\\x5cx20specifies\\x5cx20the\\x5cx20length\\x5cx20of\\x5cx20the\\x5cx20output\\x5cx20buffer!\\x27,\\x27jbl\\x5cx20wind\\x27,\\x27Sample\\x5cx20Rate\\x5cx20is\\x5cx20not\\x5cx20supported:\\x5cx20\\x27,\\x27getShiftFromSize\\x27,\\x27root\\x27,\\x27_chunkSize\\x27,\\x27heyday\\x5cx20microphone\\x27,\\x27SDL_ttfContext\\x27,\\x27INPUT_AUDIO_DATA\\x27,\\x27excPtr\\x27,\\x27vanatoo\\x5cx20t0\\x27,\\x27store\\x27,\\x27formatString\\x27,\\x27checkWasiClock\\x27,\\x27battery\\x27,\\x27getValue\\x27,\\x27setWindowTitle\\x27,\\x27ak5370\\x27,\\x27embind_charCodes\\x27,\\x27BVC_BLOCKED_DEVICES\\x27,\\x27at2005usb\\x27,\\x27cwc5\\x5cx20microphone\\x27,\\x27uid\\x27,\\x27recurse_count\\x27,\\x27responseText\\x27,\\x27HEAP32\\x27,\\x27parentExists\\x27,\\x27bose\\x5cx20videobar\\x5cx20vb1\\x27,\\x27text/plain;\\x5cx20charset=x-user-defined\\x27,\\x27__cxa_can_catch\\x27,\\x27setImmediateWrapped\\x27,\\x27resizeFileStorage\\x27,\\x27set_type\\x27,\\x27January\\x27,\\x27ensureOverloadTable\\x27,\\x27\\x5cx20(e.g.\\x5cx20-sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\\x27,\\x27gxt\\x5cx20244\\x5cx20microphone\\x27,\\x27No\\x5cx20anode\\x27,\\x27dynCall_jiiii\\x27,\\x27ctime\\x27,\\x27computeUnpackAlignedImageSize\\x27,\\x27contents\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20Minimum:\\x5cx20\\x27,\\x27blocks\\x27,\\x27cdInitializerPrefixURL\\x27,\\x27%H:%M:%S\\x27,\\x27Protocol\\x5cx20family\\x5cx20not\\x5cx20supported\\x27,\\x27Module\\x27,\\x27Protocols\\x27,\\x27arraybuffer\\x27,\\x27Connection\\x5cx20timed\\x5cx20out\\x27,\\x27\\x5cx27\\x5cx20twice\\x27,\\x27asm\\x27,\\x27HEAP8\\x27,\\x27registerKeyEventCallback\\x27,\\x27addOnExit\\x27,\\x27stackRestore\\x27,\\x27ignorePermissions\\x27,\\x27Level\\x5cx202\\x5cx20halted\\x27,\\x27mmapAlloc\\x27,\\x27Module.readBinary\\x5cx20option\\x5cx20was\\x5cx20removed\\x5cx20(modify\\x5cx20readBinary\\x5cx20in\\x5cx20JS)\\x27,\\x27__errno_location\\x27,\\x27hw01\\x27,\\x27Running...\\x27,\\x27call\\x27,\\x27runtimeKeepalivePop\\x27,\\x27creative\\x5cx20stage\\x27,\\x27writeArrayToMemory\\x27,\\x27createDyncallWrapper\\x27,\\x27model\\x5cx20configured!\\x27,\\x27WasmModule\\x27,\\x27navigator\\x27,\\x27modelName\\x27,\\x27exception_addRef\\x27,\\x27Connection\\x5cx20reset\\x5cx20by\\x5cx20peer\\x27,\\x27___getTypeName\\x27,\\x27dispose\\x27,\\x27webglPrepareUniformLocationsBeforeFirstUse\\x27,\\x27WRITE_INDEX\\x27,\\x27thronmax\\x5cx20stream\\x5cx20go\\x5cx20pro\\x5cx20microphone\\x27,\\x27count\\x27,\\x27intArrayToString\\x27,\\x27postRun\\x27,\\x27ops\\x27,\\x27File\\x5cx20too\\x5cx20large\\x27,\\x27currentScript\\x27,\\x27INIT_WASM_PROCESSOR\\x27,\\x27readSockaddr\\x27,\\x27warning:\\x5cx20run\\x5cx20dependency\\x5cx20added\\x5cx20without\\x5cx20ID\\x27,\\x27fifine\\x5cx20k670\\x5cx20microphone\\x27,\\x27close\\x27,\\x27fingers\\x5cx20brownie\\x27,\\x27memory\\x27,\\x27Cannot\\x5cx20register\\x5cx20type\\x5cx20\\x5cx27\\x27,\\x27genericErrors\\x27,\\x27jsStackTrace\\x27,\\x27__cxa_free_exception\\x27,\\x27Saturday\\x27,\\x27mu900\\x27,\\x27elgato\\x5cx20wave\\x27,\\x27onAbort\\x27,\\x27No\\x5cx20space\\x5cx20left\\x5cx20on\\x5cx20device\\x27,\\x27readI53FromI64\\x27,\\x27CreateNcSession\\x27,\\x27Protocol\\x5cx20error\\x27,\\x27addOnPostRun\\x27,\\x27I/O\\x5cx20error\\x27,\\x27chat\\x5cx20150\\x27,\\x27get_destructor\\x27,\\x27infinity\\x5cx20fuze\\x5cx20100\\x27,\\x27maono\\x5cx20fairy\\x27,\\x27setRequestHeader\\x27,\\x27prettyPrint\\x27,\\x27by-pm700\\x27,\\x27eneby20\\x27,\\x27getter\\x27,\\x27hashRemoveNode\\x27,\\x27mayOpen\\x27,\\x27doXHR\\x5cx20failed!\\x27,\\x27createSharedBuffers\\x27,\\x27audiohub\\x5cx20speaker\\x27,\\x27isDir\\x27,\\x27r\u00F8de\\x5cx20nt-usb\\x27,\\x27/dev/\\x27,\\x27Illegal\\x5cx20seek\\x27,\\x27al\\x5cx20\\x27,\\x27WASM\\x5cx20processor\\x5cx20-\\x5cx20frameDuration\\x27,\\x27alignMemory\\x27,\\x27registerDeviceOrientationEventCallback\\x27,\\x27Attempting\\x5cx20to\\x5cx20exec\\x5cx20a\\x5cx20shared\\x5cx20library\\x27,\\x27abort\\x27,\\x272633245NeZqNe\\x27,\\x27FS.absolutePath\\x5cx20has\\x5cx20been\\x5cx20removed;\\x5cx20use\\x5cx20PATH_FS.resolve\\x5cx20instead\\x27,\\x27inetPton4\\x27,\\x27ceil\\x27,\\x27/dev/null\\x27,\\x27mode\\x27,\\x27count_emval_handles\\x27,\\x27length\\x27,\\x27dynCall_iiiiijj\\x27,\\x27Cannot\\x5cx20pass\\x5cx20non-string\\x5cx20to\\x5cx20C++\\x5cx20string\\x5cx20type\\x5cx20\\x27,\\x27table\\x5cx20not\\x5cx20found\\x5cx20in\\x5cx20wasm\\x5cx20exports\\x27,\\x27lspx-s3\\x27,\\x27CleanAmbientNoiseFloat\\x27,\\x27warning:\\x5cx20run\\x5cx20dependency\\x5cx20removed\\x5cx20without\\x5cx20ID\\x27,\\x27dell\\x5cx20slim\\x5cx20soundbar\\x5cx20sb521a\\x27,\\x27emval_methodCallers\\x27,\\x27process\\x27,\\x27file\\x27,\\x27907XGEfud\\x27,\\x27dir\\x27,\\x27mkdir\\x27,\\x27output\\x27,\\x27_module\\x27,\\x27mateview\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<p>Recording:\\x5cx20\\x27,\\x27heapAccessShiftForWebGLHeap\\x27,\\x27UTF8ArrayToString\\x27,\\x27dev\\x27,\\x27Accessing\\x5cx20a\\x5cx20corrupted\\x5cx20shared\\x5cx20lib\\x27,\\x27Previous\\x5cx20owner\\x5cx20died\\x27,\\x27atomicState\\x27,\\x27substring\\x27,\\x27logReadFiles\\x27,\\x27/dev/stdin\\x27,\\x27registerDevice\\x27,\\x27SDL_unicode\\x27,\\x27RegisteredPointer_getPointee\\x27,\\x27emscripten_realloc_buffer:\\x5cx20Attempted\\x5cx20to\\x5cx20grow\\x5cx20heap\\x5cx20from\\x5cx20\\x27,\\x27JSEvents\\x27,\\x27channel\\x27,\\x27asmjsMangle\\x27,\\x27__indirect_function_table\\x27,\\x27STATE\\x27,\\x27getExceptionMessageCommon\\x27,\\x27treblab\\x5cx20hd77\\x27,\\x27maxChannelCount\\x27,\\x27cwrap\\x27,\\x27EM_FS_\\x27,\\x27__getTypeName\\x27,\\x27Value\\x5cx20too\\x5cx20large\\x5cx20for\\x5cx20defined\\x5cx20data\\x5cx20type\\x27,\\x27paths\\x27,\\x27majority\\x5cx20rs1\\x27,\\x27frameDurationMs\\x27,\\x27boolean\\x27,\\x270000\\x27,\\x27\\x5cx20called\\x5cx20with\\x5cx20\\x27,\\x27\\x5cx22\\x5cx20to\\x5cx20\\x27,\\x27realtek\\x27,\\x27ue\\x5cx20boom\\x27,\\x27\\x5cx20not\\x5cx20in\\x5cx200x00-0xFF.\\x27,\\x27ClassHandle\\x27,\\x27getSocketAddress\\x27,\\x27jbl\\x5cx20clip\\x5cx20\\x27,\\x27writeGLArray\\x27,\\x27onsuccess\\x27,\\x27emval_addMethodCaller\\x27,\\x27sync\\x5cx20fetching\\x5cx20of\\x5cx20the\\x5cx20wasm\\x5cx20failed:\\x5cx20you\\x5cx20can\\x5cx20preload\\x5cx20it\\x5cx20to\\x5cx20Module[\\x5cx27wasmBinary\\x5cx27]\\x5cx20manually,\\x5cx20or\\x5cx20emcc.py\\x5cx20will\\x5cx20do\\x5cx20that\\x5cx20for\\x5cx20you\\x5cx20when\\x5cx20generating\\x5cx20HTML\\x5cx20(but\\x5cx20not\\x5cx20JS)\\x27,\\x27monitorRunDependencies\\x27,\\x27Unknown\\x5cx20type\\x5cx20size:\\x5cx20\\x27,\\x27cwd\\x27,\\x27isFloat\\x27,\\x27g300\\x27,\\x27enumReadValueFromPointer\\x27,\\x27jstoi_q\\x27,\\x27maybeCStringToJsString\\x27,\\x27live\\x5cx20streamer\\x5cx20cam\\x5cx20513\\x27,\\x27unsigned\\x27,\\x27emscriptenWebGLGet\\x27,\\x27\\x5cx22>Output</audio>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x27,\\x27inetPton6\\x27,\\x27FS_createFolder\\x27,\\x27tm_gmtoff\\x27,\\x27prototype\\x27,\\x27presence\\x27,\\x27Invalid\\x5cx20encoding\\x5cx20type\\x5cx20\\x5cx22\\x27,\\x27zv-e10\\x27,\\x27setPrototypeOf\\x27,\\x27SYSCALLS\\x27,\\x27logitech\\x5cx20z537\\x27,\\x27audio/wav;codecs=wav\\x27,\\x27razer\\x5cx20stargazer-microphone\\x27,\\x27varargs\\x27,\\x27_bufferLength\\x27,\\x27getRandomValues\\x27,\\x27creative\\x5cx20t60\\x27,\\x27JavaScript-side\\x5cx20Wasm\\x5cx20function\\x5cx20table\\x5cx20mirror\\x5cx20is\\x5cx20out\\x5cx20of\\x5cx20date!\\x27,\\x27uac\\x5cx201.0\\x5cx20microphone\\x27,\\x27fsync\\x27,\\x27readI53FromU64\\x27,\\x27logitech\\x5cx20usb\\x5cx20speaker\\x27,\\x27No\\x5cx20such\\x5cx20device\\x5cx20or\\x5cx20address\\x27,\\x27isMountpoint\\x27,\\x27basename\\x27,\\x27registerPointerlockChangeEventCallback\\x27,\\x27WorkerProcessor:onWasmProcessorSuccessCB\\x27,\\x27mic_test\\x27,\\x27toStringTag\\x27,\\x27ensureErrnoError\\x27,\\x27July\\x27,\\x27\\x5cx22\\x5cx20failed.\\x27,\\x27dataCache\\x27,\\x27strLen\\x27,\\x27argCount\\x27,\\x27room\\x5cx20kit\\x5cx20mini\\x5cx20digital\\x5cx20audio\\x27,\\x271419831DsmQEJ\\x27,\\x27ptsb-80w\\x27,\\x27setLetterbox\\x27,\\x27tm_wday\\x27,\\x27follow\\x27,\\x27fillDeviceOrientationEventData\\x27,\\x27_malloc\\x27,\\x27Converting\\x5cx20base64\\x5cx20string\\x5cx20to\\x5cx20bytes\\x5cx20failed.\\x27,\\x27Invalid\\x5cx20request\\x5cx20code\\x27,\\x27isView\\x27,\\x27Network\\x5cx20is\\x5cx20unreachable\\x27,\\x27Too\\x5cx20many\\x5cx20references\\x27,\\x27stringToUTF16\\x27,\\x27aukey\\x5cx20mi-u2\\x5cx20usb\\x5cx20mic\\x27,\\x27webglGetLeftBracePos\\x27,\\x27Cannot\\x5cx20register\\x5cx20public\\x5cx20name\\x5cx20\\x5cx27\\x27,\\x27buffer\\x5cx20reduced\\x5cx20from:\\x27,\\x27set_caught\\x27,\\x27webkitIndexedDB\\x27,\\x27src\\x27,\\x27ugreen-70303e\\x27,\\x27rdev\\x27,\\x27Mount\\x5cx20device\\x5cx20busy\\x27,\\x27inetNtop4\\x27,\\x27Arg\\x5cx20list\\x5cx20too\\x5cx20long\\x27,\\x27soundcore\\x5cx20boost\\x27,\\x27whenDependentTypesAreResolved\\x27,\\x27toString\\x27,\\x27exceptionCaught\\x27,\\x27embind__requireFunction\\x27,\\x27fifine\\x5cx20k420\\x27,\\x27readAsync\\x27,\\x27WASM\\x5cx20proccessor\\x5cx20success\\x27,\\x27keys\\x27,\\x27pyleusa\\x27,\\x27logi\\x5cx20mx\\x5cx20sound\\x27,\\x27getChannelData\\x27,\\x27at-csp5\\x27,\\x27streamcam\\x27,\\x27exportToWavBlob\\x27,\\x27FS_createDevice\\x27,\\x27RIFF\\x27,\\x27cybertrack\\x5cx20h6\\x27,\\x27get_adjusted_ptr\\x27,\\x27symlink\\x27,\\x27native\\x5cx20function\\x5cx20`\\x27,\\x27registeredInstances\\x27,\\x27<p>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<audio\\x5cx20controls\\x5cx20title=\\x5cx22recording-input-\\x27,\\x27removeRunDependency\\x27,\\x27logProcessStats\\x27,\\x27callUserCallback\\x27,\\x27split\\x27,\\x27BUFFER_OVERFLOW_MS\\x27,\\x27ptr\\x27,\\x27zeroMemory\\x27,\\x27_outputData\\x27,\\x27readlink\\x27,\\x27printErr\\x27,\\x27webcam\\x27,\\x27___stop_em_js\\x27,\\x27LOG_INPUT_AUDIO\\x27,\\x27getCanvasElementSize\\x27,\\x27Attempting\\x5cx20to\\x5cx20link\\x5cx20in\\x5cx20too\\x5cx20many\\x5cx20libs\\x27,\\x27_fflush\\x27,\\x27SDL\\x27,\\x27addItem\\x27,\\x27emscriptenWebGLGetVertexAttrib\\x27,\\x27/dev/stdout\\x27,\\x27get\\x27,\\x27Module.cdInitializerPrefixURL\\x5cx20option\\x5cx20was\\x5cx20removed,\\x5cx20use\\x5cx20Module.locateFile\\x5cx20instead\\x27,\\x27behringer\\x5cx20mpa40bt\\x5cx20pro\\x27,\\x27reallyNegative\\x27,\\x27force-cache\\x27,\\x27mayCreate\\x27,\\x27sg\\x5cx20control\\x5cx20mic\\x27,\\x27incrementExceptionRefcount\\x27,\\x27normalizeArray\\x27,\\x27inputRingBuffer\\x27,\\x27runEmAsmFunction\\x27,\\x27,\\x5cx20expected\\x5cx20hex\\x5cx20dwords\\x5cx200x89BACDFE\\x5cx20and\\x5cx200x2135467,\\x5cx20but\\x5cx20received\\x5cx20\\x27,\\x27registerRestoreOldStyle\\x27,\\x27yu4\\x5cx20by\\x5cx20kanto\\x27,\\x27isDevice\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Unhandled\\x5cx20message\\x5cx20in\\x5cx20the\\x5cx20worker\\x27,\\x27Pointer\\x5cx20passed\\x5cx20to\\x5cx20UTF16ToString\\x5cx20must\\x5cx20be\\x5cx20aligned\\x5cx20to\\x5cx20two\\x5cx20bytes!\\x27,\\x27brother\\x5cx20nw-1000\\x27,\\x27TOTAL_MEMORY\\x27,\\x27next\\x27,\\x27ay-spkf4\\x27,\\x27newNativePromise\\x27,\\x27hideEverythingExceptGivenElement\\x27,\\x27Module.\\x27,\\x27dirname\\x27,\\x27response\\x27,\\x27powerconf\\x5cx20\\x27,\\x27sdy019\\x27,\\x27usb\\x5cx20microphone\\x27,\\x27huawei\\x5cx20cm510\\x27,\\x27convertI32PairToI53\\x27,\\x27function\\x5cx20\\x27,\\x27substr\\x27,\\x27srs-xb\\x27,\\x27Socket\\x5cx20already\\x5cx20connected\\x27,\\x27jounivo\\x5cx20jv\\x27,\\x27FS_createDataFile\\x27,\\x27State\\x5cx20not\\x5cx20recoverable\\x27,\\x27Pointer\\x5cx20passed\\x5cx20to\\x5cx20UTF32ToString\\x5cx20must\\x5cx20be\\x5cx20aligned\\x5cx20to\\x5cx20four\\x5cx20bytes!\\x27,\\x27init_embind\\x27,\\x27setDate\\x27,\\x27macbook\\x5cx20pro\\x27,\\x27`Module.\\x27,\\x27jbl\\x5cx20go\\x27,\\x27isLink\\x27,\\x27tty\\x27,\\x27object\\x27,\\x27craftEmvalAllocator\\x27,\\x27getMonth\\x27,\\x27woburn\\x5cx20speaker\\x27,\\x27invalid\\x5cx20handle\\x5cx20for\\x5cx20stderr\\x5cx20(\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Buffer\\x5cx20wrong\\x5cx20input\\x27,\\x27Timer\\x5cx20expired\\x27,\\x27logitech\\x5cx20speakerphone\\x5cx20p710e\\x27,\\x27megaboom\\x5cx203\\x27,\\x27Pointer\\x5cx20passed\\x5cx20to\\x5cx20stringToUTF32\\x5cx20must\\x5cx20be\\x5cx20aligned\\x5cx20to\\x5cx20four\\x5cx20bytes!\\x27,\\x27kimu\\x5cx20pro\\x27,\\x27JSEvents_requestFullscreen\\x27,\\x27emscripten_stack_get_end\\x27,\\x27No\\x5cx20children\\x27,\\x27bt\\x5cx20speaker\\x27,\\x27%m/%d/%y\\x27,\\x27keepRuntimeAlive\\x27,\\x27channelCount\\x27,\\x27modeStringToFlags\\x27,\\x27anker\\x5cx20powerconf\\x5cx20s3\\x27,\\x27bufferAddress\\x27,\\x27reset\\x27,\\x27createElement\\x27,\\x27razer\\x5cx20nommo\\x5cx20chroma\\x27,\\x27Connection\\x5cx20already\\x5cx20in\\x5cx20progress\\x27,\\x27spa4040b\\x27,\\x27run\\x27,\\x27live\\x5cx20streamer\\x5cx20cam313\\x5cx20microphone\\x27,\\x27wireless\\x5cx20controller\\x27,\\x27canOwn\\x5cx20must\\x5cx20imply\\x5cx20no\\x5cx20weird\\x5cx20position\\x5cx20inside\\x5cx20the\\x5cx20file\\x27,\\x27getOwnPropertyDescriptor\\x27,\\x27Directory\\x5cx20not\\x5cx20empty\\x27,\\x27ekacom-k\\x27,\\x27code\\x27,\\x27heapObjectForWebGLType\\x27,\\x27exists\\x27,\\x27onupgradeneeded\\x27,\\x27syncFSRequests\\x27,\\x27getRandomDevice\\x27,\\x27HEAPU8\\x27,\\x27mounts\\x27,\\x27inc2000\\x27,\\x27stone\\x5cx201400\\x5cx20mini\\x27,\\x27clearImmediateWrapped\\x27,\\x27echo\\x5cx20show\\x27,\\x27convertU32PairToI53\\x27,\\x27numberOfChannels\\x27,\\x27getHeapAddress\\x27,\\x27setOptions\\x27,\\x27ttys\\x27,\\x27getTempRet0\\x27,\\x27fillPointerlockChangeEventData\\x27,\\x27Passing\\x5cx20a\\x5cx20number\\x5cx20\\x5cx22\\x27,\\x27thronmax\\x5cx20pulse\\x27,\\x27c-1u\\x27,\\x27kandao\\x5cx20meeting\\x27,\\x27overrunCount\\x27,\\x27workletPort\\x27,\\x27___cxa_can_catch\\x27,\\x27FS_createLazyFile\\x27,\\x27Not\\x5cx20a\\x5cx20typewriter\\x27,\\x27trust\\x5cx20gxt\\x5cx20242\\x5cx20microphone\\x27,\\x27getStringOrSymbol\\x27,\\x27Trying\\x5cx20to\\x5cx20read\\x5cx20unreadable\\x5cx20message\\x27,\\x27usedBytes\\x27,\\x27replacePublicSymbol\\x27,\\x27dynCallLegacy\\x27,\\x27WAVE\\x27,\\x271899moXegH\\x27,\\x27ue\\x5cx20megaboom\\x27,\\x27downcastPointer\\x27,\\x27createNode\\x27,\\x27ERRNO_MESSAGES\\x27,\\x27razer\\x5cx20leviathan\\x27,\\x27isRoot\\x27,\\x27deletionQueue\\x27,\\x27warn\\x27,\\x27slice\\x27,\\x27gzip\\x27,\\x27fillFullscreenChangeEventData\\x27,\\x27ClassHandle_isDeleted\\x27,\\x27akg\\x5cx20s30\\x27,\\x27isBlkdev\\x27,\\x27prompt\\x27,\\x27/tmp\\x27,\\x27Logger\\x5cx20is\\x5cx20not\\x5cx20initialized\\x27,\\x27resolve\\x27,\\x27\\x5cx20bytes,\\x5cx20not\\x5cx20enough\\x5cx20memory!\\x27,\\x27pc-lm1e\\x5cx20audio\\x27,\\x27default\\x27,\\x27RegisteredPointer\\x27,\\x27craftInvokerFunction\\x27,\\x27languages\\x27,\\x27lg-pk3\\x27,\\x27port1\\x27,\\x27sum\\x27,\\x27AsciiToString\\x27,\\x27stanmore\\x5cx20ii\\x27,\\x27KrispSDK\\x5cx20-\\x27,\\x27August\\x27,\\x27fillGamepadEventData\\x27,\\x27Is\\x5cx20a\\x5cx20directory\\x27,\\x27gxt\\x5cx20256\\x5cx20microphone\\x27,\\x27send\\x27,\\x27Program\\x5cx20terminated\\x5cx20with\\x5cx20exit(\\x27,\\x27char_9\\x27,\\x27obsbot\\x5cx20meet\\x5cx204k\\x5cx20microphone\\x27,\\x27addRunDependency\\x27,\\x27exported\\x5cx20native\\x5cx20function\\x5cx20`\\x27,\\x27HEAD\\x27,\\x27createDevice\\x27,\\x27bad\\x5cx20function\\x5cx20pointer\\x5cx20type\\x5cx20-\\x5cx20dynCall\\x5cx20function\\x5cx20not\\x5cx20found\\x5cx20for\\x5cx20sig\\x5cx20\\x5cx27\\x27,\\x27timestamp\\x27,\\x27HEAPU16\\x27,\\x27registerMouseEventCallback\\x27,\\x27event\\x27,\\x27leviosa\\x5cx20live\\x5cx20mcx02\\x27,\\x27emscripten_stack_get_base\\x27,\\x27wasmMemory\\x27,\\x27Unknown\\x5cx20protocol\\x27,\\x27creative\\x5cx20live!\\x5cx20mic\\x5cx20m3\\x27,\\x27node_ops\\x27,\\x27exitJS\\x27,\\x27BindingError\\x27,\\x27\\x5cx0aOverrun:\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20Count:\\x5cx20\\x27,\\x27ErrnoError\\x27,\\x27/proc/self/fd\\x27,\\x27promedia\\x5cx202.0\\x27,\\x27_length\\x27,\\x27_fetchFile\\x27,\\x27Cannot\\x5cx20convert\\x5cx20\\x5cx22\\x27,\\x27DNS\\x27];a1_0x3c7c=function(){return\\x20_0x43aab5;};return\\x20a1_0x3c7c();}function\\x20a1_0x2045(_0x35945d,_0x1e1806){var\\x20_0x3c7c2f=a1_0x3c7c();return\\x20a1_0x2045=function(_0x204528,_0x5732ea){_0x204528=_0x204528-0x1a6;var\\x20_0x36e818=_0x3c7c2f[_0x204528];return\\x20_0x36e818;},a1_0x2045(_0x35945d,_0x1e1806);}(function(_0x41ade4,_0x51b51a){var\\x20_0x38b833=a1_0x2045,_0x50f597=_0x41ade4();while(!![]){try{var\\x20_0x4d8562=parseInt(_0x38b833(0x484))/0x1*(parseInt(_0x38b833(0x21a))/0x2)+-parseInt(_0x38b833(0x229))/0x3+-parseInt(_0x38b833(0x2ab))/0x4+parseInt(_0x38b833(0x472))/0x5+-parseInt(_0x38b833(0x622))/0x6+parseInt(_0x38b833(0x4e4))/0x7+-parseInt(_0x38b833(0x22e))/0x8*(-parseInt(_0x38b833(0x59a))/0x9);if(_0x4d8562===_0x51b51a)break;else\\x20_0x50f597[\\x27push\\x27](_0x50f597[\\x27shift\\x27]());}catch(_0x5dcd28){_0x50f597[\\x27push\\x27](_0x50f597[\\x27shift\\x27]());}}}(a1_0x3c7c,0x4eadf),((()=>{\\x27use\\x20strict\\x27;var\\x20_0x3b28eb=a1_0x2045;var\\x20_0x1e2e20={0x36:(_0x3b506b,_0x32da2a,_0x576c58)=>{var\\x20_0x199bde=a1_0x2045;Object[\\x27defineProperty\\x27](_0x32da2a,_0x199bde(0x32c),{\\x27value\\x27:!0x0});const\\x20_0x14af0e=_0x576c58(0x29a),_0x5be02d=_0x576c58(0x2ce);_0x32da2a[_0x199bde(0x5af)]=class{constructor(){var\\x20_0x31ab01=_0x199bde;this[_0x31ab01(0x6d3)]=[];}[_0x199bde(0x3d6)](_0x205428){var\\x20_0x13de21=_0x199bde;this[_0x13de21(0x6d3)][_0x13de21(0x3d6)](..._0x205428);}[_0x199bde(0x2a3)](_0xf3a5f0){var\\x20_0x947b34=_0x199bde;if(_0xf3a5f0<0x0)throw\\x20new\\x20Error(_0x947b34(0x55b));if(this[_0x947b34(0x6d3)][_0x947b34(0x479)]>=_0xf3a5f0)return\\x20this[_0x947b34(0x6d3)][\\x27splice\\x27](0x0,_0xf3a5f0);throw\\x20new\\x20Error(_0x947b34(0x30e));}[\\x27length\\x27](){var\\x20_0x56f112=_0x199bde;return\\x20this[_0x56f112(0x6d3)][_0x56f112(0x479)];}[\\x27getBuffer\\x27](){var\\x20_0x51f434=_0x199bde;return\\x20this[_0x51f434(0x6d3)];}[_0x199bde(0x64e)](){var\\x20_0x414058=_0x199bde;this[_0x414058(0x6d3)]=[];}[_0x199bde(0x6a9)](_0x430dce){var\\x20_0x1b861d=_0x199bde;_0x5be02d[\\x27Logger\\x27][_0x1b861d(0x5a2)](\\x27ChunkAudioBuffer:dropBuffer\\x27,_0x1b861d(0x4f4),this[_0x1b861d(0x6d3)][_0x1b861d(0x479)],_0x1b861d(0x654),this[\\x27buffer\\x27][_0x1b861d(0x479)]-_0x430dce*_0x14af0e[\\x27BUFFER_DROP_KEEP_MS\\x27]/0xa),this[_0x1b861d(0x6d3)]=this[_0x1b861d(0x6d3)][_0x1b861d(0x5a3)](this[_0x1b861d(0x6d3)][\\x27length\\x27]-_0x430dce*_0x14af0e[\\x27BUFFER_DROP_KEEP_MS\\x27]/0xa);}};},0x349:(_0x148736,_0x25f3be,_0x4f0dab)=>{var\\x20_0x3aa6d2=a1_0x2045;Object[_0x3aa6d2(0x668)](_0x25f3be,_0x3aa6d2(0x32c),{\\x27value\\x27:!0x0}),_0x25f3be[_0x3aa6d2(0x2c8)]=void\\x200x0;const\\x20_0x4049db=_0x4f0dab(0x126);_0x25f3be[_0x3aa6d2(0x2c8)]=class{constructor(_0x2f9ea5){var\\x20_0x382b05=_0x3aa6d2;this[_0x382b05(0x211)]=_0x2f9ea5,this[_0x382b05(0x5f3)]=[],this[_0x382b05(0x51b)]=[];}[_0x3aa6d2(0x6be)](_0x2e63f5){var\\x20_0x5aadb8=_0x3aa6d2;this[_0x5aadb8(0x5f3)][\\x27push\\x27](_0x2e63f5);}[_0x3aa6d2(0x212)](_0x1c2a9d){var\\x20_0x394dc9=_0x3aa6d2;this[\\x27_outputData\\x27][_0x394dc9(0x3d6)](_0x1c2a9d);}[\\x27exportToWavBlob\\x27](){var\\x20_0x341817=_0x3aa6d2;return{\\x27input\\x27:(0x0,_0x4049db[_0x341817(0x6f3)])(this[\\x27_inputData\\x27],this[_0x341817(0x211)]),\\x27output\\x27:(0x0,_0x4049db[\\x27createWAVBlob\\x27])(this[_0x341817(0x51b)],this[_0x341817(0x211)])};}};},0x198:(_0x16c9a5,_0x4d3937)=>{var\\x20_0x21a7a3=a1_0x2045;Object[\\x27defineProperty\\x27](_0x4d3937,_0x21a7a3(0x32c),{\\x27value\\x27:!0x0}),_0x4d3937[\\x27HeapAudioBufferFactory\\x27]=void\\x200x0;const\\x20_0x332620=Uint16Array[\\x27BYTES_PER_ELEMENT\\x27],_0x21f7bc=Float32Array[_0x21a7a3(0x2bd)];class\\x20_0x21e57d{constructor(_0x503a09,_0x4437ae,_0x1fb5fa=0x1,_0x466417=0x2){var\\x20_0x5169fe=_0x21a7a3;this[_0x5169fe(0x220)]=!0x1,this[\\x27_module\\x27]=_0x503a09,this[_0x5169fe(0x5d6)]=_0x4437ae,this[_0x5169fe(0x76f)]=_0x466417?Math[_0x5169fe(0x1af)](_0x466417,0x20):_0x1fb5fa,this[_0x5169fe(0x662)]=_0x1fb5fa,this[_0x5169fe(0x682)](),this[_0x5169fe(0x220)]=!0x0;}[\\x27_allocateHeap\\x27](){var\\x20_0x7b5ac7=_0x21a7a3;const\\x20_0x25cd0a=this[_0x7b5ac7(0x5d6)]*_0x21f7bc,_0x4e26b8=this[_0x7b5ac7(0x662)]*_0x25cd0a;this[_0x7b5ac7(0x633)]=this[_0x7b5ac7(0x488)][_0x7b5ac7(0x4ea)](_0x4e26b8),this[\\x27_channelData\\x27]=[];for(let\\x20_0x534368=0x0;_0x534368<this[_0x7b5ac7(0x662)];++_0x534368){const\\x20_0x1c6d2c=this[_0x7b5ac7(0x633)]+_0x534368*_0x25cd0a,_0x400f29=_0x1c6d2c+_0x25cd0a;this[_0x7b5ac7(0x6d7)][_0x534368]=this[_0x7b5ac7(0x488)][_0x7b5ac7(0x655)][_0x7b5ac7(0x1e1)](_0x1c6d2c>>_0x332620,_0x400f29>>_0x332620);}}[_0x21a7a3(0x1c5)](_0x22065e){var\\x20_0x3087c7=_0x21a7a3;_0x22065e<this[_0x3087c7(0x76f)]&&(this[_0x3087c7(0x662)]=_0x22065e);}get[_0x21a7a3(0x479)](){var\\x20_0xd6bc20=_0x21a7a3;return\\x20this[\\x27_isInitialized\\x27]?this[_0xd6bc20(0x5d6)]:0x0;}get[_0x21a7a3(0x584)](){var\\x20_0xbad2f5=_0x21a7a3;return\\x20this[_0xbad2f5(0x220)]?this[\\x27_channelCount\\x27]:null;}get[_0x21a7a3(0x49f)](){var\\x20_0x47cb2f=_0x21a7a3;return\\x20this[_0x47cb2f(0x220)]?this[\\x27_maxChannelCount\\x27]:null;}[_0x21a7a3(0x508)](_0x36e4de){var\\x20_0x1735f4=_0x21a7a3;return\\x20_0x36e4de>=this[_0x1735f4(0x662)]?null:void\\x200x0===_0x36e4de?this[_0x1735f4(0x6d7)]:this[_0x1735f4(0x6d7)][_0x36e4de];}[_0x21a7a3(0x585)](){var\\x20_0x19542d=_0x21a7a3;return\\x20this[_0x19542d(0x633)];}[_0x21a7a3(0x766)](){var\\x20_0x138e03=_0x21a7a3;this[_0x138e03(0x220)]=!0x1,this[_0x138e03(0x488)][_0x138e03(0x6fa)](this[_0x138e03(0x633)]),this[_0x138e03(0x6d7)]=null;}}_0x4d3937[_0x21a7a3(0x227)]=function(_0x31cf18,_0x74cb57,_0x3d12d5,_0x3ae3f2){return\\x20new\\x20_0x21e57d(_0x31cf18,_0x74cb57,_0x3d12d5,_0x3ae3f2);},_0x4d3937[_0x21a7a3(0x5af)]=_0x21e57d;},0x2ce:function(_0x4ec729,_0x4c6e9f,_0x263ff4){var\\x20_0x2890a1=a1_0x2045,_0x21f53e=this&&this[\\x27__awaiter\\x27]||function(_0x7090b5,_0x5331bc,_0x514465,_0x167098){return\\x20new(_0x514465||(_0x514465=Promise))(function(_0x158180,_0x449791){var\\x20_0x40d32c=a1_0x2045;function\\x20_0x412270(_0x289e36){var\\x20_0x3a534d=a1_0x2045;try{_0x9724f9(_0x167098[_0x3a534d(0x53b)](_0x289e36));}catch(_0x3e793d){_0x449791(_0x3e793d);}}function\\x20_0x2eff42(_0x2b9c1b){var\\x20_0x4e734b=a1_0x2045;try{_0x9724f9(_0x167098[_0x4e734b(0x70c)](_0x2b9c1b));}catch(_0x4a0b89){_0x449791(_0x4a0b89);}}function\\x20_0x9724f9(_0x1ef379){var\\x20_0x4c621a=a1_0x2045,_0x468367;_0x1ef379[_0x4c621a(0x684)]?_0x158180(_0x1ef379[\\x27value\\x27]):(_0x468367=_0x1ef379[\\x27value\\x27],_0x468367\\x20instanceof\\x20_0x514465?_0x468367:new\\x20_0x514465(function(_0xd9898f){_0xd9898f(_0x468367);}))[_0x4c621a(0x202)](_0x412270,_0x2eff42);}_0x9724f9((_0x167098=_0x167098[_0x40d32c(0x324)](_0x7090b5,_0x5331bc||[]))[_0x40d32c(0x53b)]());});};Object[_0x2890a1(0x668)](_0x4c6e9f,_0x2890a1(0x32c),{\\x27value\\x27:!0x0}),_0x4c6e9f[\\x27Logger\\x27]=void\\x200x0;const\\x20_0x507556=_0x263ff4(0x126),_0xeac3be=_0x263ff4(0x349);_0x4c6e9f[\\x27Logger\\x27]=new\\x20class{constructor(){var\\x20_0x46e554=_0x2890a1;this[\\x27logs\\x27]=\\x27\\x27,this[_0x46e554(0x2da)]=\\x27main\\x27,this[_0x46e554(0x272)]=[],this[\\x27debugLogs\\x27]=!0x1;let\\x20_0x2ad548=\\x27main\\x27;\\x27undefined\\x27!=typeof\\x20WorkerGlobalScope?_0x2ad548=_0x46e554(0x601):\\x27undefined\\x27!=typeof\\x20AudioWorkletProcessor&&(_0x2ad548=_0x46e554(0x1d6)),this[_0x46e554(0x2da)]=_0x2ad548;}[_0x2890a1(0x586)](_0x59b936=!0x1){var\\x20_0x53b173=_0x2890a1;this[_0x53b173(0x2fc)]=_0x59b936;}[_0x2890a1(0x22d)](_0x48fcc4){var\\x20_0x2bf7f2=_0x2890a1;this[_0x2bf7f2(0x31c)]=_0x48fcc4;}[_0x2890a1(0x2b9)](..._0x2ee4c8){var\\x20_0x26de02=_0x2890a1;this[_0x26de02(0x2fc)]&&(this[_0x26de02(0x2d1)](\\x27I\\x27,_0x2ee4c8[\\x27join\\x27](\\x27\\x5cx09\\x27)),console[\\x27info\\x27](_0x26de02(0x5b8),..._0x2ee4c8));}[_0x2890a1(0x5a2)](..._0x432355){var\\x20_0x1ece33=_0x2890a1;this[_0x1ece33(0x2fc)]&&this[_0x1ece33(0x2d1)](\\x27W\\x27,_0x432355[\\x27join\\x27](\\x27\\x5cx09\\x27)),console[_0x1ece33(0x2b9)](_0x1ece33(0x5b8),..._0x432355);}[_0x2890a1(0x26d)](..._0xc15db){var\\x20_0x3b1b4b=_0x2890a1;this[_0x3b1b4b(0x2fc)]&&this[_0x3b1b4b(0x2d1)](\\x27E\\x27,_0xc15db[\\x27join\\x27](\\x27\\x5cx09\\x27)),console[_0x3b1b4b(0x26d)](_0x3b1b4b(0x5b8),..._0xc15db);}[_0x2890a1(0x1f6)](..._0xe89dc9){var\\x20_0x2aab35=_0x2890a1;this[_0x2aab35(0x2fc)]&&(this[_0x2aab35(0x2d1)](\\x27I\\x27,_0xe89dc9[_0x2aab35(0x2e4)](\\x27\\x5cx09\\x27)),console[_0x2aab35(0x1f6)](_0x2aab35(0x5b8),..._0xe89dc9));}[_0x2890a1(0x21d)](_0x107048){var\\x20_0x173c59=_0x2890a1;this[_0x173c59(0x762)](_0x173c59(0x520),_0x107048);}[_0x2890a1(0x1e8)](_0x57b3e1){var\\x20_0x4f1d82=_0x2890a1;this[_0x4f1d82(0x762)](\\x27LOG_OUTPUT_AUDIO\\x27,_0x57b3e1);}[_0x2890a1(0x238)](_0x200eb1,_0x2ea64f){var\\x20_0x32e6cd=_0x2890a1;const\\x20_0x560495={\\x27channel\\x27:new\\x20MessageChannel(),\\x27recorder\\x27:void\\x200x0,\\x27startedAt\\x27:new\\x20Date(),\\x27options\\x27:_0x2ea64f};_0x200eb1\\x20instanceof\\x20MessagePort&&(_0x560495[_0x32e6cd(0x3e9)]=new\\x20_0xeac3be[(_0x32e6cd(0x2c8))](_0x2ea64f[_0x32e6cd(0x211)])),_0x200eb1\\x20instanceof\\x20Window?this[\\x27logPort\\x27]=_0x560495[\\x27channel\\x27][_0x32e6cd(0x279)]:_0x200eb1[_0x32e6cd(0x3e5)]({\\x27event\\x27:\\x27SET_LOGGING_PORT\\x27,\\x27data\\x27:void\\x200x0},[_0x560495[_0x32e6cd(0x499)][_0x32e6cd(0x279)]]),_0x560495[_0x32e6cd(0x499)][_0x32e6cd(0x5b4)][_0x32e6cd(0x236)](\\x27message\\x27,_0x47ad18=>{var\\x20_0x1daab3=_0x32e6cd,_0x1763bf,_0x4787db;_0x1daab3(0x2c4)==typeof\\x20_0x47ad18[_0x1daab3(0x280)]?this[\\x27logs\\x27]+=_0x47ad18[_0x1daab3(0x280)]:_0x560495[_0x1daab3(0x3e9)]&&_0x1daab3(0x520)===(null===(_0x1763bf=_0x47ad18[_0x1daab3(0x280)])||void\\x200x0===_0x1763bf?void\\x200x0:_0x1763bf[_0x1daab3(0x5c9)])?_0x560495[_0x1daab3(0x3e9)][_0x1daab3(0x6be)](_0x47ad18[_0x1daab3(0x280)][_0x1daab3(0x280)]):_0x560495[_0x1daab3(0x3e9)]&&\\x27LOG_OUTPUT_AUDIO\\x27===(null===(_0x4787db=_0x47ad18[\\x27data\\x27])||void\\x200x0===_0x4787db?void\\x200x0:_0x4787db[_0x1daab3(0x5c9)])&&_0x560495[_0x1daab3(0x3e9)][_0x1daab3(0x212)](_0x47ad18[_0x1daab3(0x280)][_0x1daab3(0x280)]);}),this[_0x32e6cd(0x272)][_0x32e6cd(0x3d6)](_0x560495),_0x560495[\\x27channel\\x27][_0x32e6cd(0x5b4)][_0x32e6cd(0x329)]();}[_0x2890a1(0x3ac)](){return\\x20_0x21f53e(this,void\\x200x0,void\\x200x0,function*(){var\\x20_0xe6bb2b=a1_0x2045;try{const\\x20_0x18140e=[];for(let\\x20_0x1c4e1e\\x20in\\x20this[_0xe6bb2b(0x272)]){const\\x20_0x1b4f9e=this[_0xe6bb2b(0x272)][_0x1c4e1e];if(_0x1b4f9e[_0xe6bb2b(0x3e9)]){const\\x20{input:_0x5c8792,output:_0x5dc9c2}=_0x1b4f9e[_0xe6bb2b(0x3e9)][_0xe6bb2b(0x50b)]();_0x18140e[_0xe6bb2b(0x3d6)](_0xe6bb2b(0x48a)+_0x1b4f9e[_0xe6bb2b(0x602)]+_0xe6bb2b(0x513)+_0x1c4e1e+_0xe6bb2b(0x65d)+(yield(0x0,_0x507556[_0xe6bb2b(0x298)])(_0x5c8792))+_0xe6bb2b(0x371)+_0x1c4e1e+_0xe6bb2b(0x65d)+(yield(0x0,_0x507556[\\x27blobToBase64\\x27])(_0x5dc9c2))+_0xe6bb2b(0x4c0));}}const\\x20_0x23da72=_0xe6bb2b(0x210)+_0x18140e+_0xe6bb2b(0x208)+this[_0xe6bb2b(0x3e8)]+_0xe6bb2b(0x607);return(0x0,_0x507556[_0xe6bb2b(0x770)])(_0xe6bb2b(0x6f6)+new\\x20Date()[_0xe6bb2b(0x663)]()+_0xe6bb2b(0x6c9),new\\x20Blob([_0x23da72],{\\x27type\\x27:\\x27text/html\\x27})),!0x0;}catch(_0x273723){return\\x20console[_0xe6bb2b(0x26d)](_0xe6bb2b(0x1ed)),!0x1;}});}[_0x2890a1(0x762)](_0x3cc7a7,_0x5ca71c){var\\x20_0x3ded10=_0x2890a1;if(this[_0x3ded10(0x2fc)]&&this[_0x3ded10(0x31c)]){const\\x20_0x15d5f9=new\\x20Float32Array(_0x5ca71c[_0x3ded10(0x479)]);_0x15d5f9[_0x3ded10(0x6a6)](_0x5ca71c,0x0),this[_0x3ded10(0x31c)][_0x3ded10(0x3e5)]({\\x27event\\x27:_0x3cc7a7,\\x27data\\x27:_0x15d5f9},[_0x15d5f9[_0x3ded10(0x6d3)]]);}}[_0x2890a1(0x2d1)](_0x4cccd0,_0x374a92){var\\x20_0x2ca686=_0x2890a1;const\\x20_0x2a5421=\\x27[\\x27+new\\x20Date()[\\x27toLocaleString\\x27]()+\\x27][\\x27+this[_0x2ca686(0x2da)]+\\x27][\\x27+_0x4cccd0+\\x27]:\\x5cx20\\x27+_0x374a92+\\x27\\x5cx0a\\x27;if(!this[_0x2ca686(0x31c)])return\\x20console[\\x27error\\x27](_0x2ca686(0x5b8),_0x2ca686(0x5ab),_0x2a5421);this[_0x2ca686(0x31c)][\\x27postMessage\\x27](_0x2a5421);}}();},0xdd:function(_0x52d279,_0x26d2ce){var\\x20_0x233330=a1_0x2045,_0x195798=this&&this[\\x27__awaiter\\x27]||function(_0x4c174f,_0xfef97b,_0x2d1679,_0x24165c){return\\x20new(_0x2d1679||(_0x2d1679=Promise))(function(_0x597449,_0x276dba){var\\x20_0x624384=a1_0x2045;function\\x20_0x2deaa3(_0x2130cf){var\\x20_0x4bb049=a1_0x2045;try{_0x4c560b(_0x24165c[_0x4bb049(0x53b)](_0x2130cf));}catch(_0x27eb70){_0x276dba(_0x27eb70);}}function\\x20_0x303eef(_0x2d4863){var\\x20_0x5e5153=a1_0x2045;try{_0x4c560b(_0x24165c[_0x5e5153(0x70c)](_0x2d4863));}catch(_0x55bf19){_0x276dba(_0x55bf19);}}function\\x20_0x4c560b(_0x1f53f8){var\\x20_0x5d0901=a1_0x2045,_0x37daff;_0x1f53f8[\\x27done\\x27]?_0x597449(_0x1f53f8[\\x27value\\x27]):(_0x37daff=_0x1f53f8[_0x5d0901(0x288)],_0x37daff\\x20instanceof\\x20_0x2d1679?_0x37daff:new\\x20_0x2d1679(function(_0xecd211){_0xecd211(_0x37daff);}))[\\x27then\\x27](_0x2deaa3,_0x303eef);}_0x4c560b((_0x24165c=_0x24165c[_0x624384(0x324)](_0x4c174f,_0xfef97b||[]))[_0x624384(0x53b)]());});};Object[_0x233330(0x668)](_0x26d2ce,_0x233330(0x32c),{\\x27value\\x27:!0x0}),_0x26d2ce[_0x233330(0x28a)]=void\\x200x0,_0x26d2ce[_0x233330(0x28a)]=class{constructor(_0x109d9e={}){var\\x20_0x560342=_0x233330;this[_0x560342(0x4a4)]=_0x109d9e,this[\\x27dataCache\\x27]={};}static[\\x27preload\\x27](_0x26fc19){return\\x20_0x195798(this,void\\x200x0,void\\x200x0,function*(){var\\x20_0x275451=a1_0x2045;const\\x20_0x3c38d3=\\x27string\\x27==typeof\\x20_0x26fc19?_0x26fc19:_0x26fc19[\\x27url\\x27];return\\x20fetch(_0x3c38d3,{\\x27cache\\x27:_0x275451(0x52c)});});}[_0x233330(0x1b6)](_0x3c998e,_0x250836){var\\x20_0x41df9a=_0x233330;this[_0x41df9a(0x4a4)][_0x3c998e]=_0x250836;}[\\x27removePath\\x27](_0xe4b7f7){var\\x20_0x25362b=_0x233330;this[\\x27paths\\x27][_0xe4b7f7]&&(this[\\x27unloadModel\\x27](_0xe4b7f7),delete\\x20this[_0x25362b(0x4a4)][_0xe4b7f7]);}[_0x233330(0x394)](_0x11a627){var\\x20_0x21fcf3=_0x233330;if(!this[\\x27paths\\x27][_0x11a627])throw\\x20new\\x20Error(_0x21fcf3(0x605));return\\x20this[\\x27dataCache\\x27][_0x11a627]?this[_0x21fcf3(0x4e0)][_0x11a627]:new\\x20Promise((_0x1c0b79,_0x468d73)=>{var\\x20_0x43bc71=_0x21fcf3;this[_0x43bc71(0x5d7)](this[_0x43bc71(0x4a4)][_0x11a627],_0x40366a=>{var\\x20_0x1503ae=_0x43bc71;this[_0x1503ae(0x4e0)][_0x11a627]=_0x40366a,_0x1c0b79(_0x40366a);},_0x468d73);});}[\\x27mallocModel\\x27](_0x385273,_0x28faa3){return\\x20_0x195798(this,void\\x200x0,void\\x200x0,function*(){var\\x20_0x59e87e=a1_0x2045;try{const\\x20_0x47a401=yield\\x20this[_0x59e87e(0x394)](_0x28faa3),_0x1b8fae=new\\x20Uint8Array(_0x47a401),_0x289b58=_0x385273[_0x59e87e(0x4ea)](_0x1b8fae[\\x27byteLength\\x27]);return\\x20_0x385273[\\x27HEAPU8\\x27][_0x59e87e(0x1e1)](_0x289b58,_0x289b58+_0x1b8fae[_0x59e87e(0x273)])[\\x27set\\x27](_0x1b8fae),{\\x27bufferAddress\\x27:_0x289b58,\\x27bufferLength\\x27:_0x1b8fae[\\x27byteLength\\x27]};}catch(_0x58ab4c){throw\\x20new\\x20Error(\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Malloc\\x5cx20model\\x5cx20failed\\x5cx20\\x27+_0x58ab4c);}});}[\\x27unloadModuleModel\\x27](_0x396e63,_0x48c220){_0x396e63[\\x27_free\\x27](_0x48c220);}[_0x233330(0x61b)](_0x110730){var\\x20_0x12c879=_0x233330;this[\\x27dataCache\\x27][_0x110730]&&delete\\x20this[_0x12c879(0x4e0)][_0x110730];}[_0x233330(0x5d7)](_0x111ed2,_0xd300cd,_0x477f52){var\\x20_0x2aac96=_0x233330,_0x7be67f=new\\x20XMLHttpRequest();_0x7be67f[_0x2aac96(0x3a0)](_0x2aac96(0x2ff),_0x111ed2,!0x0),_0x7be67f[_0x2aac96(0x737)]=_0x2aac96(0x420),_0x7be67f[_0x2aac96(0x256)]=function(){var\\x20_0x22339b=_0x2aac96;_0x477f52(_0x22339b(0x6ce));},_0x7be67f[_0x2aac96(0x205)]=function(){var\\x20_0x410e66=_0x2aac96;0xc8==_0x7be67f[_0x410e66(0x1d0)]||0x130==_0x7be67f[_0x410e66(0x1d0)]||0xce==_0x7be67f[_0x410e66(0x1d0)]||0x0==_0x7be67f[\\x27status\\x27]&&_0x7be67f[_0x410e66(0x541)]?_0xd300cd(_0x7be67f[\\x27response\\x27]):_0x477f52(_0x7be67f[\\x27statusText\\x27]+_0x410e66(0x39f)+_0x7be67f[\\x27responseURL\\x27]);},_0x7be67f[_0x2aac96(0x5bd)](null);}[_0x233330(0x43b)](){this[\\x27dataCache\\x27]={},this[\\x27paths\\x27]={};}};},0xa:(_0x3ec6f1,_0x1bb145,_0x4818e9)=>{var\\x20_0x55185f=a1_0x2045;Object[_0x55185f(0x668)](_0x1bb145,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x1bb145[\\x27SharedRingBuffer\\x27]=void\\x200x0;const\\x20_0x564c74=_0x4818e9(0x2ce),_0x480ef9={\\x27READ_INDEX\\x27:0x0,\\x27WRITE_INDEX\\x27:0x1};class\\x20_0x388009{constructor(_0x4d7467,_0x352efe=0x1){var\\x20_0x16439b=_0x55185f;this[\\x27_channelData\\x27]=[],this[_0x16439b(0x662)]=_0x352efe,this[_0x16439b(0x368)]=new\\x20Uint32Array(new\\x20SharedArrayBuffer(Object[\\x27keys\\x27](_0x480ef9)[_0x16439b(0x479)]*Uint32Array[\\x27BYTES_PER_ELEMENT\\x27])),this[_0x16439b(0x4ce)]=_0x4d7467+0x1;for(let\\x20_0x3ee5f0=0x0;_0x3ee5f0<_0x352efe;_0x3ee5f0++)this[_0x16439b(0x6d7)][_0x16439b(0x3d6)](new\\x20Float32Array(new\\x20SharedArrayBuffer(this[_0x16439b(0x4ce)]*Float32Array[_0x16439b(0x2bd)])));}static[_0x55185f(0x677)](_0x5a0039){var\\x20_0x538746=_0x55185f;return\\x20Object[_0x538746(0x4c8)](_0x5a0039,_0x388009[_0x538746(0x4c4)]);}[_0x55185f(0x3d6)](_0x294a06,_0x1c719d){var\\x20_0x2fd32e=_0x55185f;const\\x20_0x63723=Atomics[_0x2fd32e(0x609)](this[_0x2fd32e(0x368)],_0x480ef9[_0x2fd32e(0x276)]),_0x27eb8=Atomics[_0x2fd32e(0x609)](this[_0x2fd32e(0x368)],_0x480ef9[_0x2fd32e(0x43d)]);if(this[_0x2fd32e(0x3be)](_0x63723,_0x27eb8)<_0x1c719d)return!0x1;let\\x20_0xe613b9=_0x27eb8+_0x1c719d;if(this[_0x2fd32e(0x4ce)]<_0xe613b9){_0xe613b9-=this[_0x2fd32e(0x4ce)];for(let\\x20_0x371587=0x0;_0x371587<this[_0x2fd32e(0x662)];_0x371587++){const\\x20_0x573f23=this[_0x2fd32e(0x6d7)][_0x371587][_0x2fd32e(0x1e1)](_0x27eb8),_0x4ab6d4=this[_0x2fd32e(0x6d7)][_0x371587][_0x2fd32e(0x1e1)](0x0,_0xe613b9);_0x573f23[\\x27set\\x27](_0x294a06[_0x371587][_0x2fd32e(0x1e1)](0x0,_0x573f23[_0x2fd32e(0x479)])),_0x4ab6d4[\\x27set\\x27](_0x294a06[_0x371587][\\x27subarray\\x27](_0x573f23[_0x2fd32e(0x479)]));}}else{for(let\\x20_0x439c2b=0x0;_0x439c2b<this[_0x2fd32e(0x662)];_0x439c2b++)this[_0x2fd32e(0x6d7)][_0x439c2b][_0x2fd32e(0x1e1)](_0x27eb8,_0xe613b9)[\\x27set\\x27](_0x294a06[_0x439c2b][_0x2fd32e(0x1e1)](0x0,_0x1c719d));_0xe613b9===this[_0x2fd32e(0x4ce)]&&(_0xe613b9=0x0);}return\\x20Atomics[\\x27store\\x27](this[_0x2fd32e(0x368)],_0x480ef9[\\x27WRITE_INDEX\\x27],_0xe613b9),!0x0;}[_0x55185f(0x2a3)](_0x56701b,_0x50671f){var\\x20_0x25d7dc=_0x55185f;const\\x20_0xf6792a=Atomics[_0x25d7dc(0x609)](this[_0x25d7dc(0x368)],_0x480ef9[\\x27READ_INDEX\\x27]),_0x431a9e=Atomics[_0x25d7dc(0x609)](this[_0x25d7dc(0x368)],_0x480ef9[_0x25d7dc(0x43d)]);if(this[_0x25d7dc(0x2f0)](_0xf6792a,_0x431a9e)<_0x50671f)return!0x1;let\\x20_0x471148=_0xf6792a+_0x50671f;if(this[\\x27_bufferLength\\x27]<_0x471148){_0x471148-=this[_0x25d7dc(0x4ce)];for(let\\x20_0xd6610a=0x0;_0xd6610a<this[_0x25d7dc(0x662)];_0xd6610a++){const\\x20_0x35ff71=this[_0x25d7dc(0x6d7)][_0xd6610a][\\x27subarray\\x27](_0xf6792a),_0xda3084=this[_0x25d7dc(0x6d7)][_0xd6610a][_0x25d7dc(0x1e1)](0x0,_0x471148);_0x56701b[_0xd6610a][_0x25d7dc(0x6a6)](_0x35ff71),_0x56701b[_0xd6610a][_0x25d7dc(0x6a6)](_0xda3084,_0x35ff71[_0x25d7dc(0x479)]);}}else{for(let\\x20_0x386705=0x0;_0x386705<this[_0x25d7dc(0x662)];++_0x386705)_0x56701b[_0x386705][_0x25d7dc(0x6a6)](this[_0x25d7dc(0x6d7)][_0x386705][_0x25d7dc(0x1e1)](_0xf6792a,_0x471148));_0x471148===this[_0x25d7dc(0x4ce)]&&(_0x471148=0x0);}return\\x20Atomics[_0x25d7dc(0x3fa)](this[\\x27_state\\x27],_0x480ef9[_0x25d7dc(0x276)],_0x471148),!0x0;}[_0x55185f(0x300)](){var\\x20_0x2b13c7=_0x55185f;const\\x20_0xb76da9=Atomics[_0x2b13c7(0x609)](this[_0x2b13c7(0x368)],_0x480ef9[\\x27READ_INDEX\\x27]),_0x5965b7=Atomics[\\x27load\\x27](this[_0x2b13c7(0x368)],_0x480ef9[_0x2b13c7(0x43d)]);_0x564c74[_0x2b13c7(0x1fa)][_0x2b13c7(0x1f6)](this,{\\x27availableRead\\x27:this[_0x2b13c7(0x2f0)](_0xb76da9,_0x5965b7),\\x27availableWrite\\x27:this[_0x2b13c7(0x3be)](_0xb76da9,_0x5965b7)});}[_0x55185f(0x297)](){var\\x20_0x9e5107=_0x55185f;const\\x20_0x25ddaa=Atomics[_0x9e5107(0x609)](this[\\x27_state\\x27],_0x480ef9[_0x9e5107(0x276)]),_0x918224=Atomics[\\x27load\\x27](this[_0x9e5107(0x368)],_0x480ef9[_0x9e5107(0x43d)]);return\\x20this[_0x9e5107(0x2f0)](_0x25ddaa,_0x918224);}[\\x27isFrameAvailable\\x27](_0x18ef86){return\\x20this[\\x27getAvailableSamples\\x27]()>=_0x18ef86;}[_0x55185f(0x73e)](){var\\x20_0x28b422=_0x55185f;return\\x20this[_0x28b422(0x4ce)]-0x1;}[_0x55185f(0x3be)](_0x1577ce,_0x560619){return\\x20_0x560619>=_0x1577ce?this[\\x27_bufferLength\\x27]-_0x560619+_0x1577ce-0x1:_0x1577ce-_0x560619-0x1;}[\\x27_getAvailableRead\\x27](_0x26be85,_0x1cf44f){var\\x20_0x3fef72=_0x55185f;return\\x20_0x1cf44f>=_0x26be85?_0x1cf44f-_0x26be85:_0x1cf44f+this[_0x3fef72(0x4ce)]-_0x26be85;}}_0x1bb145[\\x27SharedRingBuffer\\x27]=_0x388009;},0x126:function(_0x376199,_0x3b9616){var\\x20_0x306c6b=a1_0x2045,_0x5b8224=this&&this[\\x27__awaiter\\x27]||function(_0x594bef,_0x100950,_0x5df8a7,_0x434f11){return\\x20new(_0x5df8a7||(_0x5df8a7=Promise))(function(_0x52da85,_0xc910c2){var\\x20_0x589595=a1_0x2045;function\\x20_0x5cf0c1(_0x5513eb){try{_0x2c3434(_0x434f11[\\x27next\\x27](_0x5513eb));}catch(_0x2a0b19){_0xc910c2(_0x2a0b19);}}function\\x20_0x17f9fa(_0x3d9e27){var\\x20_0x25d4f0=a1_0x2045;try{_0x2c3434(_0x434f11[_0x25d4f0(0x70c)](_0x3d9e27));}catch(_0x52f939){_0xc910c2(_0x52f939);}}function\\x20_0x2c3434(_0x3384c8){var\\x20_0x81274d=a1_0x2045,_0x4e446f;_0x3384c8[\\x27done\\x27]?_0x52da85(_0x3384c8[\\x27value\\x27]):(_0x4e446f=_0x3384c8[_0x81274d(0x288)],_0x4e446f\\x20instanceof\\x20_0x5df8a7?_0x4e446f:new\\x20_0x5df8a7(function(_0x584a6e){_0x584a6e(_0x4e446f);}))[_0x81274d(0x202)](_0x5cf0c1,_0x17f9fa);}_0x2c3434((_0x434f11=_0x434f11[_0x589595(0x324)](_0x594bef,_0x100950||[]))[_0x589595(0x53b)]());});};Object[_0x306c6b(0x668)](_0x3b9616,_0x306c6b(0x32c),{\\x27value\\x27:!0x0}),_0x3b9616[_0x306c6b(0x6f3)]=_0x3b9616[_0x306c6b(0x770)]=_0x3b9616[_0x306c6b(0x298)]=void\\x200x0,_0x3b9616[_0x306c6b(0x298)]=function(_0xd940ae){return\\x20_0x5b8224(this,void\\x200x0,void\\x200x0,function*(){return\\x20new\\x20Promise((_0x2b7c75,_0x525e4b)=>{var\\x20_0x295557=a1_0x2045;const\\x20_0x4f5291=new\\x20FileReader();_0x4f5291[_0x295557(0x381)]=()=>_0x2b7c75(_0x4f5291[_0x295557(0x6ba)]),_0x4f5291[_0x295557(0x25e)](_0xd940ae);});});},_0x3b9616[\\x27downloadBlob\\x27]=function(_0x50f66c,_0x5a190a){var\\x20_0xf08365=_0x306c6b;const\\x20_0x33604f=window[_0xf08365(0x37b)][_0xf08365(0x34f)](_0x5a190a),_0x1e306f=document[_0xf08365(0x56c)](\\x27a\\x27);_0x1e306f[_0xf08365(0x715)]=_0x33604f,_0x1e306f[\\x27download\\x27]=_0x50f66c||\\x27file\\x27,_0x1e306f[\\x27click\\x27]();},_0x3b9616[_0x306c6b(0x6f3)]=function(_0x6e6dea,_0x860525){var\\x20_0x6a9126=_0x306c6b;if(!_0x6e6dea[_0x6a9126(0x479)])return\\x20new\\x20Blob([],{\\x27type\\x27:\\x27audio/wav;\\x5cx20codecs=wav\\x27});const\\x20_0x221ef7=_0x6e6dea[0x0][\\x27length\\x27],_0x9cda16=new\\x20Float32Array(_0x221ef7*_0x6e6dea[_0x6a9126(0x479)]);_0x6e6dea[_0x6a9126(0x71e)]((_0x27c2ff,_0xe9155f)=>{var\\x20_0x4e71d2=_0x6a9126;_0x9cda16[_0x4e71d2(0x6a6)](_0x27c2ff,_0xe9155f*_0x221ef7);});const\\x20_0x315e6e=function(_0x51b46d,_0x12abba){var\\x20_0x3018f1=_0x6a9126;const\\x20_0x589353=_0x12abba[\\x27isFloat\\x27]?Float32Array:Uint16Array,_0xe9a3ae=_0x51b46d[\\x27byteLength\\x27]/_0x589353[_0x3018f1(0x2bd)],_0x2ba30f=function(_0x2efc16){var\\x20_0x2e8ac1=_0x3018f1;const\\x20_0x1d79ec=_0x2efc16[_0x2e8ac1(0x235)],_0x4f6a85=_0x2efc16[\\x27numChannels\\x27]||0x2,_0x387bd3=_0x2efc16[_0x2e8ac1(0x4b8)]?0x4:0x2,_0x215610=_0x2efc16[_0x2e8ac1(0x4b8)]?0x3:0x1,_0x7171cf=_0x2efc16[\\x27sampleRate\\x27],_0xe93ebd=_0x4f6a85*_0x387bd3,_0x5ca5b6=_0x7171cf*_0xe93ebd,_0x3c9991=_0x1d79ec*_0xe93ebd,_0x5dd42d=new\\x20ArrayBuffer(0x2c),_0x14672b=new\\x20DataView(_0x5dd42d);let\\x20_0x55a6ba=0x0;function\\x20_0x20755d(_0x23f303){var\\x20_0x93a716=_0x2e8ac1;for(let\\x20_0x4aa462=0x0;_0x4aa462<_0x23f303[_0x93a716(0x479)];_0x4aa462++)_0x14672b[\\x27setUint8\\x27](_0x55a6ba+_0x4aa462,_0x23f303[\\x27charCodeAt\\x27](_0x4aa462));_0x55a6ba+=_0x23f303[_0x93a716(0x479)];}function\\x20_0x2612aa(_0x358832){var\\x20_0xc3b61d=_0x2e8ac1;_0x14672b[_0xc3b61d(0x2e8)](_0x55a6ba,_0x358832,!0x0),_0x55a6ba+=0x4;}function\\x20_0x2001ef(_0x47eb07){var\\x20_0x27da39=_0x2e8ac1;_0x14672b[_0x27da39(0x735)](_0x55a6ba,_0x47eb07,!0x0),_0x55a6ba+=0x2;}return\\x20_0x20755d(_0x2e8ac1(0x50d)),_0x2612aa(_0x3c9991+0x24),_0x20755d(_0x2e8ac1(0x599)),_0x20755d(\\x27fmt\\x5cx20\\x27),_0x2612aa(0x10),_0x2001ef(_0x215610),_0x2001ef(_0x4f6a85),_0x2612aa(_0x7171cf),_0x2612aa(_0x5ca5b6),_0x2001ef(_0xe93ebd),_0x2001ef(0x8*_0x387bd3),_0x20755d(\\x27data\\x27),_0x2612aa(_0x3c9991),new\\x20Uint8Array(_0x5dd42d);}(Object[_0x3018f1(0x29a)]({},_0x12abba,{\\x27numFrames\\x27:_0xe9a3ae})),_0xfd2be5=new\\x20Uint8Array(_0x2ba30f[_0x3018f1(0x479)]+_0x51b46d[\\x27byteLength\\x27]);return\\x20_0xfd2be5[_0x3018f1(0x6a6)](_0x2ba30f,0x0),_0xfd2be5[_0x3018f1(0x6a6)](new\\x20Uint8Array(_0x51b46d),_0x2ba30f[\\x27length\\x27]),_0xfd2be5;}(_0x9cda16[_0x6a9126(0x6d3)],{\\x27isFloat\\x27:!0x0,\\x27numChannels\\x27:0x1,\\x27sampleRate\\x27:_0x860525});return\\x20new\\x20Blob([_0x315e6e],{\\x27type\\x27:_0x6a9126(0x4cb)});};},0x15c:(_0x265a14,_0x4a40d9,_0x392ab7)=>{var\\x20_0xb2d11f=a1_0x2045;Object[\\x27defineProperty\\x27](_0x4a40d9,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x4a40d9[_0xb2d11f(0x466)]=_0x4a40d9[_0xb2d11f(0x49c)]=void\\x200x0;const\\x20_0x4ffaab=_0x392ab7(0xa),_0x478229=_0x392ab7(0x29a);_0x4a40d9[_0xb2d11f(0x49c)]={\\x27REQUEST_NOISE_CANCELLATION\\x27:0x0},_0x4a40d9[_0xb2d11f(0x466)]=function(_0x10befa){var\\x20_0x1893b6=_0xb2d11f;const\\x20_0x13ca41=0x2*_0x478229[_0x1893b6(0x3a7)]*_0x10befa[_0x1893b6(0x211)]/0x3e8*_0x478229[\\x27WEB_AUDIO_CHUNK_SIZE\\x27];return{\\x27inputRingBuffer\\x27:new\\x20_0x4ffaab[(_0x1893b6(0x69d))](_0x13ca41,_0x10befa[_0x1893b6(0x567)]||0x1),\\x27outputRingBuffer\\x27:new\\x20_0x4ffaab[\\x27SharedRingBuffer\\x27](_0x13ca41,_0x10befa[_0x1893b6(0x567)]||0x1),\\x27atomicState\\x27:new\\x20Int32Array(new\\x20SharedArrayBuffer(Object[_0x1893b6(0x505)](_0x4a40d9[\\x27STATE\\x27])[_0x1893b6(0x479)]*Int32Array[\\x27BYTES_PER_ELEMENT\\x27]))};};},0x29a:(_0x3e7e1d,_0x37b04e)=>{var\\x20_0x35a7bb=a1_0x2045;Object[_0x35a7bb(0x668)](_0x37b04e,_0x35a7bb(0x32c),{\\x27value\\x27:!0x0}),_0x37b04e[_0x35a7bb(0x402)]=_0x37b04e[\\x27BVC_ALLOWED_DEVICES\\x27]=_0x37b04e[_0x35a7bb(0x33d)]=_0x37b04e[_0x35a7bb(0x2ad)]=_0x37b04e[_0x35a7bb(0x631)]=_0x37b04e[_0x35a7bb(0x3a7)]=_0x37b04e[_0x35a7bb(0x518)]=_0x37b04e[_0x35a7bb(0x338)]=_0x37b04e[_0x35a7bb(0x21f)]=_0x37b04e[_0x35a7bb(0x2ba)]=_0x37b04e[\\x27WEB_AUDIO_CHUNK_SIZE\\x27]=void\\x200x0,_0x37b04e[\\x27WEB_AUDIO_CHUNK_SIZE\\x27]=0x80,_0x37b04e[_0x35a7bb(0x2ba)]=_0x35a7bb(0x1db),_0x37b04e[_0x35a7bb(0x21f)]=0x1f4,_0x37b04e[_0x35a7bb(0x338)]=0x28,_0x37b04e[\\x27BUFFER_OVERFLOW_MS\\x27]=0xc8,_0x37b04e[_0x35a7bb(0x3a7)]=0xa,_0x37b04e[_0x35a7bb(0x631)]=[0x1f40,0x3e80,0x5dc0,0x7d00,0xac44,0xbb80,0x15888,0x17700],_0x37b04e[\\x27SUPPORTED_INBOUND_SAMPLE_RATES\\x27]=[0x1f40],_0x37b04e[_0x35a7bb(0x33d)]=0x3e80,_0x37b04e[\\x27BVC_ALLOWED_DEVICES\\x27]=[],_0x37b04e[_0x35a7bb(0x402)]=[_0x35a7bb(0x551),\\x27macbook\\x5cx20air\\x27,_0x35a7bb(0x693),_0x35a7bb(0x549),_0x35a7bb(0x582),_0x35a7bb(0x307),_0x35a7bb(0x65c),_0x35a7bb(0x51e),_0x35a7bb(0x3cb),_0x35a7bb(0x6eb),_0x35a7bb(0x345),_0x35a7bb(0x5f9),_0x35a7bb(0x767),_0x35a7bb(0x50a),_0x35a7bb(0x4ab),\\x27logi\\x5cx204k\\x27,_0x35a7bb(0x47d),\\x27blue\\x5cx20snowball\\x27,_0x35a7bb(0x452),_0x35a7bb(0x265),_0x35a7bb(0x469),_0x35a7bb(0x374),_0x35a7bb(0x2f4),\\x27at2020usb\\x27,\\x27r\u00F8de\\x5cx20videomic\\x27,_0x35a7bb(0x725),\\x271062s\\x27,\\x27axcs\\x5cx20speaker\\x27,_0x35a7bb(0x489),\\x27audioengine\\x5cx202+\\x27,_0x35a7bb(0x392),_0x35a7bb(0x6cb),_0x35a7bb(0x77f),_0x35a7bb(0x216),\\x27samson\\x5cx20gomic\\x27,_0x35a7bb(0x3ce),_0x35a7bb(0x751),_0x35a7bb(0x385),\\x27amazonbasics\\x5cx20desktop\\x5cx20mini\\x5cx20mic\\x27,_0x35a7bb(0x316),_0x35a7bb(0x44a),_0x35a7bb(0x372),\\x27reaxt\\x5cx20omni-1.0\\x5cx20pair\\x27,\\x27stf\\x5cx20coloso\\x27,_0x35a7bb(0x5f2),_0x35a7bb(0x1da),_0x35a7bb(0x23a),_0x35a7bb(0x656),_0x35a7bb(0x61a),_0x35a7bb(0x6e8),_0x35a7bb(0x354),_0x35a7bb(0x2cc),_0x35a7bb(0x1b7),_0x35a7bb(0x3a4),_0x35a7bb(0x6cf),\\x27edifier\\x5cx20mp260\\x27,\\x27jbl\\x5cx20tuner\\x5cx20fm\\x27,_0x35a7bb(0x3f0),_0x35a7bb(0x1e2),_0x35a7bb(0x704),\\x27trio8800\\x27,\\x27edifier\\x5cx20s3000\\x5cx20pro\\x27,_0x35a7bb(0x461),_0x35a7bb(0x502),_0x35a7bb(0x54b),_0x35a7bb(0x1dc),\\x27rode\\x5cx20podcaster\\x27,\\x27thronmax\\x5cx20mdrill\\x27,_0x35a7bb(0x58b),_0x35a7bb(0x34c),_0x35a7bb(0x2e1),_0x35a7bb(0x318),\\x27thronmax\\x5cx20mdrill\\x5cx20\\x27,_0x35a7bb(0x76a),_0x35a7bb(0x675),\\x27rog\\x5cx20eye\\x5cx20s\\x27,_0x35a7bb(0x4e3),_0x35a7bb(0x6d4),\\x27redcam\\x5cx20rc-250\\x27,\\x27razer\\x5cx20base\\x5cx20station\\x5cx20v2\\x5cx20chroma\\x27,\\x27r-talk\\x5cx20900\\x27,\\x27klipsch\\x5cx20the\\x5cx20fives\\x27,_0x35a7bb(0x1a7),_0x35a7bb(0x45d),_0x35a7bb(0x711),_0x35a7bb(0x26c),_0x35a7bb(0x1e4),_0x35a7bb(0x564),\\x27jbl\\x5cx20flip\\x5cx20\\x27,_0x35a7bb(0x681),_0x35a7bb(0x5ae),_0x35a7bb(0x61e),_0x35a7bb(0x60b),\\x27jabra\\x5cx20panacast\\x27,_0x35a7bb(0x60c),_0x35a7bb(0x3cd),_0x35a7bb(0x4db),_0x35a7bb(0x328),_0x35a7bb(0x342),\\x27teufel\\x5cx20cinebar\\x5cx20one\\x27,\\x27thinkvision\\x5cx20t22v\\x5cx20wide\\x5cx20monitor\\x5cx20for\\x5cx20usb-audio\\x27,_0x35a7bb(0x5ee),\\x27spark\\x5cx2040\\x5cx20usb\\x27,\\x27speechmike\\x5cx20iii\\x27,_0x35a7bb(0x30d),\\x27stadia\\x5cx20controller\\x5cx20rev.\\x5cx20a\\x27,_0x35a7bb(0x383),_0x35a7bb(0x70a),_0x35a7bb(0x52e),_0x35a7bb(0x5a7),_0x35a7bb(0x20a),_0x35a7bb(0x2a1),_0x35a7bb(0x31e),_0x35a7bb(0x57f),_0x35a7bb(0x6f2),_0x35a7bb(0x694),\\x27kilburn\\x5cx20ii\\x27,_0x35a7bb(0x5b3),_0x35a7bb(0x389),_0x35a7bb(0x55e),_0x35a7bb(0x5ed),\\x27iconf\\x27,_0x35a7bb(0x3eb),_0x35a7bb(0x5b7),_0x35a7bb(0x4ac),_0x35a7bb(0x59b),\\x27yas-108\\x5cx20yamaha\\x27,_0x35a7bb(0x283),_0x35a7bb(0x4b9),_0x35a7bb(0x20f),_0x35a7bb(0x641),_0x35a7bb(0x739),_0x35a7bb(0x5f8),\\x27sembrandt\\x5cx20ht3000\\x27,_0x35a7bb(0x52a),\\x27bss\\x5cx204803\\x27,\\x27belkin\\x5cx20\\x27,_0x35a7bb(0x3d8),_0x35a7bb(0x6a3),_0x35a7bb(0x3bc),_0x35a7bb(0x6e6),_0x35a7bb(0x3d3),_0x35a7bb(0x37f),_0x35a7bb(0x403),_0x35a7bb(0x669),_0x35a7bb(0x721),_0x35a7bb(0x6ef),_0x35a7bb(0x45a),_0x35a7bb(0x480),\\x27edifier\\x5cx20s880db\\x27,_0x35a7bb(0x247),_0x35a7bb(0x3dd),_0x35a7bb(0x5eb),_0x35a7bb(0x4b0),_0x35a7bb(0x647),\\x27jbl\\x5cx20pulse\\x5cx204\\x27,_0x35a7bb(0x774),_0x35a7bb(0x4ca),\\x27mi\\x5cx20portable\\x5cx20bluetooth\\x5cx20speaker\\x27,_0x35a7bb(0x783),\\x27stockwell\\x5cx20ii\\x27,\\x27sk010\\x27,_0x35a7bb(0x2ea),_0x35a7bb(0x2e9),\\x27ts-14000\\x5cx20klar\\x27,_0x35a7bb(0x535),_0x35a7bb(0x219),_0x35a7bb(0x553),_0x35a7bb(0x4c5),_0x35a7bb(0x30b),_0x35a7bb(0x2a9),_0x35a7bb(0x431),\\x27jbl\\x5cx20cinema\\x5cx20sb150\\x27,_0x35a7bb(0x25d),_0x35a7bb(0x72b),_0x35a7bb(0x68e),_0x35a7bb(0x333),_0x35a7bb(0x506),_0x35a7bb(0x290),_0x35a7bb(0x5d5),\\x27sp-ad70-a\\x27,_0x35a7bb(0x6f5),\\x27stanmore\\x5cx20bluetooth\\x27,\\x27logi\\x5cx20z407\\x27,_0x35a7bb(0x572),_0x35a7bb(0x1cd),\\x27gc21-audio\\x27,\\x27pc-lm1e\\x27,_0x35a7bb(0x400),_0x35a7bb(0x71f),_0x35a7bb(0x460),_0x35a7bb(0x3d7),\\x27boom\\x5cx203\\x27,_0x35a7bb(0x21c),_0x35a7bb(0x507),_0x35a7bb(0x33f),\\x27sigma\\x5cx20fp\\x27,\\x27soundsticks\\x27,\\x27zv-1\\x27,\\x27ipevo\\x5cx20v4k\\x27,_0x35a7bb(0x4bd),_0x35a7bb(0x4d0),\\x27cybertrack\\x5cx20h7\\x27,_0x35a7bb(0x1e5),_0x35a7bb(0x56d),\\x27sennheiser\\x5cx20sp\\x5cx2030\\x27,_0x35a7bb(0x2c7),_0x35a7bb(0x1d7),_0x35a7bb(0x296),_0x35a7bb(0x58d),\\x27klim\\x5cx20talk\\x27,\\x27hypemic\\x27,_0x35a7bb(0x4c7),_0x35a7bb(0x717),\\x27verbatim\\x5cx201080p\\x5cx20mic\\x27,\\x27jbl\\x5cx20xtreme\\x27,\\x27connectclip\\x5cx201.0\\x27,_0x35a7bb(0x1be),_0x35a7bb(0x692),_0x35a7bb(0x768),\\x27hk\\x5cx20onyx\\x5cx20studio\\x27,_0x35a7bb(0x3e1),_0x35a7bb(0x6af),_0x35a7bb(0x2df),_0x35a7bb(0x545),_0x35a7bb(0x63d),_0x35a7bb(0x45c),\\x27klipsch\\x5cx20groove\\x27,_0x35a7bb(0x71c),_0x35a7bb(0x754),_0x35a7bb(0x451),\\x27movo-um700\\x27,_0x35a7bb(0x643),_0x35a7bb(0x218),_0x35a7bb(0x3bf),_0x35a7bb(0x4d5),_0x35a7bb(0x6c7),_0x35a7bb(0x63e),_0x35a7bb(0x1fb),_0x35a7bb(0x228),_0x35a7bb(0x2a4),_0x35a7bb(0x5ce),_0x35a7bb(0x6f7),_0x35a7bb(0x576),_0x35a7bb(0x743),_0x35a7bb(0x27f),_0x35a7bb(0x25c),\\x27dell\\x5cx20slim\\x5cx20soundbar\\x5cx20sb522a\\x27,\\x27hk_allure_portable\\x27,_0x35a7bb(0x747),_0x35a7bb(0x58c),\\x27oppo\\x5cx20wireless\\x5cx20speaker\\x27,_0x35a7bb(0x68a),\\x27oontz\\x5cx20angle\\x5cx203\\x5cx20dca\\x27,\\x27oontz\\x5cx20angle\\x5cx203\\x5cx20plus\\x27,_0x35a7bb(0x728),_0x35a7bb(0x1cf),_0x35a7bb(0x222),_0x35a7bb(0x49e),_0x35a7bb(0x3b2),_0x35a7bb(0x467),_0x35a7bb(0x3ee),_0x35a7bb(0x69f),_0x35a7bb(0x695),_0x35a7bb(0x55d),_0x35a7bb(0x1cb),_0x35a7bb(0x2a2),\\x27mifa_a1\\x27,\\x27ndz-03-ga\\x27,_0x35a7bb(0x4e5),_0x35a7bb(0x359),_0x35a7bb(0x36b),_0x35a7bb(0x2ce),_0x35a7bb(0x59f),\\x27s2025\\x27,\\x27sc-ux100\\x27,\\x27sdh-201\\x27,_0x35a7bb(0x543),_0x35a7bb(0x6d2),_0x35a7bb(0x2b1),_0x35a7bb(0x56f),_0x35a7bb(0x274),_0x35a7bb(0x1de),_0x35a7bb(0x731),_0x35a7bb(0x580),_0x35a7bb(0x509),_0x35a7bb(0x6e4),\\x27\u043A\u043E\u043B\u043E\u043D\u043A\u0438\\x27,_0x35a7bb(0x364),_0x35a7bb(0x4f1),\\x27bb5115\\x27,_0x35a7bb(0x27d),\\x27t&v\\x5cx20kurbis\\x5cx20cinema\\x27,_0x35a7bb(0x6e9),_0x35a7bb(0x72c),\\x27tcl\\x5cx20ts5000\\x27,_0x35a7bb(0x3ca),\\x27[samsung]\\x5cx20airtrack\\x27,\\x27[samsung]\\x5cx20allconnect\\x27,\\x27vipex\\x5cx20vx-sk001\\x27,_0x35a7bb(0x3f9),_0x35a7bb(0x24d),_0x35a7bb(0x3ec),_0x35a7bb(0x559),_0x35a7bb(0x718),_0x35a7bb(0x33e),_0x35a7bb(0x340),\\x27blasterx\\x5cx20senz3d\\x5cx20vf0810\\x27,\\x27blue\\x5cx20eyeball\\x5cx202.0\\x27,_0x35a7bb(0x341),_0x35a7bb(0x40a),_0x35a7bb(0x539),_0x35a7bb(0x2f8),_0x35a7bb(0x1ea),_0x35a7bb(0x5ef),_0x35a7bb(0x62c),_0x35a7bb(0x3a3),\\x27cmteck\\x27,\\x27cp700\\x27,_0x35a7bb(0x271),_0x35a7bb(0x50e),_0x35a7bb(0x393),_0x35a7bb(0x63c),_0x35a7bb(0x5ca),_0x35a7bb(0x4a5),\\x27meeting\\x5cx20owl\\x27,_0x35a7bb(0x73f),\\x27razer\\x5cx20seiren\\x27,_0x35a7bb(0x544),_0x35a7bb(0x636),_0x35a7bb(0x376),\\x27fifine\\x5cx20k678\\x5cx20microphone\\x27,\\x27fifine\\x5cx20microphone\\x27,_0x35a7bb(0x3a2),\\x27fifine\\x5cx20k658\\x5cx20microphone\\x27,\\x27fifine\\x5cx20k669\\x5cx20microphone\\x27,\\x27trust\\x5cx20gxt\\x5cx20232\\x5cx20microphone\\x27,_0x35a7bb(0x77a),_0x35a7bb(0x65a),\\x27aoni\\x5cx20microphone\\x27,_0x35a7bb(0x778),\\x27pocketaudio\\x5cx20microphone\\x27,_0x35a7bb(0x5ff),_0x35a7bb(0x362),\\x27uac\\x5cx201.0\\x5cx20microphone\\x5cx20&\\x5cx20hid-mediakey\\x27,_0x35a7bb(0x43e),_0x35a7bb(0x6fb),\\x27ifine\\x5cx20\\x5cx20microphone\\x27,_0x35a7bb(0x3f5),\\x27usb/xlr\\x5cx20dynamic\\x5cx20microphone\\x27,_0x35a7bb(0x593),_0x35a7bb(0x648),\\x27sm950\\x5cx20microphone\\x27,_0x35a7bb(0x4cc),_0x35a7bb(0x1f3),_0x35a7bb(0x68d),_0x35a7bb(0x1fd),_0x35a7bb(0x404),_0x35a7bb(0x1f4),_0x35a7bb(0x560),_0x35a7bb(0x3a8),_0x35a7bb(0x2ef),_0x35a7bb(0x5e1),_0x35a7bb(0x69e),\\x27poly\\x5cx20studio\\x27,_0x35a7bb(0x571),_0x35a7bb(0x2d2),_0x35a7bb(0x448),_0x35a7bb(0x5c0),\\x27obsbot\\x5cx20tiny\\x5cx204k\\x5cx20microphone\\x27,\\x27fifine\\x5cx20k658d\\x5cx20microphone\\x27,_0x35a7bb(0x413),_0x35a7bb(0x5bc),\\x27moman\\x5cx20em\\x27,_0x35a7bb(0x4d2),\\x27logitech\\x5cx20z337\\x27,_0x35a7bb(0x756),_0x35a7bb(0x542),_0x35a7bb(0x6f4),\\x27emberton\\x27,_0x35a7bb(0x75a),_0x35a7bb(0x5ea),_0x35a7bb(0x2fd),_0x35a7bb(0x6e5),_0x35a7bb(0x698),\\x27srs-xb33\\x27,_0x35a7bb(0x72a),_0x35a7bb(0x701),_0x35a7bb(0x2b0),_0x35a7bb(0x5e2),_0x35a7bb(0x4f8),\\x27srs-xb10\\x27,\\x27ht-s100f\\x27,_0x35a7bb(0x4fd),\\x278bitdo\\x5cx20twincube\\x27,_0x35a7bb(0x53c),_0x35a7bb(0x708),_0x35a7bb(0x226),_0x35a7bb(0x42d),_0x35a7bb(0x1a6),_0x35a7bb(0x759),_0x35a7bb(0x397),_0x35a7bb(0x624),_0x35a7bb(0x687),\\x27tribit\\x5cx20maxboom\\x27,_0x35a7bb(0x569),_0x35a7bb(0x20c),\\x27boom2\\x27];},0x29f:(_0xff964d,_0x1d3525)=>{var\\x20_0x2b56ec=a1_0x2045;Object[_0x2b56ec(0x668)](_0x1d3525,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x1d3525[_0x2b56ec(0x396)]=void\\x200x0,_0x1d3525[_0x2b56ec(0x396)]=function(_0x56f423,_0x57028e){const\\x20{KRISP_AUDIO_SAMPLING_RATE_8000HZ:_0x402c40,KRISP_AUDIO_SAMPLING_RATE_16000HZ:_0x56807a,KRISP_AUDIO_SAMPLING_RATE_24000HZ:_0x306af6,KRISP_AUDIO_SAMPLING_RATE_32000HZ:_0x5b84d6,KRISP_AUDIO_SAMPLING_RATE_44100HZ:_0x249c7d,KRISP_AUDIO_SAMPLING_RATE_48000HZ:_0x1e6ecc,KRISP_AUDIO_SAMPLING_RATE_88200HZ:_0x52fe68,KRISP_AUDIO_SAMPLING_RATE_96000HZ:_0x545e9d}=_0x57028e;return{0x1f40:_0x402c40,0x3e80:_0x56807a,0x5dc0:_0x306af6,0x7d00:_0x5b84d6,0xac44:_0x249c7d,0xbb80:_0x1e6ecc,0x15888:_0x52fe68,0x17700:_0x545e9d}[_0x56f423];};},0x36f:function(_0x52e88f,_0x271f3f,_0x58c4e4){var\\x20_0xa03f16=a1_0x2045,_0x4089ff=this&&this[_0xa03f16(0x5e0)]||function(_0xac26b4){var\\x20_0x5cad8d=_0xa03f16;return\\x20_0xac26b4&&_0xac26b4[_0x5cad8d(0x32c)]?_0xac26b4:{\\x27default\\x27:_0xac26b4};};Object[_0xa03f16(0x668)](_0x271f3f,_0xa03f16(0x32c),{\\x27value\\x27:!0x0});const\\x20_0x2719b5=_0x58c4e4(0x2ce),_0x53c024=_0x4089ff(_0x58c4e4(0x63));self[_0xa03f16(0x6d8)]=_0x380626=>_0xa03f16(0x3a6)===_0x380626[_0xa03f16(0x280)][_0xa03f16(0x5c9)]?_0x2719b5[_0xa03f16(0x1fa)][_0xa03f16(0x22d)](_0x380626[_0xa03f16(0x2b6)][0x0]):_0xa03f16(0x445)===_0x380626[_0xa03f16(0x280)][_0xa03f16(0x5c9)]?new\\x20_0x53c024[(_0xa03f16(0x5af))](_0x380626[\\x27ports\\x27][0x0],_0x380626[_0xa03f16(0x280)][\\x27data\\x27]):(_0x2719b5[\\x27Logger\\x27][\\x27error\\x27](_0xa03f16(0x38a),_0xa03f16(0x1d4),_0x380626),{});},0x327:(_0x44ec3b,_0x30cd14,_0x3411b9)=>{var\\x20_0x3869c7=a1_0x2045;Object[\\x27defineProperty\\x27](_0x30cd14,_0x3869c7(0x32c),{\\x27value\\x27:!0x0});const\\x20_0x3009d5=_0x3411b9(0x2ce);_0x30cd14[_0x3869c7(0x5af)]=class{constructor(_0x2b57df){var\\x20_0x17c612=_0x3869c7;this[_0x17c612(0x4a6)]=_0x2b57df,this[_0x17c612(0x43f)]=0x0,this[_0x17c612(0x5b5)]=0x0,this[_0x17c612(0x1af)]=Number[_0x17c612(0x1b8)],this[_0x17c612(0x31a)]=0x0,this[_0x17c612(0x58e)]=0x0,this[_0x17c612(0x600)]=0x0;}[\\x27addItem\\x27](_0x38ba18){var\\x20_0x27de2d=_0x3869c7;if(++this[\\x27count\\x27],this[\\x27sum\\x27]+=_0x38ba18,_0x38ba18<this[_0x27de2d(0x1af)]&&(this[_0x27de2d(0x1af)]=_0x38ba18),_0x38ba18>this[_0x27de2d(0x31a)]&&(this[_0x27de2d(0x31a)]=_0x38ba18),_0x38ba18>this[_0x27de2d(0x4a6)]&&(++this[_0x27de2d(0x58e)],this[_0x27de2d(0x600)]+=_0x38ba18),0x64==this[_0x27de2d(0x43f)]){const\\x20_0x48f764=this[_0x27de2d(0x43f)]?this[\\x27sum\\x27]/this[_0x27de2d(0x43f)]:0x0,_0x24fd70=this[_0x27de2d(0x58e)]?this[\\x27overrunSum\\x27]/this[_0x27de2d(0x58e)]:0x0;_0x3009d5[_0x27de2d(0x1fa)][_0x27de2d(0x1f6)](_0x27de2d(0x5f5)+this[_0x27de2d(0x43f)]+\\x27\\x5cx0a\\x5cx20\\x5cx20Average:\\x5cx20\\x27+_0x48f764+_0x27de2d(0x419)+this[_0x27de2d(0x1af)]+_0x27de2d(0x612)+this[_0x27de2d(0x31a)]+_0x27de2d(0x5d2)+this[\\x27overrunCount\\x27]+_0x27de2d(0x380)+_0x24fd70),this[_0x27de2d(0x56b)]();}}[_0x3869c7(0x56b)](){var\\x20_0x2d4693=_0x3869c7;this[\\x27count\\x27]=0x0,this[_0x2d4693(0x5b5)]=0x0,this[\\x27min\\x27]=Number[_0x2d4693(0x1b8)],this[\\x27max\\x27]=0x0,this[_0x2d4693(0x58e)]=0x0,this[\\x27overrunSum\\x27]=0x0;}};},0x46:function(_0x1dc3e6,_0x17e757,_0x3ee0aa){var\\x20_0x25600d=a1_0x2045,_0x50b36c=this&&this[_0x25600d(0x34a)]||function(_0x372794,_0x2c9941,_0x563429,_0x134504){return\\x20new(_0x563429||(_0x563429=Promise))(function(_0x575c21,_0xdc4c6a){var\\x20_0x48bcbc=a1_0x2045;function\\x20_0xf4c43e(_0x48a819){var\\x20_0x3f0f2c=a1_0x2045;try{_0x51119e(_0x134504[_0x3f0f2c(0x53b)](_0x48a819));}catch(_0x19b6dc){_0xdc4c6a(_0x19b6dc);}}function\\x20_0x572a77(_0x32866d){var\\x20_0x5f3e38=a1_0x2045;try{_0x51119e(_0x134504[_0x5f3e38(0x70c)](_0x32866d));}catch(_0x1e8d10){_0xdc4c6a(_0x1e8d10);}}function\\x20_0x51119e(_0x11793b){var\\x20_0x3ad1b9=a1_0x2045,_0x184750;_0x11793b[_0x3ad1b9(0x684)]?_0x575c21(_0x11793b[_0x3ad1b9(0x288)]):(_0x184750=_0x11793b[_0x3ad1b9(0x288)],_0x184750\\x20instanceof\\x20_0x563429?_0x184750:new\\x20_0x563429(function(_0x55b7bf){_0x55b7bf(_0x184750);}))[_0x3ad1b9(0x202)](_0xf4c43e,_0x572a77);}_0x51119e((_0x134504=_0x134504[_0x48bcbc(0x324)](_0x372794,_0x2c9941||[]))[_0x48bcbc(0x53b)]());});},_0x1740fc=this&&this[\\x27__importDefault\\x27]||function(_0x2390a5){var\\x20_0x2c57ba=_0x25600d;return\\x20_0x2390a5&&_0x2390a5[_0x2c57ba(0x32c)]?_0x2390a5:{\\x27default\\x27:_0x2390a5};};Object[_0x25600d(0x668)](_0x17e757,\\x27__esModule\\x27,{\\x27value\\x27:!0x0});const\\x20_0x5dc527=_0x3ee0aa(0x29f),_0x48836f=_0x3ee0aa(0x15c),_0xa0a1c7=_0x3ee0aa(0xa),_0x1868b9=_0x1740fc(_0x3ee0aa(0x36)),_0x11e3b0=_0x1740fc(_0x3ee0aa(0x327)),_0x580ccb=_0x3ee0aa(0x2ce);_0x17e757[_0x25600d(0x5af)]=class{constructor(_0x764af8,_0x2ca7c0,_0x539553,_0x106cab){var\\x20_0x586cb1=_0x25600d;this[_0x586cb1(0x435)]=_0x764af8,this[_0x586cb1(0x28a)]=_0x2ca7c0,this[_0x586cb1(0x66f)]=_0x539553,this[_0x586cb1(0x6b3)]=_0x106cab,this[\\x27_dataInput\\x27]=new\\x20_0x1868b9[(_0x586cb1(0x5af))](),this[_0x586cb1(0x6fd)]=null,this[_0x586cb1(0x3dc)]=null,this[\\x27_modelInited\\x27]=!0x1,this[_0x586cb1(0x3f4)]=0x0,this[_0x586cb1(0x321)]=null,this[_0x586cb1(0x69c)]=null,this[_0x586cb1(0x2fc)]=!0x1;}[\\x27process\\x27](_0x4d7a27){var\\x20_0x1fd9e0=_0x25600d,_0x517938,_0x52c07c,_0x500125,_0x575ca1;if(this[_0x1fd9e0(0x732)]&&this[_0x1fd9e0(0x321)])try{this[_0x1fd9e0(0x5de)][\\x27push\\x27](_0x4d7a27);let\\x20_0x391930=0x0;for(;this[_0x1fd9e0(0x5de)][\\x27length\\x27]()>=this[_0x1fd9e0(0x3f4)];){null===(_0x517938=this[_0x1fd9e0(0x6fd)])||void\\x200x0===_0x517938||_0x517938[_0x1fd9e0(0x508)](0x0)[_0x1fd9e0(0x6a6)](this[_0x1fd9e0(0x5de)][_0x1fd9e0(0x2a3)](this[_0x1fd9e0(0x3f4)])),this[_0x1fd9e0(0x69c)]&&(_0x391930=performance[_0x1fd9e0(0x3ae)]());if(0x0!==this[_0x1fd9e0(0x435)][_0x1fd9e0(0x47e)](this[_0x1fd9e0(0x321)],null===(_0x52c07c=this[\\x27_heapInputBuffer\\x27])||void\\x200x0===_0x52c07c?void\\x200x0:_0x52c07c[_0x1fd9e0(0x585)](),this[_0x1fd9e0(0x3f4)],null===(_0x500125=this[_0x1fd9e0(0x3dc)])||void\\x200x0===_0x500125?void\\x200x0:_0x500125[_0x1fd9e0(0x585)](),this[_0x1fd9e0(0x3f4)]))return;this[_0x1fd9e0(0x69c)]&&this[_0x1fd9e0(0x69c)][_0x1fd9e0(0x525)](performance[_0x1fd9e0(0x3ae)]()-_0x391930);const\\x20_0x1e755b=new\\x20Float32Array(null===(_0x575ca1=this[_0x1fd9e0(0x3dc)])||void\\x200x0===_0x575ca1?void\\x200x0:_0x575ca1[_0x1fd9e0(0x508)](0x0)[\\x27length\\x27])[_0x1fd9e0(0x65f)]((_0x517aec,_0x1f540a)=>{var\\x20_0x2ca7c4=_0x1fd9e0,_0x343771;return\\x20null===(_0x343771=this[\\x27_heapOutputBuffer\\x27])||void\\x200x0===_0x343771?void\\x200x0:_0x343771[_0x2ca7c4(0x508)](0x0)[_0x1f540a];});this[\\x27onAudioProcessSuccessCB\\x27](_0x1e755b);}}catch(_0x4588e1){this[_0x1fd9e0(0x6a4)](_0x4588e1);}}[_0x25600d(0x640)](_0x502e64,_0x4ea213,_0x2dd75d){return\\x20_0x50b36c(this,void\\x200x0,void\\x200x0,function*(){var\\x20_0x41c1c4=a1_0x2045;try{this[\\x27debugLogs\\x27]=!!_0x502e64[\\x27debugLogs\\x27],_0x580ccb[\\x27Logger\\x27][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),\\x27Initializing\\x5cx20WASM\\x5cx20Module\\x27);const\\x20_0x5aaa7c=(0x0,_0x5dc527[_0x41c1c4(0x396)])(_0x502e64[_0x41c1c4(0x211)],this[_0x41c1c4(0x435)][_0x41c1c4(0x776)]);if(!_0x5aaa7c)return\\x20_0x580ccb[_0x41c1c4(0x1fa)][_0x41c1c4(0x26d)](_0x41c1c4(0x3af),_0x41c1c4(0x3f1)+_0x502e64[_0x41c1c4(0x211)]),_0x2dd75d();_0x580ccb[\\x27Logger\\x27][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),\\x27Preparing\\x5cx20model:\\x5cx20\\x27+_0x502e64[_0x41c1c4(0x437)]+\\x27\\x5cx20path:\\x5cx20\\x27+_0x502e64[_0x41c1c4(0x22a)]),this[_0x41c1c4(0x28a)][\\x27addPath\\x27](_0x502e64[_0x41c1c4(0x437)],_0x502e64[_0x41c1c4(0x22a)]);const\\x20_0xefe565=yield\\x20this[\\x27ModelLoader\\x27][_0x41c1c4(0x36c)](this[_0x41c1c4(0x435)],_0x502e64[\\x27modelName\\x27]);this[_0x41c1c4(0x435)][_0x41c1c4(0x3d4)](),_0x580ccb[\\x27Logger\\x27][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),_0x41c1c4(0x5fe)),this[_0x41c1c4(0x435)][_0x41c1c4(0x2e7)](_0xefe565[_0x41c1c4(0x56a)],_0xefe565[_0x41c1c4(0x3b1)],_0x502e64[_0x41c1c4(0x437)]),_0x580ccb[_0x41c1c4(0x1fa)][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),_0x41c1c4(0x434)),this[_0x41c1c4(0x28a)][_0x41c1c4(0x61b)](_0x502e64[_0x41c1c4(0x437)]),this[_0x41c1c4(0x28a)][_0x41c1c4(0x1e0)](this[\\x27WasmModule\\x27],_0xefe565[_0x41c1c4(0x56a)]),_0x580ccb[\\x27Logger\\x27][\\x27info\\x27](_0x41c1c4(0x3af),_0x41c1c4(0x67a));const\\x20_0xd8d5ad=this[\\x27WasmModule\\x27][\\x27KrispAudioFrameDuration\\x27][_0x41c1c4(0x5db)];if(_0x580ccb[_0x41c1c4(0x1fa)][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),_0x41c1c4(0x46d),_0xd8d5ad[_0x41c1c4(0x288)]),this[_0x41c1c4(0x3f4)]=_0xd8d5ad[_0x41c1c4(0x288)]*_0x502e64[_0x41c1c4(0x211)]/0x3e8,_0x580ccb[\\x27Logger\\x27][_0x41c1c4(0x2b9)](_0x41c1c4(0x3af),\\x27WASM\\x5cx20processor\\x5cx20-\\x5cx20chunk\\x5cx20size\\x27,this[\\x27_chunkSize\\x27]),this[_0x41c1c4(0x321)]=this[_0x41c1c4(0x435)][_0x41c1c4(0x456)](_0x5aaa7c,_0x5aaa7c,_0xd8d5ad,_0x502e64[\\x27modelName\\x27]),this[\\x27_heapInputBuffer\\x27]=this[\\x27HeapAudioBuffer\\x27](this[_0x41c1c4(0x435)],this[_0x41c1c4(0x3f4)]),this[_0x41c1c4(0x3dc)]=this[\\x27HeapAudioBuffer\\x27](this[_0x41c1c4(0x435)],this[_0x41c1c4(0x3f4)]),this[_0x41c1c4(0x732)]=!0x0,_0x502e64[_0x41c1c4(0x515)]&&(this[\\x27frameProcessStatistics\\x27]=new\\x20_0x11e3b0[\\x27default\\x27](_0xd8d5ad[_0x41c1c4(0x288)])),!_0x502e64[\\x27useSharedArrayBuffer\\x27]||!_0x502e64[_0x41c1c4(0x665)])return\\x20_0x4ea213();this[_0x41c1c4(0x368)]=_0x502e64[_0x41c1c4(0x665)][_0x41c1c4(0x490)],this[\\x27_sharedInputRingBuffer\\x27]=_0xa0a1c7[_0x41c1c4(0x69d)][_0x41c1c4(0x677)](_0x502e64[_0x41c1c4(0x665)][_0x41c1c4(0x531)]),this[_0x41c1c4(0x6b0)]=_0xa0a1c7[\\x27SharedRingBuffer\\x27][_0x41c1c4(0x677)](_0x502e64[\\x27sharedBuffers\\x27][_0x41c1c4(0x3d9)]),_0x4ea213();}catch(_0x1bf9f8){this[\\x27_logError\\x27](_0x1bf9f8);}});}[_0x25600d(0x6bc)](){var\\x20_0x110a30=_0x25600d;if(this[_0x110a30(0x321)]&&this[_0x110a30(0x368)]&&this[\\x27_sharedInputRingBuffer\\x27]&&this[\\x27_sharedOutputRingBuffer\\x27]){for(;\\x27ok\\x27===Atomics[_0x110a30(0x355)](this[_0x110a30(0x368)],_0x48836f[_0x110a30(0x49c)][_0x110a30(0x61d)],0x0);)this[_0x110a30(0x5e8)](),Atomics[\\x27store\\x27](this[\\x27_state\\x27],_0x48836f[_0x110a30(0x49c)][_0x110a30(0x61d)],0x0);}else\\x20_0x580ccb[\\x27Logger\\x27][_0x110a30(0x26d)](_0x110a30(0x651),_0x110a30(0x3b8));}[_0x25600d(0x5e8)](){var\\x20_0x3ac45b=_0x25600d,_0x356698,_0x154221,_0x45d2c6,_0x487a38;if(this[_0x3ac45b(0x321)]&&this[\\x27_state\\x27]&&this[_0x3ac45b(0x73a)]&&this[_0x3ac45b(0x6b0)])for(;this[\\x27_sharedInputRingBuffer\\x27][_0x3ac45b(0x2a3)]([null===(_0x356698=this[_0x3ac45b(0x6fd)])||void\\x200x0===_0x356698?void\\x200x0:_0x356698[_0x3ac45b(0x508)](0x0)],this[_0x3ac45b(0x3f4)]);){0x0===this[_0x3ac45b(0x435)][\\x27CleanAmbientNoiseFloat\\x27](this[\\x27_sessionId\\x27],null===(_0x154221=this[_0x3ac45b(0x6fd)])||void\\x200x0===_0x154221?void\\x200x0:_0x154221[_0x3ac45b(0x585)](),this[\\x27_chunkSize\\x27],null===(_0x45d2c6=this[\\x27_heapOutputBuffer\\x27])||void\\x200x0===_0x45d2c6?void\\x200x0:_0x45d2c6[_0x3ac45b(0x585)](),this[\\x27_chunkSize\\x27])&&this[_0x3ac45b(0x6b0)][_0x3ac45b(0x3d6)]([null===(_0x487a38=this[_0x3ac45b(0x3dc)])||void\\x200x0===_0x487a38?void\\x200x0:_0x487a38[_0x3ac45b(0x508)](0x0)],this[_0x3ac45b(0x3f4)]);}else\\x20_0x580ccb[\\x27Logger\\x27][_0x3ac45b(0x26d)](_0x3ac45b(0x71b),_0x3ac45b(0x3b8));}[_0x25600d(0x6a4)](_0x47df7f){var\\x20_0x1fd512=_0x25600d;let\\x20_0xdc3e9b;_0xdc3e9b=\\x27number\\x27==typeof\\x20_0x47df7f?this[_0x1fd512(0x435)][\\x27GetExceptionMessage\\x27](_0x47df7f):_0x47df7f[_0x1fd512(0x263)],this[_0x1fd512(0x2fc)]&&_0x580ccb[_0x1fd512(0x1fa)][_0x1fd512(0x26d)](_0x1fd512(0x3ea),_0xdc3e9b);}};},0x63:function(_0xeb5685,_0x588fd1,_0x4ee770){var\\x20_0x2914ad=a1_0x2045,_0x310a09=this&&this[_0x2914ad(0x5e0)]||function(_0x5eac0d){var\\x20_0x3e8b9d=_0x2914ad;return\\x20_0x5eac0d&&_0x5eac0d[_0x3e8b9d(0x32c)]?_0x5eac0d:{\\x27default\\x27:_0x5eac0d};};Object[\\x27defineProperty\\x27](_0x588fd1,_0x2914ad(0x32c),{\\x27value\\x27:!0x0});const\\x20_0xc13662=_0x4ee770(0xdd),_0x426b1d=_0x4ee770(0x198),_0x34255b=_0x310a09(_0x4ee770(0x46)),_0x142bb0=_0x310a09(_0x4ee770(0x222)),_0x2025c7=_0x4ee770(0x2ce);_0x588fd1[\\x27default\\x27]=class{constructor(_0x304733,_0x319376){var\\x20_0x816df5=_0x2914ad;this[\\x27workletPort\\x27]=_0x304733,this[_0x816df5(0x77b)]=_0x319376,this[_0x816df5(0x1db)]=new\\x20_0x34255b[\\x27default\\x27](_0x142bb0[_0x816df5(0x5af)],new\\x20_0xc13662[(_0x816df5(0x28a))](),_0x426b1d[_0x816df5(0x227)],this[_0x816df5(0x3db)][\\x27bind\\x27](this)),_0x2025c7[\\x27Logger\\x27][_0x816df5(0x586)](_0x319376[_0x816df5(0x2fc)]),self[_0x816df5(0x6d8)]=this[\\x27onMessage\\x27][_0x816df5(0x1b9)](this),_0x304733&&(_0x304733[\\x27onmessage\\x27]=this[_0x816df5(0x606)][_0x816df5(0x1b9)](this)),this[_0x816df5(0x1db)][\\x27initWasm\\x27](this[\\x27options\\x27],this[_0x816df5(0x27b)][\\x27bind\\x27](this),this[_0x816df5(0x1fc)][_0x816df5(0x1b9)](this));}get[_0x2914ad(0x2fc)](){var\\x20_0x375841=_0x2914ad;return\\x20this[_0x375841(0x77b)][\\x27debugLogs\\x27];}get[_0x2914ad(0x1f1)](){var\\x20_0x3a736b=_0x2914ad;return\\x20this[_0x3a736b(0x77b)][\\x27useSharedArrayBuffer\\x27];}[\\x27onMessage\\x27](_0x343397){var\\x20_0x2f1aca=_0x2914ad;return\\x20_0x2f1aca(0x3f7)===_0x343397[_0x2f1aca(0x280)][\\x27event\\x27]?this[_0x2f1aca(0x1db)][_0x2f1aca(0x482)](_0x343397[\\x27data\\x27][\\x27data\\x27]):_0x2f1aca(0x2fa)===_0x343397[_0x2f1aca(0x280)][\\x27event\\x27]?this[\\x27processor\\x27][_0x2f1aca(0x5e8)]():_0x2f1aca(0x33c)===_0x343397[_0x2f1aca(0x280)][\\x27event\\x27]?self[_0x2f1aca(0x3e5)](_0x343397[_0x2f1aca(0x280)]):this[\\x27workletPort\\x27]?this[\\x27workletPort\\x27][_0x2f1aca(0x3e5)](_0x343397[_0x2f1aca(0x280)]):void\\x20_0x2025c7[_0x2f1aca(0x1fa)][\\x27warn\\x27](_0x2f1aca(0x537),_0x343397);}[_0x2914ad(0x27b)](){var\\x20_0x2601ea=_0x2914ad;this[\\x27debugLogs\\x27]&&_0x2025c7[_0x2601ea(0x1fa)][\\x27info\\x27](_0x2601ea(0x4da),_0x2601ea(0x504)),self[_0x2601ea(0x3e5)]({\\x27event\\x27:_0x2601ea(0x2b8),\\x27data\\x27:!0x0}),this[\\x27useSharedArrayBuffer\\x27]&&(this[_0x2601ea(0x2fc)]&&_0x2025c7[\\x27Logger\\x27][_0x2601ea(0x2b9)](_0x2601ea(0x4da),_0x2601ea(0x3c7)),this[_0x2601ea(0x1db)][_0x2601ea(0x6bc)]());}[_0x2914ad(0x3db)](_0x1b59df){var\\x20_0x432462=_0x2914ad,_0x4cff4e;null===(_0x4cff4e=this[_0x432462(0x58f)])||void\\x200x0===_0x4cff4e||_0x4cff4e[_0x432462(0x3e5)]({\\x27event\\x27:_0x432462(0x685),\\x27data\\x27:_0x1b59df},[_0x1b59df[_0x432462(0x6d3)]]);}[_0x2914ad(0x1fc)](){var\\x20_0x1f338d=_0x2914ad;_0x2025c7[_0x1f338d(0x1fa)][_0x1f338d(0x26d)](\\x27WorkerProcessor:onWasmProcessorErrorCB\\x27,_0x1f338d(0x26d));}[\\x27onWasmModuleInitialized\\x27](){var\\x20_0x545f91=_0x2914ad;_0x2025c7[_0x545f91(0x1fa)][_0x545f91(0x1f6)](_0x545f91(0x757),_0x545f91(0x1b4));}};},0x222:(_0x3a5274,_0x51194b,_0x5f3181)=>{var\\x20_0x29789b=a1_0x2045;_0x5f3181[\\x27r\\x27](_0x51194b),_0x5f3181[\\x27d\\x27](_0x51194b,{\\x27default\\x27:()=>_0x935bdf});var\\x20_0xacfddc=void\\x200x0!==_0xacfddc?_0xacfddc:{},_0x406267=Object[\\x27assign\\x27]({},_0xacfddc),_0x49088e=[],_0x57219c=_0x29789b(0x225),_0x3ec98c=(_0x216a74,_0x25b523)=>{throw\\x20_0x25b523;},_0x223587=\\x27object\\x27==typeof\\x20window,_0x566a52=_0x29789b(0x3b0)==typeof\\x20importScripts,_0x267bb1=_0x29789b(0x556)==typeof\\x20process&&\\x27object\\x27==typeof\\x20process[\\x27versions\\x27]&&_0x29789b(0x2c4)==typeof\\x20process[_0x29789b(0x213)][_0x29789b(0x1c4)],_0xeada47=!_0x223587&&!_0x267bb1&&!_0x566a52;if(_0xacfddc[_0x29789b(0x6cd)])throw\\x20new\\x20Error(\\x27Module.ENVIRONMENT\\x5cx20has\\x5cx20been\\x5cx20deprecated.\\x5cx20To\\x5cx20force\\x5cx20the\\x5cx20environment,\\x5cx20use\\x5cx20the\\x5cx20ENVIRONMENT\\x5cx20compile-time\\x5cx20option\\x5cx20(for\\x5cx20example,\\x5cx20-sENVIRONMENT=web\\x5cx20or\\x5cx20-sENVIRONMENT=node)\\x27);var\\x20_0x912184,_0x2977b1,_0x517fce,_0x1df873=\\x27\\x27;if(_0xeada47){if(_0x29789b(0x556)==typeof\\x20process||_0x29789b(0x556)==typeof\\x20window||_0x29789b(0x3b0)==typeof\\x20importScripts)throw\\x20new\\x20Error(\\x27not\\x5cx20compiled\\x5cx20for\\x5cx20this\\x5cx20environment\\x5cx20(did\\x5cx20you\\x5cx20build\\x5cx20to\\x5cx20HTML\\x5cx20and\\x5cx20try\\x5cx20to\\x5cx20run\\x5cx20it\\x5cx20not\\x5cx20on\\x5cx20the\\x5cx20web,\\x5cx20or\\x5cx20set\\x5cx20ENVIRONMENT\\x5cx20to\\x5cx20something\\x5cx20-\\x5cx20like\\x5cx20node\\x5cx20-\\x5cx20and\\x5cx20run\\x5cx20it\\x5cx20someplace\\x5cx20else\\x5cx20-\\x5cx20like\\x5cx20on\\x5cx20the\\x5cx20web?)\\x27);_0x29789b(0x729)!=typeof\\x20read&&(_0x912184=function(_0x54b26c){const\\x20_0x4e0500=_0x32d3d2(_0x54b26c);return\\x20_0x4e0500?_0x339d47(_0x4e0500):read(_0x54b26c);}),_0x517fce=function(_0x2ff8c6){var\\x20_0xac80ff=_0x29789b;let\\x20_0x4b9d2e;return\\x20_0x4b9d2e=_0x32d3d2(_0x2ff8c6),_0x4b9d2e||(\\x27function\\x27==typeof\\x20readbuffer?new\\x20Uint8Array(readbuffer(_0x2ff8c6)):(_0x4b9d2e=read(_0x2ff8c6,_0xac80ff(0x3b4)),_0x299bd7(_0xac80ff(0x556)==typeof\\x20_0x4b9d2e),_0x4b9d2e));},_0x2977b1=function(_0x5a2a88,_0x1db997,_0x673193){setTimeout(()=>_0x1db997(_0x517fce(_0x5a2a88)),0x0);},_0x29789b(0x729)!=typeof\\x20scriptArgs?_0x49088e=scriptArgs:_0x29789b(0x729)!=typeof\\x20arguments&&(_0x49088e=arguments),\\x27function\\x27==typeof\\x20quit&&(_0x3ec98c=(_0x2ac1cc,_0x46b7d5)=>{!function(_0x46ba72){var\\x20_0x2c65d7=a1_0x2045;if(_0x46ba72\\x20instanceof\\x20_0x502c8e)return;let\\x20_0x4e51b6=_0x46ba72;_0x46ba72&&_0x2c65d7(0x556)==typeof\\x20_0x46ba72&&_0x46ba72[\\x27stack\\x27]&&(_0x4e51b6=[_0x46ba72,_0x46ba72[_0x2c65d7(0x2b4)]]),_0x5528a8(_0x2c65d7(0x6a2)+_0x4e51b6);}(_0x46b7d5),quit(_0x2ac1cc);}),_0x29789b(0x729)!=typeof\\x20print&&(_0x29789b(0x729)==typeof\\x20console&&(console={}),console[\\x27log\\x27]=print,console[_0x29789b(0x5a2)]=console[_0x29789b(0x26d)]=_0x29789b(0x729)!=typeof\\x20printErr?printErr:print);}else{if(!_0x223587&&!_0x566a52)throw\\x20new\\x20Error(_0x29789b(0x1d8));if(_0x566a52?_0x1df873=self[\\x27location\\x27][\\x27href\\x27]:_0x29789b(0x729)!=typeof\\x20document&&document[_0x29789b(0x444)]&&(_0x1df873=document[_0x29789b(0x444)][_0x29789b(0x4f7)]),_0x1df873=0x0!==_0x1df873[_0x29789b(0x292)](_0x29789b(0x642))?_0x1df873[\\x27substr\\x27](0x0,_0x1df873[\\x27replace\\x27](/[?#].*/,\\x27\\x27)[_0x29789b(0x6b5)](\\x27/\\x27)+0x1):\\x27\\x27,_0x29789b(0x556)!=typeof\\x20window&&_0x29789b(0x3b0)!=typeof\\x20importScripts)throw\\x20new\\x20Error(\\x27not\\x5cx20compiled\\x5cx20for\\x5cx20this\\x5cx20environment\\x5cx20(did\\x5cx20you\\x5cx20build\\x5cx20to\\x5cx20HTML\\x5cx20and\\x5cx20try\\x5cx20to\\x5cx20run\\x5cx20it\\x5cx20not\\x5cx20on\\x5cx20the\\x5cx20web,\\x5cx20or\\x5cx20set\\x5cx20ENVIRONMENT\\x5cx20to\\x5cx20something\\x5cx20-\\x5cx20like\\x5cx20node\\x5cx20-\\x5cx20and\\x5cx20run\\x5cx20it\\x5cx20someplace\\x5cx20else\\x5cx20-\\x5cx20like\\x5cx20on\\x5cx20the\\x5cx20web?)\\x27);_0x912184=_0x4a2437=>{var\\x20_0x405375=_0x29789b;try{var\\x20_0xa5c182=new\\x20XMLHttpRequest();return\\x20_0xa5c182[_0x405375(0x3a0)](_0x405375(0x2ff),_0x4a2437,!0x1),_0xa5c182[\\x27send\\x27](null),_0xa5c182[_0x405375(0x407)];}catch(_0x46f908){var\\x20_0x59c7e3=_0x32d3d2(_0x4a2437);if(_0x59c7e3)return\\x20_0x339d47(_0x59c7e3);throw\\x20_0x46f908;}},_0x566a52&&(_0x517fce=_0x11e1f4=>{var\\x20_0x338d50=_0x29789b;try{var\\x20_0x964208=new\\x20XMLHttpRequest();return\\x20_0x964208[_0x338d50(0x3a0)](\\x27GET\\x27,_0x11e1f4,!0x1),_0x964208[\\x27responseType\\x27]=_0x338d50(0x420),_0x964208[_0x338d50(0x5bd)](null),new\\x20Uint8Array(_0x964208[\\x27response\\x27]);}catch(_0x40638e){var\\x20_0x55a1f8=_0x32d3d2(_0x11e1f4);if(_0x55a1f8)return\\x20_0x55a1f8;throw\\x20_0x40638e;}}),_0x2977b1=(_0x1fbae7,_0x5129a8,_0x107d3f)=>{var\\x20_0xa2fc85=_0x29789b,_0x3ce968=new\\x20XMLHttpRequest();_0x3ce968[\\x27open\\x27](\\x27GET\\x27,_0x1fbae7,!0x0),_0x3ce968[_0xa2fc85(0x737)]=_0xa2fc85(0x420),_0x3ce968[\\x27onload\\x27]=()=>{var\\x20_0x4b271d=_0xa2fc85;if(0xc8==_0x3ce968[_0x4b271d(0x1d0)]||0x0==_0x3ce968[\\x27status\\x27]&&_0x3ce968[_0x4b271d(0x541)])_0x5129a8(_0x3ce968[_0x4b271d(0x541)]);else{var\\x20_0x612aba=_0x32d3d2(_0x1fbae7);_0x612aba?_0x5129a8(_0x612aba[_0x4b271d(0x6d3)]):_0x107d3f();}},_0x3ce968[\\x27onerror\\x27]=_0x107d3f,_0x3ce968[_0xa2fc85(0x5bd)](null);},_0x338f40=>document[_0x29789b(0x73d)]=_0x338f40;}var\\x20_0xa82d09,_0x588b31=_0xacfddc[_0x29789b(0x6c5)]||console[_0x29789b(0x1f6)][\\x27bind\\x27](console),_0x5528a8=_0xacfddc[_0x29789b(0x51d)]||console[_0x29789b(0x5a2)][_0x29789b(0x1b9)](console);Object[\\x27assign\\x27](_0xacfddc,_0x406267),_0x406267=null,_0xa82d09=\\x27fetchSettings\\x27,Object[_0x29789b(0x574)](_0xacfddc,_0xa82d09)&&_0x12d2c9(_0x29789b(0x552)+_0xa82d09+_0x29789b(0x244)+_0xa82d09+_0x29789b(0x61f)),_0xacfddc[\\x27arguments\\x27]&&(_0x49088e=_0xacfddc[\\x27arguments\\x27]),_0x212c3f(_0x29789b(0x5df),_0x29789b(0x2a8)),_0xacfddc[_0x29789b(0x3b3)]&&(_0x57219c=_0xacfddc[_0x29789b(0x3b3)]),_0x212c3f(\\x27thisProgram\\x27,_0x29789b(0x3b3)),_0xacfddc[_0x29789b(0x75e)]&&(_0x3ec98c=_0xacfddc[_0x29789b(0x75e)]),_0x212c3f(_0x29789b(0x75e),_0x29789b(0x2fe)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x646)],_0x29789b(0x37d)),_0x299bd7(void\\x200x0===_0xacfddc[\\x27pthreadMainPrefixURL\\x27],_0x29789b(0x2f3)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x41b)],_0x29789b(0x529)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x664)],\\x27Module.filePackagePrefixURL\\x5cx20option\\x5cx20was\\x5cx20removed,\\x5cx20use\\x5cx20Module.locateFile\\x5cx20instead\\x27),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x765)],_0x29789b(0x3d2)),_0x299bd7(void\\x200x0===_0xacfddc[\\x27readAsync\\x27],_0x29789b(0x2d4)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x3ad)],_0x29789b(0x42b)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x3ff)],_0x29789b(0x2ac)),_0x299bd7(void\\x200x0===_0xacfddc[_0x29789b(0x53a)],_0x29789b(0x1c1)),_0x212c3f(_0x29789b(0x765),_0x29789b(0x2f6)),_0x212c3f(_0x29789b(0x503),_0x29789b(0x503)),_0x212c3f(\\x27readBinary\\x27,_0x29789b(0x3ad)),_0x212c3f(_0x29789b(0x3ff),\\x27setWindowTitle\\x27),(_0x299bd7(!_0x267bb1,_0x29789b(0x741)),_0x299bd7(!_0xeada47,_0x29789b(0x738)));var\\x20_0x6c6d20;function\\x20_0x212c3f(_0x2f371a,_0x689477){var\\x20_0x2bfaa0=_0x29789b;Object[_0x2bfaa0(0x574)](_0xacfddc,_0x2f371a)||Object[_0x2bfaa0(0x668)](_0xacfddc,_0x2f371a,{\\x27configurable\\x27:!0x0,\\x27get\\x27:function(){var\\x20_0x22c8db=_0x2bfaa0;_0x12d2c9(_0x22c8db(0x53f)+_0x2f371a+\\x27\\x5cx20has\\x5cx20been\\x5cx20replaced\\x5cx20with\\x5cx20plain\\x5cx20\\x27+_0x689477+\\x27\\x5cx20(the\\x5cx20initial\\x5cx20value\\x5cx20can\\x5cx20be\\x5cx20provided\\x5cx20on\\x5cx20Module,\\x5cx20but\\x5cx20after\\x5cx20startup\\x5cx20the\\x5cx20value\\x5cx20is\\x5cx20only\\x5cx20looked\\x5cx20for\\x5cx20on\\x5cx20a\\x5cx20local\\x5cx20variable\\x5cx20of\\x5cx20that\\x5cx20name)\\x27);}});}function\\x20_0x1e7451(_0xc08215){var\\x20_0x2a7763=_0x29789b;return\\x27FS_createPath\\x27===_0xc08215||_0x2a7763(0x54c)===_0xc08215||_0x2a7763(0x26e)===_0xc08215||_0x2a7763(0x6a1)===_0xc08215||_0x2a7763(0x5c1)===_0xc08215||_0x2a7763(0x591)===_0xc08215||_0x2a7763(0x50c)===_0xc08215||_0x2a7763(0x514)===_0xc08215;}_0xacfddc[_0x29789b(0x2f1)]&&(_0x6c6d20=_0xacfddc[\\x27wasmBinary\\x27]),_0x212c3f(_0x29789b(0x2f1),_0x29789b(0x2f1));var\\x20_0x39da9c,_0x20af7c=_0xacfddc[\\x27noExitRuntime\\x27]||!0x0;_0x212c3f(\\x27noExitRuntime\\x27,\\x27noExitRuntime\\x27),\\x27object\\x27!=typeof\\x20WebAssembly&&_0x12d2c9(\\x27no\\x5cx20native\\x5cx20wasm\\x5cx20support\\x5cx20detected\\x27);var\\x20_0x5ce334=!0x1;function\\x20_0x299bd7(_0x5c4db2,_0x3638ab){var\\x20_0xf7a33a=_0x29789b;_0x5c4db2||_0x12d2c9(_0xf7a33a(0x343)+(_0x3638ab?\\x27:\\x5cx20\\x27+_0x3638ab:\\x27\\x27));}var\\x20_0x1e6a4d,_0x58a58e,_0x55c3f0,_0xaac725,_0x16edf7,_0x2b3c8c,_0x452739,_0x40c025,_0x44f02e,_0xdd050=_0x29789b(0x729)!=typeof\\x20TextDecoder?new\\x20TextDecoder(_0x29789b(0x691)):void\\x200x0;function\\x20_0x364e81(_0x335c5e,_0x5373ae,_0x461e5e){var\\x20_0x56e30e=_0x29789b;for(var\\x20_0x356b41=_0x5373ae+_0x461e5e,_0x13a457=_0x5373ae;_0x335c5e[_0x13a457]&&!(_0x13a457>=_0x356b41);)++_0x13a457;if(_0x13a457-_0x5373ae>0x10&&_0x335c5e[_0x56e30e(0x6d3)]&&_0xdd050)return\\x20_0xdd050[_0x56e30e(0x6d0)](_0x335c5e[_0x56e30e(0x1e1)](_0x5373ae,_0x13a457));for(var\\x20_0x33c54a=\\x27\\x27;_0x5373ae<_0x13a457;){var\\x20_0x1145d3=_0x335c5e[_0x5373ae++];if(0x80&_0x1145d3){var\\x20_0x35ef27=0x3f&_0x335c5e[_0x5373ae++];if(0xc0!=(0xe0&_0x1145d3)){var\\x20_0x54b5dd=0x3f&_0x335c5e[_0x5373ae++];if(0xe0==(0xf0&_0x1145d3)?_0x1145d3=(0xf&_0x1145d3)<<0xc|_0x35ef27<<0x6|_0x54b5dd:(0xf0!=(0xf8&_0x1145d3)&&_0x953362(_0x56e30e(0x325)+_0x54e323(_0x1145d3)+_0x56e30e(0x1d1)),_0x1145d3=(0x7&_0x1145d3)<<0x12|_0x35ef27<<0xc|_0x54b5dd<<0x6|0x3f&_0x335c5e[_0x5373ae++]),_0x1145d3<0x10000)_0x33c54a+=String[\\x27fromCharCode\\x27](_0x1145d3);else{var\\x20_0x4d1720=_0x1145d3-0x10000;_0x33c54a+=String[_0x56e30e(0x386)](0xd800|_0x4d1720>>0xa,0xdc00|0x3ff&_0x4d1720);}}else\\x20_0x33c54a+=String[\\x27fromCharCode\\x27]((0x1f&_0x1145d3)<<0x6|_0x35ef27);}else\\x20_0x33c54a+=String[_0x56e30e(0x386)](_0x1145d3);}return\\x20_0x33c54a;}function\\x20_0x27b5df(_0x3d46b7,_0x42d2fe){return\\x20_0x3d46b7?_0x364e81(_0x55c3f0,_0x3d46b7,_0x42d2fe):\\x27\\x27;}function\\x20_0x61798c(_0x2433b8,_0x5d557e,_0x385510,_0x2407a3){var\\x20_0x153937=_0x29789b;if(!(_0x2407a3>0x0))return\\x200x0;for(var\\x20_0x547459=_0x385510,_0x3c8283=_0x385510+_0x2407a3-0x1,_0xf8aeaf=0x0;_0xf8aeaf<_0x2433b8[_0x153937(0x479)];++_0xf8aeaf){var\\x20_0xb2834b=_0x2433b8[_0x153937(0x749)](_0xf8aeaf);if(_0xb2834b>=0xd800&&_0xb2834b<=0xdfff)_0xb2834b=0x10000+((0x3ff&_0xb2834b)<<0xa)|0x3ff&_0x2433b8[_0x153937(0x749)](++_0xf8aeaf);if(_0xb2834b<=0x7f){if(_0x385510>=_0x3c8283)break;_0x5d557e[_0x385510++]=_0xb2834b;}else{if(_0xb2834b<=0x7ff){if(_0x385510+0x1>=_0x3c8283)break;_0x5d557e[_0x385510++]=0xc0|_0xb2834b>>0x6,_0x5d557e[_0x385510++]=0x80|0x3f&_0xb2834b;}else{if(_0xb2834b<=0xffff){if(_0x385510+0x2>=_0x3c8283)break;_0x5d557e[_0x385510++]=0xe0|_0xb2834b>>0xc,_0x5d557e[_0x385510++]=0x80|_0xb2834b>>0x6&0x3f,_0x5d557e[_0x385510++]=0x80|0x3f&_0xb2834b;}else{if(_0x385510+0x3>=_0x3c8283)break;_0xb2834b>0x10ffff&&_0x953362(\\x27Invalid\\x5cx20Unicode\\x5cx20code\\x5cx20point\\x5cx20\\x27+_0x54e323(_0xb2834b)+_0x153937(0x5fb)),_0x5d557e[_0x385510++]=0xf0|_0xb2834b>>0x12,_0x5d557e[_0x385510++]=0x80|_0xb2834b>>0xc&0x3f,_0x5d557e[_0x385510++]=0x80|_0xb2834b>>0x6&0x3f,_0x5d557e[_0x385510++]=0x80|0x3f&_0xb2834b;}}}}return\\x20_0x5d557e[_0x385510]=0x0,_0x385510-_0x547459;}function\\x20_0x3dd374(_0x204df0){var\\x20_0x78b3e0=_0x29789b;for(var\\x20_0xf0e053=0x0,_0xba3266=0x0;_0xba3266<_0x204df0[_0x78b3e0(0x479)];++_0xba3266){var\\x20_0x26185f=_0x204df0[_0x78b3e0(0x749)](_0xba3266);_0x26185f<=0x7f?_0xf0e053++:_0x26185f<=0x7ff?_0xf0e053+=0x2:_0x26185f>=0xd800&&_0x26185f<=0xdfff?(_0xf0e053+=0x4,++_0xba3266):_0xf0e053+=0x3;}return\\x20_0xf0e053;}function\\x20_0x36306f(_0x27c36a){var\\x20_0x547d78=_0x29789b;_0x1e6a4d=_0x27c36a,_0xacfddc[_0x547d78(0x424)]=_0x58a58e=new\\x20Int8Array(_0x27c36a),_0xacfddc[\\x27HEAP16\\x27]=_0xaac725=new\\x20Int16Array(_0x27c36a),_0xacfddc[_0x547d78(0x408)]=_0x2b3c8c=new\\x20Int32Array(_0x27c36a),_0xacfddc[_0x547d78(0x57d)]=_0x55c3f0=new\\x20Uint8Array(_0x27c36a),_0xacfddc[_0x547d78(0x5c7)]=_0x16edf7=new\\x20Uint16Array(_0x27c36a),_0xacfddc[_0x547d78(0x62e)]=_0x452739=new\\x20Uint32Array(_0x27c36a),_0xacfddc[\\x27HEAPF32\\x27]=_0x40c025=new\\x20Float32Array(_0x27c36a),_0xacfddc[_0x547d78(0x726)]=_0x44f02e=new\\x20Float64Array(_0x27c36a);}var\\x20_0x281071=0x10000;_0xacfddc[_0x29789b(0x3a5)]&&_0x299bd7(_0x281071===_0xacfddc[_0x29789b(0x3a5)],_0x29789b(0x214));var\\x20_0xa956a9,_0x56de46=_0xacfddc[\\x27INITIAL_MEMORY\\x27]||0x4000000;function\\x20_0x6cc8de(){var\\x20_0x577a5e=_0x29789b;if(!_0x5ce334){var\\x20_0x4a603f=_0x4aafc9();0x0==_0x4a603f&&(_0x4a603f+=0x4);var\\x20_0x41da0f=_0x452739[_0x4a603f>>0x2],_0x235abe=_0x452739[_0x4a603f+0x4>>0x2];0x2135467==_0x41da0f&&0x89bacdfe==_0x235abe||_0x12d2c9(_0x577a5e(0x6a5)+_0x54e323(_0x4a603f)+_0x577a5e(0x533)+_0x54e323(_0x235abe)+\\x27\\x5cx20\\x27+_0x54e323(_0x41da0f)),0x63736d65!==_0x452739[0x0]&&_0x12d2c9(_0x577a5e(0x358));}}_0x212c3f(_0x29789b(0x33b),\\x27INITIAL_MEMORY\\x27),_0x299bd7(_0x56de46>=_0x281071,_0x29789b(0x618)+_0x56de46+_0x29789b(0x369)+_0x281071+\\x27)\\x27),_0x299bd7(_0x29789b(0x729)!=typeof\\x20Int32Array&&\\x27undefined\\x27!=typeof\\x20Float64Array&&null!=Int32Array[_0x29789b(0x4c4)][_0x29789b(0x1e1)]&&null!=Int32Array[_0x29789b(0x4c4)][_0x29789b(0x6a6)],\\x27JS\\x5cx20engine\\x5cx20does\\x5cx20not\\x5cx20provide\\x5cx20full\\x5cx20typed\\x5cx20array\\x5cx20support\\x27),_0x299bd7(!_0xacfddc[_0x29789b(0x5cc)],_0x29789b(0x77e)),_0x299bd7(0x4000000==_0x56de46,_0x29789b(0x2d5)),(function(){var\\x20_0x34aa59=_0x29789b,_0x5f3066=new\\x20Int16Array(0x1),_0x39d5f1=new\\x20Int8Array(_0x5f3066[\\x27buffer\\x27]);if(_0x5f3066[0x0]=0x6373,0x73!==_0x39d5f1[0x0]||0x63!==_0x39d5f1[0x1])throw\\x20_0x34aa59(0x344);}());var\\x20_0x2a6839=[],_0x307683=[],_0x244dc2=[],_0x36dfa9=!0x1;function\\x20_0x5dd7d1(){return\\x20_0x20af7c;}_0x299bd7(Math[_0x29789b(0x233)],\\x27This\\x5cx20browser\\x5cx20does\\x5cx20not\\x5cx20support\\x5cx20Math.imul(),\\x5cx20build\\x5cx20with\\x5cx20LEGACY_VM_SUPPORT\\x5cx20or\\x5cx20POLYFILL_OLD_MATH_FUNCTIONS\\x5cx20to\\x5cx20add\\x5cx20in\\x5cx20a\\x5cx20polyfill\\x27),_0x299bd7(Math[_0x29789b(0x702)],_0x29789b(0x1d9)),_0x299bd7(Math[_0x29789b(0x26a)],_0x29789b(0x703)),_0x299bd7(Math[_0x29789b(0x243)],_0x29789b(0x62d));var\\x20_0x444f55=0x0,_0x162013=null,_0x1a49de=null,_0x4cb580={};function\\x20_0x4e2408(_0x59d851){for(var\\x20_0x20e1f5=_0x59d851;;){if(!_0x4cb580[_0x59d851])return\\x20_0x59d851;_0x59d851=_0x20e1f5+Math[\\x27random\\x27]();}}function\\x20_0x5e02a4(_0x3b1702){var\\x20_0x36b6ea=_0x29789b;_0x444f55++,_0xacfddc[_0x36b6ea(0x4b5)]&&_0xacfddc[_0x36b6ea(0x4b5)](_0x444f55),_0x3b1702?(_0x299bd7(!_0x4cb580[_0x3b1702]),_0x4cb580[_0x3b1702]=0x1,null===_0x162013&&_0x36b6ea(0x729)!=typeof\\x20setInterval&&(_0x162013=setInterval(function(){var\\x20_0x160125=_0x36b6ea;if(_0x5ce334)return\\x20clearInterval(_0x162013),void(_0x162013=null);var\\x20_0x1b1b79=!0x1;for(var\\x20_0x1edc6c\\x20in\\x20_0x4cb580)_0x1b1b79||(_0x1b1b79=!0x0,_0x5528a8(\\x27still\\x5cx20waiting\\x5cx20on\\x5cx20run\\x5cx20dependencies:\\x27)),_0x5528a8(_0x160125(0x66d)+_0x1edc6c);_0x1b1b79&&_0x5528a8(_0x160125(0x1d5));},0x2710))):_0x5528a8(_0x36b6ea(0x447));}function\\x20_0x2b8f55(_0x4c1155){var\\x20_0x5ee4bc=_0x29789b;if(_0x444f55--,_0xacfddc[_0x5ee4bc(0x4b5)]&&_0xacfddc[_0x5ee4bc(0x4b5)](_0x444f55),_0x4c1155?(_0x299bd7(_0x4cb580[_0x4c1155]),delete\\x20_0x4cb580[_0x4c1155]):_0x5528a8(_0x5ee4bc(0x47f)),0x0==_0x444f55&&(null!==_0x162013&&(clearInterval(_0x162013),_0x162013=null),_0x1a49de)){var\\x20_0xe0020d=_0x1a49de;_0x1a49de=null,_0xe0020d();}}function\\x20_0x12d2c9(_0x25ac13){var\\x20_0x3416c3=_0x29789b;throw\\x20_0xacfddc[\\x27onAbort\\x27]&&_0xacfddc[_0x3416c3(0x453)](_0x25ac13),_0x5528a8(_0x25ac13=_0x3416c3(0x2bb)+_0x25ac13+\\x27)\\x27),_0x5ce334=!0x0,0x1,new\\x20WebAssembly[\\x27RuntimeError\\x27](_0x25ac13);}var\\x20_0x34e56f,_0x511441,_0x573dd4,_0x5cdf2c,_0x213286=\\x27data:application/octet-stream;base64,\\x27;function\\x20_0x35e413(_0x3328ae){var\\x20_0x453d44=_0x29789b;return\\x20_0x3328ae[_0x453d44(0x3e4)](_0x213286);}function\\x20_0x549ff5(_0x252038,_0x2506fd){return\\x20function(){var\\x20_0x15030e=a1_0x2045,_0x4693d3=_0x252038,_0x579c04=_0x2506fd;return\\x20_0x2506fd||(_0x579c04=_0xacfddc[\\x27asm\\x27]),_0x299bd7(_0x36dfa9,_0x15030e(0x511)+_0x4693d3+\\x27`\\x5cx20called\\x5cx20before\\x5cx20runtime\\x5cx20initialization\\x27),_0x579c04[_0x252038]||_0x299bd7(_0x579c04[_0x252038],_0x15030e(0x5c2)+_0x4693d3+\\x27`\\x5cx20not\\x5cx20found\\x27),_0x579c04[_0x252038][_0x15030e(0x324)](null,arguments);};}function\\x20_0x476077(_0x3b7333){var\\x20_0x1ab3b3=_0x29789b;try{if(_0x3b7333==_0x34e56f&&_0x6c6d20)return\\x20new\\x20Uint8Array(_0x6c6d20);var\\x20_0x300cd0=_0x32d3d2(_0x3b7333);if(_0x300cd0)return\\x20_0x300cd0;if(_0x517fce)return\\x20_0x517fce(_0x3b7333);throw\\x20_0x1ab3b3(0x4b4);}catch(_0x23f84d){_0x12d2c9(_0x23f84d);}}function\\x20_0x502c8e(_0x4d25ca){var\\x20_0x1745f3=_0x29789b;this[_0x1745f3(0x2e3)]=\\x27ExitStatus\\x27,this[\\x27message\\x27]=_0x1745f3(0x5be)+_0x4d25ca+\\x27)\\x27,this[\\x27status\\x27]=_0x4d25ca;}function\\x20_0x24a6de(_0x241ea4){var\\x20_0x41945a=_0x29789b;for(;_0x241ea4[_0x41945a(0x479)]>0x0;)_0x241ea4[_0x41945a(0x24b)]()(_0xacfddc);}function\\x20_0x339d47(_0x1606aa){var\\x20_0x5f6520=_0x29789b;for(var\\x20_0x1c5559=[],_0x48f33a=0x0;_0x48f33a<_0x1606aa[\\x27length\\x27];_0x48f33a++){var\\x20_0x3f4009=_0x1606aa[_0x48f33a];_0x3f4009>0xff&&(_0xc7d78b&&_0x299bd7(!0x1,_0x5f6520(0x3e6)+_0x3f4009+\\x27\\x5cx20(\\x27+String[_0x5f6520(0x386)](_0x3f4009)+\\x27)\\x5cx20\\x5cx20at\\x5cx20offset\\x5cx20\\x27+_0x48f33a+_0x5f6520(0x4ad)),_0x3f4009&=0xff),_0x1c5559[_0x5f6520(0x3d6)](String[_0x5f6520(0x386)](_0x3f4009));}return\\x20_0x1c5559[_0x5f6520(0x2e4)](\\x27\\x27);}function\\x20_0x54e323(_0x24d99d){var\\x20_0x38b356=_0x29789b;return\\x20_0x299bd7(_0x38b356(0x260)==typeof\\x20_0x24d99d),\\x270x\\x27+_0x24d99d[_0x38b356(0x4ff)](0x10)[\\x27padStart\\x27](0x8,\\x270\\x27);}function\\x20_0x953362(_0x1393fd){var\\x20_0x41bea0=_0x29789b;_0x953362[_0x41bea0(0x750)]||(_0x953362[_0x41bea0(0x750)]={}),_0x953362[_0x41bea0(0x750)][_0x1393fd]||(_0x953362[_0x41bea0(0x750)][_0x1393fd]=0x1,_0x5528a8(_0x1393fd));}_0x35e413(_0x34e56f=_0x29789b(0x5da))||(_0x511441=_0x34e56f,_0x34e56f=_0xacfddc[_0x29789b(0x6e1)]?_0xacfddc[_0x29789b(0x6e1)](_0x511441,_0x1df873):_0x1df873+_0x511441);var\\x20_0x4b1659=[],_0x592274=0x0,_0x5daf4d=0x0,_0x4f3070=[];function\\x20_0x31a64f(_0x48854e){var\\x20_0x5d7bd5=_0x29789b,_0x18e1c3=_0x4f3070[_0x48854e];return\\x20_0x18e1c3||(_0x48854e>=_0x4f3070[\\x27length\\x27]&&(_0x4f3070[_0x5d7bd5(0x479)]=_0x48854e+0x1),_0x4f3070[_0x48854e]=_0x18e1c3=_0xa956a9[_0x5d7bd5(0x528)](_0x48854e)),_0x299bd7(_0xa956a9[_0x5d7bd5(0x528)](_0x48854e)==_0x18e1c3,_0x5d7bd5(0x4d1)),_0x18e1c3;}function\\x20_0x308d30(_0x91f0f9){var\\x20_0x28239b=_0x29789b;this[_0x28239b(0x3f8)]=_0x91f0f9,this[_0x28239b(0x519)]=_0x91f0f9-0x18,this[_0x28239b(0x40f)]=function(_0x21e22f){var\\x20_0x2ceec4=_0x28239b;_0x452739[this[_0x2ceec4(0x519)]+0x4>>0x2]=_0x21e22f;},this[\\x27get_type\\x27]=function(){var\\x20_0x18d549=_0x28239b;return\\x20_0x452739[this[_0x18d549(0x519)]+0x4>>0x2];},this[_0x28239b(0x39c)]=function(_0x1f1e0a){var\\x20_0x353cf1=_0x28239b;_0x452739[this[_0x353cf1(0x519)]+0x8>>0x2]=_0x1f1e0a;},this[_0x28239b(0x45b)]=function(){var\\x20_0x48e81f=_0x28239b;return\\x20_0x452739[this[_0x48e81f(0x519)]+0x8>>0x2];},this[_0x28239b(0x2cb)]=function(_0x32d2c3){var\\x20_0x365747=_0x28239b;_0x2b3c8c[this[_0x365747(0x519)]>>0x2]=_0x32d2c3;},this[_0x28239b(0x4f5)]=function(_0x975984){var\\x20_0x37e113=_0x28239b;_0x975984=_0x975984?0x1:0x0,_0x58a58e[this[_0x37e113(0x519)]+0xc>>0x0]=_0x975984;},this[\\x27get_caught\\x27]=function(){var\\x20_0x35edf8=_0x28239b;return\\x200x0!=_0x58a58e[this[_0x35edf8(0x519)]+0xc>>0x0];},this[\\x27set_rethrown\\x27]=function(_0x3f9190){var\\x20_0x2bd8c8=_0x28239b;_0x3f9190=_0x3f9190?0x1:0x0,_0x58a58e[this[_0x2bd8c8(0x519)]+0xd>>0x0]=_0x3f9190;},this[_0x28239b(0x73c)]=function(){return\\x200x0!=_0x58a58e[this[\\x27ptr\\x27]+0xd>>0x0];},this[_0x28239b(0x6ed)]=function(_0x3dcd75,_0x209adc){var\\x20_0x47b618=_0x28239b;this[\\x27set_adjusted_ptr\\x27](0x0),this[\\x27set_type\\x27](_0x3dcd75),this[_0x47b618(0x39c)](_0x209adc),this[_0x47b618(0x2cb)](0x0),this[_0x47b618(0x4f5)](!0x1),this[\\x27set_rethrown\\x27](!0x1);},this[\\x27add_ref\\x27]=function(){var\\x20_0x4f0834=_0x28239b,_0x1d9430=_0x2b3c8c[this[_0x4f0834(0x519)]>>0x2];_0x2b3c8c[this[_0x4f0834(0x519)]>>0x2]=_0x1d9430+0x1;},this[_0x28239b(0x349)]=function(){var\\x20_0x33bb7f=_0x28239b,_0xd44f2d=_0x2b3c8c[this[\\x27ptr\\x27]>>0x2];return\\x20_0x2b3c8c[this[_0x33bb7f(0x519)]>>0x2]=_0xd44f2d-0x1,_0x299bd7(_0xd44f2d>0x0),0x1===_0xd44f2d;},this[_0x28239b(0x207)]=function(_0x195374){var\\x20_0xb6b15a=_0x28239b;_0x452739[this[_0xb6b15a(0x519)]+0x10>>0x2]=_0x195374;},this[\\x27get_adjusted_ptr\\x27]=function(){var\\x20_0x3ef7db=_0x28239b;return\\x20_0x452739[this[_0x3ef7db(0x519)]+0x10>>0x2];},this[_0x28239b(0x733)]=function(){var\\x20_0x43453f=_0x28239b;if(_0x1e3e18(this[_0x43453f(0x6a8)]()))return\\x20_0x452739[this[\\x27excPtr\\x27]>>0x2];var\\x20_0x5ea037=this[_0x43453f(0x50f)]();return\\x200x0!==_0x5ea037?_0x5ea037:this[_0x43453f(0x3f8)];};}function\\x20_0x24ec7a(_0x292505){var\\x20_0xdab574=_0x29789b;switch(_0x292505){case\\x200x1:return\\x200x0;case\\x200x2:return\\x200x1;case\\x200x4:return\\x200x2;case\\x200x8:return\\x200x3;default:throw\\x20new\\x20TypeError(_0xdab574(0x4b6)+_0x292505);}}var\\x20_0x36b94f=void\\x200x0;function\\x20_0x224ad6(_0x54ed37){for(var\\x20_0x433b0e=\\x27\\x27,_0x4aa630=_0x54ed37;_0x55c3f0[_0x4aa630];)_0x433b0e+=_0x36b94f[_0x55c3f0[_0x4aa630++]];return\\x20_0x433b0e;}var\\x20_0xc25905={},_0x3b8870={},_0x5c5139={},_0x5370d0=0x30,_0x42c717=0x39;function\\x20_0xcbdd35(_0xca62de,_0x323ab2){return\\x20_0xca62de=function(_0x107a62){var\\x20_0x67d9ce=a1_0x2045;if(void\\x200x0===_0x107a62)return\\x20_0x67d9ce(0x249);var\\x20_0x5c30ef=(_0x107a62=_0x107a62[\\x27replace\\x27](/[^a-zA-Z0-9_]/g,\\x27$\\x27))[_0x67d9ce(0x749)](0x0);return\\x20_0x5c30ef>=_0x5370d0&&_0x5c30ef<=_0x42c717?\\x27_\\x27+_0x107a62:_0x107a62;}(_0xca62de),function(){return\\x20_0x323ab2[\\x27apply\\x27](this,arguments);};}function\\x20_0x227bb2(_0x87d43d,_0x454293){var\\x20_0x3bad97=_0x29789b,_0xafeecf=_0xcbdd35(_0x454293,function(_0x15808e){var\\x20_0x14728f=a1_0x2045;this[_0x14728f(0x2e3)]=_0x454293,this[_0x14728f(0x263)]=_0x15808e;var\\x20_0x257eef=new\\x20Error(_0x15808e)[_0x14728f(0x2b4)];void\\x200x0!==_0x257eef&&(this[_0x14728f(0x2b4)]=this[_0x14728f(0x4ff)]()+\\x27\\x5cx0a\\x27+_0x257eef[_0x14728f(0x690)](/^Error(:[^\\x5cn]*)?\\x5cn/,\\x27\\x27));});return\\x20_0xafeecf[\\x27prototype\\x27]=Object[_0x3bad97(0x1ff)](_0x87d43d[\\x27prototype\\x27]),_0xafeecf[_0x3bad97(0x4c4)][_0x3bad97(0x1b5)]=_0xafeecf,_0xafeecf[\\x27prototype\\x27][_0x3bad97(0x4ff)]=function(){var\\x20_0x447729=_0x3bad97;return\\x20void\\x200x0===this[_0x447729(0x263)]?this[_0x447729(0x2e3)]:this[_0x447729(0x2e3)]+\\x27:\\x5cx20\\x27+this[_0x447729(0x263)];},_0xafeecf;}var\\x20_0x25df29=void\\x200x0;function\\x20_0x1e65a9(_0xe6e13f){throw\\x20new\\x20_0x25df29(_0xe6e13f);}var\\x20_0x354564=void\\x200x0;function\\x20_0x2cad59(_0x4442d8){throw\\x20new\\x20_0x354564(_0x4442d8);}function\\x20_0x34753d(_0xcb6b5a,_0x514435,_0x1843be={}){var\\x20_0x3e26b7=_0x29789b;if(!(\\x27argPackAdvance\\x27in\\x20_0x514435))throw\\x20new\\x20TypeError(_0x3e26b7(0x5f0));var\\x20_0x2abb94=_0x514435[\\x27name\\x27];if(_0xcb6b5a||_0x1e65a9(\\x27type\\x5cx20\\x5cx22\\x27+_0x2abb94+\\x27\\x5cx22\\x5cx20must\\x5cx20have\\x5cx20a\\x5cx20positive\\x5cx20integer\\x5cx20typeid\\x5cx20pointer\\x27),_0x3b8870[\\x27hasOwnProperty\\x27](_0xcb6b5a)){if(_0x1843be[_0x3e26b7(0x64d)])return;_0x1e65a9(_0x3e26b7(0x44c)+_0x2abb94+_0x3e26b7(0x422));}if(_0x3b8870[_0xcb6b5a]=_0x514435,delete\\x20_0x5c5139[_0xcb6b5a],_0xc25905[_0x3e26b7(0x261)](_0xcb6b5a)){var\\x20_0x7d3a7e=_0xc25905[_0xcb6b5a];delete\\x20_0xc25905[_0xcb6b5a],_0x7d3a7e[_0x3e26b7(0x71e)](_0x5dd7b4=>_0x5dd7b4());}}var\\x20_0x22b057=[],_0x188d52=[{},{\\x27value\\x27:void\\x200x0},{\\x27value\\x27:null},{\\x27value\\x27:!0x0},{\\x27value\\x27:!0x1}];function\\x20_0x290abd(){var\\x20_0x5099d1=_0x29789b;for(var\\x20_0x10152a=0x0,_0x15a13e=0x5;_0x15a13e<_0x188d52[_0x5099d1(0x479)];++_0x15a13e)void\\x200x0!==_0x188d52[_0x15a13e]&&++_0x10152a;return\\x20_0x10152a;}function\\x20_0x145696(){var\\x20_0x4c8ad3=_0x29789b;for(var\\x20_0x3becd5=0x5;_0x3becd5<_0x188d52[_0x4c8ad3(0x479)];++_0x3becd5)if(void\\x200x0!==_0x188d52[_0x3becd5])return\\x20_0x188d52[_0x3becd5];return\\x20null;}var\\x20_0x26db70=_0x5bdf15=>(_0x5bdf15||_0x1e65a9(_0x29789b(0x6f9)+_0x5bdf15),_0x188d52[_0x5bdf15][\\x27value\\x27]),_0x536196=_0x1460e5=>{var\\x20_0x377045=_0x29789b;switch(_0x1460e5){case\\x20void\\x200x0:return\\x200x1;case\\x20null:return\\x200x2;case!0x0:return\\x200x3;case!0x1:return\\x200x4;default:var\\x20_0x13adc8=_0x22b057[\\x27length\\x27]?_0x22b057[_0x377045(0x5e6)]():_0x188d52[_0x377045(0x479)];return\\x20_0x188d52[_0x13adc8]={\\x27refcount\\x27:0x1,\\x27value\\x27:_0x1460e5},_0x13adc8;}};function\\x20_0x258df9(_0x29ab31){var\\x20_0x4467f9=_0x29789b;return\\x20this[_0x4467f9(0x399)](_0x2b3c8c[_0x29ab31>>0x2]);}function\\x20_0x27d0dd(_0x555439,_0x1b1d83,_0xb942c8){var\\x20_0x11ace1=_0x29789b;_0xacfddc[\\x27hasOwnProperty\\x27](_0x555439)?((void\\x200x0===_0xb942c8||void\\x200x0!==_0xacfddc[_0x555439][\\x27overloadTable\\x27]&&void\\x200x0!==_0xacfddc[_0x555439][_0x11ace1(0x626)][_0xb942c8])&&_0x1e65a9(_0x11ace1(0x4f3)+_0x555439+_0x11ace1(0x422)),function(_0x52543d,_0x3d76c2,_0x5d9ad3){var\\x20_0x5f1871=_0x11ace1;if(void\\x200x0===_0x52543d[_0x3d76c2][\\x27overloadTable\\x27]){var\\x20_0xaffcb3=_0x52543d[_0x3d76c2];_0x52543d[_0x3d76c2]=function(){var\\x20_0x4a09db=a1_0x2045;return\\x20_0x52543d[_0x3d76c2][_0x4a09db(0x626)][_0x4a09db(0x261)](arguments[_0x4a09db(0x479)])||_0x1e65a9(_0x4a09db(0x724)+_0x5d9ad3+_0x4a09db(0x659)+arguments[_0x4a09db(0x479)]+_0x4a09db(0x231)+_0x52543d[_0x3d76c2][_0x4a09db(0x626)]+\\x27)!\\x27),_0x52543d[_0x3d76c2][_0x4a09db(0x626)][arguments[_0x4a09db(0x479)]][_0x4a09db(0x324)](this,arguments);},_0x52543d[_0x3d76c2][_0x5f1871(0x626)]=[],_0x52543d[_0x3d76c2][_0x5f1871(0x626)][_0xaffcb3[_0x5f1871(0x4e2)]]=_0xaffcb3;}}(_0xacfddc,_0x555439,_0x555439),_0xacfddc[_0x11ace1(0x261)](_0xb942c8)&&_0x1e65a9(_0x11ace1(0x779)+_0xb942c8+\\x27)!\\x27),_0xacfddc[_0x555439][_0x11ace1(0x626)][_0xb942c8]=_0x1b1d83):(_0xacfddc[_0x555439]=_0x1b1d83,void\\x200x0!==_0xb942c8&&(_0xacfddc[_0x555439][_0x11ace1(0x773)]=_0xb942c8));}function\\x20_0x24158d(_0x1fc875,_0x4e846d,_0x320239){switch(_0x4e846d){case\\x200x0:return\\x20function(_0x3eb189){var\\x20_0x3b6923=a1_0x2045,_0x349883=_0x320239?_0x58a58e:_0x55c3f0;return\\x20this[_0x3b6923(0x399)](_0x349883[_0x3eb189]);};case\\x200x1:return\\x20function(_0x456526){var\\x20_0x381059=a1_0x2045,_0x3859fa=_0x320239?_0xaac725:_0x16edf7;return\\x20this[_0x381059(0x399)](_0x3859fa[_0x456526>>0x1]);};case\\x200x2:return\\x20function(_0x249c06){var\\x20_0x48728d=a1_0x2045,_0x5fbe60=_0x320239?_0x2b3c8c:_0x452739;return\\x20this[_0x48728d(0x399)](_0x5fbe60[_0x249c06>>0x2]);};default:throw\\x20new\\x20TypeError(\\x27Unknown\\x5cx20integer\\x5cx20type:\\x5cx20\\x27+_0x1fc875);}}function\\x20_0x14fd6d(_0x35e79f){var\\x20_0x26d4db=_0x54decb(_0x35e79f),_0x6be4c0=_0x224ad6(_0x26d4db);return\\x20_0x2e6a2a(_0x26d4db),_0x6be4c0;}function\\x20_0x3dd27c(_0x500f76){var\\x20_0x4bfa9c=_0x29789b;if(null===_0x500f76)return\\x20_0x4bfa9c(0x346);var\\x20_0x3aa6be=typeof\\x20_0x500f76;return\\x20_0x4bfa9c(0x556)===_0x3aa6be||_0x4bfa9c(0x3c3)===_0x3aa6be||\\x27function\\x27===_0x3aa6be?_0x500f76[_0x4bfa9c(0x4ff)]():\\x27\\x27+_0x500f76;}function\\x20_0x4eb5f3(_0x2180f2,_0x517f3f){switch(_0x517f3f){case\\x200x2:return\\x20function(_0x5027e8){var\\x20_0x27f559=a1_0x2045;return\\x20this[_0x27f559(0x399)](_0x40c025[_0x5027e8>>0x2]);};case\\x200x3:return\\x20function(_0x393671){var\\x20_0x333a17=a1_0x2045;return\\x20this[_0x333a17(0x399)](_0x44f02e[_0x393671>>0x3]);};default:throw\\x20new\\x20TypeError(\\x27Unknown\\x5cx20float\\x5cx20type:\\x5cx20\\x27+_0x2180f2);}}function\\x20_0xbd06(_0x1434a2,_0x2efb9e,_0x598d31){var\\x20_0x1ca5f1=_0x29789b;return\\x20_0x1434a2[_0x1ca5f1(0x714)](\\x27j\\x27)?function(_0xbe41d9,_0x3d429f,_0xcbb35d){var\\x20_0x225a86=_0x1ca5f1;_0x299bd7(\\x27dynCall_\\x27+_0xbe41d9\\x20in\\x20_0xacfddc,_0x225a86(0x5c5)+_0xbe41d9+\\x27\\x5cx27\\x27),_0xcbb35d&&_0xcbb35d[\\x27length\\x27]?_0x299bd7(_0xcbb35d[\\x27length\\x27]===_0xbe41d9[\\x27substring\\x27](0x1)[\\x27replace\\x27](/j/g,\\x27--\\x27)[_0x225a86(0x479)]):_0x299bd7(0x1==_0xbe41d9[_0x225a86(0x479)]);var\\x20_0x5ce144=_0xacfddc[\\x27dynCall_\\x27+_0xbe41d9];return\\x20_0xcbb35d&&_0xcbb35d[_0x225a86(0x479)]?_0x5ce144[_0x225a86(0x324)](null,[_0x3d429f][\\x27concat\\x27](_0xcbb35d)):_0x5ce144[_0x225a86(0x42f)](null,_0x3d429f);}(_0x1434a2,_0x2efb9e,_0x598d31):(_0x299bd7(_0x31a64f(_0x2efb9e),_0x1ca5f1(0x2c3)+_0x2efb9e),_0x31a64f(_0x2efb9e)[\\x27apply\\x27](null,_0x598d31));}function\\x20_0x516b9d(_0x1c0505,_0x188799){var\\x20_0xf94550=_0x29789b,_0xf2883a=(_0x1c0505=_0x224ad6(_0x1c0505))[_0xf94550(0x714)](\\x27j\\x27)?function(_0xdab9b6,_0x1339a8){var\\x20_0x4e57d6=_0xf94550;_0x299bd7(_0xdab9b6[_0x4e57d6(0x714)](\\x27j\\x27)||_0xdab9b6[_0x4e57d6(0x714)](\\x27p\\x27),_0x4e57d6(0x35a));var\\x20_0x17714f=[];return\\x20function(){var\\x20_0x58854f=_0x4e57d6;return\\x20_0x17714f[_0x58854f(0x479)]=0x0,Object[_0x58854f(0x29a)](_0x17714f,arguments),_0xbd06(_0xdab9b6,_0x1339a8,_0x17714f);};}(_0x1c0505,_0x188799):_0x31a64f(_0x188799);return\\x20_0xf94550(0x3b0)!=typeof\\x20_0xf2883a&&_0x1e65a9(_0xf94550(0x63b)+_0x1c0505+\\x27:\\x5cx20\\x27+_0x188799),_0xf2883a;}var\\x20_0xf5bc1f=void\\x200x0;function\\x20_0x1d98cf(_0x45794e,_0x3b759c,_0x2fdc0d){var\\x20_0x31aa44=_0x29789b;switch(_0x3b759c){case\\x200x0:return\\x20_0x2fdc0d?function(_0x18753a){return\\x20_0x58a58e[_0x18753a];}:function(_0x2ac700){return\\x20_0x55c3f0[_0x2ac700];};case\\x200x1:return\\x20_0x2fdc0d?function(_0x4ae1bd){return\\x20_0xaac725[_0x4ae1bd>>0x1];}:function(_0xd24deb){return\\x20_0x16edf7[_0xd24deb>>0x1];};case\\x200x2:return\\x20_0x2fdc0d?function(_0xe9d2ba){return\\x20_0x2b3c8c[_0xe9d2ba>>0x2];}:function(_0x12589c){return\\x20_0x452739[_0x12589c>>0x2];};default:throw\\x20new\\x20TypeError(_0x31aa44(0x38b)+_0x45794e);}}var\\x20_0x167eec=_0x29789b(0x729)!=typeof\\x20TextDecoder?new\\x20TextDecoder(_0x29789b(0x657)):void\\x200x0;function\\x20_0x4c92ee(_0x4dec44,_0x746491){var\\x20_0x229691=_0x29789b;_0x299bd7(_0x4dec44%0x2==0x0,_0x229691(0x538));for(var\\x20_0xee7ff5=_0x4dec44,_0x1bf374=_0xee7ff5>>0x1,_0x495532=_0x1bf374+_0x746491/0x2;!(_0x1bf374>=_0x495532)&&_0x16edf7[_0x1bf374];)++_0x1bf374;if((_0xee7ff5=_0x1bf374<<0x1)-_0x4dec44>0x20&&_0x167eec)return\\x20_0x167eec[_0x229691(0x6d0)](_0x55c3f0[\\x27subarray\\x27](_0x4dec44,_0xee7ff5));for(var\\x20_0x24c3be=\\x27\\x27,_0x481904=0x0;!(_0x481904>=_0x746491/0x2);++_0x481904){var\\x20_0x3188ad=_0xaac725[_0x4dec44+0x2*_0x481904>>0x1];if(0x0==_0x3188ad)break;_0x24c3be+=String[_0x229691(0x386)](_0x3188ad);}return\\x20_0x24c3be;}function\\x20_0x3b3462(_0x56c6bb,_0x5671f3,_0x254e70){var\\x20_0x1afa57=_0x29789b;if(_0x299bd7(_0x5671f3%0x2==0x0,\\x27Pointer\\x5cx20passed\\x5cx20to\\x5cx20stringToUTF16\\x5cx20must\\x5cx20be\\x5cx20aligned\\x5cx20to\\x5cx20two\\x5cx20bytes!\\x27),_0x299bd7(_0x1afa57(0x260)==typeof\\x20_0x254e70,\\x27stringToUTF16(str,\\x5cx20outPtr,\\x5cx20maxBytesToWrite)\\x5cx20is\\x5cx20missing\\x5cx20the\\x5cx20third\\x5cx20parameter\\x5cx20that\\x5cx20specifies\\x5cx20the\\x5cx20length\\x5cx20of\\x5cx20the\\x5cx20output\\x5cx20buffer!\\x27),void\\x200x0===_0x254e70&&(_0x254e70=0x7fffffff),_0x254e70<0x2)return\\x200x0;for(var\\x20_0x4f73e4=_0x5671f3,_0x4744e3=(_0x254e70-=0x2)<0x2*_0x56c6bb[_0x1afa57(0x479)]?_0x254e70/0x2:_0x56c6bb[_0x1afa57(0x479)],_0x1c663a=0x0;_0x1c663a<_0x4744e3;++_0x1c663a){var\\x20_0xf8edd2=_0x56c6bb[_0x1afa57(0x749)](_0x1c663a);_0xaac725[_0x5671f3>>0x1]=_0xf8edd2,_0x5671f3+=0x2;}return\\x20_0xaac725[_0x5671f3>>0x1]=0x0,_0x5671f3-_0x4f73e4;}function\\x20_0x26eb97(_0x1ad2e1){return\\x200x2*_0x1ad2e1[\\x27length\\x27];}function\\x20_0x1f923a(_0x2cd2b1,_0x2658ed){var\\x20_0x2d543f=_0x29789b;_0x299bd7(_0x2cd2b1%0x4==0x0,_0x2d543f(0x54e));for(var\\x20_0x515228=0x0,_0x342fb1=\\x27\\x27;!(_0x515228>=_0x2658ed/0x4);){var\\x20_0x6b9c27=_0x2b3c8c[_0x2cd2b1+0x4*_0x515228>>0x2];if(0x0==_0x6b9c27)break;if(++_0x515228,_0x6b9c27>=0x10000){var\\x20_0xea3379=_0x6b9c27-0x10000;_0x342fb1+=String[\\x27fromCharCode\\x27](0xd800|_0xea3379>>0xa,0xdc00|0x3ff&_0xea3379);}else\\x20_0x342fb1+=String[\\x27fromCharCode\\x27](_0x6b9c27);}return\\x20_0x342fb1;}function\\x20_0xbb4e4b(_0x3d8849,_0x17f5ec,_0x33e346){var\\x20_0x386260=_0x29789b;if(_0x299bd7(_0x17f5ec%0x4==0x0,_0x386260(0x55f)),_0x299bd7(_0x386260(0x260)==typeof\\x20_0x33e346,_0x386260(0x3ef)),void\\x200x0===_0x33e346&&(_0x33e346=0x7fffffff),_0x33e346<0x4)return\\x200x0;for(var\\x20_0x230a63=_0x17f5ec,_0x35cd1a=_0x230a63+_0x33e346-0x4,_0x8b6ef2=0x0;_0x8b6ef2<_0x3d8849[\\x27length\\x27];++_0x8b6ef2){var\\x20_0x288372=_0x3d8849[\\x27charCodeAt\\x27](_0x8b6ef2);if(_0x288372>=0xd800&&_0x288372<=0xdfff)_0x288372=0x10000+((0x3ff&_0x288372)<<0xa)|0x3ff&_0x3d8849[_0x386260(0x749)](++_0x8b6ef2);if(_0x2b3c8c[_0x17f5ec>>0x2]=_0x288372,(_0x17f5ec+=0x4)+0x4>_0x35cd1a)break;}return\\x20_0x2b3c8c[_0x17f5ec>>0x2]=0x0,_0x17f5ec-_0x230a63;}function\\x20_0x39b027(_0x3c5b6b){var\\x20_0x3c4774=_0x29789b;for(var\\x20_0x633564=0x0,_0x1dec9f=0x0;_0x1dec9f<_0x3c5b6b[_0x3c4774(0x479)];++_0x1dec9f){var\\x20_0x888162=_0x3c5b6b[_0x3c4774(0x749)](_0x1dec9f);_0x888162>=0xd800&&_0x888162<=0xdfff&&++_0x1dec9f,_0x633564+=0x4;}return\\x20_0x633564;}var\\x20_0x95e934={\\x27isAbs\\x27:_0x764f8f=>\\x27/\\x27===_0x764f8f[_0x29789b(0x242)](0x0),\\x27splitPath\\x27:_0x344f92=>/^(\\x5c/?|)([\\x5cs\\x5cS]*?)((?:\\x5c.{1,2}|[^\\x5c/]+?|)(\\x5c.[^.\\x5c/]*|))(?:[\\x5c/]*)$/[_0x29789b(0x3b5)](_0x344f92)[_0x29789b(0x5a3)](0x1),\\x27normalizeArray\\x27:(_0x62acd5,_0x122bbc)=>{var\\x20_0xc28c23=_0x29789b;for(var\\x20_0x559bf5=0x0,_0x319894=_0x62acd5[_0xc28c23(0x479)]-0x1;_0x319894>=0x0;_0x319894--){var\\x20_0xe3a976=_0x62acd5[_0x319894];\\x27.\\x27===_0xe3a976?_0x62acd5[_0xc28c23(0x70d)](_0x319894,0x1):\\x27..\\x27===_0xe3a976?(_0x62acd5[_0xc28c23(0x70d)](_0x319894,0x1),_0x559bf5++):_0x559bf5&&(_0x62acd5[_0xc28c23(0x70d)](_0x319894,0x1),_0x559bf5--);}if(_0x122bbc){for(;_0x559bf5;_0x559bf5--)_0x62acd5[_0xc28c23(0x635)](\\x27..\\x27);}return\\x20_0x62acd5;},\\x27normalize\\x27:_0x14abd6=>{var\\x20_0xe437c3=_0x29789b,_0x3a6bf8=_0x95e934[_0xe437c3(0x77d)](_0x14abd6),_0x42c597=\\x27/\\x27===_0x14abd6[_0xe437c3(0x548)](-0x1);return(_0x14abd6=_0x95e934[_0xe437c3(0x530)](_0x14abd6[_0xe437c3(0x517)](\\x27/\\x27)[_0xe437c3(0x6b9)](_0x74f0d7=>!!_0x74f0d7),!_0x3a6bf8)[\\x27join\\x27](\\x27/\\x27))||_0x3a6bf8||(_0x14abd6=\\x27.\\x27),_0x14abd6&&_0x42c597&&(_0x14abd6+=\\x27/\\x27),(_0x3a6bf8?\\x27/\\x27:\\x27\\x27)+_0x14abd6;},\\x27dirname\\x27:_0x38cc3f=>{var\\x20_0x2db705=_0x95e934[\\x27splitPath\\x27](_0x38cc3f),_0x24d364=_0x2db705[0x0],_0x3e14f9=_0x2db705[0x1];return\\x20_0x24d364||_0x3e14f9?(_0x3e14f9&&(_0x3e14f9=_0x3e14f9[\\x27substr\\x27](0x0,_0x3e14f9[\\x27length\\x27]-0x1)),_0x24d364+_0x3e14f9):\\x27.\\x27;},\\x27basename\\x27:_0x281adb=>{var\\x20_0x54e6ae=_0x29789b;if(\\x27/\\x27===_0x281adb)return\\x27/\\x27;var\\x20_0x5d4add=(_0x281adb=(_0x281adb=_0x95e934[_0x54e6ae(0x666)](_0x281adb))[_0x54e6ae(0x690)](/\\x5c/$/,\\x27\\x27))[_0x54e6ae(0x6b5)](\\x27/\\x27);return-0x1===_0x5d4add?_0x281adb:_0x281adb[_0x54e6ae(0x548)](_0x5d4add+0x1);},\\x27join\\x27:function(){var\\x20_0x489c09=_0x29789b,_0x51c475=Array[_0x489c09(0x4c4)][_0x489c09(0x5a3)][_0x489c09(0x42f)](arguments);return\\x20_0x95e934[_0x489c09(0x666)](_0x51c475[_0x489c09(0x2e4)](\\x27/\\x27));},\\x27join2\\x27:(_0x43c49c,_0x310d84)=>_0x95e934[_0x29789b(0x666)](_0x43c49c+\\x27/\\x27+_0x310d84)},_0x1de97f={\\x27resolve\\x27:function(){var\\x20_0x4b9c45=_0x29789b;for(var\\x20_0x162f3b=\\x27\\x27,_0x2973a0=!0x1,_0x2f668c=arguments[_0x4b9c45(0x479)]-0x1;_0x2f668c>=-0x1&&!_0x2973a0;_0x2f668c--){var\\x20_0x57c715=_0x2f668c>=0x0?arguments[_0x2f668c]:_0x4adbb1[_0x4b9c45(0x4b7)]();if(_0x4b9c45(0x2c4)!=typeof\\x20_0x57c715)throw\\x20new\\x20TypeError(_0x4b9c45(0x709));if(!_0x57c715)return\\x27\\x27;_0x162f3b=_0x57c715+\\x27/\\x27+_0x162f3b,_0x2973a0=_0x95e934[_0x4b9c45(0x77d)](_0x57c715);}return(_0x2973a0?\\x27/\\x27:\\x27\\x27)+(_0x162f3b=_0x95e934[_0x4b9c45(0x530)](_0x162f3b[_0x4b9c45(0x517)](\\x27/\\x27)[\\x27filter\\x27](_0x4cb2bf=>!!_0x4cb2bf),!_0x2973a0)[_0x4b9c45(0x2e4)](\\x27/\\x27))||\\x27.\\x27;},\\x27relative\\x27:(_0x182784,_0x462a7b)=>{var\\x20_0x419936=_0x29789b;function\\x20_0x3b2d10(_0x2e4935){var\\x20_0x1a104a=a1_0x2045;for(var\\x20_0x474639=0x0;_0x474639<_0x2e4935[_0x1a104a(0x479)]&&\\x27\\x27===_0x2e4935[_0x474639];_0x474639++);for(var\\x20_0x5b90ee=_0x2e4935[_0x1a104a(0x479)]-0x1;_0x5b90ee>=0x0&&\\x27\\x27===_0x2e4935[_0x5b90ee];_0x5b90ee--);return\\x20_0x474639>_0x5b90ee?[]:_0x2e4935[_0x1a104a(0x5a3)](_0x474639,_0x5b90ee-_0x474639+0x1);}_0x182784=_0x1de97f[_0x419936(0x5ac)](_0x182784)[_0x419936(0x548)](0x1),_0x462a7b=_0x1de97f[_0x419936(0x5ac)](_0x462a7b)[_0x419936(0x548)](0x1);for(var\\x20_0x199a58=_0x3b2d10(_0x182784[\\x27split\\x27](\\x27/\\x27)),_0x39b266=_0x3b2d10(_0x462a7b[\\x27split\\x27](\\x27/\\x27)),_0x4e4466=Math[_0x419936(0x1af)](_0x199a58[\\x27length\\x27],_0x39b266[_0x419936(0x479)]),_0x3f1528=_0x4e4466,_0x32dab9=0x0;_0x32dab9<_0x4e4466;_0x32dab9++)if(_0x199a58[_0x32dab9]!==_0x39b266[_0x32dab9]){_0x3f1528=_0x32dab9;break;}var\\x20_0x411be8=[];for(_0x32dab9=_0x3f1528;_0x32dab9<_0x199a58[_0x419936(0x479)];_0x32dab9++)_0x411be8[_0x419936(0x3d6)](\\x27..\\x27);return(_0x411be8=_0x411be8[\\x27concat\\x27](_0x39b266[\\x27slice\\x27](_0x3f1528)))[_0x419936(0x2e4)](\\x27/\\x27);}};function\\x20_0x204be4(_0x5945bd,_0x1d2c4d,_0x16e9c5){var\\x20_0xc276bf=_0x29789b,_0x38d234=_0x16e9c5>0x0?_0x16e9c5:_0x3dd374(_0x5945bd)+0x1,_0x561ac2=new\\x20Array(_0x38d234),_0x12bef6=_0x61798c(_0x5945bd,_0x561ac2,0x0,_0x561ac2[\\x27length\\x27]);return\\x20_0x1d2c4d&&(_0x561ac2[_0xc276bf(0x479)]=_0x12bef6),_0x561ac2;}var\\x20_0x2e48fc={\\x27ttys\\x27:[],\\x27init\\x27:function(){},\\x27shutdown\\x27:function(){},\\x27register\\x27:function(_0x5c1a09,_0x216b0e){var\\x20_0x432784=_0x29789b;_0x2e48fc[_0x432784(0x587)][_0x5c1a09]={\\x27input\\x27:[],\\x27output\\x27:[],\\x27ops\\x27:_0x216b0e},_0x4adbb1[_0x432784(0x494)](_0x5c1a09,_0x2e48fc[\\x27stream_ops\\x27]);},\\x27stream_ops\\x27:{\\x27open\\x27:function(_0x47d7ca){var\\x20_0x149717=_0x29789b,_0x1dd914=_0x2e48fc[\\x27ttys\\x27][_0x47d7ca[\\x27node\\x27][\\x27rdev\\x27]];if(!_0x1dd914)throw\\x20new\\x20_0x4adbb1[(_0x149717(0x5d3))](0x2b);_0x47d7ca[_0x149717(0x555)]=_0x1dd914,_0x47d7ca[\\x27seekable\\x27]=!0x1;},\\x27close\\x27:function(_0xdae13b){var\\x20_0x332929=_0x29789b;_0xdae13b[\\x27tty\\x27][_0x332929(0x442)][_0x332929(0x4d3)](_0xdae13b[_0x332929(0x555)]);},\\x27fsync\\x27:function(_0x17d68e){var\\x20_0x4b360d=_0x29789b;_0x17d68e[_0x4b360d(0x555)][_0x4b360d(0x442)][_0x4b360d(0x4d3)](_0x17d68e[_0x4b360d(0x555)]);},\\x27read\\x27:function(_0xcb10a4,_0x33dc06,_0x39d045,_0x5a1cd3,_0x4ed1dd){var\\x20_0x25fdbf=_0x29789b;if(!_0xcb10a4[_0x25fdbf(0x555)]||!_0xcb10a4[_0x25fdbf(0x555)][\\x27ops\\x27][_0x25fdbf(0x201)])throw\\x20new\\x20_0x4adbb1[(_0x25fdbf(0x5d3))](0x3c);for(var\\x20_0xacac6e=0x0,_0x4b6701=0x0;_0x4b6701<_0x5a1cd3;_0x4b6701++){var\\x20_0x4ab3ec;try{_0x4ab3ec=_0xcb10a4[_0x25fdbf(0x555)][\\x27ops\\x27][_0x25fdbf(0x201)](_0xcb10a4[_0x25fdbf(0x555)]);}catch(_0x3b35ef){throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1d);}if(void\\x200x0===_0x4ab3ec&&0x0===_0xacac6e)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x6);if(null==_0x4ab3ec)break;_0xacac6e++,_0x33dc06[_0x39d045+_0x4b6701]=_0x4ab3ec;}return\\x20_0xacac6e&&(_0xcb10a4[_0x25fdbf(0x1c4)][_0x25fdbf(0x5c6)]=Date[_0x25fdbf(0x3ae)]()),_0xacac6e;},\\x27write\\x27:function(_0x3155ac,_0x4c6175,_0x3439a2,_0x205204,_0x3dac28){var\\x20_0x13d961=_0x29789b;if(!_0x3155ac[\\x27tty\\x27]||!_0x3155ac[_0x13d961(0x555)][_0x13d961(0x442)][\\x27put_char\\x27])throw\\x20new\\x20_0x4adbb1[(_0x13d961(0x5d3))](0x3c);try{for(var\\x20_0x2ac787=0x0;_0x2ac787<_0x205204;_0x2ac787++)_0x3155ac[_0x13d961(0x555)][_0x13d961(0x442)][_0x13d961(0x758)](_0x3155ac[_0x13d961(0x555)],_0x4c6175[_0x3439a2+_0x2ac787]);}catch(_0x2accca){throw\\x20new\\x20_0x4adbb1[(_0x13d961(0x5d3))](0x1d);}return\\x20_0x205204&&(_0x3155ac[_0x13d961(0x1c4)][_0x13d961(0x5c6)]=Date[_0x13d961(0x3ae)]()),_0x2ac787;}},\\x27default_tty_ops\\x27:{\\x27get_char\\x27:function(_0x34f62f){var\\x20_0x35d2b2=_0x29789b;if(!_0x34f62f[_0x35d2b2(0x712)][_0x35d2b2(0x479)]){var\\x20_0x5842c7=null;if(_0x35d2b2(0x729)!=typeof\\x20window&&_0x35d2b2(0x3b0)==typeof\\x20window[_0x35d2b2(0x5a9)]?null!==(_0x5842c7=window[\\x27prompt\\x27](_0x35d2b2(0x1ca)))&&(_0x5842c7+=\\x27\\x5cx0a\\x27):_0x35d2b2(0x3b0)==typeof\\x20readline&&null!==(_0x5842c7=readline())&&(_0x5842c7+=\\x27\\x5cx0a\\x27),!_0x5842c7)return\\x20null;_0x34f62f[\\x27input\\x27]=_0x204be4(_0x5842c7,!0x0);}return\\x20_0x34f62f[_0x35d2b2(0x712)][_0x35d2b2(0x24b)]();},\\x27put_char\\x27:function(_0x30e72b,_0x29c617){var\\x20_0x1543bc=_0x29789b;null===_0x29c617||0xa===_0x29c617?(_0x588b31(_0x364e81(_0x30e72b[_0x1543bc(0x487)],0x0)),_0x30e72b[\\x27output\\x27]=[]):0x0!=_0x29c617&&_0x30e72b[\\x27output\\x27][\\x27push\\x27](_0x29c617);},\\x27fsync\\x27:function(_0x64326a){var\\x20_0x204ff2=_0x29789b;_0x64326a[_0x204ff2(0x487)]&&_0x64326a[_0x204ff2(0x487)][_0x204ff2(0x479)]>0x0&&(_0x588b31(_0x364e81(_0x64326a[_0x204ff2(0x487)],0x0)),_0x64326a[_0x204ff2(0x487)]=[]);}},\\x27default_tty1_ops\\x27:{\\x27put_char\\x27:function(_0x2b28ab,_0x499fcf){var\\x20_0x3d4ad1=_0x29789b;null===_0x499fcf||0xa===_0x499fcf?(_0x5528a8(_0x364e81(_0x2b28ab[\\x27output\\x27],0x0)),_0x2b28ab[\\x27output\\x27]=[]):0x0!=_0x499fcf&&_0x2b28ab[_0x3d4ad1(0x487)][_0x3d4ad1(0x3d6)](_0x499fcf);},\\x27fsync\\x27:function(_0xf3d41b){var\\x20_0x340da1=_0x29789b;_0xf3d41b[\\x27output\\x27]&&_0xf3d41b[_0x340da1(0x487)][_0x340da1(0x479)]>0x0&&(_0x5528a8(_0x364e81(_0xf3d41b[\\x27output\\x27],0x0)),_0xf3d41b[_0x340da1(0x487)]=[]);}}};function\\x20_0x2ae68c(_0x5b5d7a){_0x5b5d7a=function(_0x1b8b1b,_0x21d600){var\\x20_0x495f0f=a1_0x2045;return\\x20_0x299bd7(_0x21d600,_0x495f0f(0x671)),Math[\\x27ceil\\x27](_0x1b8b1b/_0x21d600)*_0x21d600;}(_0x5b5d7a,0x10000);var\\x20_0x1c0a1d=_0x25b449(0x10000,_0x5b5d7a);return\\x20_0x1c0a1d?function(_0x5dea2d,_0x5ab42f){return\\x20_0x55c3f0[\\x27fill\\x27](0x0,_0x5dea2d,_0x5dea2d+_0x5ab42f),_0x5dea2d;}(_0x1c0a1d,_0x5b5d7a):0x0;}var\\x20_0x384c49={\\x27ops_table\\x27:null,\\x27mount\\x27:function(_0x336c7b){var\\x20_0x58855f=_0x29789b;return\\x20_0x384c49[_0x58855f(0x59d)](null,\\x27/\\x27,0x41ff,0x0);},\\x27createNode\\x27:function(_0x4671f7,_0x46ddfa,_0x31230b,_0x5af85f){var\\x20_0xe14cb=_0x29789b;if(_0x4adbb1[_0xe14cb(0x5a8)](_0x31230b)||_0x4adbb1[_0xe14cb(0x3ba)](_0x31230b))throw\\x20new\\x20_0x4adbb1[(_0xe14cb(0x5d3))](0x3f);_0x384c49[_0xe14cb(0x1ce)]||(_0x384c49[_0xe14cb(0x1ce)]={\\x27dir\\x27:{\\x27node\\x27:{\\x27getattr\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x60a)],\\x27setattr\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x31f)],\\x27lookup\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x75f)],\\x27mknod\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x2c1)],\\x27rename\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x356)],\\x27unlink\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x308)],\\x27rmdir\\x27:_0x384c49[\\x27node_ops\\x27][_0xe14cb(0x1ef)],\\x27readdir\\x27:_0x384c49[_0xe14cb(0x5cf)][\\x27readdir\\x27],\\x27symlink\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x510)]},\\x27stream\\x27:{\\x27llseek\\x27:_0x384c49[\\x27stream_ops\\x27][\\x27llseek\\x27]}},\\x27file\\x27:{\\x27node\\x27:{\\x27getattr\\x27:_0x384c49[\\x27node_ops\\x27][_0xe14cb(0x60a)],\\x27setattr\\x27:_0x384c49[\\x27node_ops\\x27][_0xe14cb(0x31f)]},\\x27stream\\x27:{\\x27llseek\\x27:_0x384c49[_0xe14cb(0x77c)][_0xe14cb(0x39a)],\\x27read\\x27:_0x384c49[\\x27stream_ops\\x27][_0xe14cb(0x765)],\\x27write\\x27:_0x384c49[\\x27stream_ops\\x27][_0xe14cb(0x5fa)],\\x27allocate\\x27:_0x384c49[_0xe14cb(0x77c)][_0xe14cb(0x388)],\\x27mmap\\x27:_0x384c49[_0xe14cb(0x77c)][\\x27mmap\\x27],\\x27msync\\x27:_0x384c49[\\x27stream_ops\\x27][_0xe14cb(0x365)]}},\\x27link\\x27:{\\x27node\\x27:{\\x27getattr\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x60a)],\\x27setattr\\x27:_0x384c49[\\x27node_ops\\x27][_0xe14cb(0x31f)],\\x27readlink\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x51c)]},\\x27stream\\x27:{}},\\x27chrdev\\x27:{\\x27node\\x27:{\\x27getattr\\x27:_0x384c49[_0xe14cb(0x5cf)][\\x27getattr\\x27],\\x27setattr\\x27:_0x384c49[_0xe14cb(0x5cf)][_0xe14cb(0x31f)]},\\x27stream\\x27:_0x4adbb1[\\x27chrdev_stream_ops\\x27]}});var\\x20_0x1d404e=_0x4adbb1[_0xe14cb(0x59d)](_0x4671f7,_0x46ddfa,_0x31230b,_0x5af85f);return\\x20_0x4adbb1[_0xe14cb(0x468)](_0x1d404e[\\x27mode\\x27])?(_0x1d404e[_0xe14cb(0x5cf)]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x485)][_0xe14cb(0x1c4)],_0x1d404e[\\x27stream_ops\\x27]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x485)][\\x27stream\\x27],_0x1d404e[_0xe14cb(0x418)]={}):_0x4adbb1[_0xe14cb(0x1f7)](_0x1d404e[_0xe14cb(0x477)])?(_0x1d404e[_0xe14cb(0x5cf)]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x483)][_0xe14cb(0x1c4)],_0x1d404e[_0xe14cb(0x77c)]=_0x384c49[\\x27ops_table\\x27][_0xe14cb(0x483)][_0xe14cb(0x20b)],_0x1d404e[\\x27usedBytes\\x27]=0x0,_0x1d404e[_0xe14cb(0x418)]=null):_0x4adbb1[_0xe14cb(0x554)](_0x1d404e[_0xe14cb(0x477)])?(_0x1d404e[\\x27node_ops\\x27]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x28c)][_0xe14cb(0x1c4)],_0x1d404e[_0xe14cb(0x77c)]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x28c)][\\x27stream\\x27]):_0x4adbb1[_0xe14cb(0x294)](_0x1d404e[_0xe14cb(0x477)])&&(_0x1d404e[_0xe14cb(0x5cf)]=_0x384c49[_0xe14cb(0x1ce)][\\x27chrdev\\x27][_0xe14cb(0x1c4)],_0x1d404e[_0xe14cb(0x77c)]=_0x384c49[_0xe14cb(0x1ce)][_0xe14cb(0x35e)][_0xe14cb(0x20b)]),_0x1d404e[_0xe14cb(0x5c6)]=Date[_0xe14cb(0x3ae)](),_0x4671f7&&(_0x4671f7[_0xe14cb(0x418)][_0x46ddfa]=_0x1d404e,_0x4671f7[_0xe14cb(0x5c6)]=_0x1d404e[_0xe14cb(0x5c6)]),_0x1d404e;},\\x27getFileDataAsTypedArray\\x27:function(_0x1169c4){var\\x20_0x2f69ee=_0x29789b;return\\x20_0x1169c4[\\x27contents\\x27]?_0x1169c4[_0x2f69ee(0x418)][_0x2f69ee(0x1e1)]?_0x1169c4[_0x2f69ee(0x418)][_0x2f69ee(0x1e1)](0x0,_0x1169c4[_0x2f69ee(0x596)]):new\\x20Uint8Array(_0x1169c4[_0x2f69ee(0x418)]):new\\x20Uint8Array(0x0);},\\x27expandFileStorage\\x27:function(_0x498b54,_0x9da792){var\\x20_0x2479cc=_0x29789b,_0x309940=_0x498b54[_0x2479cc(0x418)]?_0x498b54[\\x27contents\\x27][_0x2479cc(0x479)]:0x0;if(!(_0x309940>=_0x9da792)){_0x9da792=Math[\\x27max\\x27](_0x9da792,_0x309940*(_0x309940<0x100000?0x2:1.125)>>>0x0),0x0!=_0x309940&&(_0x9da792=Math[\\x27max\\x27](_0x9da792,0x100));var\\x20_0x3f8da4=_0x498b54[\\x27contents\\x27];_0x498b54[_0x2479cc(0x418)]=new\\x20Uint8Array(_0x9da792),_0x498b54[_0x2479cc(0x596)]>0x0&&_0x498b54[_0x2479cc(0x418)][_0x2479cc(0x6a6)](_0x3f8da4[\\x27subarray\\x27](0x0,_0x498b54[\\x27usedBytes\\x27]),0x0);}},\\x27resizeFileStorage\\x27:function(_0x14429c,_0x256b76){var\\x20_0x32c9f3=_0x29789b;if(_0x14429c[_0x32c9f3(0x596)]!=_0x256b76){if(0x0==_0x256b76)_0x14429c[_0x32c9f3(0x418)]=null,_0x14429c[_0x32c9f3(0x596)]=0x0;else{var\\x20_0x570e74=_0x14429c[_0x32c9f3(0x418)];_0x14429c[_0x32c9f3(0x418)]=new\\x20Uint8Array(_0x256b76),_0x570e74&&_0x14429c[_0x32c9f3(0x418)][\\x27set\\x27](_0x570e74[\\x27subarray\\x27](0x0,Math[_0x32c9f3(0x1af)](_0x256b76,_0x14429c[_0x32c9f3(0x596)]))),_0x14429c[_0x32c9f3(0x596)]=_0x256b76;}}},\\x27node_ops\\x27:{\\x27getattr\\x27:function(_0x345460){var\\x20_0x1da4d5=_0x29789b,_0x1adeee={};return\\x20_0x1adeee[\\x27dev\\x27]=_0x4adbb1[\\x27isChrdev\\x27](_0x345460[\\x27mode\\x27])?_0x345460[\\x27id\\x27]:0x1,_0x1adeee[\\x27ino\\x27]=_0x345460[\\x27id\\x27],_0x1adeee[_0x1da4d5(0x477)]=_0x345460[_0x1da4d5(0x477)],_0x1adeee[\\x27nlink\\x27]=0x1,_0x1adeee[_0x1da4d5(0x405)]=0x0,_0x1adeee[_0x1da4d5(0x337)]=0x0,_0x1adeee[_0x1da4d5(0x4f9)]=_0x345460[_0x1da4d5(0x4f9)],_0x4adbb1[_0x1da4d5(0x468)](_0x345460[\\x27mode\\x27])?_0x1adeee[_0x1da4d5(0x5f7)]=0x1000:_0x4adbb1[_0x1da4d5(0x1f7)](_0x345460[\\x27mode\\x27])?_0x1adeee[_0x1da4d5(0x5f7)]=_0x345460[\\x27usedBytes\\x27]:_0x4adbb1[_0x1da4d5(0x554)](_0x345460[_0x1da4d5(0x477)])?_0x1adeee[_0x1da4d5(0x5f7)]=_0x345460[_0x1da4d5(0x28c)][_0x1da4d5(0x479)]:_0x1adeee[_0x1da4d5(0x5f7)]=0x0,_0x1adeee[_0x1da4d5(0x5e3)]=new\\x20Date(_0x345460[\\x27timestamp\\x27]),_0x1adeee[\\x27mtime\\x27]=new\\x20Date(_0x345460[_0x1da4d5(0x5c6)]),_0x1adeee[\\x27ctime\\x27]=new\\x20Date(_0x345460[\\x27timestamp\\x27]),_0x1adeee[_0x1da4d5(0x2fb)]=0x1000,_0x1adeee[_0x1da4d5(0x41a)]=Math[_0x1da4d5(0x475)](_0x1adeee[_0x1da4d5(0x5f7)]/_0x1adeee[_0x1da4d5(0x2fb)]),_0x1adeee;},\\x27setattr\\x27:function(_0x33206b,_0x32e173){var\\x20_0x581c33=_0x29789b;void\\x200x0!==_0x32e173[_0x581c33(0x477)]&&(_0x33206b[\\x27mode\\x27]=_0x32e173[_0x581c33(0x477)]),void\\x200x0!==_0x32e173[\\x27timestamp\\x27]&&(_0x33206b[_0x581c33(0x5c6)]=_0x32e173[_0x581c33(0x5c6)]),void\\x200x0!==_0x32e173[_0x581c33(0x5f7)]&&_0x384c49[_0x581c33(0x40e)](_0x33206b,_0x32e173[_0x581c33(0x5f7)]);},\\x27lookup\\x27:function(_0x1ab7be,_0x23ed21){var\\x20_0x3fd852=_0x29789b;throw\\x20_0x4adbb1[_0x3fd852(0x44d)][0x2c];},\\x27mknod\\x27:function(_0x200b14,_0x281f08,_0x3b5b8f,_0x550ed4){var\\x20_0x24dc6f=_0x29789b;return\\x20_0x384c49[_0x24dc6f(0x59d)](_0x200b14,_0x281f08,_0x3b5b8f,_0x550ed4);},\\x27rename\\x27:function(_0x366f0f,_0x48b032,_0x4a6e24){var\\x20_0x20bb95=_0x29789b;if(_0x4adbb1[\\x27isDir\\x27](_0x366f0f[_0x20bb95(0x477)])){var\\x20_0xa8ee28;try{_0xa8ee28=_0x4adbb1[_0x20bb95(0x763)](_0x48b032,_0x4a6e24);}catch(_0x219471){}if(_0xa8ee28){for(var\\x20_0x1df2d7\\x20in\\x20_0xa8ee28[_0x20bb95(0x418)])throw\\x20new\\x20_0x4adbb1[(_0x20bb95(0x5d3))](0x37);}}delete\\x20_0x366f0f[_0x20bb95(0x649)][_0x20bb95(0x418)][_0x366f0f[_0x20bb95(0x2e3)]],_0x366f0f[_0x20bb95(0x649)][_0x20bb95(0x5c6)]=Date[_0x20bb95(0x3ae)](),_0x366f0f[_0x20bb95(0x2e3)]=_0x4a6e24,_0x48b032[_0x20bb95(0x418)][_0x4a6e24]=_0x366f0f,_0x48b032[_0x20bb95(0x5c6)]=_0x366f0f[_0x20bb95(0x649)][_0x20bb95(0x5c6)],_0x366f0f[_0x20bb95(0x649)]=_0x48b032;},\\x27unlink\\x27:function(_0x597487,_0x4f32f1){var\\x20_0x40c496=_0x29789b;delete\\x20_0x597487[_0x40c496(0x418)][_0x4f32f1],_0x597487[_0x40c496(0x5c6)]=Date[_0x40c496(0x3ae)]();},\\x27rmdir\\x27:function(_0x31932a,_0x173993){var\\x20_0x12ab85=_0x29789b,_0x174569=_0x4adbb1[\\x27lookupNode\\x27](_0x31932a,_0x173993);for(var\\x20_0x2ceea8\\x20in\\x20_0x174569[_0x12ab85(0x418)])throw\\x20new\\x20_0x4adbb1[(_0x12ab85(0x5d3))](0x37);delete\\x20_0x31932a[_0x12ab85(0x418)][_0x173993],_0x31932a[_0x12ab85(0x5c6)]=Date[_0x12ab85(0x3ae)]();},\\x27readdir\\x27:function(_0xf3ea16){var\\x20_0x3c4bff=_0x29789b,_0x1ccc12=[\\x27.\\x27,\\x27..\\x27];for(var\\x20_0x3578dd\\x20in\\x20_0xf3ea16[_0x3c4bff(0x418)])_0xf3ea16[_0x3c4bff(0x418)][_0x3c4bff(0x261)](_0x3578dd)&&_0x1ccc12[_0x3c4bff(0x3d6)](_0x3578dd);return\\x20_0x1ccc12;},\\x27symlink\\x27:function(_0x2b86cc,_0x2098a8,_0x2871bd){var\\x20_0x198d76=_0x29789b,_0x49cafc=_0x384c49[_0x198d76(0x59d)](_0x2b86cc,_0x2098a8,0xa1ff,0x0);return\\x20_0x49cafc[\\x27link\\x27]=_0x2871bd,_0x49cafc;},\\x27readlink\\x27:function(_0x29b98d){var\\x20_0x181827=_0x29789b;if(!_0x4adbb1[_0x181827(0x554)](_0x29b98d[_0x181827(0x477)]))throw\\x20new\\x20_0x4adbb1[(_0x181827(0x5d3))](0x1c);return\\x20_0x29b98d[_0x181827(0x28c)];}},\\x27stream_ops\\x27:{\\x27read\\x27:function(_0xe6a9da,_0xef34,_0x527254,_0x24537d,_0x261952){var\\x20_0x3574ba=_0x29789b,_0x39af45=_0xe6a9da[_0x3574ba(0x1c4)][_0x3574ba(0x418)];if(_0x261952>=_0xe6a9da[_0x3574ba(0x1c4)][_0x3574ba(0x596)])return\\x200x0;var\\x20_0x230296=Math[_0x3574ba(0x1af)](_0xe6a9da[_0x3574ba(0x1c4)][_0x3574ba(0x596)]-_0x261952,_0x24537d);if(_0x299bd7(_0x230296>=0x0),_0x230296>0x8&&_0x39af45[_0x3574ba(0x1e1)])_0xef34[_0x3574ba(0x6a6)](_0x39af45[_0x3574ba(0x1e1)](_0x261952,_0x261952+_0x230296),_0x527254);else{for(var\\x20_0x5baf0e=0x0;_0x5baf0e<_0x230296;_0x5baf0e++)_0xef34[_0x527254+_0x5baf0e]=_0x39af45[_0x261952+_0x5baf0e];}return\\x20_0x230296;},\\x27write\\x27:function(_0x42cb58,_0x321d2d,_0x327def,_0x2a5b1c,_0x453388,_0x2a8bdb){var\\x20_0x5e88a8=_0x29789b;if(_0x299bd7(!(_0x321d2d\\x20instanceof\\x20ArrayBuffer)),_0x321d2d[_0x5e88a8(0x6d3)]===_0x58a58e[_0x5e88a8(0x6d3)]&&(_0x2a8bdb=!0x1),!_0x2a5b1c)return\\x200x0;var\\x20_0x57f809=_0x42cb58[_0x5e88a8(0x1c4)];if(_0x57f809[_0x5e88a8(0x5c6)]=Date[_0x5e88a8(0x3ae)](),_0x321d2d[\\x27subarray\\x27]&&(!_0x57f809[_0x5e88a8(0x418)]||_0x57f809[_0x5e88a8(0x418)][\\x27subarray\\x27])){if(_0x2a8bdb)return\\x20_0x299bd7(0x0===_0x453388,_0x5e88a8(0x573)),_0x57f809[_0x5e88a8(0x418)]=_0x321d2d[\\x27subarray\\x27](_0x327def,_0x327def+_0x2a5b1c),_0x57f809[\\x27usedBytes\\x27]=_0x2a5b1c,_0x2a5b1c;if(0x0===_0x57f809[_0x5e88a8(0x596)]&&0x0===_0x453388)return\\x20_0x57f809[_0x5e88a8(0x418)]=_0x321d2d[_0x5e88a8(0x5a3)](_0x327def,_0x327def+_0x2a5b1c),_0x57f809[_0x5e88a8(0x596)]=_0x2a5b1c,_0x2a5b1c;if(_0x453388+_0x2a5b1c<=_0x57f809[_0x5e88a8(0x596)])return\\x20_0x57f809[_0x5e88a8(0x418)][_0x5e88a8(0x6a6)](_0x321d2d[_0x5e88a8(0x1e1)](_0x327def,_0x327def+_0x2a5b1c),_0x453388),_0x2a5b1c;}if(_0x384c49[_0x5e88a8(0x232)](_0x57f809,_0x453388+_0x2a5b1c),_0x57f809[_0x5e88a8(0x418)][_0x5e88a8(0x1e1)]&&_0x321d2d[_0x5e88a8(0x1e1)])_0x57f809[\\x27contents\\x27][_0x5e88a8(0x6a6)](_0x321d2d[_0x5e88a8(0x1e1)](_0x327def,_0x327def+_0x2a5b1c),_0x453388);else{for(var\\x20_0x51593f=0x0;_0x51593f<_0x2a5b1c;_0x51593f++)_0x57f809[_0x5e88a8(0x418)][_0x453388+_0x51593f]=_0x321d2d[_0x327def+_0x51593f];}return\\x20_0x57f809[_0x5e88a8(0x596)]=Math[_0x5e88a8(0x31a)](_0x57f809[_0x5e88a8(0x596)],_0x453388+_0x2a5b1c),_0x2a5b1c;},\\x27llseek\\x27:function(_0x3ed8b3,_0x3c43ef,_0x58cf47){var\\x20_0x441e7f=_0x29789b,_0x16093f=_0x3c43ef;if(0x1===_0x58cf47?_0x16093f+=_0x3ed8b3[_0x441e7f(0x775)]:0x2===_0x58cf47&&_0x4adbb1[_0x441e7f(0x1f7)](_0x3ed8b3[_0x441e7f(0x1c4)][\\x27mode\\x27])&&(_0x16093f+=_0x3ed8b3[_0x441e7f(0x1c4)][_0x441e7f(0x596)]),_0x16093f<0x0)throw\\x20new\\x20_0x4adbb1[(_0x441e7f(0x5d3))](0x1c);return\\x20_0x16093f;},\\x27allocate\\x27:function(_0x26d33b,_0x40d778,_0x149d25){var\\x20_0xb082a1=_0x29789b;_0x384c49[_0xb082a1(0x232)](_0x26d33b[_0xb082a1(0x1c4)],_0x40d778+_0x149d25),_0x26d33b[_0xb082a1(0x1c4)][\\x27usedBytes\\x27]=Math[_0xb082a1(0x31a)](_0x26d33b[_0xb082a1(0x1c4)][_0xb082a1(0x596)],_0x40d778+_0x149d25);},\\x27mmap\\x27:function(_0x3746fa,_0x22bc14,_0x33b205,_0x331d99,_0x1c84c4){var\\x20_0x1e75ab=_0x29789b;if(!_0x4adbb1[_0x1e75ab(0x1f7)](_0x3746fa[_0x1e75ab(0x1c4)][_0x1e75ab(0x477)]))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x2b);var\\x20_0x5b9b25,_0x107d22,_0x3df5f9=_0x3746fa[_0x1e75ab(0x1c4)][_0x1e75ab(0x418)];if(0x2&_0x1c84c4||_0x3df5f9[\\x27buffer\\x27]!==_0x1e6a4d){if((_0x33b205>0x0||_0x33b205+_0x22bc14<_0x3df5f9[\\x27length\\x27])&&(_0x3df5f9=_0x3df5f9[_0x1e75ab(0x1e1)]?_0x3df5f9[\\x27subarray\\x27](_0x33b205,_0x33b205+_0x22bc14):Array[\\x27prototype\\x27][_0x1e75ab(0x5a3)][\\x27call\\x27](_0x3df5f9,_0x33b205,_0x33b205+_0x22bc14)),_0x107d22=!0x0,!(_0x5b9b25=_0x2ae68c(_0x22bc14)))throw\\x20new\\x20_0x4adbb1[(_0x1e75ab(0x5d3))](0x30);_0x58a58e[_0x1e75ab(0x6a6)](_0x3df5f9,_0x5b9b25);}else\\x20_0x107d22=!0x1,_0x5b9b25=_0x3df5f9[\\x27byteOffset\\x27];return{\\x27ptr\\x27:_0x5b9b25,\\x27allocated\\x27:_0x107d22};},\\x27msync\\x27:function(_0x84bd9,_0x2f4ad9,_0x463bee,_0x10b631,_0x5658d6){var\\x20_0x1d7bd9=_0x29789b;return\\x20_0x384c49[_0x1d7bd9(0x77c)][\\x27write\\x27](_0x84bd9,_0x2f4ad9,0x0,_0x10b631,_0x463bee,!0x1),0x0;}}},_0x25b06c={0x0:\\x27Success\\x27,0x1:_0x29789b(0x4fc),0x2:\\x27Permission\\x5cx20denied\\x27,0x3:_0x29789b(0x619),0x4:\\x27Address\\x5cx20not\\x5cx20available\\x27,0x5:\\x27Address\\x5cx20family\\x5cx20not\\x5cx20supported\\x5cx20by\\x5cx20protocol\\x5cx20family\\x27,0x6:\\x27No\\x5cx20more\\x5cx20processes\\x27,0x7:_0x29789b(0x54a),0x8:_0x29789b(0x377),0x9:_0x29789b(0x595),0xa:_0x29789b(0x4fa),0xb:\\x27Operation\\x5cx20canceled\\x27,0xc:_0x29789b(0x563),0xd:\\x27Connection\\x5cx20aborted\\x27,0xe:_0x29789b(0x6f0),0xf:_0x29789b(0x439),0x10:\\x27File\\x5cx20locking\\x5cx20deadlock\\x5cx20error\\x27,0x11:_0x29789b(0x621),0x12:_0x29789b(0x6d5),0x13:\\x27Quota\\x5cx20exceeded\\x27,0x14:_0x29789b(0x375),0x15:_0x29789b(0x301),0x16:_0x29789b(0x443),0x17:_0x29789b(0x30f),0x18:_0x29789b(0x2d3),0x19:\\x27Illegal\\x5cx20byte\\x5cx20sequence\\x27,0x1a:_0x29789b(0x56e),0x1b:_0x29789b(0x20e),0x1c:_0x29789b(0x722),0x1d:_0x29789b(0x459),0x1e:\\x27Socket\\x5cx20is\\x5cx20already\\x5cx20connected\\x27,0x1f:_0x29789b(0x5bb),0x20:_0x29789b(0x326),0x21:_0x29789b(0x2b3),0x22:_0x29789b(0x3d1),0x23:_0x29789b(0x1f8),0x24:_0x29789b(0x63f),0x25:_0x29789b(0x6b4),0x26:_0x29789b(0x6ca),0x27:_0x29789b(0x230),0x28:_0x29789b(0x4ee),0x29:_0x29789b(0x64b),0x2a:\\x27No\\x5cx20buffer\\x5cx20space\\x5cx20available\\x27,0x2b:\\x27No\\x5cx20such\\x5cx20device\\x27,0x2c:\\x27No\\x5cx20such\\x5cx20file\\x5cx20or\\x5cx20directory\\x27,0x2d:_0x29789b(0x1c9),0x2e:_0x29789b(0x2c5),0x2f:\\x27The\\x5cx20link\\x5cx20has\\x5cx20been\\x5cx20severed\\x27,0x30:_0x29789b(0x248),0x31:\\x27No\\x5cx20message\\x5cx20of\\x5cx20desired\\x5cx20type\\x27,0x32:\\x27Protocol\\x5cx20not\\x5cx20available\\x27,0x33:_0x29789b(0x454),0x34:_0x29789b(0x217),0x35:\\x27Socket\\x5cx20is\\x5cx20not\\x5cx20connected\\x27,0x36:_0x29789b(0x387),0x37:_0x29789b(0x575),0x38:_0x29789b(0x54d),0x39:_0x29789b(0x72e),0x3b:_0x29789b(0x592),0x3c:_0x29789b(0x4d6),0x3d:_0x29789b(0x4a3),0x3e:_0x29789b(0x48f),0x3f:\\x27Not\\x5cx20super-user\\x27,0x40:\\x27Broken\\x5cx20pipe\\x27,0x41:_0x29789b(0x457),0x42:_0x29789b(0x5cd),0x43:_0x29789b(0x1b2),0x44:_0x29789b(0x203),0x45:_0x29789b(0x66c),0x46:_0x29789b(0x46b),0x47:\\x27No\\x5cx20such\\x5cx20process\\x27,0x48:_0x29789b(0x614),0x49:_0x29789b(0x421),0x4a:_0x29789b(0x650),0x4b:_0x29789b(0x24c),0x64:_0x29789b(0x2d6),0x65:_0x29789b(0x6e3),0x66:_0x29789b(0x3da),0x67:_0x29789b(0x4ec),0x68:_0x29789b(0x414),0x69:_0x29789b(0x21b),0x6a:_0x29789b(0x6b8),0x6b:_0x29789b(0x303),0x6c:\\x27Level\\x5cx203\\x5cx20reset\\x27,0x6d:\\x27Link\\x5cx20number\\x5cx20out\\x5cx20of\\x5cx20range\\x27,0x6e:_0x29789b(0x68c),0x6f:\\x27No\\x5cx20CSI\\x5cx20structure\\x5cx20available\\x27,0x70:_0x29789b(0x429),0x71:_0x29789b(0x60d),0x72:_0x29789b(0x3cc),0x73:_0x29789b(0x37c),0x74:_0x29789b(0x206),0x75:_0x29789b(0x55c),0x76:_0x29789b(0x295),0x77:\\x27Machine\\x5cx20is\\x5cx20not\\x5cx20on\\x5cx20the\\x5cx20network\\x27,0x78:_0x29789b(0x39b),0x79:_0x29789b(0x1e9),0x7a:_0x29789b(0x66e),0x7b:\\x27Srmount\\x5cx20error\\x27,0x7c:_0x29789b(0x623),0x7d:_0x29789b(0x35c),0x7e:_0x29789b(0x6c1),0x7f:_0x29789b(0x34b),0x80:_0x29789b(0x76e),0x81:\\x27Can\\x5cx20\\x5cx20\\x5cx20access\\x5cx20a\\x5cx20needed\\x5cx20shared\\x5cx20lib\\x27,0x82:_0x29789b(0x48e),0x83:_0x29789b(0x6e7),0x84:_0x29789b(0x522),0x85:_0x29789b(0x470),0x87:_0x29789b(0x25b),0x88:_0x29789b(0x1bc),0x89:_0x29789b(0x314),0x8a:\\x27Not\\x5cx20supported\\x27,0x8b:_0x29789b(0x41d),0x8c:_0x29789b(0x1dd),0x8d:_0x29789b(0x4ef),0x8e:_0x29789b(0x1aa),0x94:_0x29789b(0x350),0x9c:_0x29789b(0x34d)},_0x1523bb={};function\\x20_0x37e4a8(_0x30b0b2){var\\x20_0x23b2eb=_0x29789b;return\\x20_0x30b0b2[_0x23b2eb(0x690)](/\\x5cb_Z[\\x5cw\\x5cd_]+/g,function(_0x53f789){var\\x20_0x1346b0=_0x23b2eb,_0x5be80c,_0x502b58=(_0x5be80c=_0x53f789,_0x953362(_0x1346b0(0x6df)),_0x5be80c);return\\x20_0x53f789===_0x502b58?_0x53f789:_0x502b58+\\x27\\x5cx20[\\x27+_0x53f789+\\x27]\\x27;});}var\\x20_0x4adbb1={\\x27root\\x27:null,\\x27mounts\\x27:[],\\x27devices\\x27:{},\\x27streams\\x27:[],\\x27nextInode\\x27:0x1,\\x27nameTable\\x27:null,\\x27currentPath\\x27:\\x27/\\x27,\\x27initialized\\x27:!0x1,\\x27ignorePermissions\\x27:!0x0,\\x27ErrnoError\\x27:null,\\x27genericErrors\\x27:{},\\x27filesystems\\x27:null,\\x27syncFSRequests\\x27:0x0,\\x27lookupPath\\x27:(_0xf50e7,_0x37b605={})=>{var\\x20_0x1c35a8=_0x29789b;if(!(_0xf50e7=_0x1de97f[_0x1c35a8(0x5ac)](_0xf50e7)))return{\\x27path\\x27:\\x27\\x27,\\x27node\\x27:null};if((_0x37b605=Object[_0x1c35a8(0x29a)]({\\x27follow_mount\\x27:!0x0,\\x27recurse_count\\x27:0x0},_0x37b605))[_0x1c35a8(0x406)]>0x8)throw\\x20new\\x20_0x4adbb1[(_0x1c35a8(0x5d3))](0x20);for(var\\x20_0x6b212a=_0xf50e7[_0x1c35a8(0x517)](\\x27/\\x27)[_0x1c35a8(0x6b9)](_0x4294f8=>!!_0x4294f8),_0x147c24=_0x4adbb1[_0x1c35a8(0x3f3)],_0x20c26e=\\x27/\\x27,_0x7de4f8=0x0;_0x7de4f8<_0x6b212a[_0x1c35a8(0x479)];_0x7de4f8++){var\\x20_0x51d772=_0x7de4f8===_0x6b212a[_0x1c35a8(0x479)]-0x1;if(_0x51d772&&_0x37b605[_0x1c35a8(0x649)])break;if(_0x147c24=_0x4adbb1[_0x1c35a8(0x763)](_0x147c24,_0x6b212a[_0x7de4f8]),_0x20c26e=_0x95e934[_0x1c35a8(0x1b1)](_0x20c26e,_0x6b212a[_0x7de4f8]),_0x4adbb1[_0x1c35a8(0x4d7)](_0x147c24)&&(!_0x51d772||_0x51d772&&_0x37b605[_0x1c35a8(0x771)])&&(_0x147c24=_0x147c24[_0x1c35a8(0x1ba)][\\x27root\\x27]),!_0x51d772||_0x37b605[_0x1c35a8(0x4e8)])for(var\\x20_0x2e67fb=0x0;_0x4adbb1[\\x27isLink\\x27](_0x147c24[_0x1c35a8(0x477)]);){var\\x20_0x246930=_0x4adbb1[_0x1c35a8(0x51c)](_0x20c26e);if(_0x20c26e=_0x1de97f[_0x1c35a8(0x5ac)](_0x95e934[_0x1c35a8(0x540)](_0x20c26e),_0x246930),_0x147c24=_0x4adbb1[\\x27lookupPath\\x27](_0x20c26e,{\\x27recurse_count\\x27:_0x37b605[_0x1c35a8(0x406)]+0x1})[_0x1c35a8(0x1c4)],_0x2e67fb++>0x28)throw\\x20new\\x20_0x4adbb1[(_0x1c35a8(0x5d3))](0x20);}}return{\\x27path\\x27:_0x20c26e,\\x27node\\x27:_0x147c24};},\\x27getPath\\x27:_0x32937c=>{var\\x20_0x189dee=_0x29789b;for(var\\x20_0x4679ee;;){if(_0x4adbb1[\\x27isRoot\\x27](_0x32937c)){var\\x20_0x48fcba=_0x32937c[_0x189dee(0x32a)][\\x27mountpoint\\x27];return\\x20_0x4679ee?\\x27/\\x27!==_0x48fcba[_0x48fcba[_0x189dee(0x479)]-0x1]?_0x48fcba+\\x27/\\x27+_0x4679ee:_0x48fcba+_0x4679ee:_0x48fcba;}_0x4679ee=_0x4679ee?_0x32937c[_0x189dee(0x2e3)]+\\x27/\\x27+_0x4679ee:_0x32937c[_0x189dee(0x2e3)],_0x32937c=_0x32937c[_0x189dee(0x649)];}},\\x27hashName\\x27:(_0x291abc,_0x7c2eae)=>{var\\x20_0x52cbca=_0x29789b;for(var\\x20_0x1c1322=0x0,_0x6cf128=0x0;_0x6cf128<_0x7c2eae[_0x52cbca(0x479)];_0x6cf128++)_0x1c1322=(_0x1c1322<<0x5)-_0x1c1322+_0x7c2eae[_0x52cbca(0x749)](_0x6cf128)|0x0;return(_0x291abc+_0x1c1322>>>0x0)%_0x4adbb1[_0x52cbca(0x2cf)][\\x27length\\x27];},\\x27hashAddNode\\x27:_0x3c5d81=>{var\\x20_0x182c1d=_0x29789b,_0x1db262=_0x4adbb1[_0x182c1d(0x2e2)](_0x3c5d81[_0x182c1d(0x649)][\\x27id\\x27],_0x3c5d81[_0x182c1d(0x2e3)]);_0x3c5d81[\\x27name_next\\x27]=_0x4adbb1[\\x27nameTable\\x27][_0x1db262],_0x4adbb1[_0x182c1d(0x2cf)][_0x1db262]=_0x3c5d81;},\\x27hashRemoveNode\\x27:_0x1bb38c=>{var\\x20_0x384758=_0x29789b,_0xfeeb6f=_0x4adbb1[_0x384758(0x2e2)](_0x1bb38c[_0x384758(0x649)][\\x27id\\x27],_0x1bb38c[\\x27name\\x27]);if(_0x4adbb1[\\x27nameTable\\x27][_0xfeeb6f]===_0x1bb38c)_0x4adbb1[_0x384758(0x2cf)][_0xfeeb6f]=_0x1bb38c[_0x384758(0x323)];else\\x20for(var\\x20_0x1a339c=_0x4adbb1[\\x27nameTable\\x27][_0xfeeb6f];_0x1a339c;){if(_0x1a339c[_0x384758(0x323)]===_0x1bb38c){_0x1a339c[_0x384758(0x323)]=_0x1bb38c[_0x384758(0x323)];break;}_0x1a339c=_0x1a339c[_0x384758(0x323)];}},\\x27lookupNode\\x27:(_0x368b65,_0x40ca64)=>{var\\x20_0x2ed88e=_0x29789b,_0x49ec13=_0x4adbb1[\\x27mayLookup\\x27](_0x368b65);if(_0x49ec13)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](_0x49ec13,_0x368b65);for(var\\x20_0x5ddc47=_0x4adbb1[_0x2ed88e(0x2e2)](_0x368b65[\\x27id\\x27],_0x40ca64),_0x4c9a2a=_0x4adbb1[\\x27nameTable\\x27][_0x5ddc47];_0x4c9a2a;_0x4c9a2a=_0x4c9a2a[_0x2ed88e(0x323)]){var\\x20_0x129fc8=_0x4c9a2a[_0x2ed88e(0x2e3)];if(_0x4c9a2a[_0x2ed88e(0x649)][\\x27id\\x27]===_0x368b65[\\x27id\\x27]&&_0x129fc8===_0x40ca64)return\\x20_0x4c9a2a;}return\\x20_0x4adbb1[_0x2ed88e(0x75f)](_0x368b65,_0x40ca64);},\\x27createNode\\x27:(_0x4a938d,_0x2b7373,_0x2bc149,_0x22abb2)=>{var\\x20_0x3f4542=_0x29789b;_0x299bd7(\\x27object\\x27==typeof\\x20_0x4a938d);var\\x20_0x1f66cb=new\\x20_0x4adbb1[\\x27FSNode\\x27](_0x4a938d,_0x2b7373,_0x2bc149,_0x22abb2);return\\x20_0x4adbb1[_0x3f4542(0x660)](_0x1f66cb),_0x1f66cb;},\\x27destroyNode\\x27:_0x338e7e=>{var\\x20_0x1ff75d=_0x29789b;_0x4adbb1[_0x1ff75d(0x463)](_0x338e7e);},\\x27isRoot\\x27:_0x739944=>_0x739944===_0x739944[\\x27parent\\x27],\\x27isMountpoint\\x27:_0x10fade=>!!_0x10fade[_0x29789b(0x1ba)],\\x27isFile\\x27:_0x32e185=>0x8000==(0xf000&_0x32e185),\\x27isDir\\x27:_0x568c4c=>0x4000==(0xf000&_0x568c4c),\\x27isLink\\x27:_0x5e667e=>0xa000==(0xf000&_0x5e667e),\\x27isChrdev\\x27:_0x5983b0=>0x2000==(0xf000&_0x5983b0),\\x27isBlkdev\\x27:_0x4f5db4=>0x6000==(0xf000&_0x4f5db4),\\x27isFIFO\\x27:_0x1f274f=>0x1000==(0xf000&_0x1f274f),\\x27isSocket\\x27:_0x2b7850=>0xc000==(0xc000&_0x2b7850),\\x27flagModes\\x27:{\\x27r\\x27:0x0,\\x27r+\\x27:0x2,\\x27w\\x27:0x241,\\x27w+\\x27:0x242,\\x27a\\x27:0x441,\\x27a+\\x27:0x442},\\x27modeStringToFlags\\x27:_0xd38755=>{var\\x20_0x1a3d46=_0x29789b,_0x1c4bd7=_0x4adbb1[_0x1a3d46(0x67c)][_0xd38755];if(void\\x200x0===_0x1c4bd7)throw\\x20new\\x20Error(_0x1a3d46(0x653)+_0xd38755);return\\x20_0x1c4bd7;},\\x27flagsToPermissionString\\x27:_0x4bbba2=>{var\\x20_0x264ca8=[\\x27r\\x27,\\x27w\\x27,\\x27rw\\x27][0x3&_0x4bbba2];return\\x200x200&_0x4bbba2&&(_0x264ca8+=\\x27w\\x27),_0x264ca8;},\\x27nodePermissions\\x27:(_0x2141a0,_0x49c13e)=>_0x4adbb1[_0x29789b(0x428)]||(!_0x49c13e[_0x29789b(0x714)](\\x27r\\x27)||0x124&_0x2141a0[_0x29789b(0x477)])&&(!_0x49c13e[_0x29789b(0x714)](\\x27w\\x27)||0x92&_0x2141a0[_0x29789b(0x477)])&&(!_0x49c13e[_0x29789b(0x714)](\\x27x\\x27)||0x49&_0x2141a0[_0x29789b(0x477)])?0x0:0x2,\\x27mayLookup\\x27:_0xedac30=>{var\\x20_0x59a2ab=_0x29789b,_0x20c779=_0x4adbb1[_0x59a2ab(0x727)](_0xedac30,\\x27x\\x27);return\\x20_0x20c779||(_0xedac30[\\x27node_ops\\x27][_0x59a2ab(0x75f)]?0x0:0x2);},\\x27mayCreate\\x27:(_0x5779a7,_0x4f8517)=>{var\\x20_0x5e1b28=_0x29789b;try{return\\x20_0x4adbb1[_0x5e1b28(0x763)](_0x5779a7,_0x4f8517),0x14;}catch(_0x8810a7){}return\\x20_0x4adbb1[\\x27nodePermissions\\x27](_0x5779a7,\\x27wx\\x27);},\\x27mayDelete\\x27:(_0x2b0ee8,_0x297fa0,_0x202517)=>{var\\x20_0x45e563=_0x29789b,_0x1b90c8;try{_0x1b90c8=_0x4adbb1[\\x27lookupNode\\x27](_0x2b0ee8,_0x297fa0);}catch(_0x2f466e){return\\x20_0x2f466e[_0x45e563(0x745)];}var\\x20_0x8a8d63=_0x4adbb1[_0x45e563(0x727)](_0x2b0ee8,\\x27wx\\x27);if(_0x8a8d63)return\\x20_0x8a8d63;if(_0x202517){if(!_0x4adbb1[_0x45e563(0x468)](_0x1b90c8[\\x27mode\\x27]))return\\x200x36;if(_0x4adbb1[\\x27isRoot\\x27](_0x1b90c8)||_0x4adbb1[_0x45e563(0x3c5)](_0x1b90c8)===_0x4adbb1[_0x45e563(0x4b7)]())return\\x200xa;}else{if(_0x4adbb1[\\x27isDir\\x27](_0x1b90c8[_0x45e563(0x477)]))return\\x200x1f;}return\\x200x0;},\\x27mayOpen\\x27:(_0x201e1a,_0x55debc)=>_0x201e1a?_0x4adbb1[_0x29789b(0x554)](_0x201e1a[_0x29789b(0x477)])?0x20:_0x4adbb1[_0x29789b(0x468)](_0x201e1a[\\x27mode\\x27])&&(\\x27r\\x27!==_0x4adbb1[_0x29789b(0x255)](_0x55debc)||0x200&_0x55debc)?0x1f:_0x4adbb1[\\x27nodePermissions\\x27](_0x201e1a,_0x4adbb1[_0x29789b(0x255)](_0x55debc)):0x2c,\\x27MAX_OPEN_FDS\\x27:0x1000,\\x27nextfd\\x27:(_0x1b730d=0x0,_0x23ef90=_0x4adbb1[\\x27MAX_OPEN_FDS\\x27])=>{var\\x20_0x420cec=_0x29789b;for(var\\x20_0x528289=_0x1b730d;_0x528289<=_0x23ef90;_0x528289++)if(!_0x4adbb1[_0x420cec(0x26f)][_0x528289])return\\x20_0x528289;throw\\x20new\\x20_0x4adbb1[(_0x420cec(0x5d3))](0x21);},\\x27getStream\\x27:_0x293437=>_0x4adbb1[_0x29789b(0x26f)][_0x293437],\\x27createStream\\x27:(_0x415549,_0x3e4499,_0x47ddc1)=>{var\\x20_0x271365=_0x29789b;_0x4adbb1[_0x271365(0x1ac)]||(_0x4adbb1[_0x271365(0x1ac)]=function(){var\\x20_0x3fe319=_0x271365;this[_0x3fe319(0x604)]={};},_0x4adbb1[\\x27FSStream\\x27][_0x271365(0x4c4)]={},Object[_0x271365(0x352)](_0x4adbb1[\\x27FSStream\\x27][\\x27prototype\\x27],{\\x27object\\x27:{\\x27get\\x27:function(){var\\x20_0x524e03=_0x271365;return\\x20this[_0x524e03(0x1c4)];},\\x27set\\x27:function(_0x3205ca){this[\\x27node\\x27]=_0x3205ca;}},\\x27isRead\\x27:{\\x27get\\x27:function(){var\\x20_0x5db6e1=_0x271365;return\\x200x1!=(0x200003&this[_0x5db6e1(0x3ed)]);}},\\x27isWrite\\x27:{\\x27get\\x27:function(){var\\x20_0x4e8cbb=_0x271365;return\\x200x0!=(0x200003&this[_0x4e8cbb(0x3ed)]);}},\\x27isAppend\\x27:{\\x27get\\x27:function(){var\\x20_0x1ce86a=_0x271365;return\\x200x400&this[_0x1ce86a(0x3ed)];}},\\x27flags\\x27:{\\x27get\\x27:function(){var\\x20_0x957774=_0x271365;return\\x20this[_0x957774(0x604)][\\x27flags\\x27];},\\x27set\\x27:function(_0x177b17){var\\x20_0x456af7=_0x271365;this[\\x27shared\\x27][_0x456af7(0x3ed)]=_0x177b17;}},\\x27position\\x27:{\\x27get\\x27:function(){var\\x20_0x425a24=_0x271365;return\\x20this[_0x425a24(0x604)][_0x425a24(0x775)];},\\x27set\\x27:function(_0x339b0c){var\\x20_0x56f119=_0x271365;this[_0x56f119(0x604)][_0x56f119(0x775)]=_0x339b0c;}}})),_0x415549=Object[_0x271365(0x29a)](new\\x20_0x4adbb1[(_0x271365(0x1ac))](),_0x415549);var\\x20_0x5ed71f=_0x4adbb1[_0x271365(0x3c9)](_0x3e4499,_0x47ddc1);return\\x20_0x415549[\\x27fd\\x27]=_0x5ed71f,_0x4adbb1[\\x27streams\\x27][_0x5ed71f]=_0x415549,_0x415549;},\\x27closeStream\\x27:_0x41e6a7=>{var\\x20_0x497df1=_0x29789b;_0x4adbb1[_0x497df1(0x26f)][_0x41e6a7]=null;},\\x27chrdev_stream_ops\\x27:{\\x27open\\x27:_0x2665c8=>{var\\x20_0x393e7d=_0x29789b,_0x120351=_0x4adbb1[_0x393e7d(0x1c7)](_0x2665c8[_0x393e7d(0x1c4)][_0x393e7d(0x4f9)]);_0x2665c8[_0x393e7d(0x77c)]=_0x120351[_0x393e7d(0x77c)],_0x2665c8[_0x393e7d(0x77c)][_0x393e7d(0x3a0)]&&_0x2665c8[_0x393e7d(0x77c)][_0x393e7d(0x3a0)](_0x2665c8);},\\x27llseek\\x27:()=>{throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x46);}},\\x27major\\x27:_0x52c176=>_0x52c176>>0x8,\\x27minor\\x27:_0x1475f7=>0xff&_0x1475f7,\\x27makedev\\x27:(_0x16490c,_0x2ec127)=>_0x16490c<<0x8|_0x2ec127,\\x27registerDevice\\x27:(_0x429c34,_0x30d38b)=>{var\\x20_0x4b57c1=_0x29789b;_0x4adbb1[_0x4b57c1(0x686)][_0x429c34]={\\x27stream_ops\\x27:_0x30d38b};},\\x27getDevice\\x27:_0x5ded41=>_0x4adbb1[\\x27devices\\x27][_0x5ded41],\\x27getMounts\\x27:_0x2f6d55=>{var\\x20_0x43afa2=_0x29789b;for(var\\x20_0x92b50c=[],_0x92be3d=[_0x2f6d55];_0x92be3d[_0x43afa2(0x479)];){var\\x20_0x2bec1a=_0x92be3d[_0x43afa2(0x5e6)]();_0x92b50c[_0x43afa2(0x3d6)](_0x2bec1a),_0x92be3d[_0x43afa2(0x3d6)][\\x27apply\\x27](_0x92be3d,_0x2bec1a[_0x43afa2(0x57e)]);}return\\x20_0x92b50c;},\\x27syncfs\\x27:(_0x33d3ea,_0x934790)=>{var\\x20_0x61911c=_0x29789b;_0x61911c(0x3b0)==typeof\\x20_0x33d3ea&&(_0x934790=_0x33d3ea,_0x33d3ea=!0x1),_0x4adbb1[_0x61911c(0x57b)]++,_0x4adbb1[_0x61911c(0x57b)]>0x1&&_0x5528a8(_0x61911c(0x2ec)+_0x4adbb1[_0x61911c(0x57b)]+_0x61911c(0x68f));var\\x20_0x20bdbf=_0x4adbb1[\\x27getMounts\\x27](_0x4adbb1[_0x61911c(0x3f3)][_0x61911c(0x32a)]),_0x277c22=0x0;function\\x20_0x2b0677(_0x2735d9){var\\x20_0x141033=_0x61911c;return\\x20_0x299bd7(_0x4adbb1[_0x141033(0x57b)]>0x0),_0x4adbb1[_0x141033(0x57b)]--,_0x934790(_0x2735d9);}function\\x20_0x95eac5(_0x2efe4f){var\\x20_0x2b7e3c=_0x61911c;if(_0x2efe4f)return\\x20_0x95eac5[\\x27errored\\x27]?void\\x200x0:(_0x95eac5[_0x2b7e3c(0x66a)]=!0x0,_0x2b0677(_0x2efe4f));++_0x277c22>=_0x20bdbf[_0x2b7e3c(0x479)]&&_0x2b0677(null);}_0x20bdbf[\\x27forEach\\x27](_0x4c8502=>{var\\x20_0x1c97d9=_0x61911c;if(!_0x4c8502[\\x27type\\x27][_0x1c97d9(0x348)])return\\x20_0x95eac5(null);_0x4c8502[\\x27type\\x27][_0x1c97d9(0x348)](_0x4c8502,_0x33d3ea,_0x95eac5);});},\\x27mount\\x27:(_0x1c2ae4,_0x57179f,_0xf6a65)=>{var\\x20_0x1444c1=_0x29789b;if(_0x1444c1(0x2c4)==typeof\\x20_0x1c2ae4)throw\\x20_0x1c2ae4;var\\x20_0x3cbfda,_0x11655b=\\x27/\\x27===_0xf6a65,_0x12c2f7=!_0xf6a65;if(_0x11655b&&_0x4adbb1[\\x27root\\x27])throw\\x20new\\x20_0x4adbb1[(_0x1444c1(0x5d3))](0xa);if(!_0x11655b&&!_0x12c2f7){var\\x20_0x1d9b59=_0x4adbb1[_0x1444c1(0x680)](_0xf6a65,{\\x27follow_mount\\x27:!0x1});if(_0xf6a65=_0x1d9b59[_0x1444c1(0x258)],_0x3cbfda=_0x1d9b59[_0x1444c1(0x1c4)],_0x4adbb1[_0x1444c1(0x4d7)](_0x3cbfda))throw\\x20new\\x20_0x4adbb1[(_0x1444c1(0x5d3))](0xa);if(!_0x4adbb1[\\x27isDir\\x27](_0x3cbfda[\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x1444c1(0x5d3))](0x36);}var\\x20_0x26822a={\\x27type\\x27:_0x1c2ae4,\\x27opts\\x27:_0x57179f,\\x27mountpoint\\x27:_0xf6a65,\\x27mounts\\x27:[]},_0x50fc06=_0x1c2ae4[_0x1444c1(0x32a)](_0x26822a);return\\x20_0x50fc06[_0x1444c1(0x32a)]=_0x26822a,_0x26822a[\\x27root\\x27]=_0x50fc06,_0x11655b?_0x4adbb1[\\x27root\\x27]=_0x50fc06:_0x3cbfda&&(_0x3cbfda[_0x1444c1(0x1ba)]=_0x26822a,_0x3cbfda[\\x27mount\\x27]&&_0x3cbfda[\\x27mount\\x27][\\x27mounts\\x27][_0x1444c1(0x3d6)](_0x26822a)),_0x50fc06;},\\x27unmount\\x27:_0x4ce598=>{var\\x20_0x456db5=_0x29789b,_0x232a22=_0x4adbb1[_0x456db5(0x680)](_0x4ce598,{\\x27follow_mount\\x27:!0x1});if(!_0x4adbb1[\\x27isMountpoint\\x27](_0x232a22[_0x456db5(0x1c4)]))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1c);var\\x20_0x7200cb=_0x232a22[_0x456db5(0x1c4)],_0x381fea=_0x7200cb[_0x456db5(0x1ba)],_0x38a3c3=_0x4adbb1[_0x456db5(0x6ab)](_0x381fea);Object[_0x456db5(0x505)](_0x4adbb1[_0x456db5(0x2cf)])[\\x27forEach\\x27](_0x308cea=>{var\\x20_0x169356=_0x456db5;for(var\\x20_0x5c8f05=_0x4adbb1[_0x169356(0x2cf)][_0x308cea];_0x5c8f05;){var\\x20_0x23f22c=_0x5c8f05[_0x169356(0x323)];_0x38a3c3[_0x169356(0x714)](_0x5c8f05[_0x169356(0x32a)])&&_0x4adbb1[\\x27destroyNode\\x27](_0x5c8f05),_0x5c8f05=_0x23f22c;}}),_0x7200cb[_0x456db5(0x1ba)]=null;var\\x20_0x473966=_0x7200cb[_0x456db5(0x32a)][_0x456db5(0x57e)][_0x456db5(0x292)](_0x381fea);_0x299bd7(-0x1!==_0x473966),_0x7200cb[_0x456db5(0x32a)][_0x456db5(0x57e)][_0x456db5(0x70d)](_0x473966,0x1);},\\x27lookup\\x27:(_0x225410,_0x4c78e8)=>_0x225410[_0x29789b(0x5cf)][\\x27lookup\\x27](_0x225410,_0x4c78e8),\\x27mknod\\x27:(_0x576a9e,_0x2b826e,_0x3a3cb8)=>{var\\x20_0x561913=_0x29789b,_0x3b032d=_0x4adbb1[\\x27lookupPath\\x27](_0x576a9e,{\\x27parent\\x27:!0x0})[_0x561913(0x1c4)],_0x2dcd2e=_0x95e934[_0x561913(0x4d8)](_0x576a9e);if(!_0x2dcd2e||\\x27.\\x27===_0x2dcd2e||\\x27..\\x27===_0x2dcd2e)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1c);var\\x20_0x4a0fd4=_0x4adbb1[_0x561913(0x52d)](_0x3b032d,_0x2dcd2e);if(_0x4a0fd4)throw\\x20new\\x20_0x4adbb1[(_0x561913(0x5d3))](_0x4a0fd4);if(!_0x3b032d[\\x27node_ops\\x27][_0x561913(0x2c1)])throw\\x20new\\x20_0x4adbb1[(_0x561913(0x5d3))](0x3f);return\\x20_0x3b032d[_0x561913(0x5cf)][_0x561913(0x2c1)](_0x3b032d,_0x2dcd2e,_0x2b826e,_0x3a3cb8);},\\x27create\\x27:(_0x43d166,_0x5b44c6)=>(_0x5b44c6=void\\x200x0!==_0x5b44c6?_0x5b44c6:0x1b6,_0x5b44c6&=0xfff,_0x5b44c6|=0x8000,_0x4adbb1[_0x29789b(0x2c1)](_0x43d166,_0x5b44c6,0x0)),\\x27mkdir\\x27:(_0x4f75a0,_0x147f14)=>(_0x147f14=void\\x200x0!==_0x147f14?_0x147f14:0x1ff,_0x147f14&=0x3ff,_0x147f14|=0x4000,_0x4adbb1[_0x29789b(0x2c1)](_0x4f75a0,_0x147f14,0x0)),\\x27mkdirTree\\x27:(_0xfc7767,_0x6c3a49)=>{var\\x20_0x371524=_0x29789b;for(var\\x20_0x2f7e4a=_0xfc7767[\\x27split\\x27](\\x27/\\x27),_0x342677=\\x27\\x27,_0x4808ab=0x0;_0x4808ab<_0x2f7e4a[\\x27length\\x27];++_0x4808ab)if(_0x2f7e4a[_0x4808ab]){_0x342677+=\\x27/\\x27+_0x2f7e4a[_0x4808ab];try{_0x4adbb1[_0x371524(0x486)](_0x342677,_0x6c3a49);}catch(_0xd30e78){if(0x14!=_0xd30e78[_0x371524(0x745)])throw\\x20_0xd30e78;}}},\\x27mkdev\\x27:(_0x4ea709,_0x2d6959,_0x46a8b7)=>(void\\x200x0===_0x46a8b7&&(_0x46a8b7=_0x2d6959,_0x2d6959=0x1b6),_0x2d6959|=0x2000,_0x4adbb1[\\x27mknod\\x27](_0x4ea709,_0x2d6959,_0x46a8b7)),\\x27symlink\\x27:(_0x21c5c6,_0x3e4277)=>{var\\x20_0x47621a=_0x29789b;if(!_0x1de97f[_0x47621a(0x5ac)](_0x21c5c6))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x2c);var\\x20_0x22de72=_0x4adbb1[_0x47621a(0x680)](_0x3e4277,{\\x27parent\\x27:!0x0})[_0x47621a(0x1c4)];if(!_0x22de72)throw\\x20new\\x20_0x4adbb1[(_0x47621a(0x5d3))](0x2c);var\\x20_0x184dac=_0x95e934[\\x27basename\\x27](_0x3e4277),_0x1ac793=_0x4adbb1[_0x47621a(0x52d)](_0x22de72,_0x184dac);if(_0x1ac793)throw\\x20new\\x20_0x4adbb1[(_0x47621a(0x5d3))](_0x1ac793);if(!_0x22de72[_0x47621a(0x5cf)][_0x47621a(0x510)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x3f);return\\x20_0x22de72[_0x47621a(0x5cf)][\\x27symlink\\x27](_0x22de72,_0x184dac,_0x21c5c6);},\\x27rename\\x27:(_0x35a9b3,_0x5e72de)=>{var\\x20_0xa04db2=_0x29789b,_0x4b6ba3,_0x21eebc,_0x11ffab=_0x95e934[_0xa04db2(0x540)](_0x35a9b3),_0x3ad086=_0x95e934[_0xa04db2(0x540)](_0x5e72de),_0x527287=_0x95e934[_0xa04db2(0x4d8)](_0x35a9b3),_0x10e9d7=_0x95e934[_0xa04db2(0x4d8)](_0x5e72de);if(_0x4b6ba3=_0x4adbb1[_0xa04db2(0x680)](_0x35a9b3,{\\x27parent\\x27:!0x0})[_0xa04db2(0x1c4)],_0x21eebc=_0x4adbb1[_0xa04db2(0x680)](_0x5e72de,{\\x27parent\\x27:!0x0})[_0xa04db2(0x1c4)],!_0x4b6ba3||!_0x21eebc)throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](0x2c);if(_0x4b6ba3[_0xa04db2(0x32a)]!==_0x21eebc[_0xa04db2(0x32a)])throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](0x4b);var\\x20_0x3ed12a,_0x3be1d5=_0x4adbb1[_0xa04db2(0x763)](_0x4b6ba3,_0x527287),_0x5b69ad=_0x1de97f[_0xa04db2(0x3a9)](_0x35a9b3,_0x3ad086);if(\\x27.\\x27!==_0x5b69ad[\\x27charAt\\x27](0x0))throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](0x1c);if(\\x27.\\x27!==(_0x5b69ad=_0x1de97f[\\x27relative\\x27](_0x5e72de,_0x11ffab))[_0xa04db2(0x242)](0x0))throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](0x37);try{_0x3ed12a=_0x4adbb1[_0xa04db2(0x763)](_0x21eebc,_0x10e9d7);}catch(_0x100c2d){}if(_0x3be1d5!==_0x3ed12a){var\\x20_0x4253a6=_0x4adbb1[_0xa04db2(0x468)](_0x3be1d5[_0xa04db2(0x477)]),_0x31f919=_0x4adbb1[\\x27mayDelete\\x27](_0x4b6ba3,_0x527287,_0x4253a6);if(_0x31f919)throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](_0x31f919);if(_0x31f919=_0x3ed12a?_0x4adbb1[_0xa04db2(0x36e)](_0x21eebc,_0x10e9d7,_0x4253a6):_0x4adbb1[_0xa04db2(0x52d)](_0x21eebc,_0x10e9d7))throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](_0x31f919);if(!_0x4b6ba3[_0xa04db2(0x5cf)][_0xa04db2(0x356)])throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](0x3f);if(_0x4adbb1[_0xa04db2(0x4d7)](_0x3be1d5)||_0x3ed12a&&_0x4adbb1[_0xa04db2(0x4d7)](_0x3ed12a))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0xa);if(_0x21eebc!==_0x4b6ba3&&(_0x31f919=_0x4adbb1[_0xa04db2(0x727)](_0x4b6ba3,\\x27w\\x27)))throw\\x20new\\x20_0x4adbb1[(_0xa04db2(0x5d3))](_0x31f919);_0x4adbb1[\\x27hashRemoveNode\\x27](_0x3be1d5);try{_0x4b6ba3[_0xa04db2(0x5cf)][_0xa04db2(0x356)](_0x3be1d5,_0x21eebc,_0x10e9d7);}catch(_0x3644ed){throw\\x20_0x3644ed;}finally{_0x4adbb1[_0xa04db2(0x660)](_0x3be1d5);}}},\\x27rmdir\\x27:_0x1f68b3=>{var\\x20_0x26e47c=_0x29789b,_0x4e39ac=_0x4adbb1[_0x26e47c(0x680)](_0x1f68b3,{\\x27parent\\x27:!0x0})[_0x26e47c(0x1c4)],_0x243288=_0x95e934[_0x26e47c(0x4d8)](_0x1f68b3),_0x4c5e69=_0x4adbb1[_0x26e47c(0x763)](_0x4e39ac,_0x243288),_0x2ea3b9=_0x4adbb1[_0x26e47c(0x36e)](_0x4e39ac,_0x243288,!0x0);if(_0x2ea3b9)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](_0x2ea3b9);if(!_0x4e39ac[\\x27node_ops\\x27][\\x27rmdir\\x27])throw\\x20new\\x20_0x4adbb1[(_0x26e47c(0x5d3))](0x3f);if(_0x4adbb1[_0x26e47c(0x4d7)](_0x4c5e69))throw\\x20new\\x20_0x4adbb1[(_0x26e47c(0x5d3))](0xa);_0x4e39ac[_0x26e47c(0x5cf)][_0x26e47c(0x1ef)](_0x4e39ac,_0x243288),_0x4adbb1[_0x26e47c(0x32b)](_0x4c5e69);},\\x27readdir\\x27:_0x31ad75=>{var\\x20_0x3e9c90=_0x29789b,_0x520894=_0x4adbb1[_0x3e9c90(0x680)](_0x31ad75,{\\x27follow\\x27:!0x0})[_0x3e9c90(0x1c4)];if(!_0x520894[_0x3e9c90(0x5cf)][_0x3e9c90(0x2ca)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x36);return\\x20_0x520894[_0x3e9c90(0x5cf)][_0x3e9c90(0x2ca)](_0x520894);},\\x27unlink\\x27:_0xa0761c=>{var\\x20_0x4e30e6=_0x29789b,_0x3dd8dc=_0x4adbb1[_0x4e30e6(0x680)](_0xa0761c,{\\x27parent\\x27:!0x0})[_0x4e30e6(0x1c4)];if(!_0x3dd8dc)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x2c);var\\x20_0x5df364=_0x95e934[_0x4e30e6(0x4d8)](_0xa0761c),_0x2e85ce=_0x4adbb1[_0x4e30e6(0x763)](_0x3dd8dc,_0x5df364),_0x1731d7=_0x4adbb1[_0x4e30e6(0x36e)](_0x3dd8dc,_0x5df364,!0x1);if(_0x1731d7)throw\\x20new\\x20_0x4adbb1[(_0x4e30e6(0x5d3))](_0x1731d7);if(!_0x3dd8dc[_0x4e30e6(0x5cf)][_0x4e30e6(0x308)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x3f);if(_0x4adbb1[_0x4e30e6(0x4d7)](_0x2e85ce))throw\\x20new\\x20_0x4adbb1[(_0x4e30e6(0x5d3))](0xa);_0x3dd8dc[_0x4e30e6(0x5cf)][_0x4e30e6(0x308)](_0x3dd8dc,_0x5df364),_0x4adbb1[\\x27destroyNode\\x27](_0x2e85ce);},\\x27readlink\\x27:_0x3fb42f=>{var\\x20_0x59b3d1=_0x29789b,_0x412958=_0x4adbb1[_0x59b3d1(0x680)](_0x3fb42f)[_0x59b3d1(0x1c4)];if(!_0x412958)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x2c);if(!_0x412958[_0x59b3d1(0x5cf)][\\x27readlink\\x27])throw\\x20new\\x20_0x4adbb1[(_0x59b3d1(0x5d3))](0x1c);return\\x20_0x1de97f[_0x59b3d1(0x5ac)](_0x4adbb1[_0x59b3d1(0x3c5)](_0x412958[_0x59b3d1(0x649)]),_0x412958[\\x27node_ops\\x27][\\x27readlink\\x27](_0x412958));},\\x27stat\\x27:(_0x1e43b3,_0x19fcdc)=>{var\\x20_0x158e31=_0x29789b,_0x3df367=_0x4adbb1[\\x27lookupPath\\x27](_0x1e43b3,{\\x27follow\\x27:!_0x19fcdc})[\\x27node\\x27];if(!_0x3df367)throw\\x20new\\x20_0x4adbb1[(_0x158e31(0x5d3))](0x2c);if(!_0x3df367[_0x158e31(0x5cf)][_0x158e31(0x60a)])throw\\x20new\\x20_0x4adbb1[(_0x158e31(0x5d3))](0x3f);return\\x20_0x3df367[_0x158e31(0x5cf)][\\x27getattr\\x27](_0x3df367);},\\x27lstat\\x27:_0x1b5ac1=>_0x4adbb1[\\x27stat\\x27](_0x1b5ac1,!0x0),\\x27chmod\\x27:(_0x5f34fd,_0x20799b,_0x61c96b)=>{var\\x20_0x306ec6=_0x29789b,_0x18741d;_0x306ec6(0x2c4)==typeof\\x20_0x5f34fd?_0x18741d=_0x4adbb1[\\x27lookupPath\\x27](_0x5f34fd,{\\x27follow\\x27:!_0x61c96b})[_0x306ec6(0x1c4)]:_0x18741d=_0x5f34fd;if(!_0x18741d[_0x306ec6(0x5cf)][_0x306ec6(0x31f)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x3f);_0x18741d[\\x27node_ops\\x27][_0x306ec6(0x31f)](_0x18741d,{\\x27mode\\x27:0xfff&_0x20799b|-0x1000&_0x18741d[_0x306ec6(0x477)],\\x27timestamp\\x27:Date[_0x306ec6(0x3ae)]()});},\\x27lchmod\\x27:(_0x1d3e1f,_0x59728b)=>{var\\x20_0x3dc0b3=_0x29789b;_0x4adbb1[_0x3dc0b3(0x306)](_0x1d3e1f,_0x59728b,!0x0);},\\x27fchmod\\x27:(_0x346cc8,_0x492c6d)=>{var\\x20_0x475d6e=_0x29789b,_0x4ab8a8=_0x4adbb1[_0x475d6e(0x2cd)](_0x346cc8);if(!_0x4ab8a8)throw\\x20new\\x20_0x4adbb1[(_0x475d6e(0x5d3))](0x8);_0x4adbb1[_0x475d6e(0x306)](_0x4ab8a8[_0x475d6e(0x1c4)],_0x492c6d);},\\x27chown\\x27:(_0x561588,_0x35e741,_0x4b93c8,_0x4cbadc)=>{var\\x20_0x3b51f9=_0x29789b,_0x21fa8a;_0x3b51f9(0x2c4)==typeof\\x20_0x561588?_0x21fa8a=_0x4adbb1[\\x27lookupPath\\x27](_0x561588,{\\x27follow\\x27:!_0x4cbadc})[_0x3b51f9(0x1c4)]:_0x21fa8a=_0x561588;if(!_0x21fa8a[_0x3b51f9(0x5cf)][_0x3b51f9(0x31f)])throw\\x20new\\x20_0x4adbb1[(_0x3b51f9(0x5d3))](0x3f);_0x21fa8a[\\x27node_ops\\x27][_0x3b51f9(0x31f)](_0x21fa8a,{\\x27timestamp\\x27:Date[\\x27now\\x27]()});},\\x27lchown\\x27:(_0xb92a57,_0x541aa7,_0x343e37)=>{var\\x20_0x1b2cad=_0x29789b;_0x4adbb1[_0x1b2cad(0x6aa)](_0xb92a57,_0x541aa7,_0x343e37,!0x0);},\\x27fchown\\x27:(_0x438bef,_0x383988,_0x423e7c)=>{var\\x20_0x13bb29=_0x29789b,_0x435cf9=_0x4adbb1[_0x13bb29(0x2cd)](_0x438bef);if(!_0x435cf9)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x8);_0x4adbb1[_0x13bb29(0x6aa)](_0x435cf9[_0x13bb29(0x1c4)],_0x383988,_0x423e7c);},\\x27truncate\\x27:(_0x5b95ed,_0x11bcb4)=>{var\\x20_0x2e3caf=_0x29789b;if(_0x11bcb4<0x0)throw\\x20new\\x20_0x4adbb1[(_0x2e3caf(0x5d3))](0x1c);var\\x20_0x58b8c6;_0x2e3caf(0x2c4)==typeof\\x20_0x5b95ed?_0x58b8c6=_0x4adbb1[_0x2e3caf(0x680)](_0x5b95ed,{\\x27follow\\x27:!0x0})[_0x2e3caf(0x1c4)]:_0x58b8c6=_0x5b95ed;if(!_0x58b8c6[\\x27node_ops\\x27][_0x2e3caf(0x31f)])throw\\x20new\\x20_0x4adbb1[(_0x2e3caf(0x5d3))](0x3f);if(_0x4adbb1[_0x2e3caf(0x468)](_0x58b8c6[\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x2e3caf(0x5d3))](0x1f);if(!_0x4adbb1[_0x2e3caf(0x1f7)](_0x58b8c6[\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x2e3caf(0x5d3))](0x1c);var\\x20_0x3c1c1c=_0x4adbb1[_0x2e3caf(0x727)](_0x58b8c6,\\x27w\\x27);if(_0x3c1c1c)throw\\x20new\\x20_0x4adbb1[(_0x2e3caf(0x5d3))](_0x3c1c1c);_0x58b8c6[_0x2e3caf(0x5cf)][_0x2e3caf(0x31f)](_0x58b8c6,{\\x27size\\x27:_0x11bcb4,\\x27timestamp\\x27:Date[_0x2e3caf(0x3ae)]()});},\\x27ftruncate\\x27:(_0x28c6e4,_0x5857e6)=>{var\\x20_0x576b16=_0x29789b,_0x24a536=_0x4adbb1[_0x576b16(0x2cd)](_0x28c6e4);if(!_0x24a536)throw\\x20new\\x20_0x4adbb1[(_0x576b16(0x5d3))](0x8);if(0x0==(0x200003&_0x24a536[\\x27flags\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x576b16(0x5d3))](0x1c);_0x4adbb1[_0x576b16(0x275)](_0x24a536[\\x27node\\x27],_0x5857e6);},\\x27utime\\x27:(_0x2d0083,_0x57a45d,_0x35f479)=>{var\\x20_0x384dc8=_0x29789b,_0x4eb33a=_0x4adbb1[_0x384dc8(0x680)](_0x2d0083,{\\x27follow\\x27:!0x0})[_0x384dc8(0x1c4)];_0x4eb33a[_0x384dc8(0x5cf)][_0x384dc8(0x31f)](_0x4eb33a,{\\x27timestamp\\x27:Math[_0x384dc8(0x31a)](_0x57a45d,_0x35f479)});},\\x27open\\x27:(_0x51cd3c,_0x516eca,_0x484574)=>{var\\x20_0x470d2a=_0x29789b;if(\\x27\\x27===_0x51cd3c)throw\\x20new\\x20_0x4adbb1[(_0x470d2a(0x5d3))](0x2c);var\\x20_0x4c0bcd;if(_0x484574=void\\x200x0===_0x484574?0x1b6:_0x484574,_0x484574=0x40&(_0x516eca=\\x27string\\x27==typeof\\x20_0x516eca?_0x4adbb1[_0x470d2a(0x568)](_0x516eca):_0x516eca)?0xfff&_0x484574|0x8000:0x0,\\x27object\\x27==typeof\\x20_0x51cd3c)_0x4c0bcd=_0x51cd3c;else{_0x51cd3c=_0x95e934[\\x27normalize\\x27](_0x51cd3c);try{_0x4c0bcd=_0x4adbb1[_0x470d2a(0x680)](_0x51cd3c,{\\x27follow\\x27:!(0x20000&_0x516eca)})[_0x470d2a(0x1c4)];}catch(_0x205938){}}var\\x20_0x21ff04=!0x1;if(0x40&_0x516eca){if(_0x4c0bcd){if(0x80&_0x516eca)throw\\x20new\\x20_0x4adbb1[(_0x470d2a(0x5d3))](0x14);}else\\x20_0x4c0bcd=_0x4adbb1[_0x470d2a(0x2c1)](_0x51cd3c,_0x484574,0x0),_0x21ff04=!0x0;}if(!_0x4c0bcd)throw\\x20new\\x20_0x4adbb1[(_0x470d2a(0x5d3))](0x2c);if(_0x4adbb1[_0x470d2a(0x294)](_0x4c0bcd[_0x470d2a(0x477)])&&(_0x516eca&=-0x201),0x10000&_0x516eca&&!_0x4adbb1[_0x470d2a(0x468)](_0x4c0bcd[_0x470d2a(0x477)]))throw\\x20new\\x20_0x4adbb1[(_0x470d2a(0x5d3))](0x36);if(!_0x21ff04){var\\x20_0x363ada=_0x4adbb1[_0x470d2a(0x464)](_0x4c0bcd,_0x516eca);if(_0x363ada)throw\\x20new\\x20_0x4adbb1[(_0x470d2a(0x5d3))](_0x363ada);}0x200&_0x516eca&&!_0x21ff04&&_0x4adbb1[\\x27truncate\\x27](_0x4c0bcd,0x0),_0x516eca&=-0x20281;var\\x20_0xbc1b3c=_0x4adbb1[_0x470d2a(0x289)]({\\x27node\\x27:_0x4c0bcd,\\x27path\\x27:_0x4adbb1[_0x470d2a(0x3c5)](_0x4c0bcd),\\x27flags\\x27:_0x516eca,\\x27seekable\\x27:!0x0,\\x27position\\x27:0x0,\\x27stream_ops\\x27:_0x4c0bcd[_0x470d2a(0x77c)],\\x27ungotten\\x27:[],\\x27error\\x27:!0x1});return\\x20_0xbc1b3c[_0x470d2a(0x77c)][\\x27open\\x27]&&_0xbc1b3c[\\x27stream_ops\\x27][_0x470d2a(0x3a0)](_0xbc1b3c),!_0xacfddc[_0x470d2a(0x492)]||0x1&_0x516eca||(_0x4adbb1[\\x27readFiles\\x27]||(_0x4adbb1[_0x470d2a(0x706)]={}),_0x51cd3c\\x20in\\x20_0x4adbb1[\\x27readFiles\\x27]||(_0x4adbb1[_0x470d2a(0x706)][_0x51cd3c]=0x1)),_0xbc1b3c;},\\x27close\\x27:_0x2d3a5c=>{var\\x20_0x1e2ab6=_0x29789b;if(_0x4adbb1[_0x1e2ab6(0x60e)](_0x2d3a5c))throw\\x20new\\x20_0x4adbb1[(_0x1e2ab6(0x5d3))](0x8);_0x2d3a5c[_0x1e2ab6(0x6e0)]&&(_0x2d3a5c[_0x1e2ab6(0x6e0)]=null);try{_0x2d3a5c[_0x1e2ab6(0x77c)][_0x1e2ab6(0x449)]&&_0x2d3a5c[_0x1e2ab6(0x77c)][_0x1e2ab6(0x449)](_0x2d3a5c);}catch(_0x1a1580){throw\\x20_0x1a1580;}finally{_0x4adbb1[_0x1e2ab6(0x2c9)](_0x2d3a5c[\\x27fd\\x27]);}_0x2d3a5c[\\x27fd\\x27]=null;},\\x27isClosed\\x27:_0x1cf5c3=>null===_0x1cf5c3[\\x27fd\\x27],\\x27llseek\\x27:(_0x154c4b,_0x3bda1e,_0x2aba57)=>{var\\x20_0x5b86e1=_0x29789b;if(_0x4adbb1[_0x5b86e1(0x60e)](_0x154c4b))throw\\x20new\\x20_0x4adbb1[(_0x5b86e1(0x5d3))](0x8);if(!_0x154c4b[_0x5b86e1(0x32d)]||!_0x154c4b[\\x27stream_ops\\x27][\\x27llseek\\x27])throw\\x20new\\x20_0x4adbb1[(_0x5b86e1(0x5d3))](0x46);if(0x0!=_0x2aba57&&0x1!=_0x2aba57&&0x2!=_0x2aba57)throw\\x20new\\x20_0x4adbb1[(_0x5b86e1(0x5d3))](0x1c);return\\x20_0x154c4b[_0x5b86e1(0x775)]=_0x154c4b[_0x5b86e1(0x77c)][\\x27llseek\\x27](_0x154c4b,_0x3bda1e,_0x2aba57),_0x154c4b[_0x5b86e1(0x628)]=[],_0x154c4b[_0x5b86e1(0x775)];},\\x27read\\x27:(_0x4e89e9,_0x1355d4,_0x4f1106,_0x503ad7,_0x11c7a6)=>{var\\x20_0x2e562d=_0x29789b;if(_0x503ad7<0x0||_0x11c7a6<0x0)throw\\x20new\\x20_0x4adbb1[(_0x2e562d(0x5d3))](0x1c);if(_0x4adbb1[_0x2e562d(0x60e)](_0x4e89e9))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x8);if(0x1==(0x200003&_0x4e89e9[\\x27flags\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x2e562d(0x5d3))](0x8);if(_0x4adbb1[_0x2e562d(0x468)](_0x4e89e9[_0x2e562d(0x1c4)][\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1f);if(!_0x4e89e9[_0x2e562d(0x77c)][\\x27read\\x27])throw\\x20new\\x20_0x4adbb1[(_0x2e562d(0x5d3))](0x1c);var\\x20_0x44549c=void\\x200x0!==_0x11c7a6;if(_0x44549c){if(!_0x4e89e9[_0x2e562d(0x32d)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x46);}else\\x20_0x11c7a6=_0x4e89e9[\\x27position\\x27];var\\x20_0x5f2c14=_0x4e89e9[_0x2e562d(0x77c)][\\x27read\\x27](_0x4e89e9,_0x1355d4,_0x4f1106,_0x503ad7,_0x11c7a6);return\\x20_0x44549c||(_0x4e89e9[\\x27position\\x27]+=_0x5f2c14),_0x5f2c14;},\\x27write\\x27:(_0x954f95,_0x19304c,_0x3c80e9,_0xb4821b,_0x174989,_0xf71b6b)=>{var\\x20_0x2d605a=_0x29789b;if(_0xb4821b<0x0||_0x174989<0x0)throw\\x20new\\x20_0x4adbb1[(_0x2d605a(0x5d3))](0x1c);if(_0x4adbb1[_0x2d605a(0x60e)](_0x954f95))throw\\x20new\\x20_0x4adbb1[(_0x2d605a(0x5d3))](0x8);if(0x0==(0x200003&_0x954f95[\\x27flags\\x27]))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x8);if(_0x4adbb1[_0x2d605a(0x468)](_0x954f95[_0x2d605a(0x1c4)][\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x2d605a(0x5d3))](0x1f);if(!_0x954f95[_0x2d605a(0x77c)][_0x2d605a(0x5fa)])throw\\x20new\\x20_0x4adbb1[(_0x2d605a(0x5d3))](0x1c);_0x954f95[_0x2d605a(0x32d)]&&0x400&_0x954f95[_0x2d605a(0x3ed)]&&_0x4adbb1[_0x2d605a(0x39a)](_0x954f95,0x0,0x2);var\\x20_0x311809=void\\x200x0!==_0x174989;if(_0x311809){if(!_0x954f95[_0x2d605a(0x32d)])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x46);}else\\x20_0x174989=_0x954f95[_0x2d605a(0x775)];var\\x20_0x2a2059=_0x954f95[_0x2d605a(0x77c)][_0x2d605a(0x5fa)](_0x954f95,_0x19304c,_0x3c80e9,_0xb4821b,_0x174989,_0xf71b6b);return\\x20_0x311809||(_0x954f95[_0x2d605a(0x775)]+=_0x2a2059),_0x2a2059;},\\x27allocate\\x27:(_0x3b5036,_0x17261d,_0x452f1d)=>{var\\x20_0x5b3b40=_0x29789b;if(_0x4adbb1[_0x5b3b40(0x60e)](_0x3b5036))throw\\x20new\\x20_0x4adbb1[(_0x5b3b40(0x5d3))](0x8);if(_0x17261d<0x0||_0x452f1d<=0x0)throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1c);if(0x0==(0x200003&_0x3b5036[_0x5b3b40(0x3ed)]))throw\\x20new\\x20_0x4adbb1[(_0x5b3b40(0x5d3))](0x8);if(!_0x4adbb1[_0x5b3b40(0x1f7)](_0x3b5036[_0x5b3b40(0x1c4)][_0x5b3b40(0x477)])&&!_0x4adbb1[_0x5b3b40(0x468)](_0x3b5036[_0x5b3b40(0x1c4)][\\x27mode\\x27]))throw\\x20new\\x20_0x4adbb1[(_0x5b3b40(0x5d3))](0x2b);if(!_0x3b5036[_0x5b3b40(0x77c)][_0x5b3b40(0x388)])throw\\x20new\\x20_0x4adbb1[(_0x5b3b40(0x5d3))](0x8a);_0x3b5036[_0x5b3b40(0x77c)][_0x5b3b40(0x388)](_0x3b5036,_0x17261d,_0x452f1d);},\\x27mmap\\x27:(_0xea62a1,_0x35d438,_0x417f30,_0x1ae7dc,_0x2c5661)=>{var\\x20_0x1002c0=_0x29789b;if(0x0!=(0x2&_0x1ae7dc)&&0x0==(0x2&_0x2c5661)&&0x2!=(0x200003&_0xea62a1[_0x1002c0(0x3ed)]))throw\\x20new\\x20_0x4adbb1[(_0x1002c0(0x5d3))](0x2);if(0x1==(0x200003&_0xea62a1[_0x1002c0(0x3ed)]))throw\\x20new\\x20_0x4adbb1[(_0x1002c0(0x5d3))](0x2);if(!_0xea62a1[_0x1002c0(0x77c)][\\x27mmap\\x27])throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x2b);return\\x20_0xea62a1[_0x1002c0(0x77c)][_0x1002c0(0x5e4)](_0xea62a1,_0x35d438,_0x417f30,_0x1ae7dc,_0x2c5661);},\\x27msync\\x27:(_0x5e1f63,_0x4ff57d,_0x1f7224,_0x38e554,_0x141080)=>_0x5e1f63[_0x29789b(0x77c)][_0x29789b(0x365)]?_0x5e1f63[\\x27stream_ops\\x27][_0x29789b(0x365)](_0x5e1f63,_0x4ff57d,_0x1f7224,_0x38e554,_0x141080):0x0,\\x27munmap\\x27:_0x56ad28=>0x0,\\x27ioctl\\x27:(_0x21a829,_0x316db1,_0x147a54)=>{var\\x20_0x85917d=_0x29789b;if(!_0x21a829[_0x85917d(0x77c)][_0x85917d(0x74b)])throw\\x20new\\x20_0x4adbb1[(_0x85917d(0x5d3))](0x3b);return\\x20_0x21a829[_0x85917d(0x77c)][_0x85917d(0x74b)](_0x21a829,_0x316db1,_0x147a54);},\\x27readFile\\x27:(_0x4276f5,_0x55e8a0={})=>{var\\x20_0x14ad0e=_0x29789b;if(_0x55e8a0[_0x14ad0e(0x3ed)]=_0x55e8a0[_0x14ad0e(0x3ed)]||0x0,_0x55e8a0[\\x27encoding\\x27]=_0x55e8a0[_0x14ad0e(0x285)]||\\x27binary\\x27,_0x14ad0e(0x691)!==_0x55e8a0[_0x14ad0e(0x285)]&&_0x14ad0e(0x3b4)!==_0x55e8a0[\\x27encoding\\x27])throw\\x20new\\x20Error(_0x14ad0e(0x4c6)+_0x55e8a0[\\x27encoding\\x27]+\\x27\\x5cx22\\x27);var\\x20_0x5cfc3a,_0xde01a6=_0x4adbb1[_0x14ad0e(0x3a0)](_0x4276f5,_0x55e8a0[_0x14ad0e(0x3ed)]),_0x2ab5cf=_0x4adbb1[_0x14ad0e(0x27c)](_0x4276f5)[\\x27size\\x27],_0x515cb4=new\\x20Uint8Array(_0x2ab5cf);return\\x20_0x4adbb1[\\x27read\\x27](_0xde01a6,_0x515cb4,0x0,_0x2ab5cf,0x0),_0x14ad0e(0x691)===_0x55e8a0[_0x14ad0e(0x285)]?_0x5cfc3a=_0x364e81(_0x515cb4,0x0):_0x14ad0e(0x3b4)===_0x55e8a0[\\x27encoding\\x27]&&(_0x5cfc3a=_0x515cb4),_0x4adbb1[_0x14ad0e(0x449)](_0xde01a6),_0x5cfc3a;},\\x27writeFile\\x27:(_0x4d5c90,_0x5f04f2,_0x25b2eb={})=>{var\\x20_0x4dbc1b=_0x29789b;_0x25b2eb[\\x27flags\\x27]=_0x25b2eb[_0x4dbc1b(0x3ed)]||0x241;var\\x20_0x52afc3=_0x4adbb1[_0x4dbc1b(0x3a0)](_0x4d5c90,_0x25b2eb[_0x4dbc1b(0x3ed)],_0x25b2eb[\\x27mode\\x27]);if(_0x4dbc1b(0x2c4)==typeof\\x20_0x5f04f2){var\\x20_0xec4707=new\\x20Uint8Array(_0x3dd374(_0x5f04f2)+0x1),_0x245954=_0x61798c(_0x5f04f2,_0xec4707,0x0,_0xec4707[_0x4dbc1b(0x479)]);_0x4adbb1[\\x27write\\x27](_0x52afc3,_0xec4707,0x0,_0x245954,void\\x200x0,_0x25b2eb[_0x4dbc1b(0x645)]);}else{if(!ArrayBuffer[_0x4dbc1b(0x4ed)](_0x5f04f2))throw\\x20new\\x20Error(_0x4dbc1b(0x3ab));_0x4adbb1[\\x27write\\x27](_0x52afc3,_0x5f04f2,0x0,_0x5f04f2[\\x27byteLength\\x27],void\\x200x0,_0x25b2eb[_0x4dbc1b(0x645)]);}_0x4adbb1[\\x27close\\x27](_0x52afc3);},\\x27cwd\\x27:()=>_0x4adbb1[_0x29789b(0x334)],\\x27chdir\\x27:_0x343daa=>{var\\x20_0x200f8a=_0x29789b,_0x24644b=_0x4adbb1[_0x200f8a(0x680)](_0x343daa,{\\x27follow\\x27:!0x0});if(null===_0x24644b[\\x27node\\x27])throw\\x20new\\x20_0x4adbb1[(_0x200f8a(0x5d3))](0x2c);if(!_0x4adbb1[_0x200f8a(0x468)](_0x24644b[_0x200f8a(0x1c4)][_0x200f8a(0x477)]))throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x36);var\\x20_0x42ba8c=_0x4adbb1[_0x200f8a(0x727)](_0x24644b[\\x27node\\x27],\\x27x\\x27);if(_0x42ba8c)throw\\x20new\\x20_0x4adbb1[(_0x200f8a(0x5d3))](_0x42ba8c);_0x4adbb1[_0x200f8a(0x334)]=_0x24644b[_0x200f8a(0x258)];},\\x27createDefaultDirectories\\x27:()=>{var\\x20_0x3b22f0=_0x29789b;_0x4adbb1[\\x27mkdir\\x27](_0x3b22f0(0x5aa)),_0x4adbb1[_0x3b22f0(0x486)](_0x3b22f0(0x62a)),_0x4adbb1[_0x3b22f0(0x486)](_0x3b22f0(0x215));},\\x27createDefaultDevices\\x27:()=>{var\\x20_0x41a601=_0x29789b;_0x4adbb1[_0x41a601(0x486)](_0x41a601(0x764)),_0x4adbb1[_0x41a601(0x494)](_0x4adbb1[\\x27makedev\\x27](0x1,0x3),{\\x27read\\x27:()=>0x0,\\x27write\\x27:(_0x481f6a,_0x58782c,_0x12854e,_0x5e6dab,_0x3f95d8)=>_0x5e6dab}),_0x4adbb1[\\x27mkdev\\x27](_0x41a601(0x476),_0x4adbb1[_0x41a601(0x250)](0x1,0x3)),_0x2e48fc[_0x41a601(0x33a)](_0x4adbb1[_0x41a601(0x250)](0x5,0x0),_0x2e48fc[_0x41a601(0x1d2)]),_0x2e48fc[_0x41a601(0x33a)](_0x4adbb1[_0x41a601(0x250)](0x6,0x0),_0x2e48fc[\\x27default_tty1_ops\\x27]),_0x4adbb1[\\x27mkdev\\x27](_0x41a601(0x5fc),_0x4adbb1[_0x41a601(0x250)](0x5,0x0)),_0x4adbb1[_0x41a601(0x3b6)](_0x41a601(0x29c),_0x4adbb1[_0x41a601(0x250)](0x6,0x0));var\\x20_0x1e8396=(function(){var\\x20_0x395537=_0x41a601;if(_0x395537(0x556)==typeof\\x20crypto&&\\x27function\\x27==typeof\\x20crypto[_0x395537(0x4cf)]){var\\x20_0x37f11b=new\\x20Uint8Array(0x1);return()=>(crypto[_0x395537(0x4cf)](_0x37f11b),_0x37f11b[0x0]);}return()=>_0x12d2c9(_0x395537(0x2dd));}());_0x4adbb1[_0x41a601(0x5c4)](_0x41a601(0x764),_0x41a601(0x1ec),_0x1e8396),_0x4adbb1[_0x41a601(0x5c4)](_0x41a601(0x764),\\x27urandom\\x27,_0x1e8396),_0x4adbb1[_0x41a601(0x486)](_0x41a601(0x1b3)),_0x4adbb1[_0x41a601(0x486)](\\x27/dev/shm/tmp\\x27);},\\x27createSpecialDirectories\\x27:()=>{var\\x20_0x32eea8=_0x29789b;_0x4adbb1[_0x32eea8(0x486)](_0x32eea8(0x5ec));var\\x20_0x47062a=_0x4adbb1[\\x27mkdir\\x27](_0x32eea8(0x1ee));_0x4adbb1[_0x32eea8(0x486)](\\x27/proc/self/fd\\x27),_0x4adbb1[_0x32eea8(0x32a)]({\\x27mount\\x27:()=>{var\\x20_0x162b72=_0x32eea8,_0x5c6998=_0x4adbb1[_0x162b72(0x59d)](_0x47062a,\\x27fd\\x27,0x41ff,0x49);return\\x20_0x5c6998[_0x162b72(0x5cf)]={\\x27lookup\\x27:(_0x1b6e4a,_0x3f9475)=>{var\\x20_0x2b7652=_0x162b72,_0x4d1e9a=+_0x3f9475,_0x405abb=_0x4adbb1[_0x2b7652(0x2cd)](_0x4d1e9a);if(!_0x405abb)throw\\x20new\\x20_0x4adbb1[(_0x2b7652(0x5d3))](0x8);var\\x20_0x3bd85e={\\x27parent\\x27:null,\\x27mount\\x27:{\\x27mountpoint\\x27:\\x27fake\\x27},\\x27node_ops\\x27:{\\x27readlink\\x27:()=>_0x405abb[_0x2b7652(0x258)]}};return\\x20_0x3bd85e[\\x27parent\\x27]=_0x3bd85e,_0x3bd85e;}},_0x5c6998;}},{},_0x32eea8(0x5d4));},\\x27createStandardStreams\\x27:()=>{var\\x20_0x43d851=_0x29789b;_0xacfddc[_0x43d851(0x22f)]?_0x4adbb1[_0x43d851(0x5c4)](_0x43d851(0x764),_0x43d851(0x22f),_0xacfddc[_0x43d851(0x22f)]):_0x4adbb1[\\x27symlink\\x27](\\x27/dev/tty\\x27,_0x43d851(0x493)),_0xacfddc[_0x43d851(0x245)]?_0x4adbb1[_0x43d851(0x5c4)](_0x43d851(0x764),_0x43d851(0x245),null,_0xacfddc[_0x43d851(0x245)]):_0x4adbb1[_0x43d851(0x510)](\\x27/dev/tty\\x27,_0x43d851(0x527)),_0xacfddc[\\x27stderr\\x27]?_0x4adbb1[_0x43d851(0x5c4)](_0x43d851(0x764),_0x43d851(0x278),null,_0xacfddc[_0x43d851(0x278)]):_0x4adbb1[_0x43d851(0x510)](\\x27/dev/tty1\\x27,\\x27/dev/stderr\\x27);var\\x20_0x74917a=_0x4adbb1[_0x43d851(0x3a0)](\\x27/dev/stdin\\x27,0x0),_0x1cc6d3=_0x4adbb1[\\x27open\\x27](_0x43d851(0x527),0x1),_0x115fce=_0x4adbb1[_0x43d851(0x3a0)](_0x43d851(0x76b),0x1);_0x299bd7(0x0===_0x74917a[\\x27fd\\x27],\\x27invalid\\x5cx20handle\\x5cx20for\\x5cx20stdin\\x5cx20(\\x27+_0x74917a[\\x27fd\\x27]+\\x27)\\x27),_0x299bd7(0x1===_0x1cc6d3[\\x27fd\\x27],\\x27invalid\\x5cx20handle\\x5cx20for\\x5cx20stdout\\x5cx20(\\x27+_0x1cc6d3[\\x27fd\\x27]+\\x27)\\x27),_0x299bd7(0x2===_0x115fce[\\x27fd\\x27],_0x43d851(0x55a)+_0x115fce[\\x27fd\\x27]+\\x27)\\x27);},\\x27ensureErrnoError\\x27:()=>{var\\x20_0x1840a7=_0x29789b;_0x4adbb1[_0x1840a7(0x5d3)]||(_0x4adbb1[_0x1840a7(0x5d3)]=function(_0x48c198,_0x5144c0){var\\x20_0x4d82e2=_0x1840a7;this[\\x27node\\x27]=_0x5144c0,this[_0x4d82e2(0x378)]=function(_0x397663){var\\x20_0x3d634a=_0x4d82e2;for(var\\x20_0x406b76\\x20in(this[_0x3d634a(0x745)]=_0x397663,_0x1523bb))if(_0x1523bb[_0x406b76]===_0x397663){this[_0x3d634a(0x577)]=_0x406b76;break;}},this[_0x4d82e2(0x378)](_0x48c198),this[\\x27message\\x27]=_0x25b06c[_0x48c198],this[\\x27stack\\x27]&&(Object[_0x4d82e2(0x668)](this,\\x27stack\\x27,{\\x27value\\x27:new\\x20Error()[_0x4d82e2(0x2b4)],\\x27writable\\x27:!0x0}),this[_0x4d82e2(0x2b4)]=_0x37e4a8(this[_0x4d82e2(0x2b4)]));},_0x4adbb1[_0x1840a7(0x5d3)][_0x1840a7(0x4c4)]=new\\x20Error(),_0x4adbb1[\\x27ErrnoError\\x27][_0x1840a7(0x4c4)][_0x1840a7(0x1b5)]=_0x4adbb1[\\x27ErrnoError\\x27],[0x2c][\\x27forEach\\x27](_0x437600=>{var\\x20_0x1a8bb7=_0x1840a7;_0x4adbb1[_0x1a8bb7(0x44d)][_0x437600]=new\\x20_0x4adbb1[(_0x1a8bb7(0x5d3))](_0x437600),_0x4adbb1[_0x1a8bb7(0x44d)][_0x437600][\\x27stack\\x27]=\\x27<generic\\x5cx20error,\\x5cx20no\\x5cx20stack>\\x27;}));},\\x27staticInit\\x27:()=>{var\\x20_0x5ae8c9=_0x29789b;_0x4adbb1[_0x5ae8c9(0x4dd)](),_0x4adbb1[_0x5ae8c9(0x2cf)]=new\\x20Array(0x1000),_0x4adbb1[_0x5ae8c9(0x32a)](_0x384c49,{},\\x27/\\x27),_0x4adbb1[_0x5ae8c9(0x1f2)](),_0x4adbb1[\\x27createDefaultDevices\\x27](),_0x4adbb1[_0x5ae8c9(0x673)](),_0x4adbb1[_0x5ae8c9(0x70f)]={\\x27MEMFS\\x27:_0x384c49};},\\x27init\\x27:(_0x3d3f23,_0x2c17f6,_0x2a326c)=>{var\\x20_0x2ec873=_0x29789b;_0x299bd7(!_0x4adbb1[\\x27init\\x27][\\x27initialized\\x27],_0x2ec873(0x353)),_0x4adbb1[\\x27init\\x27][_0x2ec873(0x699)]=!0x0,_0x4adbb1[\\x27ensureErrnoError\\x27](),_0xacfddc[\\x27stdin\\x27]=_0x3d3f23||_0xacfddc[\\x27stdin\\x27],_0xacfddc[\\x27stdout\\x27]=_0x2c17f6||_0xacfddc[_0x2ec873(0x245)],_0xacfddc[_0x2ec873(0x278)]=_0x2a326c||_0xacfddc[\\x27stderr\\x27],_0x4adbb1[_0x2ec873(0x1a8)]();},\\x27quit\\x27:()=>{var\\x20_0x35de79=_0x29789b;_0x4adbb1[_0x35de79(0x6ed)][\\x27initialized\\x27]=!0x1,_0x11b144(0x0);for(var\\x20_0x2ba227=0x0;_0x2ba227<_0x4adbb1[\\x27streams\\x27][_0x35de79(0x479)];_0x2ba227++){var\\x20_0x47913e=_0x4adbb1[_0x35de79(0x26f)][_0x2ba227];_0x47913e&&_0x4adbb1[\\x27close\\x27](_0x47913e);}},\\x27getMode\\x27:(_0x44b635,_0x43471b)=>{var\\x20_0x381d6c=0x0;return\\x20_0x44b635&&(_0x381d6c|=0x16d),_0x43471b&&(_0x381d6c|=0x92),_0x381d6c;},\\x27findObject\\x27:(_0x49a44e,_0x167e10)=>{var\\x20_0x3f81ca=_0x29789b,_0x144156=_0x4adbb1[_0x3f81ca(0x2e6)](_0x49a44e,_0x167e10);return\\x20_0x144156[\\x27exists\\x27]?_0x144156[_0x3f81ca(0x556)]:null;},\\x27analyzePath\\x27:(_0x248c49,_0x15f398)=>{var\\x20_0x4463c4=_0x29789b;try{_0x248c49=(_0x50dd0d=_0x4adbb1[_0x4463c4(0x680)](_0x248c49,{\\x27follow\\x27:!_0x15f398}))[\\x27path\\x27];}catch(_0x1a165a){}var\\x20_0x40e730={\\x27isRoot\\x27:!0x1,\\x27exists\\x27:!0x1,\\x27error\\x27:0x0,\\x27name\\x27:null,\\x27path\\x27:null,\\x27object\\x27:null,\\x27parentExists\\x27:!0x1,\\x27parentPath\\x27:null,\\x27parentObject\\x27:null};try{var\\x20_0x50dd0d=_0x4adbb1[_0x4463c4(0x680)](_0x248c49,{\\x27parent\\x27:!0x0});_0x40e730[_0x4463c4(0x409)]=!0x0,_0x40e730[\\x27parentPath\\x27]=_0x50dd0d[_0x4463c4(0x258)],_0x40e730[_0x4463c4(0x639)]=_0x50dd0d[_0x4463c4(0x1c4)],_0x40e730[\\x27name\\x27]=_0x95e934[_0x4463c4(0x4d8)](_0x248c49),_0x50dd0d=_0x4adbb1[\\x27lookupPath\\x27](_0x248c49,{\\x27follow\\x27:!_0x15f398}),_0x40e730[_0x4463c4(0x579)]=!0x0,_0x40e730[_0x4463c4(0x258)]=_0x50dd0d[\\x27path\\x27],_0x40e730[_0x4463c4(0x556)]=_0x50dd0d[_0x4463c4(0x1c4)],_0x40e730[_0x4463c4(0x2e3)]=_0x50dd0d[_0x4463c4(0x1c4)][_0x4463c4(0x2e3)],_0x40e730[_0x4463c4(0x5a0)]=\\x27/\\x27===_0x50dd0d[\\x27path\\x27];}catch(_0x2da768){_0x40e730[_0x4463c4(0x26d)]=_0x2da768[\\x27errno\\x27];}return\\x20_0x40e730;},\\x27createPath\\x27:(_0x12451f,_0x4955f6,_0x371589,_0x439eb7)=>{var\\x20_0x5431e4=_0x29789b;_0x12451f=_0x5431e4(0x2c4)==typeof\\x20_0x12451f?_0x12451f:_0x4adbb1[\\x27getPath\\x27](_0x12451f);for(var\\x20_0x1ca5f7=_0x4955f6[_0x5431e4(0x517)](\\x27/\\x27)[\\x27reverse\\x27]();_0x1ca5f7[\\x27length\\x27];){var\\x20_0x32cfed=_0x1ca5f7[_0x5431e4(0x5e6)]();if(_0x32cfed){var\\x20_0x4c269f=_0x95e934[_0x5431e4(0x1b1)](_0x12451f,_0x32cfed);try{_0x4adbb1[_0x5431e4(0x486)](_0x4c269f);}catch(_0x296c50){}_0x12451f=_0x4c269f;}}return\\x20_0x4c269f;},\\x27createFile\\x27:(_0x324ec7,_0x249378,_0xf6a18d,_0x1e6b8b,_0x10c331)=>{var\\x20_0xc61bb4=_0x29789b,_0x4cd0da=_0x95e934[\\x27join2\\x27](_0xc61bb4(0x2c4)==typeof\\x20_0x324ec7?_0x324ec7:_0x4adbb1[_0xc61bb4(0x3c5)](_0x324ec7),_0x249378),_0x5e79e1=_0x4adbb1[_0xc61bb4(0x667)](_0x1e6b8b,_0x10c331);return\\x20_0x4adbb1[\\x27create\\x27](_0x4cd0da,_0x5e79e1);},\\x27createDataFile\\x27:(_0x3e07ad,_0x291d27,_0x2cdc0a,_0x399729,_0x3d40f7,_0x1163be)=>{var\\x20_0x1e5800=_0x29789b,_0x2720b6=_0x291d27;_0x3e07ad&&(_0x3e07ad=_0x1e5800(0x2c4)==typeof\\x20_0x3e07ad?_0x3e07ad:_0x4adbb1[_0x1e5800(0x3c5)](_0x3e07ad),_0x2720b6=_0x291d27?_0x95e934[_0x1e5800(0x1b1)](_0x3e07ad,_0x291d27):_0x3e07ad);var\\x20_0x4026b4=_0x4adbb1[_0x1e5800(0x667)](_0x399729,_0x3d40f7),_0x1a7b27=_0x4adbb1[\\x27create\\x27](_0x2720b6,_0x4026b4);if(_0x2cdc0a){if(\\x27string\\x27==typeof\\x20_0x2cdc0a){for(var\\x20_0x160ea5=new\\x20Array(_0x2cdc0a[_0x1e5800(0x479)]),_0x1c0b2d=0x0,_0x83f1d5=_0x2cdc0a[_0x1e5800(0x479)];_0x1c0b2d<_0x83f1d5;++_0x1c0b2d)_0x160ea5[_0x1c0b2d]=_0x2cdc0a[\\x27charCodeAt\\x27](_0x1c0b2d);_0x2cdc0a=_0x160ea5;}_0x4adbb1[\\x27chmod\\x27](_0x1a7b27,0x92|_0x4026b4);var\\x20_0x4b6149=_0x4adbb1[\\x27open\\x27](_0x1a7b27,0x241);_0x4adbb1[_0x1e5800(0x5fa)](_0x4b6149,_0x2cdc0a,0x0,_0x2cdc0a[_0x1e5800(0x479)],0x0,_0x1163be),_0x4adbb1[_0x1e5800(0x449)](_0x4b6149),_0x4adbb1[\\x27chmod\\x27](_0x1a7b27,_0x4026b4);}return\\x20_0x1a7b27;},\\x27createDevice\\x27:(_0x1a5cf6,_0x3b45aa,_0x46dfb8,_0x38699b)=>{var\\x20_0x5b01fa=_0x29789b,_0x5d46cb=_0x95e934[_0x5b01fa(0x1b1)](\\x27string\\x27==typeof\\x20_0x1a5cf6?_0x1a5cf6:_0x4adbb1[\\x27getPath\\x27](_0x1a5cf6),_0x3b45aa),_0x390c58=_0x4adbb1[\\x27getMode\\x27](!!_0x46dfb8,!!_0x38699b);_0x4adbb1[_0x5b01fa(0x5c4)][_0x5b01fa(0x782)]||(_0x4adbb1[_0x5b01fa(0x5c4)][_0x5b01fa(0x782)]=0x40);var\\x20_0x4955bc=_0x4adbb1[\\x27makedev\\x27](_0x4adbb1[\\x27createDevice\\x27][_0x5b01fa(0x782)]++,0x0);return\\x20_0x4adbb1[_0x5b01fa(0x494)](_0x4955bc,{\\x27open\\x27:_0x5e92f8=>{var\\x20_0x480ce6=_0x5b01fa;_0x5e92f8[_0x480ce6(0x32d)]=!0x1;},\\x27close\\x27:_0x3d6501=>{var\\x20_0x37da7b=_0x5b01fa;_0x38699b&&_0x38699b[_0x37da7b(0x6d3)]&&_0x38699b[\\x27buffer\\x27][\\x27length\\x27]&&_0x38699b(0xa);},\\x27read\\x27:(_0x52502b,_0x11c755,_0x3da7d1,_0xfbff5a,_0x595cc9)=>{var\\x20_0x2bfb5d=_0x5b01fa;for(var\\x20_0x12061b=0x0,_0x23faa1=0x0;_0x23faa1<_0xfbff5a;_0x23faa1++){var\\x20_0x159807;try{_0x159807=_0x46dfb8();}catch(_0x5e9d15){throw\\x20new\\x20_0x4adbb1[\\x27ErrnoError\\x27](0x1d);}if(void\\x200x0===_0x159807&&0x0===_0x12061b)throw\\x20new\\x20_0x4adbb1[(_0x2bfb5d(0x5d3))](0x6);if(null==_0x159807)break;_0x12061b++,_0x11c755[_0x3da7d1+_0x23faa1]=_0x159807;}return\\x20_0x12061b&&(_0x52502b[_0x2bfb5d(0x1c4)][_0x2bfb5d(0x5c6)]=Date[_0x2bfb5d(0x3ae)]()),_0x12061b;},\\x27write\\x27:(_0x33404e,_0x2e629c,_0x9336d7,_0x29dd7f,_0x73fb8e)=>{var\\x20_0x236568=_0x5b01fa;for(var\\x20_0x18db29=0x0;_0x18db29<_0x29dd7f;_0x18db29++)try{_0x38699b(_0x2e629c[_0x9336d7+_0x18db29]);}catch(_0xbcffe5){throw\\x20new\\x20_0x4adbb1[(_0x236568(0x5d3))](0x1d);}return\\x20_0x29dd7f&&(_0x33404e[_0x236568(0x1c4)][_0x236568(0x5c6)]=Date[\\x27now\\x27]()),_0x18db29;}}),_0x4adbb1[_0x5b01fa(0x3b6)](_0x5d46cb,_0x390c58,_0x4955bc);},\\x27forceLoadFile\\x27:_0x4c16e5=>{var\\x20_0x183c68=_0x29789b;if(_0x4c16e5[_0x183c68(0x536)]||_0x4c16e5[_0x183c68(0x70b)]||_0x4c16e5[_0x183c68(0x28c)]||_0x4c16e5[_0x183c68(0x418)])return!0x0;if(_0x183c68(0x729)!=typeof\\x20XMLHttpRequest)throw\\x20new\\x20Error(\\x27Lazy\\x5cx20loading\\x5cx20should\\x5cx20have\\x5cx20been\\x5cx20performed\\x5cx20(contents\\x5cx20set)\\x5cx20in\\x5cx20createLazyFile,\\x5cx20but\\x5cx20it\\x5cx20was\\x5cx20not.\\x5cx20Lazy\\x5cx20loading\\x5cx20only\\x5cx20works\\x5cx20in\\x5cx20web\\x5cx20workers.\\x5cx20Use\\x5cx20--embed-file\\x5cx20or\\x5cx20--preload-file\\x5cx20in\\x5cx20emcc\\x5cx20on\\x5cx20the\\x5cx20main\\x5cx20thread.\\x27);if(!_0x912184)throw\\x20new\\x20Error(_0x183c68(0x322));try{_0x4c16e5[_0x183c68(0x418)]=_0x204be4(_0x912184(_0x4c16e5[_0x183c68(0x620)]),!0x0),_0x4c16e5[_0x183c68(0x596)]=_0x4c16e5[_0x183c68(0x418)][_0x183c68(0x479)];}catch(_0x57a17e){throw\\x20new\\x20_0x4adbb1[(_0x183c68(0x5d3))](0x1d);}},\\x27createLazyFile\\x27:(_0x5c750c,_0xbdc956,_0x4be74e,_0x21c5e3,_0x3eb454)=>{var\\x20_0x423efb=_0x29789b;function\\x20_0x3304e5(){var\\x20_0x1066ea=a1_0x2045;this[_0x1066ea(0x1c6)]=!0x1,this[_0x1066ea(0x74d)]=[];}if(_0x3304e5[_0x423efb(0x4c4)][\\x27get\\x27]=function(_0x4944a2){var\\x20_0x2bec33=_0x423efb;if(!(_0x4944a2>this[\\x27length\\x27]-0x1||_0x4944a2<0x0)){var\\x20_0x242b77=_0x4944a2%this[_0x2bec33(0x1bf)],_0x4cf72c=_0x4944a2/this[\\x27chunkSize\\x27]|0x0;return\\x20this[\\x27getter\\x27](_0x4cf72c)[_0x242b77];}},_0x3304e5[\\x27prototype\\x27][_0x423efb(0x23d)]=function(_0x1bcd81){var\\x20_0xdc70f0=_0x423efb;this[_0xdc70f0(0x462)]=_0x1bcd81;},_0x3304e5[_0x423efb(0x4c4)][_0x423efb(0x772)]=function(){var\\x20_0x4ce0cc=_0x423efb,_0x31f63c=new\\x20XMLHttpRequest();if(_0x31f63c[\\x27open\\x27](_0x4ce0cc(0x5c3),_0x4be74e,!0x1),_0x31f63c[_0x4ce0cc(0x5bd)](null),!(_0x31f63c[\\x27status\\x27]>=0xc8&&_0x31f63c[_0x4ce0cc(0x1d0)]<0x12c||0x130===_0x31f63c[_0x4ce0cc(0x1d0)]))throw\\x20new\\x20Error(_0x4ce0cc(0x237)+_0x4be74e+_0x4ce0cc(0x6bb)+_0x31f63c[_0x4ce0cc(0x1d0)]);var\\x20_0x1410f9,_0x1c6dc4=Number(_0x31f63c[_0x4ce0cc(0x317)](_0x4ce0cc(0x637))),_0x3639fc=(_0x1410f9=_0x31f63c[\\x27getResponseHeader\\x27](_0x4ce0cc(0x748)))&&_0x4ce0cc(0x719)===_0x1410f9,_0x36b3df=(_0x1410f9=_0x31f63c[_0x4ce0cc(0x317)](\\x27Content-Encoding\\x27))&&_0x4ce0cc(0x5a4)===_0x1410f9,_0x5c13b6=0x100000;_0x3639fc||(_0x5c13b6=_0x1c6dc4);var\\x20_0x283129=this;_0x283129[_0x4ce0cc(0x23d)](_0x4b4dd=>{var\\x20_0x180bef=_0x4ce0cc,_0x3a11d1=_0x4b4dd*_0x5c13b6,_0x169258=(_0x4b4dd+0x1)*_0x5c13b6-0x1;if(_0x169258=Math[_0x180bef(0x1af)](_0x169258,_0x1c6dc4-0x1),void\\x200x0===_0x283129[_0x180bef(0x74d)][_0x4b4dd]&&(_0x283129[_0x180bef(0x74d)][_0x4b4dd]=((_0x10f7d7,_0x44aa08)=>{var\\x20_0x12480a=_0x180bef;if(_0x10f7d7>_0x44aa08)throw\\x20new\\x20Error(_0x12480a(0x2ed)+_0x10f7d7+\\x27,\\x5cx20\\x27+_0x44aa08+_0x12480a(0x32e));if(_0x44aa08>_0x1c6dc4-0x1)throw\\x20new\\x20Error(\\x27only\\x5cx20\\x27+_0x1c6dc4+_0x12480a(0x224));var\\x20_0x37de12=new\\x20XMLHttpRequest();if(_0x37de12[\\x27open\\x27](_0x12480a(0x2ff),_0x4be74e,!0x1),_0x1c6dc4!==_0x5c13b6&&_0x37de12[_0x12480a(0x45e)](_0x12480a(0x36a),_0x12480a(0x251)+_0x10f7d7+\\x27-\\x27+_0x44aa08),_0x37de12[_0x12480a(0x737)]=\\x27arraybuffer\\x27,_0x37de12[\\x27overrideMimeType\\x27]&&_0x37de12[_0x12480a(0x5e5)](_0x12480a(0x40b)),_0x37de12[_0x12480a(0x5bd)](null),!(_0x37de12[\\x27status\\x27]>=0xc8&&_0x37de12[_0x12480a(0x1d0)]<0x12c||0x130===_0x37de12[_0x12480a(0x1d0)]))throw\\x20new\\x20Error(_0x12480a(0x237)+_0x4be74e+_0x12480a(0x6bb)+_0x37de12[_0x12480a(0x1d0)]);return\\x20void\\x200x0!==_0x37de12[_0x12480a(0x541)]?new\\x20Uint8Array(_0x37de12[_0x12480a(0x541)]||[]):_0x204be4(_0x37de12[\\x27responseText\\x27]||\\x27\\x27,!0x0);})(_0x3a11d1,_0x169258)),void\\x200x0===_0x283129[_0x180bef(0x74d)][_0x4b4dd])throw\\x20new\\x20Error(_0x180bef(0x465));return\\x20_0x283129[_0x180bef(0x74d)][_0x4b4dd];}),!_0x36b3df&&_0x1c6dc4||(_0x5c13b6=_0x1c6dc4=0x1,_0x1c6dc4=this[\\x27getter\\x27](0x0)[_0x4ce0cc(0x479)],_0x5c13b6=_0x1c6dc4,_0x588b31(_0x4ce0cc(0x638))),this[\\x27_length\\x27]=_0x1c6dc4,this[_0x4ce0cc(0x3f4)]=_0x5c13b6,this[_0x4ce0cc(0x1c6)]=!0x0;},\\x27undefined\\x27!=typeof\\x20XMLHttpRequest){if(!_0x566a52)throw\\x20_0x423efb(0x707);var\\x20_0x30da0a=new\\x20_0x3304e5();Object[_0x423efb(0x352)](_0x30da0a,{\\x27length\\x27:{\\x27get\\x27:function(){var\\x20_0xf9e67=_0x423efb;return\\x20this[_0xf9e67(0x1c6)]||this[\\x27cacheLength\\x27](),this[_0xf9e67(0x5d6)];}},\\x27chunkSize\\x27:{\\x27get\\x27:function(){var\\x20_0x5b4759=_0x423efb;return\\x20this[_0x5b4759(0x1c6)]||this[_0x5b4759(0x772)](),this[_0x5b4759(0x3f4)];}}});var\\x20_0x32d04b={\\x27isDevice\\x27:!0x1,\\x27contents\\x27:_0x30da0a};}else\\x20_0x32d04b={\\x27isDevice\\x27:!0x1,\\x27url\\x27:_0x4be74e};var\\x20_0xbf0f16=_0x4adbb1[\\x27createFile\\x27](_0x5c750c,_0xbdc956,_0x32d04b,_0x21c5e3,_0x3eb454);_0x32d04b[_0x423efb(0x418)]?_0xbf0f16[_0x423efb(0x418)]=_0x32d04b[\\x27contents\\x27]:_0x32d04b[_0x423efb(0x620)]&&(_0xbf0f16[_0x423efb(0x418)]=null,_0xbf0f16[_0x423efb(0x620)]=_0x32d04b[\\x27url\\x27]),Object[_0x423efb(0x352)](_0xbf0f16,{\\x27usedBytes\\x27:{\\x27get\\x27:function(){var\\x20_0x536362=_0x423efb;return\\x20this[_0x536362(0x418)][_0x536362(0x479)];}}});var\\x20_0x2a9c6e={};function\\x20_0x5b048f(_0x58c5ab,_0x2a181f,_0x21fa41,_0xd47a89,_0x354db2){var\\x20_0x1fa7b8=_0x423efb,_0x13e2bf=_0x58c5ab[_0x1fa7b8(0x1c4)][\\x27contents\\x27];if(_0x354db2>=_0x13e2bf[_0x1fa7b8(0x479)])return\\x200x0;var\\x20_0x5dfeca=Math[_0x1fa7b8(0x1af)](_0x13e2bf[_0x1fa7b8(0x479)]-_0x354db2,_0xd47a89);if(_0x299bd7(_0x5dfeca>=0x0),_0x13e2bf[_0x1fa7b8(0x5a3)]){for(var\\x20_0x3c6b08=0x0;_0x3c6b08<_0x5dfeca;_0x3c6b08++)_0x2a181f[_0x21fa41+_0x3c6b08]=_0x13e2bf[_0x354db2+_0x3c6b08];}else{for(_0x3c6b08=0x0;_0x3c6b08<_0x5dfeca;_0x3c6b08++)_0x2a181f[_0x21fa41+_0x3c6b08]=_0x13e2bf[_0x1fa7b8(0x528)](_0x354db2+_0x3c6b08);}return\\x20_0x5dfeca;}return\\x20Object[_0x423efb(0x505)](_0xbf0f16[_0x423efb(0x77c)])[\\x27forEach\\x27](_0x4d915f=>{var\\x20_0x2018af=_0x423efb,_0x79090f=_0xbf0f16[_0x2018af(0x77c)][_0x4d915f];_0x2a9c6e[_0x4d915f]=function(){var\\x20_0x4b4a99=_0x2018af;return\\x20_0x4adbb1[_0x4b4a99(0x658)](_0xbf0f16),_0x79090f[_0x4b4a99(0x324)](null,arguments);};}),_0x2a9c6e[_0x423efb(0x765)]=(_0x1a4eab,_0x593374,_0x39c62c,_0x1360d9,_0x469c45)=>(_0x4adbb1[_0x423efb(0x658)](_0xbf0f16),_0x5b048f(_0x1a4eab,_0x593374,_0x39c62c,_0x1360d9,_0x469c45)),_0x2a9c6e[\\x27mmap\\x27]=(_0x1dbffb,_0x52a85a,_0x1d7797,_0x3a2578,_0x11cc06)=>{var\\x20_0x6be1ef=_0x423efb;_0x4adbb1[_0x6be1ef(0x658)](_0xbf0f16);var\\x20_0x56a0ba=_0x2ae68c(_0x52a85a);if(!_0x56a0ba)throw\\x20new\\x20_0x4adbb1[(_0x6be1ef(0x5d3))](0x30);return\\x20_0x5b048f(_0x1dbffb,_0x58a58e,_0x56a0ba,_0x52a85a,_0x1d7797),{\\x27ptr\\x27:_0x56a0ba,\\x27allocated\\x27:!0x0};},_0xbf0f16[_0x423efb(0x77c)]=_0x2a9c6e,_0xbf0f16;},\\x27createPreloadedFile\\x27:(_0x3c336f,_0x116fde,_0x260dbb,_0x174390,_0x4fe949,_0x1702b2,_0x3c7ee7,_0x259e3a,_0x184cc6,_0x19a13a)=>{var\\x20_0x26bf99=_0x29789b,_0x26064d=_0x116fde?_0x1de97f[_0x26bf99(0x5ac)](_0x95e934[_0x26bf99(0x1b1)](_0x3c336f,_0x116fde)):_0x3c336f,_0xd95ba4=_0x4e2408(\\x27cp\\x5cx20\\x27+_0x26064d);function\\x20_0x3a988d(_0x5ad29e){var\\x20_0x45d24e=_0x26bf99;function\\x20_0x1638e1(_0xa57ed8){var\\x20_0x295994=a1_0x2045;_0x19a13a&&_0x19a13a(),_0x259e3a||_0x4adbb1[_0x295994(0x270)](_0x3c336f,_0x116fde,_0xa57ed8,_0x174390,_0x4fe949,_0x184cc6),_0x1702b2&&_0x1702b2(),_0x2b8f55(_0xd95ba4);}Browser[_0x45d24e(0x35b)](_0x5ad29e,_0x26064d,_0x1638e1,()=>{_0x3c7ee7&&_0x3c7ee7(),_0x2b8f55(_0xd95ba4);})||_0x1638e1(_0x5ad29e);}_0x5e02a4(_0xd95ba4),_0x26bf99(0x2c4)==typeof\\x20_0x260dbb?function(_0x154841,_0x3e9c6f,_0x68a4f6,_0x26e661){var\\x20_0x3317bc=_0x26bf99,_0x1b4bfb=_0x26e661?\\x27\\x27:_0x4e2408(_0x3317bc(0x46c)+_0x154841);_0x2977b1(_0x154841,_0xd736ac=>{var\\x20_0x51e5d5=_0x3317bc;_0x299bd7(_0xd736ac,_0x51e5d5(0x24a)+_0x154841+\\x27\\x5cx22\\x5cx20failed\\x5cx20(no\\x5cx20arrayBuffer).\\x27),_0x3e9c6f(new\\x20Uint8Array(_0xd736ac)),_0x1b4bfb&&_0x2b8f55(_0x1b4bfb);},_0x4bf494=>{var\\x20_0x303400=_0x3317bc;if(!_0x68a4f6)throw\\x20_0x303400(0x24a)+_0x154841+_0x303400(0x4df);_0x68a4f6();}),_0x1b4bfb&&_0x5e02a4(_0x1b4bfb);}(_0x260dbb,_0x25e790=>_0x3a988d(_0x25e790),_0x3c7ee7):_0x3a988d(_0x260dbb);},\\x27indexedDB\\x27:()=>window[_0x29789b(0x313)]||window[_0x29789b(0x3de)]||window[_0x29789b(0x4f6)]||window[_0x29789b(0x781)],\\x27DB_NAME\\x27:()=>_0x29789b(0x4a1)+window[_0x29789b(0x72d)][\\x27pathname\\x27],\\x27DB_VERSION\\x27:0x14,\\x27DB_STORE_NAME\\x27:_0x29789b(0x304),\\x27saveFilesToDB\\x27:(_0x237110,_0x303dfa,_0x30cd71)=>{var\\x20_0x3b0498=_0x29789b;_0x303dfa=_0x303dfa||(()=>{}),_0x30cd71=_0x30cd71||(()=>{});var\\x20_0xf5467e=_0x4adbb1[_0x3b0498(0x313)]();try{var\\x20_0x8fad5=_0xf5467e[_0x3b0498(0x3a0)](_0x4adbb1[_0x3b0498(0x6ac)](),_0x4adbb1[_0x3b0498(0x755)]);}catch(_0x27098d){return\\x20_0x30cd71(_0x27098d);}_0x8fad5[\\x27onupgradeneeded\\x27]=()=>{var\\x20_0x16d06d=_0x3b0498;_0x588b31(_0x16d06d(0x625)),_0x8fad5[\\x27result\\x27][\\x27createObjectStore\\x27](_0x4adbb1[\\x27DB_STORE_NAME\\x27]);},_0x8fad5[_0x3b0498(0x4b2)]=()=>{var\\x20_0x3c01e4=_0x3b0498,_0x113ab8=_0x8fad5[_0x3c01e4(0x6ba)][_0x3c01e4(0x269)]([_0x4adbb1[_0x3c01e4(0x74f)]],_0x3c01e4(0x277)),_0x20db0f=_0x113ab8[\\x27objectStore\\x27](_0x4adbb1[_0x3c01e4(0x74f)]),_0x53ee57=0x0,_0x5db81b=0x0,_0x3c4d4f=_0x237110[_0x3c01e4(0x479)];function\\x20_0x2d200e(){0x0==_0x5db81b?_0x303dfa():_0x30cd71();}_0x237110[_0x3c01e4(0x71e)](_0x3c2854=>{var\\x20_0x776acb=_0x3c01e4,_0x57796f=_0x20db0f[_0x776acb(0x2b7)](_0x4adbb1[_0x776acb(0x2e6)](_0x3c2854)[_0x776acb(0x556)][_0x776acb(0x418)],_0x3c2854);_0x57796f[\\x27onsuccess\\x27]=()=>{++_0x53ee57+_0x5db81b==_0x3c4d4f&&_0x2d200e();},_0x57796f[_0x776acb(0x256)]=()=>{_0x5db81b++,_0x53ee57+_0x5db81b==_0x3c4d4f&&_0x2d200e();};}),_0x113ab8[\\x27onerror\\x27]=_0x30cd71;},_0x8fad5[_0x3b0498(0x256)]=_0x30cd71;},\\x27loadFilesFromDB\\x27:(_0x3460b8,_0x493e21,_0x1cc61e)=>{var\\x20_0x2b2190=_0x29789b;_0x493e21=_0x493e21||(()=>{}),_0x1cc61e=_0x1cc61e||(()=>{});var\\x20_0x372462=_0x4adbb1[\\x27indexedDB\\x27]();try{var\\x20_0xc294b9=_0x372462[_0x2b2190(0x3a0)](_0x4adbb1[_0x2b2190(0x6ac)](),_0x4adbb1[_0x2b2190(0x755)]);}catch(_0x4679cb){return\\x20_0x1cc61e(_0x4679cb);}_0xc294b9[_0x2b2190(0x57a)]=_0x1cc61e,_0xc294b9[_0x2b2190(0x4b2)]=()=>{var\\x20_0x37afca=_0x2b2190,_0x216dc4=_0xc294b9[_0x37afca(0x6ba)];try{var\\x20_0x528f55=_0x216dc4[\\x27transaction\\x27]([_0x4adbb1[_0x37afca(0x74f)]],\\x27readonly\\x27);}catch(_0x173f77){return\\x20void\\x20_0x1cc61e(_0x173f77);}var\\x20_0x36e7e5=_0x528f55[_0x37afca(0x335)](_0x4adbb1[_0x37afca(0x74f)]),_0x21c353=0x0,_0x49f14d=0x0,_0x13d506=_0x3460b8[_0x37afca(0x479)];function\\x20_0x403e8f(){0x0==_0x49f14d?_0x493e21():_0x1cc61e();}_0x3460b8[_0x37afca(0x71e)](_0x388b7b=>{var\\x20_0x5c54e7=_0x37afca,_0x1cabea=_0x36e7e5[_0x5c54e7(0x528)](_0x388b7b);_0x1cabea[_0x5c54e7(0x4b2)]=()=>{var\\x20_0x1a4222=_0x5c54e7;_0x4adbb1[_0x1a4222(0x2e6)](_0x388b7b)[_0x1a4222(0x579)]&&_0x4adbb1[\\x27unlink\\x27](_0x388b7b),_0x4adbb1[_0x1a4222(0x270)](_0x95e934[_0x1a4222(0x540)](_0x388b7b),_0x95e934[_0x1a4222(0x4d8)](_0x388b7b),_0x1cabea[_0x1a4222(0x6ba)],!0x0,!0x0,!0x0),++_0x21c353+_0x49f14d==_0x13d506&&_0x403e8f();},_0x1cabea[_0x5c54e7(0x256)]=()=>{_0x49f14d++,_0x21c353+_0x49f14d==_0x13d506&&_0x403e8f();};}),_0x528f55[_0x37afca(0x256)]=_0x1cc61e;},_0xc294b9[\\x27onerror\\x27]=_0x1cc61e;},\\x27absolutePath\\x27:()=>{var\\x20_0x32c08d=_0x29789b;_0x12d2c9(_0x32c08d(0x473));},\\x27createFolder\\x27:()=>{var\\x20_0xca29ae=_0x29789b;_0x12d2c9(_0xca29ae(0x777));},\\x27createLink\\x27:()=>{var\\x20_0x1ab4d1=_0x29789b;_0x12d2c9(_0x1ab4d1(0x689));},\\x27joinPath\\x27:()=>{var\\x20_0x224e86=_0x29789b;_0x12d2c9(_0x224e86(0x6d9));},\\x27mmapAlloc\\x27:()=>{_0x12d2c9(\\x27FS.mmapAlloc\\x5cx20has\\x5cx20been\\x5cx20replaced\\x5cx20by\\x5cx20the\\x5cx20top\\x5cx20level\\x5cx20function\\x5cx20mmapAlloc\\x27);},\\x27standardizePath\\x27:()=>{_0x12d2c9(\\x27FS.standardizePath\\x5cx20has\\x5cx20been\\x5cx20removed;\\x5cx20use\\x5cx20PATH.normalize\\x5cx20instead\\x27);}},_0x5ae396={\\x27DEFAULT_POLLMASK\\x27:0x5,\\x27calculateAt\\x27:function(_0x26685c,_0x562001,_0x2c0bed){var\\x20_0x35df85=_0x29789b;if(_0x95e934[_0x35df85(0x77d)](_0x562001))return\\x20_0x562001;var\\x20_0x64bbe1;-0x64===_0x26685c?_0x64bbe1=_0x4adbb1[_0x35df85(0x4b7)]():_0x64bbe1=_0x5ae396[_0x35df85(0x6b6)](_0x26685c)[_0x35df85(0x258)];if(0x0==_0x562001[\\x27length\\x27]){if(!_0x2c0bed)throw\\x20new\\x20_0x4adbb1[(_0x35df85(0x5d3))](0x2c);return\\x20_0x64bbe1;}return\\x20_0x95e934[\\x27join2\\x27](_0x64bbe1,_0x562001);},\\x27doStat\\x27:function(_0x485b15,_0x2d4024,_0xf8fffb){var\\x20_0x2ecd7d=_0x29789b;try{var\\x20_0x1a8e8e=_0x485b15(_0x2d4024);}catch(_0x42d302){if(_0x42d302&&_0x42d302[_0x2ecd7d(0x1c4)]&&_0x95e934[\\x27normalize\\x27](_0x2d4024)!==_0x95e934[_0x2ecd7d(0x666)](_0x4adbb1[\\x27getPath\\x27](_0x42d302[_0x2ecd7d(0x1c4)])))return-0x36;throw\\x20_0x42d302;}_0x2b3c8c[_0xf8fffb>>0x2]=_0x1a8e8e[_0x2ecd7d(0x48d)],_0x2b3c8c[_0xf8fffb+0x8>>0x2]=_0x1a8e8e[_0x2ecd7d(0x64a)],_0x2b3c8c[_0xf8fffb+0xc>>0x2]=_0x1a8e8e[_0x2ecd7d(0x477)],_0x452739[_0xf8fffb+0x10>>0x2]=_0x1a8e8e[_0x2ecd7d(0x254)],_0x2b3c8c[_0xf8fffb+0x14>>0x2]=_0x1a8e8e[_0x2ecd7d(0x405)],_0x2b3c8c[_0xf8fffb+0x18>>0x2]=_0x1a8e8e[\\x27gid\\x27],_0x2b3c8c[_0xf8fffb+0x1c>>0x2]=_0x1a8e8e[_0x2ecd7d(0x4f9)],_0x5cdf2c=[_0x1a8e8e[\\x27size\\x27]>>>0x0,(_0x573dd4=_0x1a8e8e[_0x2ecd7d(0x5f7)],+Math[_0x2ecd7d(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[_0x2ecd7d(0x1af)](+Math[_0x2ecd7d(0x366)](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[_0x2ecd7d(0x475)]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0xf8fffb+0x28>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0xf8fffb+0x2c>>0x2]=_0x5cdf2c[0x1],_0x2b3c8c[_0xf8fffb+0x30>>0x2]=0x1000,_0x2b3c8c[_0xf8fffb+0x34>>0x2]=_0x1a8e8e[_0x2ecd7d(0x41a)];var\\x20_0x2eef8c=_0x1a8e8e[_0x2ecd7d(0x5e3)][_0x2ecd7d(0x746)](),_0x4e0917=_0x1a8e8e[\\x27mtime\\x27][_0x2ecd7d(0x746)](),_0x5199ee=_0x1a8e8e[_0x2ecd7d(0x416)][_0x2ecd7d(0x746)]();return\\x20_0x5cdf2c=[Math[_0x2ecd7d(0x366)](_0x2eef8c/0x3e8)>>>0x0,(_0x573dd4=Math[\\x27floor\\x27](_0x2eef8c/0x3e8),+Math[_0x2ecd7d(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[_0x2ecd7d(0x1af)](+Math[_0x2ecd7d(0x366)](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[_0x2ecd7d(0x475)]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0xf8fffb+0x38>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0xf8fffb+0x3c>>0x2]=_0x5cdf2c[0x1],_0x452739[_0xf8fffb+0x40>>0x2]=_0x2eef8c%0x3e8*0x3e8,_0x5cdf2c=[Math[_0x2ecd7d(0x366)](_0x4e0917/0x3e8)>>>0x0,(_0x573dd4=Math[_0x2ecd7d(0x366)](_0x4e0917/0x3e8),+Math[_0x2ecd7d(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[\\x27min\\x27](+Math[_0x2ecd7d(0x366)](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[\\x27ceil\\x27]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0xf8fffb+0x48>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0xf8fffb+0x4c>>0x2]=_0x5cdf2c[0x1],_0x452739[_0xf8fffb+0x50>>0x2]=_0x4e0917%0x3e8*0x3e8,_0x5cdf2c=[Math[_0x2ecd7d(0x366)](_0x5199ee/0x3e8)>>>0x0,(_0x573dd4=Math[_0x2ecd7d(0x366)](_0x5199ee/0x3e8),+Math[_0x2ecd7d(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[_0x2ecd7d(0x1af)](+Math[\\x27floor\\x27](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[_0x2ecd7d(0x475)]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0xf8fffb+0x58>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0xf8fffb+0x5c>>0x2]=_0x5cdf2c[0x1],_0x452739[_0xf8fffb+0x60>>0x2]=_0x5199ee%0x3e8*0x3e8,_0x5cdf2c=[_0x1a8e8e[_0x2ecd7d(0x64a)]>>>0x0,(_0x573dd4=_0x1a8e8e[\\x27ino\\x27],+Math[_0x2ecd7d(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[\\x27min\\x27](+Math[\\x27floor\\x27](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[_0x2ecd7d(0x475)]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0xf8fffb+0x68>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0xf8fffb+0x6c>>0x2]=_0x5cdf2c[0x1],0x0;},\\x27doMsync\\x27:function(_0x52751e,_0x1df148,_0x39eabb,_0x1baa97,_0x32c04c){var\\x20_0x5c4acc=_0x29789b;if(!_0x4adbb1[_0x5c4acc(0x1f7)](_0x1df148[_0x5c4acc(0x1c4)][_0x5c4acc(0x477)]))throw\\x20new\\x20_0x4adbb1[(_0x5c4acc(0x5d3))](0x2b);if(0x2&_0x1baa97)return\\x200x0;var\\x20_0x4578c6=_0x55c3f0[_0x5c4acc(0x5a3)](_0x52751e,_0x52751e+_0x39eabb);_0x4adbb1[\\x27msync\\x27](_0x1df148,_0x4578c6,_0x32c04c,_0x39eabb,_0x1baa97);},\\x27varargs\\x27:void\\x200x0,\\x27get\\x27:function(){var\\x20_0x5a0f25=_0x29789b;return\\x20_0x299bd7(null!=_0x5ae396[_0x5a0f25(0x4cd)]),_0x5ae396[_0x5a0f25(0x4cd)]+=0x4,_0x2b3c8c[_0x5ae396[_0x5a0f25(0x4cd)]-0x4>>0x2];},\\x27getStr\\x27:function(_0x39f093){return\\x20_0x27b5df(_0x39f093);},\\x27getStreamFromFD\\x27:function(_0x195c01){var\\x20_0xebdf03=_0x29789b,_0x31b19b=_0x4adbb1[_0xebdf03(0x2cd)](_0x195c01);if(!_0x31b19b)throw\\x20new\\x20_0x4adbb1[(_0xebdf03(0x5d3))](0x8);return\\x20_0x31b19b;}};function\\x20_0x3222bd(_0x302d96){var\\x20_0x2bec36=_0x29789b;try{return\\x20_0x39da9c[\\x27grow\\x27](_0x302d96-_0x1e6a4d[_0x2bec36(0x273)]+0xffff>>>0x10),_0x36306f(_0x39da9c[_0x2bec36(0x6d3)]),0x1;}catch(_0x375959){_0x5528a8(_0x2bec36(0x497)+_0x1e6a4d[\\x27byteLength\\x27]+\\x27\\x5cx20bytes\\x5cx20to\\x5cx20\\x27+_0x302d96+_0x2bec36(0x679)+_0x375959);}}var\\x20_0x5f10c1={};function\\x20_0x7c7041(){var\\x20_0x4bda0a=_0x29789b;if(!_0x7c7041[_0x4bda0a(0x357)]){var\\x20_0x468f01={\\x27USER\\x27:_0x4bda0a(0x363),\\x27LOGNAME\\x27:_0x4bda0a(0x363),\\x27PATH\\x27:\\x27/\\x27,\\x27PWD\\x27:\\x27/\\x27,\\x27HOME\\x27:_0x4bda0a(0x215),\\x27LANG\\x27:(\\x27object\\x27==typeof\\x20navigator&&navigator[_0x4bda0a(0x5b2)]&&navigator[\\x27languages\\x27][0x0]||\\x27C\\x27)[_0x4bda0a(0x690)](\\x27-\\x27,\\x27_\\x27)+_0x4bda0a(0x39d),\\x27_\\x27:_0x57219c||\\x27./this.program\\x27};for(var\\x20_0x255c45\\x20in\\x20_0x5f10c1)void\\x200x0===_0x5f10c1[_0x255c45]?delete\\x20_0x468f01[_0x255c45]:_0x468f01[_0x255c45]=_0x5f10c1[_0x255c45];var\\x20_0x2f076c=[];for(var\\x20_0x255c45\\x20in\\x20_0x468f01)_0x2f076c[_0x4bda0a(0x3d6)](_0x255c45+\\x27=\\x27+_0x468f01[_0x255c45]);_0x7c7041[_0x4bda0a(0x357)]=_0x2f076c;}return\\x20_0x7c7041[_0x4bda0a(0x357)];}var\\x20_0x123cd0=function(_0x4e7c92,_0x445b77){var\\x20_0xa7e266=_0x29789b,_0x32db5e;_0x4e7c92,(function(){var\\x20_0x3ad9d5=a1_0x2045,_0x3ab649=_0x588b31,_0x28061b=_0x5528a8,_0x18e506=!0x1;_0x588b31=_0x5528a8=_0x1bce5b=>{_0x18e506=!0x0;};try{_0x11b144(0x0),[_0x3ad9d5(0x245),_0x3ad9d5(0x278)][\\x27forEach\\x27](function(_0x5b2c10){var\\x20_0x1c294f=_0x3ad9d5,_0x3f6698=_0x4adbb1[_0x1c294f(0x2e6)](_0x1c294f(0x46a)+_0x5b2c10);if(_0x3f6698){var\\x20_0x195041=_0x3f6698[_0x1c294f(0x556)][\\x27rdev\\x27],_0x3e9794=_0x2e48fc[_0x1c294f(0x587)][_0x195041];_0x3e9794&&_0x3e9794[\\x27output\\x27]&&_0x3e9794[_0x1c294f(0x487)][_0x1c294f(0x479)]&&(_0x18e506=!0x0);}});}catch(_0x4f3b1d){}_0x588b31=_0x3ab649,_0x5528a8=_0x28061b,_0x18e506&&_0x953362(\\x27stdio\\x5cx20streams\\x5cx20had\\x5cx20content\\x5cx20in\\x5cx20them\\x5cx20that\\x5cx20was\\x5cx20not\\x5cx20flushed.\\x5cx20you\\x5cx20should\\x5cx20set\\x5cx20EXIT_RUNTIME\\x5cx20to\\x5cx201\\x5cx20(see\\x5cx20the\\x5cx20FAQ),\\x5cx20or\\x5cx20make\\x5cx20sure\\x5cx20to\\x5cx20emit\\x5cx20a\\x5cx20newline\\x5cx20when\\x5cx20you\\x5cx20printf\\x5cx20etc.\\x27);}()),_0x5dd7d1()&&!_0x445b77&&_0x5528a8(_0xa7e266(0x630)+_0x4e7c92+\\x27),\\x5cx20but\\x5cx20EXIT_RUNTIME\\x5cx20is\\x5cx20not\\x5cx20set,\\x5cx20so\\x5cx20halting\\x5cx20execution\\x5cx20but\\x5cx20not\\x5cx20exiting\\x5cx20the\\x5cx20runtime\\x5cx20or\\x5cx20preventing\\x5cx20further\\x5cx20async\\x5cx20execution\\x5cx20(build\\x5cx20with\\x5cx20EXIT_RUNTIME=1,\\x5cx20if\\x5cx20you\\x5cx20want\\x5cx20a\\x5cx20true\\x5cx20shutdown)\\x27),_0x32db5e=_0x4e7c92,_0x5dd7d1()||(_0xacfddc[_0xa7e266(0x67f)]&&_0xacfddc[_0xa7e266(0x67f)](_0x32db5e),_0x5ce334=!0x0),_0x3ec98c(_0x32db5e,new\\x20_0x502c8e(_0x32db5e));};function\\x20_0x4f9f7e(_0x168621){return\\x20_0x168621%0x4==0x0&&(_0x168621%0x64!=0x0||_0x168621%0x190==0x0);}var\\x20_0x66ddc7=[0x1f,0x1d,0x1f,0x1e,0x1f,0x1e,0x1f,0x1f,0x1e,0x1f,0x1e,0x1f],_0x119bf6=[0x1f,0x1c,0x1f,0x1e,0x1f,0x1e,0x1f,0x1f,0x1e,0x1f,0x1e,0x1f];function\\x20_0x45edce(_0x233eb3,_0x347cde,_0x3924dc,_0xffb1){var\\x20_0x112846=_0x29789b,_0x31c07f=_0x2b3c8c[_0xffb1+0x28>>0x2],_0x281e19={\\x27tm_sec\\x27:_0x2b3c8c[_0xffb1>>0x2],\\x27tm_min\\x27:_0x2b3c8c[_0xffb1+0x4>>0x2],\\x27tm_hour\\x27:_0x2b3c8c[_0xffb1+0x8>>0x2],\\x27tm_mday\\x27:_0x2b3c8c[_0xffb1+0xc>>0x2],\\x27tm_mon\\x27:_0x2b3c8c[_0xffb1+0x10>>0x2],\\x27tm_year\\x27:_0x2b3c8c[_0xffb1+0x14>>0x2],\\x27tm_wday\\x27:_0x2b3c8c[_0xffb1+0x18>>0x2],\\x27tm_yday\\x27:_0x2b3c8c[_0xffb1+0x1c>>0x2],\\x27tm_isdst\\x27:_0x2b3c8c[_0xffb1+0x20>>0x2],\\x27tm_gmtoff\\x27:_0x2b3c8c[_0xffb1+0x24>>0x2],\\x27tm_zone\\x27:_0x31c07f?_0x27b5df(_0x31c07f):\\x27\\x27},_0x4fde0b=_0x27b5df(_0x3924dc),_0x3d8f88={\\x27%c\\x27:_0x112846(0x367),\\x27%D\\x27:_0x112846(0x565),\\x27%F\\x27:_0x112846(0x336),\\x27%h\\x27:\\x27%b\\x27,\\x27%r\\x27:\\x27%I:%M:%S\\x5cx20%p\\x27,\\x27%R\\x27:_0x112846(0x6a0),\\x27%T\\x27:_0x112846(0x41c),\\x27%x\\x27:_0x112846(0x565),\\x27%X\\x27:_0x112846(0x41c),\\x27%Ec\\x27:\\x27%c\\x27,\\x27%EC\\x27:\\x27%C\\x27,\\x27%Ex\\x27:_0x112846(0x565),\\x27%EX\\x27:_0x112846(0x41c),\\x27%Ey\\x27:\\x27%y\\x27,\\x27%EY\\x27:\\x27%Y\\x27,\\x27%Od\\x27:\\x27%d\\x27,\\x27%Oe\\x27:\\x27%e\\x27,\\x27%OH\\x27:\\x27%H\\x27,\\x27%OI\\x27:\\x27%I\\x27,\\x27%Om\\x27:\\x27%m\\x27,\\x27%OM\\x27:\\x27%M\\x27,\\x27%OS\\x27:\\x27%S\\x27,\\x27%Ou\\x27:\\x27%u\\x27,\\x27%OU\\x27:\\x27%U\\x27,\\x27%OV\\x27:\\x27%V\\x27,\\x27%Ow\\x27:\\x27%w\\x27,\\x27%OW\\x27:\\x27%W\\x27,\\x27%Oy\\x27:\\x27%y\\x27};for(var\\x20_0x4fc0ff\\x20in\\x20_0x3d8f88)_0x4fde0b=_0x4fde0b[_0x112846(0x690)](new\\x20RegExp(_0x4fc0ff,\\x27g\\x27),_0x3d8f88[_0x4fc0ff]);var\\x20_0x4db8b4=[\\x27Sunday\\x27,_0x112846(0x29f),_0x112846(0x2de),_0x112846(0x3c1),\\x27Thursday\\x27,_0x112846(0x351),_0x112846(0x450)],_0x3bebdb=[_0x112846(0x410),_0x112846(0x398),\\x27March\\x27,_0x112846(0x716),_0x112846(0x330),_0x112846(0x379),_0x112846(0x4de),_0x112846(0x5b9),_0x112846(0x6c2),_0x112846(0x332),_0x112846(0x634),_0x112846(0x64c)];function\\x20_0x1e0b37(_0x2db50e,_0x21f384,_0x281b46){var\\x20_0x381cd5=_0x112846;for(var\\x20_0x3b2e9a=_0x381cd5(0x260)==typeof\\x20_0x2db50e?_0x2db50e[_0x381cd5(0x4ff)]():_0x2db50e||\\x27\\x27;_0x3b2e9a[_0x381cd5(0x479)]<_0x21f384;)_0x3b2e9a=_0x281b46[0x0]+_0x3b2e9a;return\\x20_0x3b2e9a;}function\\x20_0x11cdee(_0x5dd6ba,_0x352e4c){return\\x20_0x1e0b37(_0x5dd6ba,_0x352e4c,\\x270\\x27);}function\\x20_0x4bcd24(_0x1d5396,_0x4ca649){var\\x20_0x30cd3b=_0x112846;function\\x20_0x2fdf7d(_0x1e73a7){return\\x20_0x1e73a7<0x0?-0x1:_0x1e73a7>0x0?0x1:0x0;}var\\x20_0x1b3020;return\\x200x0===(_0x1b3020=_0x2fdf7d(_0x1d5396[_0x30cd3b(0x6b2)]()-_0x4ca649[_0x30cd3b(0x6b2)]()))&&0x0===(_0x1b3020=_0x2fdf7d(_0x1d5396[_0x30cd3b(0x558)]()-_0x4ca649[_0x30cd3b(0x558)]()))&&(_0x1b3020=_0x2fdf7d(_0x1d5396[\\x27getDate\\x27]()-_0x4ca649[_0x30cd3b(0x200)]())),_0x1b3020;}function\\x20_0x329cf8(_0x43395c){var\\x20_0x4233b4=_0x112846;switch(_0x43395c[_0x4233b4(0x264)]()){case\\x200x0:return\\x20new\\x20Date(_0x43395c[\\x27getFullYear\\x27]()-0x1,0xb,0x1d);case\\x200x1:return\\x20_0x43395c;case\\x200x2:return\\x20new\\x20Date(_0x43395c[_0x4233b4(0x6b2)](),0x0,0x3);case\\x200x3:return\\x20new\\x20Date(_0x43395c[\\x27getFullYear\\x27](),0x0,0x2);case\\x200x4:return\\x20new\\x20Date(_0x43395c[_0x4233b4(0x6b2)](),0x0,0x1);case\\x200x5:return\\x20new\\x20Date(_0x43395c[\\x27getFullYear\\x27]()-0x1,0xb,0x1f);case\\x200x6:return\\x20new\\x20Date(_0x43395c[_0x4233b4(0x6b2)]()-0x1,0xb,0x1e);}}function\\x20_0x226f5e(_0x286979){var\\x20_0xb7fa31=_0x112846,_0x3f12e8=function(_0x3d9dcb,_0x3691e8){var\\x20_0x2d418b=a1_0x2045;for(var\\x20_0x25580d=new\\x20Date(_0x3d9dcb[_0x2d418b(0x746)]());_0x3691e8>0x0;){var\\x20_0x3cdc7d=_0x4f9f7e(_0x25580d[\\x27getFullYear\\x27]()),_0x46c170=_0x25580d[_0x2d418b(0x558)](),_0x514b5c=(_0x3cdc7d?_0x66ddc7:_0x119bf6)[_0x46c170];if(!(_0x3691e8>_0x514b5c-_0x25580d[\\x27getDate\\x27]()))return\\x20_0x25580d[\\x27setDate\\x27](_0x25580d[_0x2d418b(0x200)]()+_0x3691e8),_0x25580d;_0x3691e8-=_0x514b5c-_0x25580d[_0x2d418b(0x200)]()+0x1,_0x25580d[_0x2d418b(0x550)](0x1),_0x46c170<0xb?_0x25580d[_0x2d418b(0x75b)](_0x46c170+0x1):(_0x25580d[\\x27setMonth\\x27](0x0),_0x25580d[\\x27setFullYear\\x27](_0x25580d[_0x2d418b(0x6b2)]()+0x1));}return\\x20_0x25580d;}(new\\x20Date(_0x286979[_0xb7fa31(0x302)]+0x76c,0x0,0x1),_0x286979[_0xb7fa31(0x262)]),_0x29530a=new\\x20Date(_0x3f12e8[_0xb7fa31(0x6b2)](),0x0,0x4),_0x4762f8=new\\x20Date(_0x3f12e8[_0xb7fa31(0x6b2)]()+0x1,0x0,0x4),_0x2c62f0=_0x329cf8(_0x29530a),_0x3e2828=_0x329cf8(_0x4762f8);return\\x20_0x4bcd24(_0x2c62f0,_0x3f12e8)<=0x0?_0x4bcd24(_0x3e2828,_0x3f12e8)<=0x0?_0x3f12e8[_0xb7fa31(0x6b2)]()+0x1:_0x3f12e8[_0xb7fa31(0x6b2)]():_0x3f12e8[_0xb7fa31(0x6b2)]()-0x1;}var\\x20_0x3c6cb8={\\x27%a\\x27:function(_0x4c0edb){var\\x20_0x476455=_0x112846;return\\x20_0x4db8b4[_0x4c0edb[_0x476455(0x4e7)]][_0x476455(0x491)](0x0,0x3);},\\x27%A\\x27:function(_0x2d65c3){var\\x20_0x4b5b8a=_0x112846;return\\x20_0x4db8b4[_0x2d65c3[_0x4b5b8a(0x4e7)]];},\\x27%b\\x27:function(_0x5ead77){var\\x20_0x4b5d5b=_0x112846;return\\x20_0x3bebdb[_0x5ead77[_0x4b5d5b(0x652)]][\\x27substring\\x27](0x0,0x3);},\\x27%B\\x27:function(_0x14f37f){var\\x20_0x29a887=_0x112846;return\\x20_0x3bebdb[_0x14f37f[_0x29a887(0x652)]];},\\x27%C\\x27:function(_0x491af9){var\\x20_0x1f354d=_0x112846;return\\x20_0x11cdee((_0x491af9[_0x1f354d(0x302)]+0x76c)/0x64|0x0,0x2);},\\x27%d\\x27:function(_0x331edb){var\\x20_0x48c180=_0x112846;return\\x20_0x11cdee(_0x331edb[_0x48c180(0x1ad)],0x2);},\\x27%e\\x27:function(_0x40528e){var\\x20_0x3ab287=_0x112846;return\\x20_0x1e0b37(_0x40528e[_0x3ab287(0x1ad)],0x2,\\x27\\x5cx20\\x27);},\\x27%g\\x27:function(_0x45833d){var\\x20_0x1c6f94=_0x112846;return\\x20_0x226f5e(_0x45833d)[_0x1c6f94(0x4ff)]()[_0x1c6f94(0x491)](0x2);},\\x27%G\\x27:function(_0x193e99){return\\x20_0x226f5e(_0x193e99);},\\x27%H\\x27:function(_0x2676c9){var\\x20_0x54e4a7=_0x112846;return\\x20_0x11cdee(_0x2676c9[_0x54e4a7(0x286)],0x2);},\\x27%I\\x27:function(_0x7d42c2){var\\x20_0x263f9f=_0x7d42c2[\\x27tm_hour\\x27];return\\x200x0==_0x263f9f?_0x263f9f=0xc:_0x263f9f>0xc&&(_0x263f9f-=0xc),_0x11cdee(_0x263f9f,0x2);},\\x27%j\\x27:function(_0x548c88){var\\x20_0x51d8bf=_0x112846;return\\x20_0x11cdee(_0x548c88[_0x51d8bf(0x1ad)]+function(_0x29c2b9,_0x5943f4){for(var\\x20_0x3515bf=0x0,_0x403760=0x0;_0x403760<=_0x5943f4;_0x3515bf+=_0x29c2b9[_0x403760++]);return\\x20_0x3515bf;}(_0x4f9f7e(_0x548c88[_0x51d8bf(0x302)]+0x76c)?_0x66ddc7:_0x119bf6,_0x548c88[_0x51d8bf(0x652)]-0x1),0x3);},\\x27%m\\x27:function(_0x31575e){var\\x20_0x4acc0e=_0x112846;return\\x20_0x11cdee(_0x31575e[_0x4acc0e(0x652)]+0x1,0x2);},\\x27%M\\x27:function(_0x22ecc1){var\\x20_0x2c9e1f=_0x112846;return\\x20_0x11cdee(_0x22ecc1[_0x2c9e1f(0x6f8)],0x2);},\\x27%n\\x27:function(){return\\x27\\x5cx0a\\x27;},\\x27%p\\x27:function(_0x4abf3f){var\\x20_0x20d773=_0x112846;return\\x20_0x4abf3f[_0x20d773(0x286)]>=0x0&&_0x4abf3f[_0x20d773(0x286)]<0xc?\\x27AM\\x27:\\x27PM\\x27;},\\x27%S\\x27:function(_0x7c5249){return\\x20_0x11cdee(_0x7c5249[\\x27tm_sec\\x27],0x2);},\\x27%t\\x27:function(){return\\x27\\x5cx09\\x27;},\\x27%u\\x27:function(_0x591b8f){var\\x20_0x4ebac4=_0x112846;return\\x20_0x591b8f[_0x4ebac4(0x4e7)]||0x7;},\\x27%U\\x27:function(_0x126b45){var\\x20_0x30836e=_0x112846,_0x10846d=_0x126b45[_0x30836e(0x262)]+0x7-_0x126b45[_0x30836e(0x4e7)];return\\x20_0x11cdee(Math[_0x30836e(0x366)](_0x10846d/0x7),0x2);},\\x27%V\\x27:function(_0x558a1d){var\\x20_0x3f1751=_0x112846,_0x28a955=Math[\\x27floor\\x27]((_0x558a1d[_0x3f1751(0x262)]+0x7-(_0x558a1d[_0x3f1751(0x4e7)]+0x6)%0x7)/0x7);if((_0x558a1d[_0x3f1751(0x4e7)]+0x173-_0x558a1d[_0x3f1751(0x262)]-0x2)%0x7<=0x2&&_0x28a955++,_0x28a955){if(0x35==_0x28a955){var\\x20_0x3dfb84=(_0x558a1d[\\x27tm_wday\\x27]+0x173-_0x558a1d[_0x3f1751(0x262)])%0x7;0x4==_0x3dfb84||0x3==_0x3dfb84&&_0x4f9f7e(_0x558a1d[_0x3f1751(0x302)])||(_0x28a955=0x1);}}else{_0x28a955=0x34;var\\x20_0x36a30a=(_0x558a1d[_0x3f1751(0x4e7)]+0x7-_0x558a1d[_0x3f1751(0x262)]-0x1)%0x7;(0x4==_0x36a30a||0x5==_0x36a30a&&_0x4f9f7e(_0x558a1d[\\x27tm_year\\x27]%0x190-0x1))&&_0x28a955++;}return\\x20_0x11cdee(_0x28a955,0x2);},\\x27%w\\x27:function(_0xe2ebe1){return\\x20_0xe2ebe1[\\x27tm_wday\\x27];},\\x27%W\\x27:function(_0x3dbf45){var\\x20_0x7c20a5=_0x112846,_0x49f08d=_0x3dbf45[_0x7c20a5(0x262)]+0x7-(_0x3dbf45[_0x7c20a5(0x4e7)]+0x6)%0x7;return\\x20_0x11cdee(Math[\\x27floor\\x27](_0x49f08d/0x7),0x2);},\\x27%y\\x27:function(_0x434b2b){var\\x20_0x2ced58=_0x112846;return(_0x434b2b[_0x2ced58(0x302)]+0x76c)[_0x2ced58(0x4ff)]()[_0x2ced58(0x491)](0x2);},\\x27%Y\\x27:function(_0x398082){var\\x20_0x4f68c3=_0x112846;return\\x20_0x398082[_0x4f68c3(0x302)]+0x76c;},\\x27%z\\x27:function(_0xf55921){var\\x20_0x4297e4=_0x112846,_0xcae328=_0xf55921[_0x4297e4(0x4c3)],_0x47bb7e=_0xcae328>=0x0;return\\x20_0xcae328=(_0xcae328=Math[_0x4297e4(0x613)](_0xcae328)/0x3c)/0x3c*0x64+_0xcae328%0x3c,(_0x47bb7e?\\x27+\\x27:\\x27-\\x27)+String(_0x4297e4(0x4a8)+_0xcae328)[_0x4297e4(0x5a3)](-0x4);},\\x27%Z\\x27:function(_0x5cb6c6){return\\x20_0x5cb6c6[\\x27tm_zone\\x27];},\\x27%%\\x27:function(){return\\x27%\\x27;}};for(var\\x20_0x4fc0ff\\x20in(_0x4fde0b=_0x4fde0b[_0x112846(0x690)](/%%/g,\\x27\\x5cx00\\x5cx00\\x27),_0x3c6cb8))_0x4fde0b[_0x112846(0x714)](_0x4fc0ff)&&(_0x4fde0b=_0x4fde0b[_0x112846(0x690)](new\\x20RegExp(_0x4fc0ff,\\x27g\\x27),_0x3c6cb8[_0x4fc0ff](_0x281e19)));var\\x20_0x29786a=_0x204be4(_0x4fde0b=_0x4fde0b[_0x112846(0x690)](/\\x5c0\\x5c0/g,\\x27%\\x27),!0x1);return\\x20_0x29786a[_0x112846(0x479)]>_0x347cde?0x0:(function(_0x4b9d8e,_0x102f8a){var\\x20_0x33dbb4=_0x112846;_0x299bd7(_0x4b9d8e[_0x33dbb4(0x479)]>=0x0,_0x33dbb4(0x3cf)),_0x58a58e[_0x33dbb4(0x6a6)](_0x4b9d8e,_0x102f8a);}(_0x29786a,_0x233eb3),_0x29786a[_0x112846(0x479)]-0x1);}!(function(){var\\x20_0x35c798=_0x29789b;for(var\\x20_0x318995=new\\x20Array(0x100),_0x47569e=0x0;_0x47569e<0x100;++_0x47569e)_0x318995[_0x47569e]=String[_0x35c798(0x386)](_0x47569e);_0x36b94f=_0x318995;}()),_0x25df29=_0xacfddc[_0x29789b(0x5d1)]=_0x227bb2(Error,\\x27BindingError\\x27),_0x354564=_0xacfddc[_0x29789b(0x6de)]=_0x227bb2(Error,_0x29789b(0x6de)),_0xacfddc[_0x29789b(0x478)]=_0x290abd,_0xacfddc[\\x27get_first_emval\\x27]=_0x145696,_0xf5bc1f=_0xacfddc[_0x29789b(0x6ad)]=_0x227bb2(Error,\\x27UnboundTypeError\\x27);var\\x20_0x18e75b=function(_0x58938c,_0x2fec24,_0x400f0c,_0x4592f0){var\\x20_0x2b8fed=_0x29789b;_0x58938c||(_0x58938c=this),this[_0x2b8fed(0x649)]=_0x58938c,this[_0x2b8fed(0x32a)]=_0x58938c[_0x2b8fed(0x32a)],this[_0x2b8fed(0x1ba)]=null,this[\\x27id\\x27]=_0x4adbb1[_0x2b8fed(0x209)]++,this[_0x2b8fed(0x2e3)]=_0x2fec24,this[\\x27mode\\x27]=_0x400f0c,this[_0x2b8fed(0x5cf)]={},this[_0x2b8fed(0x77c)]={},this[_0x2b8fed(0x4f9)]=_0x4592f0;},_0x4279a1=0x16d,_0x7550f7=0x92;Object[\\x27defineProperties\\x27](_0x18e75b[_0x29789b(0x4c4)],{\\x27read\\x27:{\\x27get\\x27:function(){var\\x20_0x240832=_0x29789b;return(this[_0x240832(0x477)]&_0x4279a1)===_0x4279a1;},\\x27set\\x27:function(_0x2f4a53){var\\x20_0x5407c0=_0x29789b;_0x2f4a53?this[_0x5407c0(0x477)]|=_0x4279a1:this[\\x27mode\\x27]&=-0x16e;}},\\x27write\\x27:{\\x27get\\x27:function(){return(this[\\x27mode\\x27]&_0x7550f7)===_0x7550f7;},\\x27set\\x27:function(_0x3b1bf1){var\\x20_0x4752f2=_0x29789b;_0x3b1bf1?this[_0x4752f2(0x477)]|=_0x7550f7:this[_0x4752f2(0x477)]&=-0x93;}},\\x27isFolder\\x27:{\\x27get\\x27:function(){var\\x20_0x12cb8b=_0x29789b;return\\x20_0x4adbb1[_0x12cb8b(0x468)](this[\\x27mode\\x27]);}},\\x27isDevice\\x27:{\\x27get\\x27:function(){var\\x20_0x3d9d80=_0x29789b;return\\x20_0x4adbb1[_0x3d9d80(0x294)](this[_0x3d9d80(0x477)]);}}}),_0x4adbb1[\\x27FSNode\\x27]=_0x18e75b,_0x4adbb1[\\x27staticInit\\x27](),_0x1523bb={\\x27EPERM\\x27:0x3f,\\x27ENOENT\\x27:0x2c,\\x27ESRCH\\x27:0x47,\\x27EINTR\\x27:0x1b,\\x27EIO\\x27:0x1d,\\x27ENXIO\\x27:0x3c,\\x27E2BIG\\x27:0x1,\\x27ENOEXEC\\x27:0x2d,\\x27EBADF\\x27:0x8,\\x27ECHILD\\x27:0xc,\\x27EAGAIN\\x27:0x6,\\x27EWOULDBLOCK\\x27:0x6,\\x27ENOMEM\\x27:0x30,\\x27EACCES\\x27:0x2,\\x27EFAULT\\x27:0x15,\\x27ENOTBLK\\x27:0x69,\\x27EBUSY\\x27:0xa,\\x27EEXIST\\x27:0x14,\\x27EXDEV\\x27:0x4b,\\x27ENODEV\\x27:0x2b,\\x27ENOTDIR\\x27:0x36,\\x27EISDIR\\x27:0x1f,\\x27EINVAL\\x27:0x1c,\\x27ENFILE\\x27:0x29,\\x27EMFILE\\x27:0x21,\\x27ENOTTY\\x27:0x3b,\\x27ETXTBSY\\x27:0x4a,\\x27EFBIG\\x27:0x16,\\x27ENOSPC\\x27:0x33,\\x27ESPIPE\\x27:0x46,\\x27EROFS\\x27:0x45,\\x27EMLINK\\x27:0x22,\\x27EPIPE\\x27:0x40,\\x27EDOM\\x27:0x12,\\x27ERANGE\\x27:0x44,\\x27ENOMSG\\x27:0x31,\\x27EIDRM\\x27:0x18,\\x27ECHRNG\\x27:0x6a,\\x27EL2NSYNC\\x27:0x9c,\\x27EL3HLT\\x27:0x6b,\\x27EL3RST\\x27:0x6c,\\x27ELNRNG\\x27:0x6d,\\x27EUNATCH\\x27:0x6e,\\x27ENOCSI\\x27:0x6f,\\x27EL2HLT\\x27:0x70,\\x27EDEADLK\\x27:0x10,\\x27ENOLCK\\x27:0x2e,\\x27EBADE\\x27:0x71,\\x27EBADR\\x27:0x72,\\x27EXFULL\\x27:0x73,\\x27ENOANO\\x27:0x68,\\x27EBADRQC\\x27:0x67,\\x27EBADSLT\\x27:0x66,\\x27EDEADLOCK\\x27:0x10,\\x27EBFONT\\x27:0x65,\\x27ENOSTR\\x27:0x64,\\x27ENODATA\\x27:0x74,\\x27ETIME\\x27:0x75,\\x27ENOSR\\x27:0x76,\\x27ENONET\\x27:0x77,\\x27ENOPKG\\x27:0x78,\\x27EREMOTE\\x27:0x79,\\x27ENOLINK\\x27:0x2f,\\x27EADV\\x27:0x7a,\\x27ESRMNT\\x27:0x7b,\\x27ECOMM\\x27:0x7c,\\x27EPROTO\\x27:0x41,\\x27EMULTIHOP\\x27:0x24,\\x27EDOTDOT\\x27:0x7d,\\x27EBADMSG\\x27:0x9,\\x27ENOTUNIQ\\x27:0x7e,\\x27EBADFD\\x27:0x7f,\\x27EREMCHG\\x27:0x80,\\x27ELIBACC\\x27:0x81,\\x27ELIBBAD\\x27:0x82,\\x27ELIBSCN\\x27:0x83,\\x27ELIBMAX\\x27:0x84,\\x27ELIBEXEC\\x27:0x85,\\x27ENOSYS\\x27:0x34,\\x27ENOTEMPTY\\x27:0x37,\\x27ENAMETOOLONG\\x27:0x25,\\x27ELOOP\\x27:0x20,\\x27EOPNOTSUPP\\x27:0x8a,\\x27EPFNOSUPPORT\\x27:0x8b,\\x27ECONNRESET\\x27:0xf,\\x27ENOBUFS\\x27:0x2a,\\x27EAFNOSUPPORT\\x27:0x5,\\x27EPROTOTYPE\\x27:0x43,\\x27ENOTSOCK\\x27:0x39,\\x27ENOPROTOOPT\\x27:0x32,\\x27ESHUTDOWN\\x27:0x8c,\\x27ECONNREFUSED\\x27:0xe,\\x27EADDRINUSE\\x27:0x3,\\x27ECONNABORTED\\x27:0xd,\\x27ENETUNREACH\\x27:0x28,\\x27ENETDOWN\\x27:0x26,\\x27ETIMEDOUT\\x27:0x49,\\x27EHOSTDOWN\\x27:0x8e,\\x27EHOSTUNREACH\\x27:0x17,\\x27EINPROGRESS\\x27:0x1a,\\x27EALREADY\\x27:0x7,\\x27EDESTADDRREQ\\x27:0x11,\\x27EMSGSIZE\\x27:0x23,\\x27EPROTONOSUPPORT\\x27:0x42,\\x27ESOCKTNOSUPPORT\\x27:0x89,\\x27EADDRNOTAVAIL\\x27:0x4,\\x27ENETRESET\\x27:0x27,\\x27EISCONN\\x27:0x1e,\\x27ENOTCONN\\x27:0x35,\\x27ETOOMANYREFS\\x27:0x8d,\\x27EUSERS\\x27:0x88,\\x27EDQUOT\\x27:0x13,\\x27ESTALE\\x27:0x48,\\x27ENOTSUP\\x27:0x8a,\\x27ENOMEDIUM\\x27:0x94,\\x27EILSEQ\\x27:0x19,\\x27EOVERFLOW\\x27:0x3d,\\x27ECANCELED\\x27:0xb,\\x27ENOTRECOVERABLE\\x27:0x38,\\x27EOWNERDEAD\\x27:0x3e,\\x27ESTRPIPE\\x27:0x87};var\\x20_0xc7d78b=!0x0,_0x41c88d=_0x29789b(0x3b0)==typeof\\x20atob?atob:function(_0x100440){var\\x20_0x2c8eba=_0x29789b,_0x2262b1,_0x7d31a,_0x561493,_0x2a2736,_0x381ca1,_0xe41c42,_0x5778b2=\\x27ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\x27,_0x73b225=\\x27\\x27,_0x2d7d0c=0x0;_0x100440=_0x100440[\\x27replace\\x27](/[^A-Za-z0-9\\x5c+\\x5c/\\x5c=]/g,\\x27\\x27);do{_0x2262b1=_0x5778b2[_0x2c8eba(0x292)](_0x100440[\\x27charAt\\x27](_0x2d7d0c++))<<0x2|(_0x2a2736=_0x5778b2[_0x2c8eba(0x292)](_0x100440[_0x2c8eba(0x242)](_0x2d7d0c++)))>>0x4,_0x7d31a=(0xf&_0x2a2736)<<0x4|(_0x381ca1=_0x5778b2[_0x2c8eba(0x292)](_0x100440[_0x2c8eba(0x242)](_0x2d7d0c++)))>>0x2,_0x561493=(0x3&_0x381ca1)<<0x6|(_0xe41c42=_0x5778b2[_0x2c8eba(0x292)](_0x100440[_0x2c8eba(0x242)](_0x2d7d0c++))),_0x73b225+=String[_0x2c8eba(0x386)](_0x2262b1),0x40!==_0x381ca1&&(_0x73b225+=String[\\x27fromCharCode\\x27](_0x7d31a)),0x40!==_0xe41c42&&(_0x73b225+=String[_0x2c8eba(0x386)](_0x561493));}while(_0x2d7d0c<_0x100440[\\x27length\\x27]);return\\x20_0x73b225;};function\\x20_0x32d3d2(_0x37d30b){var\\x20_0x2d9d15=_0x29789b;if(_0x35e413(_0x37d30b))return\\x20function(_0x31b6e3){var\\x20_0x1e8815=a1_0x2045;try{for(var\\x20_0x1586b7=_0x41c88d(_0x31b6e3),_0x1e8ed8=new\\x20Uint8Array(_0x1586b7[\\x27length\\x27]),_0x32c06d=0x0;_0x32c06d<_0x1586b7[_0x1e8815(0x479)];++_0x32c06d)_0x1e8ed8[_0x32c06d]=_0x1586b7[_0x1e8815(0x749)](_0x32c06d);return\\x20_0x1e8ed8;}catch(_0x1d46e){throw\\x20new\\x20Error(_0x1e8815(0x4eb));}}(_0x37d30b[_0x2d9d15(0x5a3)](_0x213286[_0x2d9d15(0x479)]));}var\\x20_0x47b9d6={\\x27__cxa_begin_catch\\x27:function(_0x3ef86c){var\\x20_0x5ae452=_0x29789b,_0x4f360f=new\\x20_0x308d30(_0x3ef86c);return\\x20_0x4f360f[\\x27get_caught\\x27]()||(_0x4f360f[_0x5ae452(0x4f5)](!0x0),_0x592274--),_0x4f360f[_0x5ae452(0x67b)](!0x1),_0x4b1659[_0x5ae452(0x3d6)](_0x4f360f),function(_0x574b0e){_0x574b0e[\\x27add_ref\\x27]();}(_0x4f360f),_0x4f360f[_0x5ae452(0x733)]();},\\x27__cxa_end_catch\\x27:function(){var\\x20_0x4b1560=_0x29789b;_0x18f302(0x0),_0x299bd7(_0x4b1659[_0x4b1560(0x479)]>0x0),function(_0x327c5b){var\\x20_0x55ec4f=_0x4b1560;if(_0x327c5b[_0x55ec4f(0x349)]()&&!_0x327c5b[_0x55ec4f(0x73c)]()){var\\x20_0xff378a=_0x327c5b[_0x55ec4f(0x45b)]();_0xff378a&&_0x31a64f(_0xff378a)(_0x327c5b[_0x55ec4f(0x3f8)]),_0x37d247(_0x327c5b[_0x55ec4f(0x3f8)]);}}(_0x4b1659[_0x4b1560(0x5e6)]()),_0x5daf4d=0x0;},\\x27__cxa_find_matching_catch_2\\x27:function(){var\\x20_0x2c391c=_0x29789b,_0x377e8f=_0x5daf4d;if(!_0x377e8f)return\\x20_0x3178f8(0x0),0x0;var\\x20_0x45b91c=new\\x20_0x308d30(_0x377e8f);_0x45b91c[_0x2c391c(0x207)](_0x377e8f);var\\x20_0x529e6d=_0x45b91c[_0x2c391c(0x6a8)]();if(!_0x529e6d)return\\x20_0x3178f8(0x0),_0x377e8f;for(var\\x20_0x303a07=0x0;_0x303a07<arguments[\\x27length\\x27];_0x303a07++){var\\x20_0xcd8f41=arguments[_0x303a07];if(0x0===_0xcd8f41||_0xcd8f41===_0x529e6d)break;var\\x20_0x1236ae=_0x45b91c[_0x2c391c(0x519)]+0x10;if(_0x59807f(_0xcd8f41,_0x529e6d,_0x1236ae))return\\x20_0x3178f8(_0xcd8f41),_0x377e8f;}return\\x20_0x3178f8(_0x529e6d),_0x377e8f;},\\x27__cxa_find_matching_catch_3\\x27:function(){var\\x20_0x274656=_0x29789b,_0xd5c547=_0x5daf4d;if(!_0xd5c547)return\\x20_0x3178f8(0x0),0x0;var\\x20_0x2d8f9e=new\\x20_0x308d30(_0xd5c547);_0x2d8f9e[_0x274656(0x207)](_0xd5c547);var\\x20_0x179568=_0x2d8f9e[_0x274656(0x6a8)]();if(!_0x179568)return\\x20_0x3178f8(0x0),_0xd5c547;for(var\\x20_0x4f9acf=0x0;_0x4f9acf<arguments[\\x27length\\x27];_0x4f9acf++){var\\x20_0x53a490=arguments[_0x4f9acf];if(0x0===_0x53a490||_0x53a490===_0x179568)break;var\\x20_0x3068e5=_0x2d8f9e[\\x27ptr\\x27]+0x10;if(_0x59807f(_0x53a490,_0x179568,_0x3068e5))return\\x20_0x3178f8(_0x53a490),_0xd5c547;}return\\x20_0x3178f8(_0x179568),_0xd5c547;},\\x27__cxa_rethrow\\x27:function(){var\\x20_0x2ed67b=_0x29789b,_0x5aeecf=_0x4b1659[\\x27pop\\x27]();_0x5aeecf||_0x12d2c9(_0x2ed67b(0x75d));var\\x20_0x40662e=_0x5aeecf[_0x2ed67b(0x3f8)];throw\\x20_0x5aeecf[_0x2ed67b(0x73c)]()||(_0x4b1659[_0x2ed67b(0x3d6)](_0x5aeecf),_0x5aeecf[_0x2ed67b(0x67b)](!0x0),_0x5aeecf[_0x2ed67b(0x4f5)](!0x1),_0x592274++),_0x5daf4d=_0x40662e,_0x40662e;},\\x27__cxa_throw\\x27:function(_0x4373f9,_0x4409b5,_0x54d1a0){var\\x20_0x5f3f1c=_0x29789b;throw\\x20new\\x20_0x308d30(_0x4373f9)[_0x5f3f1c(0x6ed)](_0x4409b5,_0x54d1a0),_0x5daf4d=_0x4373f9,_0x592274++,_0x4373f9;},\\x27__cxa_uncaught_exceptions\\x27:function(){return\\x20_0x592274;},\\x27__resumeException\\x27:function(_0x44f626){throw\\x20_0x5daf4d||(_0x5daf4d=_0x44f626),_0x44f626;},\\x27_embind_register_bigint\\x27:function(_0x1b19c8,_0x2aa577,_0x1b3359,_0x547cc0,_0x150075){},\\x27_embind_register_bool\\x27:function(_0x2bda9b,_0x7584f,_0x286c46,_0x40350d,_0x273bf3){var\\x20_0x29b6c0=_0x24ec7a(_0x286c46);_0x34753d(_0x2bda9b,{\\x27name\\x27:_0x7584f=_0x224ad6(_0x7584f),\\x27fromWireType\\x27:function(_0x54b058){return!!_0x54b058;},\\x27toWireType\\x27:function(_0x499140,_0x42efe9){return\\x20_0x42efe9?_0x40350d:_0x273bf3;},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:function(_0x20409c){var\\x20_0xe3cdf2=a1_0x2045,_0x4e2c87;if(0x1===_0x286c46)_0x4e2c87=_0x58a58e;else{if(0x2===_0x286c46)_0x4e2c87=_0xaac725;else{if(0x4!==_0x286c46)throw\\x20new\\x20TypeError(\\x27Unknown\\x5cx20boolean\\x5cx20type\\x5cx20size:\\x5cx20\\x27+_0x7584f);_0x4e2c87=_0x2b3c8c;}}return\\x20this[_0xe3cdf2(0x399)](_0x4e2c87[_0x20409c>>_0x29b6c0]);},\\x27destructorFunction\\x27:null});},\\x27_embind_register_emval\\x27:function(_0xbe78e6,_0x8deea5){_0x34753d(_0xbe78e6,{\\x27name\\x27:_0x8deea5=_0x224ad6(_0x8deea5),\\x27fromWireType\\x27:function(_0x488603){var\\x20_0x432ac4=_0x26db70(_0x488603);return\\x20function(_0x499b51){var\\x20_0x2ea174=a1_0x2045;_0x499b51>0x4&&0x0==--_0x188d52[_0x499b51][_0x2ea174(0x5fd)]&&(_0x188d52[_0x499b51]=void\\x200x0,_0x22b057[_0x2ea174(0x3d6)](_0x499b51));}(_0x488603),_0x432ac4;},\\x27toWireType\\x27:function(_0x4573d2,_0x1ad2c4){return\\x20_0x536196(_0x1ad2c4);},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x258df9,\\x27destructorFunction\\x27:null});},\\x27_embind_register_enum\\x27:function(_0x206dab,_0x26c34c,_0x46108c,_0xd2745f){var\\x20_0x24d810=_0x29789b,_0x2f3ae2=_0x24ec7a(_0x46108c);function\\x20_0x5506f5(){}_0x26c34c=_0x224ad6(_0x26c34c),_0x5506f5[_0x24d810(0x740)]={},_0x34753d(_0x206dab,{\\x27name\\x27:_0x26c34c,\\x27constructor\\x27:_0x5506f5,\\x27fromWireType\\x27:function(_0x2e96fc){var\\x20_0x464e87=_0x24d810;return\\x20this[_0x464e87(0x1b5)][_0x464e87(0x740)][_0x2e96fc];},\\x27toWireType\\x27:function(_0x4b71fb,_0x2d141d){var\\x20_0x26d0b5=_0x24d810;return\\x20_0x2d141d[_0x26d0b5(0x288)];},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x24158d(_0x26c34c,_0x2f3ae2,_0xd2745f),\\x27destructorFunction\\x27:null}),_0x27d0dd(_0x26c34c,_0x5506f5);},\\x27_embind_register_enum_value\\x27:function(_0x35f879,_0x4cd7c4,_0x4bfcf7){var\\x20_0x4db401=_0x29789b,_0x209905,_0x5c26e6,_0x3e3a50,_0x82d2ce=(_0x5c26e6=_0x4db401(0x339),void\\x200x0===(_0x3e3a50=_0x3b8870[_0x209905=_0x35f879])&&_0x1e65a9(_0x5c26e6+\\x27\\x5cx20has\\x5cx20unknown\\x5cx20type\\x5cx20\\x27+_0x14fd6d(_0x209905)),_0x3e3a50);_0x4cd7c4=_0x224ad6(_0x4cd7c4);var\\x20_0x518c38=_0x82d2ce[_0x4db401(0x1b5)],_0x1e3787=Object[_0x4db401(0x1ff)](_0x82d2ce[_0x4db401(0x1b5)][_0x4db401(0x4c4)],{\\x27value\\x27:{\\x27value\\x27:_0x4bfcf7},\\x27constructor\\x27:{\\x27value\\x27:_0xcbdd35(_0x82d2ce[_0x4db401(0x2e3)]+\\x27_\\x27+_0x4cd7c4,function(){})}});_0x518c38[\\x27values\\x27][_0x4bfcf7]=_0x1e3787,_0x518c38[_0x4cd7c4]=_0x1e3787;},\\x27_embind_register_float\\x27:function(_0x23ddc5,_0x1ee811,_0x51b98f){var\\x20_0x3d47b9=_0x24ec7a(_0x51b98f);_0x34753d(_0x23ddc5,{\\x27name\\x27:_0x1ee811=_0x224ad6(_0x1ee811),\\x27fromWireType\\x27:function(_0x29c387){return\\x20_0x29c387;},\\x27toWireType\\x27:function(_0x21c84e,_0x1fc714){var\\x20_0x575435=a1_0x2045;if(_0x575435(0x260)!=typeof\\x20_0x1fc714&&_0x575435(0x4a7)!=typeof\\x20_0x1fc714)throw\\x20new\\x20TypeError(_0x575435(0x5d8)+_0x3dd27c(_0x1fc714)+\\x27\\x5cx22\\x5cx20to\\x5cx20\\x27+this[\\x27name\\x27]);return\\x20_0x1fc714;},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x4eb5f3(_0x1ee811,_0x3d47b9),\\x27destructorFunction\\x27:null});},\\x27_embind_register_function\\x27:function(_0x3b8206,_0x350edc,_0x5a8804,_0x54e3de,_0x2222b2,_0x17c5c2){var\\x20_0x1d39c8=function(_0x1a628d,_0x555d87){var\\x20_0x5c2b59=a1_0x2045;for(var\\x20_0x5be314=[],_0x562482=0x0;_0x562482<_0x1a628d;_0x562482++)_0x5be314[_0x5c2b59(0x3d6)](_0x452739[_0x555d87+0x4*_0x562482>>0x2]);return\\x20_0x5be314;}(_0x350edc,_0x5a8804);_0x3b8206=_0x224ad6(_0x3b8206),_0x2222b2=_0x516b9d(_0x54e3de,_0x2222b2),_0x27d0dd(_0x3b8206,function(){var\\x20_0x44c08d=a1_0x2045;!function(_0x457f45,_0x4348b0){var\\x20_0x334861=a1_0x2045,_0x44bceb=[],_0x3cb8af={};throw\\x20_0x4348b0[_0x334861(0x71e)](function\\x20_0x1d6543(_0x193d7e){var\\x20_0x41387e=_0x334861;_0x3cb8af[_0x193d7e]||_0x3b8870[_0x193d7e]||(_0x5c5139[_0x193d7e]?_0x5c5139[_0x193d7e][\\x27forEach\\x27](_0x1d6543):(_0x44bceb[_0x41387e(0x3d6)](_0x193d7e),_0x3cb8af[_0x193d7e]=!0x0));}),new\\x20_0xf5bc1f(_0x457f45+\\x27:\\x5cx20\\x27+_0x44bceb[_0x334861(0x65f)](_0x14fd6d)[_0x334861(0x2e4)]([\\x27,\\x5cx20\\x27]));}(_0x44c08d(0x20d)+_0x3b8206+\\x27\\x5cx20due\\x5cx20to\\x5cx20unbound\\x5cx20types\\x27,_0x1d39c8);},_0x350edc-0x1),function(_0x8e4aa7,_0x19b19f,_0x228aa8){var\\x20_0x4a97b3=a1_0x2045;function\\x20_0x1ad72e(_0x33ae43){var\\x20_0x1cec6f=a1_0x2045,_0x2713e3=_0x228aa8(_0x33ae43);_0x2713e3[_0x1cec6f(0x479)]!==_0x8e4aa7[\\x27length\\x27]&&_0x2cad59(_0x1cec6f(0x21e));for(var\\x20_0x276596=0x0;_0x276596<_0x8e4aa7[_0x1cec6f(0x479)];++_0x276596)_0x34753d(_0x8e4aa7[_0x276596],_0x2713e3[_0x276596]);}_0x8e4aa7[_0x4a97b3(0x71e)](function(_0x130f9c){_0x5c5139[_0x130f9c]=_0x19b19f;});var\\x20_0xf1c84d=new\\x20Array(_0x19b19f[_0x4a97b3(0x479)]),_0x4539c9=[],_0x3c06c3=0x0;_0x19b19f[\\x27forEach\\x27]((_0x53fcc3,_0x2c1f85)=>{var\\x20_0xaba803=_0x4a97b3;_0x3b8870[_0xaba803(0x261)](_0x53fcc3)?_0xf1c84d[_0x2c1f85]=_0x3b8870[_0x53fcc3]:(_0x4539c9[_0xaba803(0x3d6)](_0x53fcc3),_0xc25905[\\x27hasOwnProperty\\x27](_0x53fcc3)||(_0xc25905[_0x53fcc3]=[]),_0xc25905[_0x53fcc3][\\x27push\\x27](()=>{var\\x20_0x5ad1f8=_0xaba803;_0xf1c84d[_0x2c1f85]=_0x3b8870[_0x53fcc3],++_0x3c06c3===_0x4539c9[_0x5ad1f8(0x479)]&&_0x1ad72e(_0xf1c84d);}));}),0x0===_0x4539c9[_0x4a97b3(0x479)]&&_0x1ad72e(_0xf1c84d);}([],_0x1d39c8,function(_0x197e74){var\\x20_0x77cbe7=a1_0x2045,_0xc2b16b=[_0x197e74[0x0],null][_0x77cbe7(0x38f)](_0x197e74[_0x77cbe7(0x5a3)](0x1));return\\x20function(_0x29fe8b,_0x4c0008,_0x57a2a2){var\\x20_0x16e0b6=_0x77cbe7;_0xacfddc[_0x16e0b6(0x261)](_0x29fe8b)||_0x2cad59(_0x16e0b6(0x2aa)),void\\x200x0!==_0xacfddc[_0x29fe8b][_0x16e0b6(0x626)]&&void\\x200x0!==_0x57a2a2?_0xacfddc[_0x29fe8b][\\x27overloadTable\\x27][_0x57a2a2]=_0x4c0008:(_0xacfddc[_0x29fe8b]=_0x4c0008,_0xacfddc[_0x29fe8b][_0x16e0b6(0x4e2)]=_0x57a2a2);}(_0x3b8206,function(_0x3b8d2f,_0x210c28,_0x5499f1,_0x213a50,_0x3a5743){var\\x20_0xd7433=_0x77cbe7,_0x530199=_0x210c28[_0xd7433(0x479)];_0x530199<0x2&&_0x1e65a9(_0xd7433(0x3d5));for(var\\x20_0x1ab82d=null!==_0x210c28[0x1]&&null!==_0x5499f1,_0x331881=!0x1,_0x48f310=0x1;_0x48f310<_0x210c28[_0xd7433(0x479)];++_0x48f310)if(null!==_0x210c28[_0x48f310]&&void\\x200x0===_0x210c28[_0x48f310][_0xd7433(0x616)]){_0x331881=!0x0;break;}var\\x20_0x28c78f=_0xd7433(0x769)!==_0x210c28[0x0][_0xd7433(0x2e3)],_0x3d9267=_0x530199-0x2,_0x494ae8=new\\x20Array(_0x3d9267),_0x45995e=[],_0x28147f=[];return\\x20function(){var\\x20_0x579cc=_0xd7433,_0x5eaa75;arguments[\\x27length\\x27]!==_0x3d9267&&_0x1e65a9(_0x579cc(0x547)+_0x3b8d2f+_0x579cc(0x4a9)+arguments[\\x27length\\x27]+_0x579cc(0x688)+_0x3d9267+_0x579cc(0x6ff)),_0x28147f[_0x579cc(0x479)]=0x0,_0x45995e[_0x579cc(0x479)]=_0x1ab82d?0x2:0x1,_0x45995e[0x0]=_0x3a5743,_0x1ab82d&&(_0x5eaa75=_0x210c28[0x1][\\x27toWireType\\x27](_0x28147f,this),_0x45995e[0x1]=_0x5eaa75);for(var\\x20_0x3e9df5=0x0;_0x3e9df5<_0x3d9267;++_0x3e9df5)_0x494ae8[_0x3e9df5]=_0x210c28[_0x3e9df5+0x2][_0x579cc(0x3e2)](_0x28147f,arguments[_0x3e9df5]),_0x45995e[_0x579cc(0x3d6)](_0x494ae8[_0x3e9df5]);return\\x20function(_0x160fa1){var\\x20_0x503d7f=_0x579cc;if(_0x331881)!function(_0x2917e3){var\\x20_0x2d5ec4=a1_0x2045;for(;_0x2917e3[_0x2d5ec4(0x479)];){var\\x20_0x3fa84f=_0x2917e3[_0x2d5ec4(0x5e6)]();_0x2917e3[_0x2d5ec4(0x5e6)]()(_0x3fa84f);}}(_0x28147f);else\\x20for(var\\x20_0x372324=_0x1ab82d?0x1:0x2;_0x372324<_0x210c28[_0x503d7f(0x479)];_0x372324++){var\\x20_0x62d725=0x1===_0x372324?_0x5eaa75:_0x494ae8[_0x372324-0x2];null!==_0x210c28[_0x372324][_0x503d7f(0x616)]&&_0x210c28[_0x372324][_0x503d7f(0x616)](_0x62d725);}if(_0x28c78f)return\\x20_0x210c28[0x0][_0x503d7f(0x399)](_0x160fa1);}(_0x213a50[_0x579cc(0x324)](null,_0x45995e));};}(_0x3b8206,_0xc2b16b,null,_0x2222b2,_0x17c5c2),_0x350edc-0x1),[];});},\\x27_embind_register_integer\\x27:function(_0x3d85a5,_0x3f0030,_0x243e04,_0x29eee0,_0x22a6a7){var\\x20_0x2b48a9=_0x29789b;_0x3f0030=_0x224ad6(_0x3f0030),-0x1===_0x22a6a7&&(_0x22a6a7=0xffffffff);var\\x20_0x4bffcb=_0x24ec7a(_0x243e04),_0x38dc99=_0x56f2c0=>_0x56f2c0;if(0x0===_0x29eee0){var\\x20_0x53b206=0x20-0x8*_0x243e04;_0x38dc99=_0xa5f6e6=>_0xa5f6e6<<_0x53b206>>>_0x53b206;}var\\x20_0x3685ea=_0x3f0030[_0x2b48a9(0x714)](_0x2b48a9(0x4be)),_0x217eb8=(_0x28fb8f,_0x5d611d)=>{var\\x20_0x3d3284=_0x2b48a9;if(_0x3d3284(0x260)!=typeof\\x20_0x28fb8f&&_0x3d3284(0x4a7)!=typeof\\x20_0x28fb8f)throw\\x20new\\x20TypeError(_0x3d3284(0x5d8)+_0x3dd27c(_0x28fb8f)+_0x3d3284(0x4aa)+_0x5d611d);if(_0x28fb8f<_0x29eee0||_0x28fb8f>_0x22a6a7)throw\\x20new\\x20TypeError(_0x3d3284(0x58a)+_0x3dd27c(_0x28fb8f)+_0x3d3284(0x312)+_0x3f0030+\\x27\\x5cx22,\\x5cx20which\\x5cx20is\\x5cx20outside\\x5cx20the\\x5cx20valid\\x5cx20range\\x5cx20[\\x27+_0x29eee0+\\x27,\\x5cx20\\x27+_0x22a6a7+\\x27]!\\x27);};_0x34753d(_0x3d85a5,{\\x27name\\x27:_0x3f0030,\\x27fromWireType\\x27:_0x38dc99,\\x27toWireType\\x27:_0x3685ea?function(_0x476f18,_0x2b5826){var\\x20_0x15a673=_0x2b48a9;return\\x20_0x217eb8(_0x2b5826,this[_0x15a673(0x2e3)]),_0x2b5826>>>0x0;}:function(_0x1b91b4,_0x142965){var\\x20_0x3e13e7=_0x2b48a9;return\\x20_0x217eb8(_0x142965,this[_0x3e13e7(0x2e3)]),_0x142965;},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x1d98cf(_0x3f0030,_0x4bffcb,0x0!==_0x29eee0),\\x27destructorFunction\\x27:null});},\\x27_embind_register_memory_view\\x27:function(_0x5cdad9,_0x1884fa,_0x309d81){var\\x20_0x4b57e9=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][_0x1884fa];function\\x20_0x43d740(_0x168151){var\\x20_0x437d99=_0x452739,_0x5a78e6=_0x437d99[_0x168151>>=0x2],_0x50fb7a=_0x437d99[_0x168151+0x1];return\\x20new\\x20_0x4b57e9(_0x1e6a4d,_0x50fb7a,_0x5a78e6);}_0x34753d(_0x5cdad9,{\\x27name\\x27:_0x309d81=_0x224ad6(_0x309d81),\\x27fromWireType\\x27:_0x43d740,\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x43d740},{\\x27ignoreDuplicateRegistrations\\x27:!0x0});},\\x27_embind_register_std_string\\x27:function(_0x52a65c,_0x25bf19){var\\x20_0x15cc45=_0x29789b,_0x5bb3e1=_0x15cc45(0x2a5)===(_0x25bf19=_0x224ad6(_0x25bf19));_0x34753d(_0x52a65c,{\\x27name\\x27:_0x25bf19,\\x27fromWireType\\x27:function(_0x168881){var\\x20_0x3f0ef4=_0x15cc45,_0x3b75fc,_0x20f1e1=_0x452739[_0x168881>>0x2],_0x16aba4=_0x168881+0x4;if(_0x5bb3e1)for(var\\x20_0x34c000=_0x16aba4,_0x89e473=0x0;_0x89e473<=_0x20f1e1;++_0x89e473){var\\x20_0x39ff8f=_0x16aba4+_0x89e473;if(_0x89e473==_0x20f1e1||0x0==_0x55c3f0[_0x39ff8f]){var\\x20_0x1c0010=_0x27b5df(_0x34c000,_0x39ff8f-_0x34c000);void\\x200x0===_0x3b75fc?_0x3b75fc=_0x1c0010:(_0x3b75fc+=String[\\x27fromCharCode\\x27](0x0),_0x3b75fc+=_0x1c0010),_0x34c000=_0x39ff8f+0x1;}}else{var\\x20_0x483c2a=new\\x20Array(_0x20f1e1);for(_0x89e473=0x0;_0x89e473<_0x20f1e1;++_0x89e473)_0x483c2a[_0x89e473]=String[\\x27fromCharCode\\x27](_0x55c3f0[_0x16aba4+_0x89e473]);_0x3b75fc=_0x483c2a[_0x3f0ef4(0x2e4)](\\x27\\x27);}return\\x20_0x2e6a2a(_0x168881),_0x3b75fc;},\\x27toWireType\\x27:function(_0x33dc26,_0x4947b9){var\\x20_0x48f13a=_0x15cc45,_0x4b34d5;_0x4947b9\\x20instanceof\\x20ArrayBuffer&&(_0x4947b9=new\\x20Uint8Array(_0x4947b9));var\\x20_0x47434d=_0x48f13a(0x2c4)==typeof\\x20_0x4947b9;_0x47434d||_0x4947b9\\x20instanceof\\x20Uint8Array||_0x4947b9\\x20instanceof\\x20Uint8ClampedArray||_0x4947b9\\x20instanceof\\x20Int8Array||_0x1e65a9(\\x27Cannot\\x5cx20pass\\x5cx20non-string\\x5cx20to\\x5cx20std::string\\x27),_0x4b34d5=_0x5bb3e1&&_0x47434d?_0x3dd374(_0x4947b9):_0x4947b9[_0x48f13a(0x479)];var\\x20_0x1dc13c,_0x47122a,_0x2799ed,_0x171ffb=_0x66f16(0x4+_0x4b34d5+0x1),_0x36fc66=_0x171ffb+0x4;if(_0x452739[_0x171ffb>>0x2]=_0x4b34d5,_0x5bb3e1&&_0x47434d)_0x1dc13c=_0x4947b9,_0x47122a=_0x36fc66,_0x299bd7(_0x48f13a(0x260)==typeof(_0x2799ed=_0x4b34d5+0x1),_0x48f13a(0x391)),_0x61798c(_0x1dc13c,_0x55c3f0,_0x47122a,_0x2799ed);else{if(_0x47434d)for(var\\x20_0x420e97=0x0;_0x420e97<_0x4b34d5;++_0x420e97){var\\x20_0x3b8809=_0x4947b9[_0x48f13a(0x749)](_0x420e97);_0x3b8809>0xff&&(_0x2e6a2a(_0x36fc66),_0x1e65a9(_0x48f13a(0x234))),_0x55c3f0[_0x36fc66+_0x420e97]=_0x3b8809;}else{for(_0x420e97=0x0;_0x420e97<_0x4b34d5;++_0x420e97)_0x55c3f0[_0x36fc66+_0x420e97]=_0x4947b9[_0x420e97];}}return\\x20null!==_0x33dc26&&_0x33dc26[\\x27push\\x27](_0x2e6a2a,_0x171ffb),_0x171ffb;},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x258df9,\\x27destructorFunction\\x27:function(_0x14f7f1){_0x2e6a2a(_0x14f7f1);}});},\\x27_embind_register_std_wstring\\x27:function(_0x2f8cbd,_0x2e7ec1,_0x2cf9d1){var\\x20_0x5c1c72,_0x4cdcc1,_0x747509,_0x41da4f,_0x1a1548;_0x2cf9d1=_0x224ad6(_0x2cf9d1),0x2===_0x2e7ec1?(_0x5c1c72=_0x4c92ee,_0x4cdcc1=_0x3b3462,_0x41da4f=_0x26eb97,_0x747509=()=>_0x16edf7,_0x1a1548=0x1):0x4===_0x2e7ec1&&(_0x5c1c72=_0x1f923a,_0x4cdcc1=_0xbb4e4b,_0x41da4f=_0x39b027,_0x747509=()=>_0x452739,_0x1a1548=0x2),_0x34753d(_0x2f8cbd,{\\x27name\\x27:_0x2cf9d1,\\x27fromWireType\\x27:function(_0x2defc3){var\\x20_0x4e77b0=a1_0x2045;for(var\\x20_0x534ee1,_0x5dfc7b=_0x452739[_0x2defc3>>0x2],_0x39aafa=_0x747509(),_0x395041=_0x2defc3+0x4,_0x2e5541=0x0;_0x2e5541<=_0x5dfc7b;++_0x2e5541){var\\x20_0x88c1fc=_0x2defc3+0x4+_0x2e5541*_0x2e7ec1;if(_0x2e5541==_0x5dfc7b||0x0==_0x39aafa[_0x88c1fc>>_0x1a1548]){var\\x20_0x73603e=_0x5c1c72(_0x395041,_0x88c1fc-_0x395041);void\\x200x0===_0x534ee1?_0x534ee1=_0x73603e:(_0x534ee1+=String[_0x4e77b0(0x386)](0x0),_0x534ee1+=_0x73603e),_0x395041=_0x88c1fc+_0x2e7ec1;}}return\\x20_0x2e6a2a(_0x2defc3),_0x534ee1;},\\x27toWireType\\x27:function(_0x3a0a9e,_0x1166d0){var\\x20_0x5586af=a1_0x2045;_0x5586af(0x2c4)!=typeof\\x20_0x1166d0&&_0x1e65a9(_0x5586af(0x47b)+_0x2cf9d1);var\\x20_0x13b4a3=_0x41da4f(_0x1166d0),_0x19695a=_0x66f16(0x4+_0x13b4a3+_0x2e7ec1);return\\x20_0x452739[_0x19695a>>0x2]=_0x13b4a3>>_0x1a1548,_0x4cdcc1(_0x1166d0,_0x19695a+0x4,_0x13b4a3+_0x2e7ec1),null!==_0x3a0a9e&&_0x3a0a9e[_0x5586af(0x3d6)](_0x2e6a2a,_0x19695a),_0x19695a;},\\x27argPackAdvance\\x27:0x8,\\x27readValueFromPointer\\x27:_0x258df9,\\x27destructorFunction\\x27:function(_0x1ce942){_0x2e6a2a(_0x1ce942);}});},\\x27_embind_register_void\\x27:function(_0x51e140,_0x2e4125){_0x34753d(_0x51e140,{\\x27isVoid\\x27:!0x0,\\x27name\\x27:_0x2e4125=_0x224ad6(_0x2e4125),\\x27argPackAdvance\\x27:0x0,\\x27fromWireType\\x27:function(){},\\x27toWireType\\x27:function(_0x5b81c4,_0x22be92){}});},\\x27_mmap_js\\x27:function(_0x37f084,_0x256cd2,_0x85aa9c,_0x493bc8,_0x42fc5d,_0x26f2a0,_0x472d0a){var\\x20_0x3eda70=_0x29789b;try{var\\x20_0x3f19d0=_0x5ae396[_0x3eda70(0x6b6)](_0x493bc8),_0x396dcb=_0x4adbb1[_0x3eda70(0x5e4)](_0x3f19d0,_0x37f084,_0x42fc5d,_0x256cd2,_0x85aa9c),_0x5da3a0=_0x396dcb[_0x3eda70(0x519)];return\\x20_0x2b3c8c[_0x26f2a0>>0x2]=_0x396dcb[_0x3eda70(0x6c0)],_0x452739[_0x472d0a>>0x2]=_0x5da3a0,0x0;}catch(_0x5284fc){if(void\\x200x0===_0x4adbb1||!(_0x5284fc\\x20instanceof\\x20_0x4adbb1[_0x3eda70(0x5d3)]))throw\\x20_0x5284fc;return-_0x5284fc[_0x3eda70(0x745)];}},\\x27_munmap_js\\x27:function(_0x285923,_0x75803e,_0x339058,_0x2753cb,_0xa2c8e8,_0x58aaf3){var\\x20_0x46becd=_0x29789b;try{var\\x20_0x1dcd0f=_0x5ae396[_0x46becd(0x6b6)](_0xa2c8e8);0x2&_0x339058&&_0x5ae396[\\x27doMsync\\x27](_0x285923,_0x1dcd0f,_0x75803e,_0x2753cb,_0x58aaf3),_0x4adbb1[_0x46becd(0x2e5)](_0x1dcd0f);}catch(_0x5c1c07){if(void\\x200x0===_0x4adbb1||!(_0x5c1c07\\x20instanceof\\x20_0x4adbb1[_0x46becd(0x5d3)]))throw\\x20_0x5c1c07;return-_0x5c1c07[\\x27errno\\x27];}},\\x27abort\\x27:function(){_0x12d2c9(\\x27native\\x5cx20code\\x5cx20called\\x5cx20abort()\\x27);},\\x27emscripten_get_heap_max\\x27:function(){return\\x200x80000000;},\\x27emscripten_memcpy_big\\x27:function(_0x305576,_0x1ffb89,_0x1aac9d){var\\x20_0x10c5b5=_0x29789b;_0x55c3f0[_0x10c5b5(0x700)](_0x305576,_0x1ffb89,_0x1ffb89+_0x1aac9d);},\\x27emscripten_resize_heap\\x27:function(_0x6e1046){var\\x20_0x1097a3=_0x29789b,_0x230de5=_0x55c3f0[_0x1097a3(0x479)];_0x299bd7((_0x6e1046>>>=0x0)>_0x230de5);var\\x20_0x255f8a,_0x46fbd7,_0x1163da=0x80000000;if(_0x6e1046>_0x1163da)return\\x20_0x5528a8(_0x1097a3(0x710)+_0x6e1046+_0x1097a3(0x69b)+_0x1163da+_0x1097a3(0x6f1)),!0x1;for(var\\x20_0x18cbd7=0x1;_0x18cbd7<=0x4;_0x18cbd7*=0x2){var\\x20_0x1ef0a5=_0x230de5*(0x1+0.2/_0x18cbd7);_0x1ef0a5=Math[\\x27min\\x27](_0x1ef0a5,_0x6e1046+0x6000000);var\\x20_0x401d04=Math[_0x1097a3(0x1af)](_0x1163da,(_0x255f8a=Math[_0x1097a3(0x31a)](_0x6e1046,_0x1ef0a5))+((_0x46fbd7=0x10000)-_0x255f8a%_0x46fbd7)%_0x46fbd7);if(_0x3222bd(_0x401d04))return!0x0;}return\\x20_0x5528a8(_0x1097a3(0x697)+_0x230de5+\\x27\\x5cx20bytes\\x5cx20to\\x5cx20\\x27+_0x401d04+_0x1097a3(0x5ad)),!0x1;},\\x27environ_get\\x27:function(_0x57601e,_0x21b345){var\\x20_0x31e2e1=_0x29789b,_0x3e3555=0x0;return\\x20_0x7c7041()[_0x31e2e1(0x71e)](function(_0x337f7f,_0xca227b){var\\x20_0x4be1ba=_0x21b345+_0x3e3555;_0x452739[_0x57601e+0x4*_0xca227b>>0x2]=_0x4be1ba,function(_0x14c035,_0x4e77c7,_0x545526){var\\x20_0x21c36e=a1_0x2045;for(var\\x20_0x6bdd85=0x0;_0x6bdd85<_0x14c035[_0x21c36e(0x479)];++_0x6bdd85)_0x299bd7(_0x14c035[_0x21c36e(0x749)](_0x6bdd85)===(0xff&_0x14c035[_0x21c36e(0x749)](_0x6bdd85))),_0x58a58e[_0x4e77c7++>>0x0]=_0x14c035[_0x21c36e(0x749)](_0x6bdd85);_0x545526||(_0x58a58e[_0x4e77c7>>0x0]=0x0);}(_0x337f7f,_0x4be1ba),_0x3e3555+=_0x337f7f[\\x27length\\x27]+0x1;}),0x0;},\\x27environ_sizes_get\\x27:function(_0x4c614e,_0x2baa74){var\\x20_0x36ed46=_0x29789b,_0x50057a=_0x7c7041();_0x452739[_0x4c614e>>0x2]=_0x50057a[\\x27length\\x27];var\\x20_0x211d26=0x0;return\\x20_0x50057a[_0x36ed46(0x71e)](function(_0x5577b6){var\\x20_0x532f2f=_0x36ed46;_0x211d26+=_0x5577b6[_0x532f2f(0x479)]+0x1;}),_0x452739[_0x2baa74>>0x2]=_0x211d26,0x0;},\\x27exit\\x27:_0x123cd0,\\x27fd_close\\x27:function(_0x2c10a6){var\\x20_0xa2ff66=_0x29789b;try{var\\x20_0x22db7d=_0x5ae396[_0xa2ff66(0x6b6)](_0x2c10a6);return\\x20_0x4adbb1[_0xa2ff66(0x449)](_0x22db7d),0x0;}catch(_0x10424b){if(void\\x200x0===_0x4adbb1||!(_0x10424b\\x20instanceof\\x20_0x4adbb1[\\x27ErrnoError\\x27]))throw\\x20_0x10424b;return\\x20_0x10424b[_0xa2ff66(0x745)];}},\\x27fd_read\\x27:function(_0x344ade,_0x1ddac0,_0x14278e,_0x1f3027){var\\x20_0x35ec84=_0x29789b;try{var\\x20_0x27f932=function(_0x10f330,_0x165c59,_0x260050,_0x3d99d4){var\\x20_0x708961=a1_0x2045;for(var\\x20_0x42605c=0x0,_0x205a2c=0x0;_0x205a2c<_0x260050;_0x205a2c++){var\\x20_0x50ed82=_0x452739[_0x165c59>>0x2],_0x4c2fef=_0x452739[_0x165c59+0x4>>0x2];_0x165c59+=0x8;var\\x20_0xd5026f=_0x4adbb1[_0x708961(0x765)](_0x10f330,_0x58a58e,_0x50ed82,_0x4c2fef,_0x3d99d4);if(_0xd5026f<0x0)return-0x1;if(_0x42605c+=_0xd5026f,_0xd5026f<_0x4c2fef)break;void\\x200x0!==_0x3d99d4&&(_0x3d99d4+=_0xd5026f);}return\\x20_0x42605c;}(_0x5ae396[_0x35ec84(0x6b6)](_0x344ade),_0x1ddac0,_0x14278e);return\\x20_0x452739[_0x1f3027>>0x2]=_0x27f932,0x0;}catch(_0x43189e){if(void\\x200x0===_0x4adbb1||!(_0x43189e\\x20instanceof\\x20_0x4adbb1[_0x35ec84(0x5d3)]))throw\\x20_0x43189e;return\\x20_0x43189e[\\x27errno\\x27];}},\\x27fd_seek\\x27:function(_0x2ade9c,_0x43743f,_0x4cb7fa,_0x512441,_0x211b15){var\\x20_0x28f126=_0x29789b;try{var\\x20_0x104135=(_0x111bdf=_0x4cb7fa,_0x299bd7((_0x214d78=_0x43743f)==_0x214d78>>>0x0||_0x214d78==(0x0|_0x214d78)),_0x299bd7(_0x111bdf===(0x0|_0x111bdf)),_0x111bdf+0x200000>>>0x0<0x400001-!!_0x214d78?(_0x214d78>>>0x0)+0x100000000*_0x111bdf:NaN);if(isNaN(_0x104135))return\\x200x3d;var\\x20_0x14caa8=_0x5ae396[_0x28f126(0x6b6)](_0x2ade9c);return\\x20_0x4adbb1[_0x28f126(0x39a)](_0x14caa8,_0x104135,_0x512441),_0x5cdf2c=[_0x14caa8[_0x28f126(0x775)]>>>0x0,(_0x573dd4=_0x14caa8[\\x27position\\x27],+Math[_0x28f126(0x613)](_0x573dd4)>=0x1?_0x573dd4>0x0?(0x0|Math[_0x28f126(0x1af)](+Math[_0x28f126(0x366)](_0x573dd4/0x100000000),0xffffffff))>>>0x0:~~+Math[\\x27ceil\\x27]((_0x573dd4-+(~~_0x573dd4>>>0x0))/0x100000000)>>>0x0:0x0)],_0x2b3c8c[_0x211b15>>0x2]=_0x5cdf2c[0x0],_0x2b3c8c[_0x211b15+0x4>>0x2]=_0x5cdf2c[0x1],_0x14caa8[_0x28f126(0x6e0)]&&0x0===_0x104135&&0x0===_0x512441&&(_0x14caa8[_0x28f126(0x6e0)]=null),0x0;}catch(_0x3d8c3e){if(void\\x200x0===_0x4adbb1||!(_0x3d8c3e\\x20instanceof\\x20_0x4adbb1[_0x28f126(0x5d3)]))throw\\x20_0x3d8c3e;return\\x20_0x3d8c3e[_0x28f126(0x745)];}var\\x20_0x214d78,_0x111bdf;},\\x27fd_write\\x27:function(_0x5255eb,_0xfeea82,_0x26eac5,_0x477af0){var\\x20_0x403e84=_0x29789b;try{var\\x20_0x1da8b4=function(_0x44c081,_0x32c380,_0x8967e7,_0x5e53da){var\\x20_0x22dec9=a1_0x2045;for(var\\x20_0x570595=0x0,_0x1dcf39=0x0;_0x1dcf39<_0x8967e7;_0x1dcf39++){var\\x20_0x1de861=_0x452739[_0x32c380>>0x2],_0x4ab499=_0x452739[_0x32c380+0x4>>0x2];_0x32c380+=0x8;var\\x20_0x18bef0=_0x4adbb1[_0x22dec9(0x5fa)](_0x44c081,_0x58a58e,_0x1de861,_0x4ab499,_0x5e53da);if(_0x18bef0<0x0)return-0x1;_0x570595+=_0x18bef0,void\\x200x0!==_0x5e53da&&(_0x5e53da+=_0x18bef0);}return\\x20_0x570595;}(_0x5ae396[\\x27getStreamFromFD\\x27](_0x5255eb),_0xfeea82,_0x26eac5);return\\x20_0x452739[_0x477af0>>0x2]=_0x1da8b4,0x0;}catch(_0x4405f7){if(void\\x200x0===_0x4adbb1||!(_0x4405f7\\x20instanceof\\x20_0x4adbb1[_0x403e84(0x5d3)]))throw\\x20_0x4405f7;return\\x20_0x4405f7[_0x403e84(0x745)];}},\\x27hardware_concurrency\\x27:function(){var\\x20_0x54ff2a=_0x29789b;return\\x20self[_0x54ff2a(0x436)][_0x54ff2a(0x22b)];},\\x27invoke_diii\\x27:function(_0x3b04f3,_0x3be44f,_0x2e72ed,_0x3ddd00){var\\x20_0x41455a=_0x10ea74();try{return\\x20_0x31a64f(_0x3b04f3)(_0x3be44f,_0x2e72ed,_0x3ddd00);}catch(_0x41d02d){if(_0x1c7d27(_0x41455a),_0x41d02d!==_0x41d02d+0x0)throw\\x20_0x41d02d;_0x18f302(0x1,0x0);}},\\x27invoke_fiii\\x27:function(_0x453385,_0x47bb7f,_0x3bdd71,_0x5f5bd7){var\\x20_0x509d72=_0x10ea74();try{return\\x20_0x31a64f(_0x453385)(_0x47bb7f,_0x3bdd71,_0x5f5bd7);}catch(_0x336c0c){if(_0x1c7d27(_0x509d72),_0x336c0c!==_0x336c0c+0x0)throw\\x20_0x336c0c;_0x18f302(0x1,0x0);}},\\x27invoke_i\\x27:function(_0x3008e1){var\\x20_0x524500=_0x10ea74();try{return\\x20_0x31a64f(_0x3008e1)();}catch(_0x282803){if(_0x1c7d27(_0x524500),_0x282803!==_0x282803+0x0)throw\\x20_0x282803;_0x18f302(0x1,0x0);}},\\x27invoke_ii\\x27:function(_0x1ed384,_0x28c23e){var\\x20_0xcf17b7=_0x10ea74();try{return\\x20_0x31a64f(_0x1ed384)(_0x28c23e);}catch(_0x276d84){if(_0x1c7d27(_0xcf17b7),_0x276d84!==_0x276d84+0x0)throw\\x20_0x276d84;_0x18f302(0x1,0x0);}},\\x27invoke_iii\\x27:function(_0x4735b4,_0x40a704,_0x7d819a){var\\x20_0x2b4225=_0x10ea74();try{return\\x20_0x31a64f(_0x4735b4)(_0x40a704,_0x7d819a);}catch(_0x111ef1){if(_0x1c7d27(_0x2b4225),_0x111ef1!==_0x111ef1+0x0)throw\\x20_0x111ef1;_0x18f302(0x1,0x0);}},\\x27invoke_iiii\\x27:function(_0x4ede2b,_0x51ab7d,_0x571881,_0x127cf7){var\\x20_0x5edc1e=_0x10ea74();try{return\\x20_0x31a64f(_0x4ede2b)(_0x51ab7d,_0x571881,_0x127cf7);}catch(_0x445075){if(_0x1c7d27(_0x5edc1e),_0x445075!==_0x445075+0x0)throw\\x20_0x445075;_0x18f302(0x1,0x0);}},\\x27invoke_iiiii\\x27:function(_0x4c8133,_0x1bfb23,_0xd289ef,_0x2d1617,_0x4173b0){var\\x20_0x222891=_0x10ea74();try{return\\x20_0x31a64f(_0x4c8133)(_0x1bfb23,_0xd289ef,_0x2d1617,_0x4173b0);}catch(_0x390a5a){if(_0x1c7d27(_0x222891),_0x390a5a!==_0x390a5a+0x0)throw\\x20_0x390a5a;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiid\\x27:function(_0x24fbb6,_0x21f042,_0x47217f,_0xd45ab5,_0x2351fd,_0x320b14){var\\x20_0x3ea26c=_0x10ea74();try{return\\x20_0x31a64f(_0x24fbb6)(_0x21f042,_0x47217f,_0xd45ab5,_0x2351fd,_0x320b14);}catch(_0x38a56c){if(_0x1c7d27(_0x3ea26c),_0x38a56c!==_0x38a56c+0x0)throw\\x20_0x38a56c;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiii\\x27:function(_0x40b0f5,_0x2681b7,_0x5bde28,_0x132504,_0x1ceb06,_0x4f550c){var\\x20_0x23e7d3=_0x10ea74();try{return\\x20_0x31a64f(_0x40b0f5)(_0x2681b7,_0x5bde28,_0x132504,_0x1ceb06,_0x4f550c);}catch(_0x5767de){if(_0x1c7d27(_0x23e7d3),_0x5767de!==_0x5767de+0x0)throw\\x20_0x5767de;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiiii\\x27:function(_0x1eea44,_0x2e53ff,_0xd5d2e0,_0x3d080c,_0x543a2a,_0x361d55,_0x1f9d73){var\\x20_0x244c89=_0x10ea74();try{return\\x20_0x31a64f(_0x1eea44)(_0x2e53ff,_0xd5d2e0,_0x3d080c,_0x543a2a,_0x361d55,_0x1f9d73);}catch(_0x2f992a){if(_0x1c7d27(_0x244c89),_0x2f992a!==_0x2f992a+0x0)throw\\x20_0x2f992a;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiiiii\\x27:function(_0x47067e,_0x44c7f6,_0x1e1928,_0x12fd2f,_0x5b4475,_0x55ca6f,_0x14b613,_0x362e1e){var\\x20_0x25fdf1=_0x10ea74();try{return\\x20_0x31a64f(_0x47067e)(_0x44c7f6,_0x1e1928,_0x12fd2f,_0x5b4475,_0x55ca6f,_0x14b613,_0x362e1e);}catch(_0x22e554){if(_0x1c7d27(_0x25fdf1),_0x22e554!==_0x22e554+0x0)throw\\x20_0x22e554;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiiiiiiii\\x27:function(_0x3a7642,_0x3cb40d,_0x40c37d,_0x520216,_0x454fd6,_0x351038,_0x582179,_0x17583b,_0x205b2a,_0x34615d,_0x5b176e){var\\x20_0x2f9a1b=_0x10ea74();try{return\\x20_0x31a64f(_0x3a7642)(_0x3cb40d,_0x40c37d,_0x520216,_0x454fd6,_0x351038,_0x582179,_0x17583b,_0x205b2a,_0x34615d,_0x5b176e);}catch(_0x55c847){if(_0x1c7d27(_0x2f9a1b),_0x55c847!==_0x55c847+0x0)throw\\x20_0x55c847;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiiiiiiiii\\x27:function(_0x2f4f30,_0x2e690a,_0x29500c,_0x32253c,_0x50a705,_0x3efc3e,_0x133eb5,_0x159f27,_0x42ab77,_0x4b3433,_0x1b26ec,_0x5ca291){var\\x20_0x10f292=_0x10ea74();try{return\\x20_0x31a64f(_0x2f4f30)(_0x2e690a,_0x29500c,_0x32253c,_0x50a705,_0x3efc3e,_0x133eb5,_0x159f27,_0x42ab77,_0x4b3433,_0x1b26ec,_0x5ca291);}catch(_0x54b583){if(_0x1c7d27(_0x10f292),_0x54b583!==_0x54b583+0x0)throw\\x20_0x54b583;_0x18f302(0x1,0x0);}},\\x27invoke_iiiiiiiiiiiii\\x27:function(_0x62eafd,_0x1f694a,_0x360cc2,_0x5bf8ae,_0x52844a,_0x44e7fe,_0x1ba98b,_0x498740,_0x4fde0f,_0xfdae88,_0x434eb9,_0x123cd8,_0x379cdf){var\\x20_0x6c2474=_0x10ea74();try{return\\x20_0x31a64f(_0x62eafd)(_0x1f694a,_0x360cc2,_0x5bf8ae,_0x52844a,_0x44e7fe,_0x1ba98b,_0x498740,_0x4fde0f,_0xfdae88,_0x434eb9,_0x123cd8,_0x379cdf);}catch(_0x4d3699){if(_0x1c7d27(_0x6c2474),_0x4d3699!==_0x4d3699+0x0)throw\\x20_0x4d3699;_0x18f302(0x1,0x0);}},\\x27invoke_jiiii\\x27:function(_0x78547e,_0x3299ff,_0x6b85d0,_0x190193,_0x49dc1a){var\\x20_0x222d1b=_0x10ea74();try{return\\x20_0x4c4330(_0x78547e,_0x3299ff,_0x6b85d0,_0x190193,_0x49dc1a);}catch(_0x2b8918){if(_0x1c7d27(_0x222d1b),_0x2b8918!==_0x2b8918+0x0)throw\\x20_0x2b8918;_0x18f302(0x1,0x0);}},\\x27invoke_v\\x27:function(_0x3e0bc5){var\\x20_0x126ca7=_0x10ea74();try{_0x31a64f(_0x3e0bc5)();}catch(_0x4860da){if(_0x1c7d27(_0x126ca7),_0x4860da!==_0x4860da+0x0)throw\\x20_0x4860da;_0x18f302(0x1,0x0);}},\\x27invoke_vi\\x27:function(_0x31b86b,_0x59541b){var\\x20_0x13b252=_0x10ea74();try{_0x31a64f(_0x31b86b)(_0x59541b);}catch(_0x27d5c6){if(_0x1c7d27(_0x13b252),_0x27d5c6!==_0x27d5c6+0x0)throw\\x20_0x27d5c6;_0x18f302(0x1,0x0);}},\\x27invoke_vii\\x27:function(_0x338969,_0x5c181d,_0x50f575){var\\x20_0x2f2c2b=_0x10ea74();try{_0x31a64f(_0x338969)(_0x5c181d,_0x50f575);}catch(_0x3474c0){if(_0x1c7d27(_0x2f2c2b),_0x3474c0!==_0x3474c0+0x0)throw\\x20_0x3474c0;_0x18f302(0x1,0x0);}},\\x27invoke_viii\\x27:function(_0x487f8b,_0x3649bf,_0x19bd1a,_0x997761){var\\x20_0xeca985=_0x10ea74();try{_0x31a64f(_0x487f8b)(_0x3649bf,_0x19bd1a,_0x997761);}catch(_0xd1483b){if(_0x1c7d27(_0xeca985),_0xd1483b!==_0xd1483b+0x0)throw\\x20_0xd1483b;_0x18f302(0x1,0x0);}},\\x27invoke_viiii\\x27:function(_0x44ab44,_0xea7d23,_0x57f68a,_0x3bdd70,_0x2d11f3){var\\x20_0x5ac0f5=_0x10ea74();try{_0x31a64f(_0x44ab44)(_0xea7d23,_0x57f68a,_0x3bdd70,_0x2d11f3);}catch(_0x50c063){if(_0x1c7d27(_0x5ac0f5),_0x50c063!==_0x50c063+0x0)throw\\x20_0x50c063;_0x18f302(0x1,0x0);}},\\x27invoke_viiiiiii\\x27:function(_0x58f440,_0xef5023,_0x5de534,_0x2285ed,_0x64e643,_0x5a39bd,_0x389d97,_0x16d505){var\\x20_0x5a7cd8=_0x10ea74();try{_0x31a64f(_0x58f440)(_0xef5023,_0x5de534,_0x2285ed,_0x64e643,_0x5a39bd,_0x389d97,_0x16d505);}catch(_0x41dd67){if(_0x1c7d27(_0x5a7cd8),_0x41dd67!==_0x41dd67+0x0)throw\\x20_0x41dd67;_0x18f302(0x1,0x0);}},\\x27invoke_viiiiiiiiii\\x27:function(_0x2b80e4,_0x379039,_0x1a7c36,_0x3d73ae,_0x13732d,_0x5bd28b,_0x32d195,_0x15420a,_0x1b045c,_0x4d609c,_0x1aa036){var\\x20_0x41bff3=_0x10ea74();try{_0x31a64f(_0x2b80e4)(_0x379039,_0x1a7c36,_0x3d73ae,_0x13732d,_0x5bd28b,_0x32d195,_0x15420a,_0x1b045c,_0x4d609c,_0x1aa036);}catch(_0x280056){if(_0x1c7d27(_0x41bff3),_0x280056!==_0x280056+0x0)throw\\x20_0x280056;_0x18f302(0x1,0x0);}},\\x27invoke_viiiiiiiiiiiiiii\\x27:function(_0x3da812,_0x5dc1a4,_0x476400,_0x149442,_0x1f5aa5,_0x13aca9,_0x5601a6,_0x7a18e3,_0x26c31,_0x2eee87,_0x53988a,_0x2044f1,_0x22aa29,_0x45e55b,_0x4aba08,_0x1accb2){var\\x20_0x30d0eb=_0x10ea74();try{_0x31a64f(_0x3da812)(_0x5dc1a4,_0x476400,_0x149442,_0x1f5aa5,_0x13aca9,_0x5601a6,_0x7a18e3,_0x26c31,_0x2eee87,_0x53988a,_0x2044f1,_0x22aa29,_0x45e55b,_0x4aba08,_0x1accb2);}catch(_0x5651ca){if(_0x1c7d27(_0x30d0eb),_0x5651ca!==_0x5651ca+0x0)throw\\x20_0x5651ca;_0x18f302(0x1,0x0);}},\\x27strftime_l\\x27:function(_0x326ce8,_0xc93267,_0x2e2787,_0x4b3c54,_0x3be7b5){return\\x20_0x45edce(_0x326ce8,_0xc93267,_0x2e2787,_0x4b3c54);},\\x27xnnLoadWasmModuleJS\\x27:function(_0x42735e,_0x31da95,_0x4def65,_0x452c40){var\\x20_0x2cb43a=_0x29789b;const\\x20_0x145460=_0xa956a9[_0x2cb43a(0x479)],_0x5b9145=new\\x20Uint8Array(_0x55c3f0[_0x2cb43a(0x5a3)](_0x42735e+_0x31da95,_0x42735e+_0x4def65));try{var\\x20_0x13abf2=new\\x20WebAssembly[\\x27Module\\x27](_0x5b9145),_0x2c75c9=new\\x20WebAssembly[(_0x2cb43a(0x661))](_0x13abf2,{\\x27env\\x27:{\\x27memory\\x27:_0x39da9c}});for(var\\x20_0x3fda67\\x20in\\x20_0x2c75c9[_0x2cb43a(0x6d6)]){var\\x20_0x15ec06=_0x2c75c9[_0x2cb43a(0x6d6)][_0x3fda67];addFunction(_0x15ec06);}return\\x20_0x145460<_0xa956a9[_0x2cb43a(0x479)]?_0x145460:_0x452c40;}catch(_0x361027){return\\x20console[_0x2cb43a(0x1f6)](_0x361027),_0x452c40;}}},_0x5c0379=(function(){var\\x20_0x11246b=_0x29789b,_0x54bb97={\\x27env\\x27:_0x47b9d6,\\x27wasi_snapshot_preview1\\x27:_0x47b9d6};function\\x20_0x45becb(_0x4a6611,_0x37a8dd){var\\x20_0x94d311=a1_0x2045,_0x25df99,_0x510d5c=_0x4a6611[\\x27exports\\x27];_0xacfddc[_0x94d311(0x423)]=_0x510d5c,_0x299bd7(_0x39da9c=_0xacfddc[_0x94d311(0x423)][_0x94d311(0x44b)],\\x27memory\\x5cx20not\\x5cx20found\\x5cx20in\\x5cx20wasm\\x5cx20exports\\x27),_0x36306f(_0x39da9c[_0x94d311(0x6d3)]),_0x299bd7(_0xa956a9=_0xacfddc[\\x27asm\\x27][_0x94d311(0x49b)],_0x94d311(0x47c)),_0x25df99=_0xacfddc[_0x94d311(0x423)][\\x27__wasm_call_ctors\\x27],_0x307683[_0x94d311(0x635)](_0x25df99),_0x2b8f55(_0x94d311(0x25a));}if(_0x5e02a4(\\x27wasm-instantiate\\x27),_0xacfddc[_0x11246b(0x310)])try{return\\x20_0xacfddc[_0x11246b(0x310)](_0x54bb97,_0x45becb);}catch(_0xf5c0f8){return\\x20_0x5528a8(_0x11246b(0x1e7)+_0xf5c0f8),!0x1;}return\\x20_0x45becb(function(_0xa214a9,_0x3b549d){var\\x20_0x5a306a=_0x11246b,_0x3695b5,_0x2ca361,_0xb0c6ba;try{_0xb0c6ba=_0x476077(_0xa214a9),_0x2ca361=new\\x20WebAssembly[(_0x5a306a(0x41e))](_0xb0c6ba),_0x3695b5=new\\x20WebAssembly[(_0x5a306a(0x661))](_0x2ca361,_0x3b549d);}catch(_0x48a8c8){var\\x20_0x332410=_0x48a8c8[_0x5a306a(0x4ff)]();throw\\x20_0x5528a8(_0x5a306a(0x30c)+_0x332410),(_0x332410[_0x5a306a(0x714)](_0x5a306a(0x23c))||_0x332410[_0x5a306a(0x714)](_0x5a306a(0x37e)))&&_0x5528a8(_0x5a306a(0x62b)),_0x48a8c8;}return[_0x3695b5,_0x2ca361];}(_0x34e56f,_0x54bb97)[0x0]),_0xacfddc[_0x11246b(0x423)];}()),_0x66f16=(_0xacfddc[\\x27___wasm_call_ctors\\x27]=_0x549ff5(\\x27__wasm_call_ctors\\x27,_0x5c0379),_0xacfddc[_0x29789b(0x4ea)]=_0x549ff5(_0x29789b(0x240),_0x5c0379)),_0x2e6a2a=_0xacfddc[\\x27_free\\x27]=_0x549ff5(_0x29789b(0x766),_0x5c0379),_0x54decb=_0xacfddc[_0x29789b(0x43a)]=_0x549ff5(_0x29789b(0x4a2),_0x5c0379),_0x11b144=(_0xacfddc[_0x29789b(0x28b)]=_0x549ff5(_0x29789b(0x752),_0x5c0379),_0xacfddc[_0x29789b(0x221)]=_0x549ff5(_0x29789b(0x42c),_0x5c0379),_0xacfddc[_0x29789b(0x523)]=_0x549ff5(\\x27fflush\\x27,_0x5c0379)),_0x25b449=_0xacfddc[_0x29789b(0x3df)]=_0x549ff5(\\x27emscripten_builtin_memalign\\x27,_0x5c0379),_0x18f302=_0xacfddc[_0x29789b(0x62f)]=_0x549ff5(\\x27setThrew\\x27,_0x5c0379),_0x3178f8=_0xacfddc[_0x29789b(0x2f2)]=_0x549ff5(_0x29789b(0x2f2),_0x5c0379),_0x261af7=(_0xacfddc[_0x29789b(0x588)]=_0x549ff5(_0x29789b(0x588),_0x5c0379),_0xacfddc[_0x29789b(0x6c3)]=_0x5c0379[_0x29789b(0x29d)]),_0x4aafc9=(_0xacfddc[\\x27_emscripten_stack_get_free\\x27]=_0x5c0379[_0x29789b(0x36d)],_0xacfddc[_0x29789b(0x311)]=_0x5c0379[_0x29789b(0x5cb)],_0xacfddc[_0x29789b(0x6dc)]=_0x5c0379[_0x29789b(0x562)]),_0x10ea74=_0xacfddc[_0x29789b(0x360)]=_0x549ff5(_0x29789b(0x360),_0x5c0379),_0x1c7d27=_0xacfddc[_0x29789b(0x427)]=_0x549ff5(_0x29789b(0x427),_0x5c0379),_0x37d247=(_0xacfddc[_0x29789b(0x287)]=_0x549ff5(_0x29789b(0x287),_0x5c0379),_0xacfddc[\\x27_emscripten_stack_get_current\\x27]=_0x5c0379[_0x29789b(0x31b)],_0xacfddc[_0x29789b(0x730)]=_0x549ff5(_0x29789b(0x44f),_0x5c0379)),_0x59807f=_0xacfddc[_0x29789b(0x590)]=_0x549ff5(_0x29789b(0x40c),_0x5c0379),_0x1e3e18=_0xacfddc[\\x27___cxa_is_pointer_type\\x27]=_0x549ff5(_0x29789b(0x6c6),_0x5c0379),_0x4c4330=(_0xacfddc[_0x29789b(0x63a)]=_0x549ff5(_0x29789b(0x63a),_0x5c0379),_0xacfddc[_0x29789b(0x60f)]=_0x549ff5(_0x29789b(0x60f),_0x5c0379),_0xacfddc[_0x29789b(0x415)]=_0x549ff5(_0x29789b(0x415),_0x5c0379));_0xacfddc[_0x29789b(0x6bf)]=_0x549ff5(_0x29789b(0x6bf),_0x5c0379),_0xacfddc[_0x29789b(0x47a)]=_0x549ff5(_0x29789b(0x47a),_0x5c0379),_0xacfddc[_0x29789b(0x67e)]=_0x549ff5(_0x29789b(0x67e),_0x5c0379),_0xacfddc[_0x29789b(0x1bb)]=0x1cff0,_0xacfddc[_0x29789b(0x51f)]=0x1d28d,[_0x29789b(0x570),_0x29789b(0x48c),\\x27UTF8ToString\\x27,_0x29789b(0x2f9),_0x29789b(0x1b0),_0x29789b(0x5dd),_0x29789b(0x5e9),_0x29789b(0x761),\\x27addOnPreMain\\x27,_0x29789b(0x426),_0x29789b(0x458),_0x29789b(0x5c1),_0x29789b(0x514),_0x29789b(0x4c2),_0x29789b(0x784),_0x29789b(0x54c),_0x29789b(0x26e),_0x29789b(0x591),\\x27FS_createLink\\x27,_0x29789b(0x50c),_0x29789b(0x6a1),_0x29789b(0x259),_0x29789b(0x6b7),\\x27alignFunctionTables\\x27,_0x29789b(0x2ee),_0x29789b(0x45f),_0x29789b(0x257),\\x27out\\x27,_0x29789b(0x3aa),_0x29789b(0x36f),_0x29789b(0x471),_0x29789b(0x566),_0x29789b(0x5cc),\\x27stackAlloc\\x27,_0x29789b(0x360),_0x29789b(0x427),_0x29789b(0x588),\\x27setTempRet0\\x27,_0x29789b(0x3a1),_0x29789b(0x25f),\\x27intArrayFromBase64\\x27,\\x27tryParseAsDataURI\\x27,_0x29789b(0x2db),_0x29789b(0x51a),_0x29789b(0x34e),_0x29789b(0x5d0),_0x29789b(0x26b),_0x29789b(0x1a9),\\x27ENV\\x27,_0x29789b(0x319),_0x29789b(0x59e),_0x29789b(0x603),_0x29789b(0x474),_0x29789b(0x4fb),_0x29789b(0x4c1),_0x29789b(0x5f6),_0x29789b(0x446),_0x29789b(0x2dc),_0x29789b(0x5d9),_0x29789b(0x373),_0x29789b(0x41f),_0x29789b(0x6bd),_0x29789b(0x57c),_0x29789b(0x6c8),\\x27traverseStack\\x27,\\x27UNWIND_CACHE\\x27,_0x29789b(0x670),\\x27readEmAsmArgsArray\\x27,_0x29789b(0x2f7),_0x29789b(0x532),_0x29789b(0x73b),_0x29789b(0x4bb),_0x29789b(0x676),\\x27getExecutableName\\x27,_0x29789b(0x2be),_0x29789b(0x1cc),_0x29789b(0x598),_0x29789b(0x2d8),_0x29789b(0x61c),_0x29789b(0x281),_0x29789b(0x3c2),_0x29789b(0x430),_0x29789b(0x516),_0x29789b(0x71d),_0x29789b(0x2b2),\\x27asmjsMangle\\x27,\\x27asyncLoad\\x27,_0x29789b(0x46e),_0x29789b(0x42a),_0x29789b(0x382),_0x29789b(0x696),_0x29789b(0x32f),_0x29789b(0x753),\\x27writeI53ToU64Clamped\\x27,_0x29789b(0x678),_0x29789b(0x455),_0x29789b(0x4d4),_0x29789b(0x546),\\x27convertI32PairToI53Checked\\x27,\\x27convertU32PairToI53\\x27,_0x29789b(0x327),_0x29789b(0x347),_0x29789b(0x4a0),_0x29789b(0x734),_0x29789b(0x246),\\x27generateFuncType\\x27,_0x29789b(0x6db),_0x29789b(0x2bf),_0x29789b(0x5e7),_0x29789b(0x6d1),_0x29789b(0x615),_0x29789b(0x390),_0x29789b(0x309),\\x27reallyNegative\\x27,_0x29789b(0x71a),_0x29789b(0x4e1),_0x29789b(0x1ab),_0x29789b(0x3fb),\\x27setValue\\x27,_0x29789b(0x3fe),_0x29789b(0x1c2),\\x27PATH_FS\\x27,_0x29789b(0x629),_0x29789b(0x440),_0x29789b(0x5b6),_0x29789b(0x74a),_0x29789b(0x1f0),_0x29789b(0x6dd),_0x29789b(0x4f0),\\x27lengthBytesUTF16\\x27,\\x27UTF32ToString\\x27,_0x29789b(0x627),_0x29789b(0x5dc),\\x27allocateUTF8\\x27,_0x29789b(0x305),_0x29789b(0x253),_0x29789b(0x432),_0x29789b(0x38d),_0x29789b(0x4c9),_0x29789b(0x65e),\\x27getSocketAddress\\x27,_0x29789b(0x498),_0x29789b(0x425),\\x27specialHTMLTargets\\x27,_0x29789b(0x4bc),_0x29789b(0x5f1),_0x29789b(0x39e),_0x29789b(0x22c),_0x29789b(0x65b),_0x29789b(0x5c8),\\x27registerWheelEventCallback\\x27,\\x27registerUiEventCallback\\x27,\\x27registerFocusEventCallback\\x27,_0x29789b(0x4e9),_0x29789b(0x46f),_0x29789b(0x267),\\x27registerDeviceMotionEventCallback\\x27,_0x29789b(0x284),_0x29789b(0x6b1),_0x29789b(0x3c0),_0x29789b(0x5a5),_0x29789b(0x3e0),\\x27JSEvents_requestFullscreen\\x27,\\x27JSEvents_resizeCanvasForFullscreen\\x27,_0x29789b(0x534),\\x27hideEverythingExceptGivenElement\\x27,\\x27restoreHiddenElements\\x27,_0x29789b(0x4e6),\\x27currentFullscreenStrategy\\x27,\\x27restoreOldWindowedStyle\\x27,\\x27softFullscreenResizeWebGLRenderTarget\\x27,_0x29789b(0x268),_0x29789b(0x589),_0x29789b(0x4d9),_0x29789b(0x299),_0x29789b(0x67d),\\x27fillVisibilityChangeEventData\\x27,_0x29789b(0x713),\\x27registerTouchEventCallback\\x27,_0x29789b(0x5ba),\\x27registerGamepadEventCallback\\x27,_0x29789b(0x720),_0x29789b(0x28d),_0x29789b(0x3fd),_0x29789b(0x320),_0x29789b(0x70e),\\x27getCanvasElementSize\\x27,_0x29789b(0x69a),\\x27demangleAll\\x27,_0x29789b(0x44e),_0x29789b(0x2bc),_0x29789b(0x644),\\x27getEnvStrings\\x27,_0x29789b(0x3fc),_0x29789b(0x2c0),_0x29789b(0x1c8),_0x29789b(0x266),_0x29789b(0x433),_0x29789b(0x40d),\\x27clearImmediateWrapped\\x27,_0x29789b(0x24e),_0x29789b(0x611),\\x27newNativePromise\\x27,\\x27getPromise\\x27,_0x29789b(0x672),_0x29789b(0x2a7),_0x29789b(0x500),_0x29789b(0x1c0),_0x29789b(0x438),\\x27exception_decRef\\x27,_0x29789b(0x49d),\\x27incrementExceptionRefcount\\x27,\\x27decrementExceptionRefcount\\x27,_0x29789b(0x617),_0x29789b(0x1bd),_0x29789b(0x2d9),\\x27wget\\x27,\\x27FS\\x27,_0x29789b(0x2c2),_0x29789b(0x38c),_0x29789b(0x384),\\x27SOCKFS\\x27,_0x29789b(0x610),_0x29789b(0x5f4),_0x29789b(0x742),\\x27heapObjectForWebGLType\\x27,_0x29789b(0x48b),\\x27GL\\x27,_0x29789b(0x4bf),_0x29789b(0x417),_0x29789b(0x608),_0x29789b(0x2ae),_0x29789b(0x239),_0x29789b(0x43c),_0x29789b(0x4f2),_0x29789b(0x526),_0x29789b(0x4b1),\\x27AL\\x27,\\x27SDL_unicode\\x27,_0x29789b(0x3f6),_0x29789b(0x2eb),_0x29789b(0x524),\\x27SDL_gfx\\x27,\\x27GLUT\\x27,_0x29789b(0x27e),_0x29789b(0x2e0),_0x29789b(0x64f),\\x27GLEW\\x27,_0x29789b(0x23e),\\x27runAndAbortIfError\\x27,\\x27ALLOC_NORMAL\\x27,_0x29789b(0x1e3),_0x29789b(0x388),_0x29789b(0x6de),_0x29789b(0x5d1),_0x29789b(0x6ad),_0x29789b(0x24f),\\x27init_embind\\x27,\\x27throwInternalError\\x27,_0x29789b(0x23b),_0x29789b(0x293),_0x29789b(0x411),\\x27exposePublicSymbol\\x27,_0x29789b(0x597),\\x27extendError\\x27,_0x29789b(0x780),_0x29789b(0x75c),_0x29789b(0x512),_0x29789b(0x674),_0x29789b(0x6da),_0x29789b(0x2b5),_0x29789b(0x1fe),_0x29789b(0x241),_0x29789b(0x223),_0x29789b(0x3e3),\\x27awaitingDependencies\\x27,_0x29789b(0x37a),_0x29789b(0x38e),\\x27registerType\\x27,_0x29789b(0x4fe),_0x29789b(0x401),_0x29789b(0x315),_0x29789b(0x2a6),_0x29789b(0x683),_0x29789b(0x3b9),_0x29789b(0x6a7),_0x29789b(0x3f2),_0x29789b(0x1e6),_0x29789b(0x4ba),_0x29789b(0x6ec),_0x29789b(0x6cc),\\x27runDestructors\\x27,_0x29789b(0x35d),_0x29789b(0x5b1),_0x29789b(0x501),_0x29789b(0x23f),_0x29789b(0x632),_0x29789b(0x3bb),_0x29789b(0x6ee),\\x27nonConstNoSmartPtrRawPointerToWireType\\x27,_0x29789b(0x2c6),_0x29789b(0x5b0),\\x27RegisteredPointer_getPointee\\x27,_0x29789b(0x2d7),_0x29789b(0x66b),_0x29789b(0x361),_0x29789b(0x68b),_0x29789b(0x29b),_0x29789b(0x35f),_0x29789b(0x6c4),_0x29789b(0x252),_0x29789b(0x28f),_0x29789b(0x1f5),\\x27init_ClassHandle\\x27,_0x29789b(0x4ae),_0x29789b(0x2af),_0x29789b(0x370),_0x29789b(0x76d),_0x29789b(0x3bd),_0x29789b(0x5a1),\\x27ClassHandle_isDeleted\\x27,_0x29789b(0x6fc),_0x29789b(0x2a0),\\x27delayFunction\\x27,_0x29789b(0x74e),_0x29789b(0x723),_0x29789b(0x3c4),\\x27downcastPointer\\x27,\\x27upcastPointer\\x27,_0x29789b(0x705),_0x29789b(0x6ea),_0x29789b(0x5bf),\\x27makeLegalFunctionName\\x27,_0x29789b(0x72f),\\x27emval_free_list\\x27,\\x27emval_symbols\\x27,_0x29789b(0x30a),_0x29789b(0x478),_0x29789b(0x31d),\\x27getStringOrSymbol\\x27,_0x29789b(0x28e),_0x29789b(0x395),_0x29789b(0x557),\\x27emval_get_global\\x27,\\x27emval_lookupTypes\\x27,_0x29789b(0x282),_0x29789b(0x481),\\x27emval_addMethodCaller\\x27,_0x29789b(0x74c)][_0x29789b(0x71e)](function(_0x4b53d8){var\\x20_0x4486d1=_0x29789b;Object[_0x4486d1(0x574)](_0xacfddc,_0x4b53d8)||Object[\\x27defineProperty\\x27](_0xacfddc,_0x4b53d8,{\\x27configurable\\x27:!0x0,\\x27get\\x27:function(){var\\x20_0x9a23ea=_0x4486d1,_0x5b610d=\\x27\\x5cx27\\x27+_0x4b53d8+_0x9a23ea(0x291);_0x1e7451(_0x4b53d8)&&(_0x5b610d+=_0x9a23ea(0x3b7)),_0x12d2c9(_0x5b610d);}});});var\\x20_0x6ba0cc;function\\x20_0x154e43(){var\\x20_0x579a91;_0x261af7(),_0x299bd7(0x0==(0x3&(_0x579a91=_0x4aafc9()))),0x0==_0x579a91&&(_0x579a91+=0x4),_0x452739[_0x579a91>>0x2]=0x2135467,_0x452739[_0x579a91+0x4>>0x2]=0x89bacdfe,_0x452739[0x0]=0x63736d65;}function\\x20_0x5ca8ba(_0x2b7b36){var\\x20_0x468383=_0x29789b;function\\x20_0x32e3d2(){var\\x20_0x355883=a1_0x2045;_0x6ba0cc||(_0x6ba0cc=!0x0,_0xacfddc[_0x355883(0x6fe)]=!0x0,_0x5ce334||(_0x299bd7(!_0x36dfa9),_0x36dfa9=!0x0,_0x6cc8de(),_0xacfddc[_0x355883(0x2d0)]||_0x4adbb1[_0x355883(0x6ed)][_0x355883(0x699)]||_0x4adbb1[_0x355883(0x6ed)](),_0x4adbb1[\\x27ignorePermissions\\x27]=!0x1,_0x2e48fc[_0x355883(0x6ed)](),_0x24a6de(_0x307683),_0xacfddc[_0x355883(0x1eb)]&&_0xacfddc[_0x355883(0x1eb)](),_0x299bd7(!_0xacfddc[\\x27_main\\x27],_0x355883(0x204)),(function(){var\\x20_0x180e62=_0x355883;if(_0x6cc8de(),_0xacfddc[_0x180e62(0x441)]){for(_0x180e62(0x3b0)==typeof\\x20_0xacfddc[\\x27postRun\\x27]&&(_0xacfddc[\\x27postRun\\x27]=[_0xacfddc[_0x180e62(0x441)]]);_0xacfddc[_0x180e62(0x441)][_0x180e62(0x479)];)_0x8a1d12=_0xacfddc[_0x180e62(0x441)][_0x180e62(0x24b)](),_0x244dc2[_0x180e62(0x635)](_0x8a1d12);}var\\x20_0x8a1d12;_0x24a6de(_0x244dc2);}())));}_0x2b7b36=_0x2b7b36||_0x49088e,_0x444f55>0x0||(_0x154e43(),(function(){var\\x20_0x31e74e=a1_0x2045;if(_0xacfddc[_0x31e74e(0x3e7)]){for(\\x27function\\x27==typeof\\x20_0xacfddc[_0x31e74e(0x3e7)]&&(_0xacfddc[_0x31e74e(0x3e7)]=[_0xacfddc[_0x31e74e(0x3e7)]]);_0xacfddc[_0x31e74e(0x3e7)][_0x31e74e(0x479)];)_0x100624=_0xacfddc[_0x31e74e(0x3e7)][\\x27shift\\x27](),_0x2a6839[_0x31e74e(0x635)](_0x100624);}var\\x20_0x100624;_0x24a6de(_0x2a6839);}()),_0x444f55>0x0||(_0xacfddc[_0x468383(0x1ae)]?(_0xacfddc[_0x468383(0x1ae)](_0x468383(0x42e)),setTimeout(function(){setTimeout(function(){var\\x20_0xcd138c=a1_0x2045;_0xacfddc[_0xcd138c(0x1ae)](\\x27\\x27);},0x1),_0x32e3d2();},0x1)):_0x32e3d2(),_0x6cc8de()));}if([_0x29789b(0x34e),_0x29789b(0x603),_0x29789b(0x474),_0x29789b(0x4fb),_0x29789b(0x4c1),_0x29789b(0x5f6),_0x29789b(0x446),_0x29789b(0x2dc),_0x29789b(0x373),_0x29789b(0x3c8),\\x27convertPCtoSourceLocation\\x27,_0x29789b(0x2f7),_0x29789b(0x532),_0x29789b(0x73b),_0x29789b(0x4bb),_0x29789b(0x676),_0x29789b(0x2be),\\x27autoResumeAudioContext\\x27,\\x27handleException\\x27,_0x29789b(0x3c2),_0x29789b(0x430),_0x29789b(0x516),_0x29789b(0x71d),_0x29789b(0x2b2),_0x29789b(0x49a),_0x29789b(0x382),\\x27writeI53ToI64\\x27,_0x29789b(0x32f),_0x29789b(0x753),\\x27writeI53ToU64Clamped\\x27,_0x29789b(0x678),_0x29789b(0x455),_0x29789b(0x4d4),\\x27convertI32PairToI53\\x27,_0x29789b(0x583),\\x27getCFunc\\x27,\\x27ccall\\x27,_0x29789b(0x4a0),_0x29789b(0x734),_0x29789b(0x246),\\x27generateFuncType\\x27,_0x29789b(0x6db),_0x29789b(0x6d1),_0x29789b(0x615),_0x29789b(0x390),_0x29789b(0x309),_0x29789b(0x52b),_0x29789b(0x71a),_0x29789b(0x4e1),\\x27reSign\\x27,_0x29789b(0x3fb),_0x29789b(0x5b6),\\x27stringToAscii\\x27,_0x29789b(0x785),_0x29789b(0x305),\\x27writeStringToMemory\\x27,\\x27getSocketFromFD\\x27,_0x29789b(0x4af),_0x29789b(0x425),\\x27maybeCStringToJsString\\x27,_0x29789b(0x5f1),_0x29789b(0x39e),_0x29789b(0x22c),\\x27fillMouseEventData\\x27,_0x29789b(0x5c8),_0x29789b(0x736),_0x29789b(0x3c6),_0x29789b(0x6ae),\\x27fillDeviceOrientationEventData\\x27,_0x29789b(0x46f),_0x29789b(0x267),_0x29789b(0x3d0),_0x29789b(0x284),_0x29789b(0x6b1),_0x29789b(0x3c0),\\x27fillFullscreenChangeEventData\\x27,_0x29789b(0x3e0),_0x29789b(0x561),\\x27JSEvents_resizeCanvasForFullscreen\\x27,_0x29789b(0x534),_0x29789b(0x53e),\\x27restoreHiddenElements\\x27,_0x29789b(0x4e6),_0x29789b(0x76c),_0x29789b(0x268),_0x29789b(0x589),_0x29789b(0x4d9),\\x27registerPointerlockErrorEventCallback\\x27,_0x29789b(0x67d),_0x29789b(0x29e),\\x27registerVisibilityChangeEventCallback\\x27,_0x29789b(0x1c3),_0x29789b(0x5ba),_0x29789b(0x6e2),_0x29789b(0x720),\\x27fillBatteryEventData\\x27,_0x29789b(0x3fd),\\x27registerBatteryEventCallback\\x27,\\x27setCanvasElementSize\\x27,_0x29789b(0x521),_0x29789b(0x44e),\\x27stackTrace\\x27,_0x29789b(0x3fc),\\x27createDyncallWrapper\\x27,_0x29789b(0x40d),_0x29789b(0x581),_0x29789b(0x24e),_0x29789b(0x53d),_0x29789b(0x760),\\x27getExceptionMessageCommon\\x27,_0x29789b(0x52f),_0x29789b(0x1d3),\\x27getExceptionMessage\\x27,_0x29789b(0x2d9),\\x27_setNetworkCallback\\x27,_0x29789b(0x578),_0x29789b(0x48b),\\x27emscriptenWebGLGet\\x27,_0x29789b(0x417),_0x29789b(0x608),_0x29789b(0x2ae),_0x29789b(0x239),_0x29789b(0x43c),_0x29789b(0x4f2),\\x27emscriptenWebGLGetVertexAttrib\\x27,\\x27writeGLArray\\x27,_0x29789b(0x495),\\x27SDL_ttfContext\\x27,_0x29789b(0x2eb),_0x29789b(0x2e0),_0x29789b(0x1f9),_0x29789b(0x27a),_0x29789b(0x1e3),\\x27allocate\\x27,_0x29789b(0x54f),\\x27getBasestPointer\\x27,_0x29789b(0x6da),_0x29789b(0x2b5),_0x29789b(0x1fe),\\x27getInheritedInstanceCount\\x27,_0x29789b(0x223),\\x27genericPointerToWireType\\x27,\\x27constNoSmartPtrRawPointerToWireType\\x27,_0x29789b(0x1df),_0x29789b(0x2c6),_0x29789b(0x5b0),_0x29789b(0x496),\\x27RegisteredPointer_destructor\\x27,_0x29789b(0x66b),_0x29789b(0x361),_0x29789b(0x68b),_0x29789b(0x29b),_0x29789b(0x252),_0x29789b(0x28f),\\x27makeClassHandle\\x27,_0x29789b(0x2f5),_0x29789b(0x4ae),_0x29789b(0x2af),\\x27throwInstanceAlreadyDeleted\\x27,_0x29789b(0x76d),\\x27ClassHandle_delete\\x27,_0x29789b(0x5a6),_0x29789b(0x6fc),_0x29789b(0x2a0),_0x29789b(0x74e),\\x27RegisteredClass\\x27,_0x29789b(0x3c4),_0x29789b(0x59c),\\x27upcastPointer\\x27,_0x29789b(0x705),_0x29789b(0x594),_0x29789b(0x557),\\x27emval_get_global\\x27,\\x27emval_lookupTypes\\x27,_0x29789b(0x282),_0x29789b(0x4b3)][\\x27forEach\\x27](function(_0x504ed0){var\\x20_0x33bef8=_0x29789b;_0x33bef8(0x729)==typeof\\x20globalThis||Object[\\x27getOwnPropertyDescriptor\\x27](globalThis,_0x504ed0)||Object[_0x33bef8(0x668)](globalThis,_0x504ed0,{\\x27configurable\\x27:!0x0,\\x27get\\x27:function(){var\\x20_0x438c47=_0x33bef8,_0x93331e=\\x27`\\x27+_0x504ed0+_0x438c47(0x744),_0x207d37=_0x504ed0;_0x207d37[_0x438c47(0x3e4)](\\x27_\\x27)||(_0x207d37=\\x27$\\x27+_0x504ed0),_0x93331e+=_0x438c47(0x412)+_0x207d37+\\x27)\\x27,_0x1e7451(_0x504ed0)&&(_0x93331e+=_0x438c47(0x3b7)),_0x953362(_0x93331e);}});}),_0x1a49de=function\\x20_0x59546b(){_0x6ba0cc||_0x5ca8ba(),_0x6ba0cc||(_0x1a49de=_0x59546b);},_0xacfddc[_0x29789b(0x331)]){for(\\x27function\\x27==typeof\\x20_0xacfddc[_0x29789b(0x331)]&&(_0xacfddc[_0x29789b(0x331)]=[_0xacfddc[_0x29789b(0x331)]]);_0xacfddc[_0x29789b(0x331)][_0x29789b(0x479)]>0x0;)_0xacfddc[_0x29789b(0x331)][_0x29789b(0x5e6)]()();}_0x5ca8ba();const\\x20_0x935bdf=_0xacfddc;}},_0x470b71={};function\\x20_0x307249(_0x58fa31){var\\x20_0x1436e3=a1_0x2045,_0x422196=_0x470b71[_0x58fa31];if(void\\x200x0!==_0x422196)return\\x20_0x422196[\\x27exports\\x27];var\\x20_0x71c779=_0x470b71[_0x58fa31]={\\x27exports\\x27:{}};return\\x20_0x1e2e20[_0x58fa31][_0x1436e3(0x42f)](_0x71c779[\\x27exports\\x27],_0x71c779,_0x71c779[_0x1436e3(0x6d6)],_0x307249),_0x71c779[_0x1436e3(0x6d6)];}_0x307249[\\x27d\\x27]=(_0x157adc,_0x200efe)=>{for(var\\x20_0x39e6e2\\x20in\\x20_0x200efe)_0x307249[\\x27o\\x27](_0x200efe,_0x39e6e2)&&!_0x307249[\\x27o\\x27](_0x157adc,_0x39e6e2)&&Object[\\x27defineProperty\\x27](_0x157adc,_0x39e6e2,{\\x27enumerable\\x27:!0x0,\\x27get\\x27:_0x200efe[_0x39e6e2]});},_0x307249[\\x27o\\x27]=(_0x5c7bde,_0x108bdb)=>Object[\\x27prototype\\x27][_0x3b28eb(0x261)][\\x27call\\x27](_0x5c7bde,_0x108bdb),_0x307249[\\x27r\\x27]=_0x23a3de=>{var\\x20_0x4d24d2=_0x3b28eb;_0x4d24d2(0x729)!=typeof\\x20Symbol&&Symbol[_0x4d24d2(0x4dc)]&&Object[_0x4d24d2(0x668)](_0x23a3de,Symbol[_0x4d24d2(0x4dc)],{\\x27value\\x27:_0x4d24d2(0x41e)}),Object[_0x4d24d2(0x668)](_0x23a3de,_0x4d24d2(0x32c),{\\x27value\\x27:!0x0});},_0x307249(0x36f);})()));','_onWasmWorkerMessage','unloadModel','createObjectURL','fingers\\x20brownie','Given\\x20invalid\\x20BVC\\x20options','Krisp\\x20SDK\\x20-\\x20Malloc\\x20model\\x20failed\\x20','store','allowedDevices','anker\\x20powerconf','status','addModule','logitech\\x20x50','envy\\x2034','start','edifier\\x20mp260','belkin\\x20','undefined','Invalid\\x20BVC\\x20model\\x20url.\\x20models.modelBVC\\x20must\\x20be\\x20specified\\x20when\\x20useBVC\\x20is\\x20true.','desktop\\x20speakers\\x20-\\x20home','split','gc21-audio','Buffer\\x20overflown:','cwc5\\x20microphone','105148BgzlXw','\\x22>Input</audio>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<audio\\x20controls\\x20title=\\x22recording-output-','setUint16','AudioFilterNode:toggle','model32','shadowRoot','perdana','enable','taotronics\\x20tt-sk','_channelCount','anker\\x20powerconf\\x20s3','preloadInboundModels','href','lg\\x20ph1(2a)','logi\\x20group\\x20speakerphone','model:validateModels','yeti','treblab\\x20hd77','hk\\x20onyx\\x20studio','bvc','port2','kimu\\x20pro','\\x20is\\x20blocked\\x20for\\x20BVC\\x20compatibility','removeEventListener'];a0_0x4e70=function(){return _0x5d6085;};return a0_0x4e70();}function a0_0x249e(_0x5a8e04,_0x3c59dd){const _0x4e702e=a0_0x4e70();return a0_0x249e=function(_0x249eac,_0x11dadc){_0x249eac=_0x249eac-0x152;let _0x3f3657=_0x4e702e[_0x249eac];return _0x3f3657;},a0_0x249e(_0x5a8e04,_0x3c59dd);}(function(_0x1468b0,_0x55af7e){const _0x28bb0e=a0_0x249e,_0x2a7361=_0x1468b0();while(!![]){try{const _0x311d37=parseInt(_0x28bb0e(0x244))/0x1+-parseInt(_0x28bb0e(0x21c))/0x2+-parseInt(_0x28bb0e(0x228))/0x3*(-parseInt(_0x28bb0e(0x1c0))/0x4)+-parseInt(_0x28bb0e(0x2cc))/0x5+-parseInt(_0x28bb0e(0x1de))/0x6*(-parseInt(_0x28bb0e(0x305))/0x7)+-parseInt(_0x28bb0e(0x347))/0x8+-parseInt(_0x28bb0e(0x1f7))/0x9*(-parseInt(_0x28bb0e(0x29f))/0xa);if(_0x311d37===_0x55af7e)break;else _0x2a7361['push'](_0x2a7361['shift']());}catch(_0x5d72b7){_0x2a7361['push'](_0x2a7361['shift']());}}}(a0_0x4e70,0x21d1a));var A={0x290:_0x2759ad=>{const _0x280c4b=a0_0x249e;_0x2759ad[_0x280c4b(0x319)]=_0x280c4b(0x1a8);},0x3:_0x4f1d52=>{const _0x54757c=a0_0x249e;_0x4f1d52[_0x54757c(0x319)]='function\\x20a0_0x1cfe(_0x1a7bfc,_0x874c92){const\\x20_0x2c9af7=a0_0x2c9a();return\\x20a0_0x1cfe=function(_0x1cfe38,_0x44fbbf){_0x1cfe38=_0x1cfe38-0x1f3;let\\x20_0x2fe79c=_0x2c9af7[_0x1cfe38];return\\x20_0x2fe79c;},a0_0x1cfe(_0x1a7bfc,_0x874c92);}function\\x20a0_0x2c9a(){const\\x20_0x1cc887=[\\x27promedia\\x5cx202.0\\x27,\\x27inc2000\\x27,\\x27bass\\x5cx20master\\x5cx2080bt\\x27,\\x27atomicState\\x27,\\x27redmi\\x5cx20tv\\x5cx20soundbar\\x27,\\x27addEventListener\\x27,\\x27auna\\x5cx20mic\\x5cx20cm900\\x27,\\x27jbl\\x5cx20xtreme\\x27,\\x27thronmax\\x5cx20pulse\\x27,\\x27pushOutput\\x27,\\x27vanatoo\\x5cx20t0\\x27,\\x27events\\x27,\\x27xech\\x5cx20t2s\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<p>Recording:\\x5cx20\\x27,\\x27anker\\x5cx20powerconf\\x5cx20s3\uFF08\u5927\u4F1A\u8B70\u5BA4\uFF09\\x27,\\x27isEnabled\\x27,\\x27tcl\\x5cx20ts5000\\x27,\\x27bt\\x5cx20hifi\\x5cx20audio\\x27,\\x27fifine\\x5cx20k420\\x27,\\x27download\\x27,\\x27ts-14000\\x5cx20klar\\x27,\\x27setLoggingPort\\x27,\\x27sigma\\x5cx20fp\\x5cx20l\\x27,\\x27edifier\\x5cx20s3000\\x5cx20pro\\x27,\\x27ekacom-k\\x27,\\x27stockwell\\x5cx20ii\\x27,\\x27mic_test\\x27,\\x27__importDefault\\x27,\\x27ndz-03-ga\\x27,\\x27anker\\x5cx20powerconf\\x5cx20s3\\x27,\\x278bitdo\\x5cx20twincube\\x27,\\x27rog\\x5cx20eye\\x5cx20s\\x27,\\x27trio8800\\x27,\\x27_suspended\\x27,\\x27bw02-bt\\x27,\\x27ue\\x5cx20boom\\x27,\\x27j5create\\x5cx20meeting\\x5cx20mic\\x27,\\x27edifier_r\\x27,\\x27options\\x27,\\x27movo-um700\\x27,\\x27__awaiter\\x27,\\x27magic\\x5cx20mic\\x27,\\x27jounivo\\x5cx20jv\\x27,\\x27409000MjSXHp\\x27,\\x27<p>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<audio\\x5cx20controls\\x5cx20title=\\x5cx22recording-input-\\x27,\\x27room1\\x5cx20bluetooth\\x27,\\x27instances\\x27,\\x27SET_LOGGING_PORT\\x27,\\x27_outputData\\x27,\\x27exportToWavBlob\\x27,\\x27cybertrack\\x5cx20h7\\x27,\\x27jabra\\x5cx20speak\\x27,\\x27by-pm500\\x27,\\x27creative\\x5cx20t60\\x27,\\x27parameterDescriptors\\x27,\\x27uc40m\\x5cx20audio\\x27,\\x27undefined\\x27,\\x27poly\\x5cx20sync\\x27,\\x27\\x5cx22>Output</audio>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x27,\\x27m799b\\x27,\\x27enacfire\\x5cx20soundbar\\x27,\\x27onmessage\\x27,\\x27yu6\\x5cx20by\\x5cx20kanto\\x27,\\x27Unhandled\\x5cx20event\\x5cx20received\\x27,\\x27channelCount\\x27,\\x27infinity\\x5cx20fuze\\x5cx20100\\x27,\\x27jbl\\x5cx20jr\\x5cx20pop\\x27,\\x27kz-dc4k\\x5cx20audio\\x27,\\x27bose\\x5cx20sliii\\x27,\\x27edifier\\x5cx20mp260\\x27,\\x27buffer\\x27,\\x27collectFrom\\x27,\\x27readAsDataURL\\x27,\\x27samsung\\x5cx20slimfit\\x5cx20cam\\x27,\\x27tula\\x5cx20mobile\\x5cx20microphone\\x27,\\x27leviosa\\x5cx20live\\x5cx20mcx02\\x27,\\x27createSharedBuffers\\x27,\\x27klipsch\\x5cx20groove\\x27,\\x27sendBufferOverflowEvent\\x27,\\x27r-talk\\x5cx20900\\x27,\\x27yvc-330\\x5cx20yamaha\\x27,\\x27avantree\\x5cx20saturn\\x5cx20pro\\x27,\\x27thinkvision\\x5cx20t22v\\x5cx20wide\\x5cx20monitor\\x5cx20for\\x5cx20usb-audio\\x27,\\x27createWAVBlob\\x27,\\x27anker\\x5cx20powerconf\\x27,\\x27soundcore\\x5cx20mini\\x27,\\x27pebble\\x5cx20v3\\x27,\\x27_channelCount\\x27,\\x27epson\\x5cx20projector\\x5cx20mpp\\x5cx20audio\\x27,\\x27forEach\\x27,\\x27powerconf\\x5cx20s3\\x27,\\x27creative\\x5cx20live!\\x5cx20mic\\x5cx20m3\\x27,\\x27startedAt\\x27,\\x27audio/wav;codecs=wav\\x27,\\x27logitech\\x5cx20usb\\x5cx20speaker\\x27,\\x27logi\\x5cx20z407\\x27,\\x27yeti\\x27,\\x27logs\\x27,\\x27hk\\x5cx20onyx\\x5cx20studio\\x5cx204\\x27,\\x27150oSQruz\\x27,\\x27pull\\x27,\\x27logAudioOutputSamples\\x27,\\x27bb5115\\x27,\\x27reaxt\\x5cx20omni-1.0\\x5cx20pair\\x27,\\x27marley\\x5cx20chant\\x5cx20mini\\x27,\\x27klipsch\\x5cx20r-51pm\\x27,\\x27postLog\\x27,\\x27big\\x5cx20jambox\\x5cx20by\\x5cx20jawbone\\x27,\\x27_state\\x27,\\x276USsWgK\\x27,\\x27BUFFER_OVERFLOW_MS\\x27,\\x27fifine\\x5cx20microphone\\x27,\\x27mam-thinkplus-k3\\x27,\\x27yu4\\x5cx20by\\x5cx20kanto\\x27,\\x27trust\\x5cx20gxt\\x5cx20232\\x5cx20microphone\\x27,\\x27DebugRecorder\\x27,\\x27ue\\x5cx20megaboom\\x27,\\x27defineProperty\\x27,\\x27at2020usb\\x27,\\x27WAVE\\x27,\\x27result\\x27,\\x27aukey\\x5cx20pc-lm1a\\x5cx20microphone\\x27,\\x27aoni\\x5cx20microphone\\x27,\\x27obsbot\\x5cx20meet\\x5cx20microphone\\x27,\\x27Logger\\x5cx20is\\x5cx20not\\x5cx20initialized\\x27,\\x27web\\x5cx20cam\\x27,\\x27miniso\\x5cx20d40f\\x27,\\x27mateview\\x27,\\x27jbl\\x5cx20flip\\x5cx20\\x27,\\x27spark\\x5cx2040\\x5cx20audio\\x27,\\x27bt\\x5cx20speaker\\x27,\\x27REQUEST_NOISE_CANCELLATION\\x27,\\x27wonderboom\\x27,\\x27webcam\\x27,\\x27soundcore\\x5cx20flare\\x27,\\x27yas-108\\x5cx20yamaha\\x27,\\x27usb\\x5cx20lavalier\\x5cx20microphone\\x27,\\x27from\\x27,\\x27worklet\\x27,\\x27ay-spkf4\\x27,\\x27brother\\x5cx20nw-1000\\x27,\\x27setUint32\\x27,\\x27office\\x5cx20speaker\\x27,\\x27plasma\\x5cx20microphone\\x27,\\x27LOG_INPUT_AUDIO\\x27,\\x27__esModule\\x27,\\x27creative\\x5cx20stage\\x27,\\x27megablast\\x27,\\x27a-rate\\x27,\\x27bietrun\\x5cx20one\\x27,\\x27jabra\\x5cx20panacast\\x27,\\x27event\\x27,\\x27oontz\\x5cx20angle\\x5cx203\\x5cx20plus\\x27,\\x27exports\\x27,\\x27lg\\x5cx20ph1(2a)\\x27,\\x27presence\\x27,\\x27_previousLogTime\\x27,\\x27WORKLET_PROCESSOR_NAME\\x27,\\x27revolabs\\x5cx20digital\\x5cx20audio\\x5cx20device\\x27,\\x27shure\\x5cx20mv5\\x27,\\x27TOGGLE\\x27,\\x27Logger\\x27,\\x271344807vcSNDg\\x27,\\x27\\x5cx22>Input</audio>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<audio\\x5cx20controls\\x5cx20title=\\x5cx22recording-output-\\x27,\\x27getAvailableSamples\\x27,\\x27toISOString\\x27,\\x27klipsch\\x5cx20the\\x5cx20fives\\x27,\\x27aukey\\x5cx20mi-u2\\x5cx20usb\\x5cx20mic\\x27,\\x27data\\x27,\\x27logi\\x5cx20z207\\x27,\\x27charCodeAt\\x27,\\x27dockpro\\x27,\\x27huawei\\x5cx20cm510\\x27,\\x27getBuffer\\x27,\\x2711935992VnfThb\\x27,\\x27MIN_BVC_SUPPORT_SAMPLE_RATE\\x27,\\x27brio\\x27,\\x27logitech\\x5cx20z537\\x27,\\x27jbl\\x5cx20irx112bt\\x27,\\x27seconds\\x27,\\x27downloadBlob\\x27,\\x27meeting\\x5cx20owl\\x27,\\x27dropBuffer\\x27,\\x27AudioProcessor\\x27,\\x27antlion\\x5cx20wireless\\x5cx20microphone\\x27,\\x27then\\x27,\\x27hyperx\\x5cx20solocast\\x27,\\x27logitech\\x5cx20speakerphone\\x5cx20p710e\\x27,\\x27treblab\\x5cx20hd77\\x27,\\x27usb\\x5cx20condenser\\x5cx20microphone\\x27,\\x27wireless\\x5cx20microphone\\x5cx20rx\\x27,\\x27pyleusa\\x27,\\x27ChunkAudioBuffer:dropBuffer\\x27,\\x27port1\\x27,\\x27_channelData\\x27,\\x27blue\\x5cx20snowball\\x27,\\x27usb\\x5cx20microphone\\x27,\\x27thronmax\\x5cx20mdrill\\x27,\\x27isFrameAvailable\\x27,\\x27gxt\\x5cx20256\\x5cx20microphone\\x27,\\x27trenbader\\x5cx20artlink\\x27,\\x27_outputBuffer\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20SharedArrayBuffer\\x5cx20is\\x5cx20not\\x5cx20properly\\x5cx20initialized!\\x27,\\x27miniso-a18\\x27,\\x27realtek\\x27,\\x27konftel\\x5cx20ego\\x27,\\x27channel\\x27,\\x27q30\\x5cx20-\\x5cx20glauber\\x27,\\x27teufel\\x5cx20cinebar\\x5cx20one\\x27,\\x27assign\\x27,\\x27shure\\x5cx20mv7\\x27,\\x27audioProcessor\\x27,\\x27display\\x27,\\x27usb-mic\\x27,\\x27_copyInputToOutput\\x27,\\x27taotronics\\x5cx20tt-sk\\x27,\\x27edifier\\x5cx20mp380\\x27,\\x27sp-ad70-a\\x27,\\x27port\\x27,\\x27sr600202\\x27,\\x27jbl\\x5cx20horizon\\x27,\\x27_receivedPackagesCount\\x27,\\x27ifine\\x5cx20\\x5cx20microphone\\x27,\\x27stone\\x5cx201400\\x5cx20mini\\x27,\\x27at9934usb\\x27,\\x27verbatim\\x5cx201080p\\x5cx20mic\\x27,\\x27creative\\x5cx20t100\\x27,\\x27KrispSDK\\x5cx20-\\x5cx20unable\\x5cx20to\\x5cx20download\\x5cx20the\\x5cx20report!\\x27,\\x27ankerwork\\x5cx20b600\\x5cx20video\\x5cx20bar\\x27,\\x27lifecam\\x27,\\x27zv-1\\x27,\\x27downloadReport\\x27,\\x27arozzi\\x5cx20sfera\\x5cx20microphone\\x27,\\x27iconf\\x27,\\x27setUint16\\x27,\\x27obsbot\\x5cx20meet\\x5cx204k\\x5cx20microphone\\x27,\\x27WEB_AUDIO_CHUNK_SIZE\\x27,\\x27pc-lm1e\\x5cx20audio\\x27,\\x27pushInput\\x27,\\x27soundcore\\x5cx20motion\\x5cx20b\\x27,\\x27now\\x27,\\x27ln01a\\x27,\\x27fifine\\x5cx20k678\\x5cx20microphone\\x27,\\x27SUPPORTED_SAMPLE_RATES\\x27,\\x27envy\\x5cx2034\\x27,\\x27samson\\x5cx20gomic\\x27,\\x27office\\x5cx20node\\x5cx20bt\\x27,\\x27audioengine\\x5cx202+\\x27,\\x27next\\x27,\\x27_maxPackageDelay\\x27,\\x27fingers\\x5cx20brownie\\x27,\\x27KrispSDK\\x5cx20-\\x27,\\x27process\\x27,\\x27store\\x27,\\x27stringify\\x27,\\x27sampleRate\\x27,\\x27bluetooth\\x5cx20music\\x27,\\x27maono\\x5cx20fairy\\x27,\\x27dell\\x5cx20slim\\x5cx20soundbar\\x5cx20sb522a\\x27,\\x27OUTPUT_CLEAN_AUDIO_DATA\\x27,\\x27emeet\\x5cx20m2\\x5cx20max\\x27,\\x27SDK_FRAME_DURATION_10MS\\x27,\\x27hw01\\x27,\\x27powerconf\\x5cx20\\x27,\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Buffer\\x5cx20wrong\\x5cx20input\\x27,\\x27edifier\\x5cx20r\\x27,\\x271062s\\x27,\\x275708572oNPsvD\\x27,\\x27ws-900\\x27,\\x27wireless\\x5cx20go\\x5cx20ii\\x5cx20rx\\x27,\\x27razer\\x5cx20kiyo\\x27,\\x27sony:srs-x2\\x27,\\x27g300\\x27,\\x27set\\x27,\\x27byteLength\\x27,\\x27\\x5cx22><source\\x5cx20src=\\x5cx22\\x27,\\x27at-csp5\\x27,\\x27_isEnabled\\x27,\\x27jbl\\x5cx20tuner\\x5cx20fm\\x27,\\x27audio/wav;\\x5cx20codecs=wav\\x27,\\x27s2025\\x27,\\x27uac\\x5cx201.0\\x5cx20microphone\\x27,\\x27oppo\\x5cx20wireless\\x5cx20speaker\\x27,\\x27sb-50\\x27,\\x27processor\\x27,\\x27subarray\\x27,\\x27razer\\x5cx20nommo\\x5cx20chroma\\x27,\\x27cp700\\x27,\\x27</pre>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20</details>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x27,\\x27perdana\\x27,\\x27lgtg-210\\x27,\\x27woburn\\x5cx20speaker\\x27,\\x27fantech\\x5cx20leviosa\\x27,\\x27[samsung]\\x5cx20allconnect\\x27,\\x27evga\\x5cx20xr1\\x5cx20pro\\x5cx20capture\\x5cx20box\\x5cx20audio\\x27,\\x27emeet\\x5cx20m2\\x27,\\x27usb/xlr\\x5cx20dynamic\\x5cx20microphone\\x27,\\x27error\\x27,\\x27srs-xb33\\x27,\\x27_inputData\\x27,\\x27kilburn\\x5cx20ii\\x27,\\x27sennheiser\\x5cx20sp\\x5cx2030\\x27,\\x27slice\\x27,\\x27logAudioInputSamples\\x27,\\x27BUFFER_DROP_KEEP_MS\\x27,\\x27audioengine\\x27,\\x27connectclip\\x5cx201.0\\x27,\\x27audiohub\\x5cx20speaker\\x27,\\x27processorOptions\\x27,\\x27tg-116\\x27,\\x27log\\x27,\\x27setPrototypeOf\\x27,\\x27isFloat\\x27,\\x27setUint8\\x27,\\x27jbl\\x5cx20pulse\\x5cx203\\x27,\\x27live\\x5cx20streamer\\x5cx20cam\\x5cx20513\\x27,\\x27[samsung]\\x5cx20airtrack\\x27,\\x27aavante\\x5cx20bar\\x5cx201160\\x27,\\x27.html\\x27,\\x27obsbot\\x5cx20tiny\\x5cx204k\\x5cx20microphone\\x27,\\x27sm900\\x5cx20microphone\\x27,\\x27done\\x27,\\x27setOptions\\x27,\\x27by-pm700\\x27,\\x27streamcam\\x27,\\x27jbl\\x5cx20cinema\\x5cx20sb150\\x27,\\x27majority\\x5cx20rs1\\x27,\\x27g560\\x5cx20gaming\\x5cx20speaker\\x27,\\x27macbook\\x5cx20air\\x27,\\x27sembrandt\\x5cx20ht3000\\x27,\\x27logitech\\x5cx20z337\\x27,\\x27clickshare\\x27,\\x27file\\x27,\\x27mevo\\x27,\\x27SUPPORTED_INBOUND_SAMPLE_RATES\\x27,\\x27sg\\x5cx20control\\x5cx20mic\\x27,\\x27phonak\\x5cx20compilot\\x5cx20ii\\x27,\\x27bose\\x5cx20videobar\\x5cx20vb1\\x27,\\x27keys\\x27,\\x27RIFF\\x27,\\x27useSharedArrayBuffer\\x27,\\x27ht-ct80\\x27,\\x27anker\\x5cx20soundcore\\x27,\\x27camera\\x27,\\x27audiopro\\x5cx20x5\\x5cx20microphone\\x27,\\x27echo\\x5cx20show\\x27,\\x27SET_AUDIO_PROCESSOR_READY\\x27,\\x27sdy019\\x27,\\x27createElement\\x27,\\x27info\\x27,\\x27worker\\x27,\\x27resume\\x27,\\x27razer\\x5cx20leviathan\\x27,\\x27bugani\\x5cx20m83\\x27,\\x27_previousLogNumber\\x27,\\x27tonor\\x5cx20tc-2030\\x5cx20audio\\x5cx20device\\x27,\\x27mc-d800\\x27,\\x27\u043A\u043E\u043B\u043E\u043D\u043A\u0438\\x27,\\x27setReady\\x27,\\x27usb\\x5cx20mic\\x27,\\x27stanmore\\x5cx20speaker\\x27,\\x27to:\\x27,\\x27crestron\\x5cx20mercury\\x27,\\x27stanmore\\x5cx20bluetooth\\x27,\\x27join\\x27,\\x27srs-xb10\\x27,\\x27r\u00F8de\\x5cx20nt-usb\\x27,\\x27shure\\x5cx20digital\\x27,\\x27length\\x27,\\x27monster\\x5cx20s310\\x27,\\x27kimu\\x5cx20pro\\x27,\\x27notify\\x27,\\x27tribit\\x5cx20maxsound\\x5cx20plus\\x27,\\x27sound\\x5cx20blaster\\x27,\\x27heyday\\x5cx20microphone\\x27,\\x27splice\\x27,\\x27blue\\x5cx20icicle\\x27,\\x27string\\x27,\\x27sennheiser\\x5cx20458bt\\x27,\\x27kandao\\x5cx20meeting\\x27,\\x27ht-s100f\\x27,\\x27trust\\x5cx20gxt\\x5cx20242\\x5cx20microphone\\x27,\\x27jbl\\x5cx20flip\\x5cx204\\x27,\\x27push\\x27,\\x27soundtech\\x27,\\x27t-2359\\x27,\\x27stanmore\\x5cx20ii\\x27,\\x27soundbar\\x5cx20lp-s08\\x27,\\x27recorder\\x27,\\x27href\\x27,\\x27thronmax\\x5cx20stream\\x5cx20go\\x5cx20pro\\x5cx20microphone\\x27,\\x27blobToBase64\\x27,\\x27moman\\x5cx20em\\x27,\\x27threadName\\x27,\\x27WRITE_INDEX\\x27,\\x27ptsb-80w\\x27,\\x27edifier\\x5cx20g2000\\x27,\\x27call\\x27,\\x27hypemic\\x27,\\x27dell\\x5cx20slim\\x5cx20soundbar\\x5cx20sb521a\\x27,\\x27bufferOverflowMS\\x27,\\x27megaboom\\x5cx203\\x27,\\x27numFrames\\x27,\\x27_onMessage\\x27,\\x27tribit\\x5cx20maxboom\\x27,\\x27_inputRingBuffer\\x27,\\x27philips\\x5cx20s3505\\x27,\\x27message\\x27,\\x27lg-pk3\\x27,\\x27sigma\\x5cx20fp\\x27,\\x27load\\x27,\\x27isReady\\x27,\\x27RESUME\\x27,\\x27polycom\\x5cx20voxbox\\x27,\\x27t&v\\x5cx20kurbis\\x5cx20cinema\\x27,\\x27BVC_BLOCKED_DEVICES\\x27,\\x27usb\\x5cx20lcs\\x27,\\x27blasterx\\x5cx20senz3d\\x5cx20vf0810\\x27,\\x27logi\\x5cx204k\\x27,\\x27SharedBufferAudioProcessor\\x27,\\x27soundcore\\x5cx20boost\\x27,\\x27simmons\\x5cx20sd600\\x27,\\x27max\\x27,\\x27soundcore\\x5cx20mini\\x5cx203\\x5cx20pro\\x27,\\x27report-\\x27,\\x27hk_allure_portable\\x27,\\x271SRqilb\\x27,\\x27soundstation\\x5cx207\\x5cx20lite\\x27,\\x27buffer\\x5cx20reduced\\x5cx20from:\\x27,\\x27logAudio\\x27,\\x27postMessage\\x27,\\x27ipevo\\x5cx20v4k\\x27,\\x27isSuspended\\x27,\\x27BYTES_PER_ELEMENT\\x27,\\x27BVC_ALLOWED_DEVICES\\x27,\\x27_outputRingBuffer\\x27,\\x27numChannels\\x27,\\x27value\\x27,\\x27STATE\\x27,\\x27_overflowCount\\x27,\\x2710225621RqSZkY\\x27,\\x27INPUT_AUDIO_DATA\\x27,\\x27desktop\\x5cx20speakers\\x5cx20-\\x5cx20home\\x27,\\x27_bufferLength\\x27,\\x27_chunkSize\\x27,\\x27apply\\x27,\\x27at2020\\x5cx20usb\\x27,\\x27logitech\\x5cx20mx\\x5cx20sound\\x27,\\x27throw\\x27,\\x27_getAvailableRead\\x27,\\x27port2\\x27,\\x27cmteck\\x27,\\x27_previousReportedDelay\\x27,\\x27soundlink\\x27,\\x27djack\\x27,\\x27setCleanData\\x27,\\x27crestron-uc-soundbar\\x27,\\x27prototype\\x27,\\x27hk\\x5cx20omni\\x5cx2010\\x27,\\x27BUFFER_DROP_SIZE_MS\\x27,\\x273554244NTuFNd\\x27,\\x27LOG_OUTPUT_AUDIO\\x27,\\x27PortAudioProcessor\\x27,\\x27odyssey\\x5cx20microphone\\x27,\\x27sc-ux100\\x27,\\x27mts-2026\\x27,\\x27jbl\\x5cx20pulse\\x5cx204\\x27,\\x27jbl\\x5cx20go\\x27,\\x27r\u00F8de\\x5cx20videomic\\x27,\\x27logitech\\x5cx20x50\\x27,\\x27anker\\x5cx20soundcore\\x5cx20boost\\x27,\\x27</div>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<details>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<summary>Logs</summary>\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<pre>\\x27,\\x27toLocaleString\\x27,\\x27stadia\\x5cx20controller\\x5cx20rev.\\x5cx20a\\x27,\\x27fantech\\x5cx20luminous\\x5cx20c30\\x27,\\x27tronsmart\\x5cx20element\\x5cx20force\\x27,\\x27toggle\\x27,\\x27bluetooth\\x5cx20soundbar\\x27,\\x27SharedRingBuffer\\x27,\\x27c-1u\\x27,\\x27default\\x27,\\x27soundcore\\x5cx20sport\\x5cx20xl\\x27,\\x27jbl\\x5cx20wind\\x27,\\x27debugLogs\\x27,\\x27hk\\x5cx20soundsticks\\x5cx204\\x27,\\x27uac\\x5cx201.0\\x5cx20microphone\\x5cx20&\\x5cx20hid-mediakey\\x27,\\x27READ_INDEX\\x27,\\x27suspend\\x27,\\x27\\x5cx0a\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20\\x5cx20<div>\\x27,\\x27empty\\x27,\\x27soundcore\\x5cx202\\x27,\\x27_isReady\\x27,\\x27amazonbasics\\x5cx20desktop\\x5cx20mini\\x5cx20mic\\x27,\\x27redcam\\x5cx20rc-250\\x27,\\x27cambridge\\x5cx20audio\\x5cx20one\\x27,\\x27pocketaudio\\x5cx20microphone\\x27,\\x27gc21-audio\\x27,\\x27logPort\\x27,\\x27oontz\\x5cx20angle\\x5cx203\\x5cx20dca\\x27,\\x27main\\x27,\\x27216242ZlgNiG\\x27,\\x27fifine\\x5cx20k658d\\x5cx20microphone\\x27,\\x27lspx-s3\\x27,\\x27_getAvailableWrite\\x27,\\x27bss\\x5cx204803\\x27,\\x27ausdom\\x5cx20microphone\\x27];a0_0x2c9a=function(){return\\x20_0x1cc887;};return\\x20a0_0x2c9a();}(function(_0x20d57e,_0x385629){const\\x20_0x484841=a0_0x1cfe,_0x20322b=_0x20d57e();while(!![]){try{const\\x20_0x2747db=-parseInt(_0x484841(0x200))/0x1*(parseInt(_0x484841(0x24a))/0x2)+-parseInt(_0x484841(0x222))/0x3+parseInt(_0x484841(0x35b))/0x4+parseInt(_0x484841(0x27b))/0x5+-parseInt(_0x484841(0x2bd))/0x6*(-parseInt(_0x484841(0x20e))/0x7)+parseInt(_0x484841(0x2fe))/0x8+-parseInt(_0x484841(0x2f2))/0x9*(parseInt(_0x484841(0x2b3))/0xa);if(_0x2747db===_0x385629)break;else\\x20_0x20322b[\\x27push\\x27](_0x20322b[\\x27shift\\x27]());}catch(_0xb9b90b){_0x20322b[\\x27push\\x27](_0x20322b[\\x27shift\\x27]());}}}(a0_0x2c9a,0xe272b),((()=>{\\x27use\\x20strict\\x27;var\\x20_0x1478b2={0x36:(_0x3e15d0,_0x499d0c,_0x12e590)=>{const\\x20_0x52caa7=a0_0x1cfe;Object[_0x52caa7(0x2c5)](_0x499d0c,_0x52caa7(0x2e1),{\\x27value\\x27:!0x0});const\\x20_0x20cdf0=_0x12e590(0x29a),_0xd5c911=_0x12e590(0x2ce);_0x499d0c[_0x52caa7(0x236)]=class{constructor(){const\\x20_0x32a4c4=_0x52caa7;this[_0x32a4c4(0x296)]=[];}[_0x52caa7(0x3cf)](_0x290c65){const\\x20_0x210e45=_0x52caa7;this[_0x210e45(0x296)][_0x210e45(0x3cf)](..._0x290c65);}[_0x52caa7(0x2b4)](_0x568b78){const\\x20_0x55d585=_0x52caa7;if(_0x568b78<0x0)throw\\x20new\\x20Error(_0x55d585(0x358));if(this[_0x55d585(0x296)][_0x55d585(0x3c0)]>=_0x568b78)return\\x20this[_0x55d585(0x296)][_0x55d585(0x3c7)](0x0,_0x568b78);throw\\x20new\\x20Error(\\x27Krisp\\x5cx20SDK\\x5cx20-\\x5cx20Buffer\\x5cx20not\\x5cx20enough\\x5cx20samples\\x27);}[\\x27length\\x27](){const\\x20_0x1d2ca5=_0x52caa7;return\\x20this[_0x1d2ca5(0x296)][_0x1d2ca5(0x3c0)];}[_0x52caa7(0x2fd)](){const\\x20_0x59bae0=_0x52caa7;return\\x20this[_0x59bae0(0x296)];}[_0x52caa7(0x23f)](){const\\x20_0x1b3194=_0x52caa7;this[_0x1b3194(0x296)]=[];}[_0x52caa7(0x306)](_0x2970e7){const\\x20_0x576f5d=_0x52caa7;_0xd5c911[\\x27Logger\\x27][\\x27warn\\x27](_0x576f5d(0x310),_0x576f5d(0x202),this[_0x576f5d(0x296)][_0x576f5d(0x3c0)],_0x576f5d(0x3b9),this[_0x576f5d(0x296)][\\x27length\\x27]-_0x2970e7*_0x20cdf0[_0x576f5d(0x380)]/0xa),this[_0x576f5d(0x296)]=this[_0x576f5d(0x296)][_0x576f5d(0x37e)](this[_0x576f5d(0x296)][_0x576f5d(0x3c0)]-_0x2970e7*_0x20cdf0[_0x576f5d(0x380)]/0xa);}};},0x349:(_0x100f2a,_0x5d0f5e,_0x56fdba)=>{const\\x20_0x7cbcf6=a0_0x1cfe;Object[_0x7cbcf6(0x2c5)](_0x5d0f5e,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x5d0f5e[_0x7cbcf6(0x2c3)]=void\\x200x0;const\\x20_0x2ff2d4=_0x56fdba(0x126);_0x5d0f5e[_0x7cbcf6(0x2c3)]=class{constructor(_0x3e79c0){const\\x20_0x2c2b84=_0x7cbcf6;this[\\x27sampleRate\\x27]=_0x3e79c0,this[_0x2c2b84(0x37b)]=[],this[_0x2c2b84(0x280)]=[];}[_0x7cbcf6(0x33e)](_0x136c7c){const\\x20_0x2718f1=_0x7cbcf6;this[_0x2718f1(0x37b)][_0x2718f1(0x3cf)](_0x136c7c);}[_0x7cbcf6(0x259)](_0x3de69a){const\\x20_0x5422f6=_0x7cbcf6;this[_0x5422f6(0x280)][_0x5422f6(0x3cf)](_0x3de69a);}[_0x7cbcf6(0x281)](){const\\x20_0x196ba4=_0x7cbcf6;return{\\x27input\\x27:(0x0,_0x2ff2d4[_0x196ba4(0x2a3)])(this[_0x196ba4(0x37b)],this[\\x27sampleRate\\x27]),\\x27output\\x27:(0x0,_0x2ff2d4[_0x196ba4(0x2a3)])(this[_0x196ba4(0x280)],this[_0x196ba4(0x34f)])};}};},0x2ce:function(_0x5ab078,_0x3c3dec,_0x5ca640){const\\x20_0x3e9dc3=a0_0x1cfe;var\\x20_0x1d4c4d=this&&this[\\x27__awaiter\\x27]||function(_0x24e3c5,_0x126399,_0x4fe1a3,_0x136fb3){return\\x20new(_0x4fe1a3||(_0x4fe1a3=Promise))(function(_0x49c4ee,_0x2489be){const\\x20_0x3b6e2a=a0_0x1cfe;function\\x20_0x5d414c(_0xc80929){const\\x20_0x2f233d=a0_0x1cfe;try{_0x4f17a8(_0x136fb3[_0x2f233d(0x348)](_0xc80929));}catch(_0x9c710a){_0x2489be(_0x9c710a);}}function\\x20_0xc9a736(_0x365d9f){const\\x20_0x412afc=a0_0x1cfe;try{_0x4f17a8(_0x136fb3[_0x412afc(0x216)](_0x365d9f));}catch(_0x45c33){_0x2489be(_0x45c33);}}function\\x20_0x4f17a8(_0xe13fdf){const\\x20_0x1c380b=a0_0x1cfe;var\\x20_0x490c97;_0xe13fdf[\\x27done\\x27]?_0x49c4ee(_0xe13fdf[_0x1c380b(0x20b)]):(_0x490c97=_0xe13fdf[_0x1c380b(0x20b)],_0x490c97\\x20instanceof\\x20_0x4fe1a3?_0x490c97:new\\x20_0x4fe1a3(function(_0x1e97db){_0x1e97db(_0x490c97);}))[\\x27then\\x27](_0x5d414c,_0xc9a736);}_0x4f17a8((_0x136fb3=_0x136fb3[_0x3b6e2a(0x213)](_0x24e3c5,_0x126399||[]))[\\x27next\\x27]());});};Object[_0x3e9dc3(0x2c5)](_0x3c3dec,_0x3e9dc3(0x2e1),{\\x27value\\x27:!0x0}),_0x3c3dec[_0x3e9dc3(0x2f1)]=void\\x200x0;const\\x20_0x2e56f3=_0x5ca640(0x126),_0x30fc89=_0x5ca640(0x349);_0x3c3dec[_0x3e9dc3(0x2f1)]=new\\x20class{constructor(){const\\x20_0xdcef22=_0x3e9dc3;this[_0xdcef22(0x2b1)]=\\x27\\x27,this[_0xdcef22(0x3d9)]=_0xdcef22(0x249),this[_0xdcef22(0x27e)]=[],this[_0xdcef22(0x239)]=!0x1;let\\x20_0x3f2714=_0xdcef22(0x249);_0xdcef22(0x288)!=typeof\\x20WorkerGlobalScope?_0x3f2714=_0xdcef22(0x3ae):_0xdcef22(0x288)!=typeof\\x20AudioWorkletProcessor&&(_0x3f2714=_0xdcef22(0x2da)),this[_0xdcef22(0x3d9)]=_0x3f2714;}[_0x3e9dc3(0x392)](_0x551684=!0x1){this[\\x27debugLogs\\x27]=_0x551684;}[_0x3e9dc3(0x265)](_0x1f2192){const\\x20_0x53b09c=_0x3e9dc3;this[_0x53b09c(0x247)]=_0x1f2192;}[\\x27info\\x27](..._0x5e16c4){const\\x20_0x4e38e9=_0x3e9dc3;this[_0x4e38e9(0x239)]&&(this[_0x4e38e9(0x2ba)](\\x27I\\x27,_0x5e16c4[_0x4e38e9(0x3bc)](\\x27\\x5cx09\\x27)),console[\\x27info\\x27](_0x4e38e9(0x34b),..._0x5e16c4));}[\\x27warn\\x27](..._0xfdf580){const\\x20_0x32379b=_0x3e9dc3;this[_0x32379b(0x239)]&&this[_0x32379b(0x2ba)](\\x27W\\x27,_0xfdf580[_0x32379b(0x3bc)](\\x27\\x5cx09\\x27)),console[_0x32379b(0x3ad)](\\x27KrispSDK\\x5cx20-\\x27,..._0xfdf580);}[_0x3e9dc3(0x379)](..._0x2b082e){const\\x20_0x46a949=_0x3e9dc3;this[\\x27debugLogs\\x27]&&this[_0x46a949(0x2ba)](\\x27E\\x27,_0x2b082e[_0x46a949(0x3bc)](\\x27\\x5cx09\\x27)),console[_0x46a949(0x379)](_0x46a949(0x34b),..._0x2b082e);}[_0x3e9dc3(0x386)](..._0x4c79f8){const\\x20_0x2a9fd1=_0x3e9dc3;this[\\x27debugLogs\\x27]&&(this[\\x27postLog\\x27](\\x27I\\x27,_0x4c79f8[\\x27join\\x27](\\x27\\x5cx09\\x27)),console[_0x2a9fd1(0x386)](_0x2a9fd1(0x34b),..._0x4c79f8));}[_0x3e9dc3(0x37f)](_0xe75395){const\\x20_0x260833=_0x3e9dc3;this[_0x260833(0x203)](_0x260833(0x2e0),_0xe75395);}[_0x3e9dc3(0x2b5)](_0x3c04fd){const\\x20_0x37fc31=_0x3e9dc3;this[_0x37fc31(0x203)](_0x37fc31(0x223),_0x3c04fd);}[_0x3e9dc3(0x297)](_0x11ed87,_0x18a651){const\\x20_0x270cdd=_0x3e9dc3,_0x841bc4={\\x27channel\\x27:new\\x20MessageChannel(),\\x27recorder\\x27:void\\x200x0,\\x27startedAt\\x27:new\\x20Date(),\\x27options\\x27:_0x18a651};_0x11ed87\\x20instanceof\\x20MessagePort&&(_0x841bc4[_0x270cdd(0x3d4)]=new\\x20_0x30fc89[\\x27DebugRecorder\\x27](_0x18a651[_0x270cdd(0x34f)])),_0x11ed87\\x20instanceof\\x20Window?this[\\x27logPort\\x27]=_0x841bc4[\\x27channel\\x27][_0x270cdd(0x218)]:_0x11ed87[_0x270cdd(0x204)]({\\x27event\\x27:_0x270cdd(0x27f),\\x27data\\x27:void\\x200x0},[_0x841bc4[\\x27channel\\x27][_0x270cdd(0x218)]]),_0x841bc4[_0x270cdd(0x31e)][_0x270cdd(0x311)][_0x270cdd(0x255)](_0x270cdd(0x3e7),_0x4791a4=>{const\\x20_0x3b0a32=_0x270cdd;var\\x20_0x18968b,_0x5c7730;_0x3b0a32(0x3c9)==typeof\\x20_0x4791a4[_0x3b0a32(0x2f8)]?this[_0x3b0a32(0x2b1)]+=_0x4791a4[_0x3b0a32(0x2f8)]:_0x841bc4[_0x3b0a32(0x3d4)]&&_0x3b0a32(0x2e0)===(null===(_0x18968b=_0x4791a4[_0x3b0a32(0x2f8)])||void\\x200x0===_0x18968b?void\\x200x0:_0x18968b[\\x27event\\x27])?_0x841bc4[\\x27recorder\\x27][\\x27pushInput\\x27](_0x4791a4[_0x3b0a32(0x2f8)][_0x3b0a32(0x2f8)]):_0x841bc4[_0x3b0a32(0x3d4)]&&\\x27LOG_OUTPUT_AUDIO\\x27===(null===(_0x5c7730=_0x4791a4[_0x3b0a32(0x2f8)])||void\\x200x0===_0x5c7730?void\\x200x0:_0x5c7730[_0x3b0a32(0x2e7)])&&_0x841bc4[_0x3b0a32(0x3d4)][_0x3b0a32(0x259)](_0x4791a4[_0x3b0a32(0x2f8)][_0x3b0a32(0x2f8)]);}),this[\\x27instances\\x27][\\x27push\\x27](_0x841bc4),_0x841bc4[\\x27channel\\x27][_0x270cdd(0x311)][\\x27start\\x27]();}[_0x3e9dc3(0x337)](){return\\x20_0x1d4c4d(this,void\\x200x0,void\\x200x0,function*(){const\\x20_0x663dce=a0_0x1cfe;try{const\\x20_0x377700=[];for(let\\x20_0x37f1b2\\x20in\\x20this[_0x663dce(0x27e)]){const\\x20_0x570784=this[_0x663dce(0x27e)][_0x37f1b2];if(_0x570784[\\x27recorder\\x27]){const\\x20{input:_0x9044d0,output:_0x4fd788}=_0x570784[_0x663dce(0x3d4)][_0x663dce(0x281)]();_0x377700[_0x663dce(0x3cf)](_0x663dce(0x25d)+_0x570784[_0x663dce(0x2ac)]+_0x663dce(0x27c)+_0x37f1b2+_0x663dce(0x363)+(yield(0x0,_0x2e56f3[\\x27blobToBase64\\x27])(_0x9044d0))+_0x663dce(0x2f3)+_0x37f1b2+_0x663dce(0x363)+(yield(0x0,_0x2e56f3[_0x663dce(0x3d7)])(_0x4fd788))+_0x663dce(0x28a));}}const\\x20_0xd08c8f=_0x663dce(0x23e)+_0x377700+_0x663dce(0x22d)+this[_0x663dce(0x2b1)]+_0x663dce(0x370);return(0x0,_0x2e56f3[\\x27downloadBlob\\x27])(_0x663dce(0x1fe)+new\\x20Date()[_0x663dce(0x2f5)]()+_0x663dce(0x38e),new\\x20Blob([_0xd08c8f],{\\x27type\\x27:\\x27text/html\\x27})),!0x0;}catch(_0x229775){return\\x20console[_0x663dce(0x379)](_0x663dce(0x333)),!0x1;}});}[_0x3e9dc3(0x203)](_0x526579,_0x186a1d){const\\x20_0x1811ae=_0x3e9dc3;if(this[_0x1811ae(0x239)]&&this[\\x27logPort\\x27]){const\\x20_0x275673=new\\x20Float32Array(_0x186a1d[\\x27length\\x27]);_0x275673[\\x27set\\x27](_0x186a1d,0x0),this[_0x1811ae(0x247)][_0x1811ae(0x204)]({\\x27event\\x27:_0x526579,\\x27data\\x27:_0x275673},[_0x275673[\\x27buffer\\x27]]);}}[\\x27postLog\\x27](_0x3623a4,_0x3c5ffe){const\\x20_0x59d651=_0x3e9dc3,_0x5b8c92=\\x27[\\x27+new\\x20Date()[_0x59d651(0x22e)]()+\\x27][\\x27+this[_0x59d651(0x3d9)]+\\x27][\\x27+_0x3623a4+\\x27]:\\x5cx20\\x27+_0x3c5ffe+\\x27\\x5cx0a\\x27;if(!this[_0x59d651(0x247)])return\\x20console[_0x59d651(0x379)](_0x59d651(0x34b),_0x59d651(0x2cc),_0x5b8c92);this[_0x59d651(0x247)][\\x27postMessage\\x27](_0x5b8c92);}}();},0xa:(_0x35317b,_0x3a28a5,_0x6dad13)=>{const\\x20_0x217d3c=a0_0x1cfe;Object[_0x217d3c(0x2c5)](_0x3a28a5,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x3a28a5[_0x217d3c(0x234)]=void\\x200x0;const\\x20_0x5927f8=_0x6dad13(0x2ce),_0x34df62={\\x27READ_INDEX\\x27:0x0,\\x27WRITE_INDEX\\x27:0x1};class\\x20_0x59e67a{constructor(_0x4e19a3,_0x2b6674=0x1){const\\x20_0xe0e41b=_0x217d3c;this[\\x27_channelData\\x27]=[],this[_0xe0e41b(0x2a7)]=_0x2b6674,this[_0xe0e41b(0x2bc)]=new\\x20Uint32Array(new\\x20SharedArrayBuffer(Object[\\x27keys\\x27](_0x34df62)[_0xe0e41b(0x3c0)]*Uint32Array[\\x27BYTES_PER_ELEMENT\\x27])),this[\\x27_bufferLength\\x27]=_0x4e19a3+0x1;for(let\\x20_0x10a0cb=0x0;_0x10a0cb<_0x2b6674;_0x10a0cb++)this[_0xe0e41b(0x312)][_0xe0e41b(0x3cf)](new\\x20Float32Array(new\\x20SharedArrayBuffer(this[_0xe0e41b(0x211)]*Float32Array[\\x27BYTES_PER_ELEMENT\\x27])));}static[_0x217d3c(0x2d9)](_0x29038b){const\\x20_0x591567=_0x217d3c;return\\x20Object[_0x591567(0x387)](_0x29038b,_0x59e67a[_0x591567(0x21f)]);}[_0x217d3c(0x3cf)](_0x1c3d22,_0x4d33bc){const\\x20_0x27be42=_0x217d3c,_0x1a0c97=Atomics[_0x27be42(0x3ea)](this[_0x27be42(0x2bc)],_0x34df62[_0x27be42(0x23c)]),_0xdb26ca=Atomics[_0x27be42(0x3ea)](this[\\x27_state\\x27],_0x34df62[\\x27WRITE_INDEX\\x27]);if(this[_0x27be42(0x24d)](_0x1a0c97,_0xdb26ca)<_0x4d33bc)return!0x1;let\\x20_0x2665b9=_0xdb26ca+_0x4d33bc;if(this[\\x27_bufferLength\\x27]<_0x2665b9){_0x2665b9-=this[\\x27_bufferLength\\x27];for(let\\x20_0x366c58=0x0;_0x366c58<this[_0x27be42(0x2a7)];_0x366c58++){const\\x20_0xeaebec=this[_0x27be42(0x312)][_0x366c58][_0x27be42(0x36d)](_0xdb26ca),_0x1fbfe8=this[_0x27be42(0x312)][_0x366c58][\\x27subarray\\x27](0x0,_0x2665b9);_0xeaebec[_0x27be42(0x361)](_0x1c3d22[_0x366c58][_0x27be42(0x36d)](0x0,_0xeaebec[_0x27be42(0x3c0)])),_0x1fbfe8[_0x27be42(0x361)](_0x1c3d22[_0x366c58][_0x27be42(0x36d)](_0xeaebec[_0x27be42(0x3c0)]));}}else{for(let\\x20_0x593d4b=0x0;_0x593d4b<this[\\x27_channelCount\\x27];_0x593d4b++)this[_0x27be42(0x312)][_0x593d4b][\\x27subarray\\x27](_0xdb26ca,_0x2665b9)[_0x27be42(0x361)](_0x1c3d22[_0x593d4b][\\x27subarray\\x27](0x0,_0x4d33bc));_0x2665b9===this[_0x27be42(0x211)]&&(_0x2665b9=0x0);}return\\x20Atomics[\\x27store\\x27](this[_0x27be42(0x2bc)],_0x34df62[_0x27be42(0x3da)],_0x2665b9),!0x0;}[_0x217d3c(0x2b4)](_0x28d2de,_0x3a840c){const\\x20_0x38296d=_0x217d3c,_0x57051b=Atomics[_0x38296d(0x3ea)](this[_0x38296d(0x2bc)],_0x34df62[_0x38296d(0x23c)]),_0x4e8c1c=Atomics[_0x38296d(0x3ea)](this[\\x27_state\\x27],_0x34df62[_0x38296d(0x3da)]);if(this[\\x27_getAvailableRead\\x27](_0x57051b,_0x4e8c1c)<_0x3a840c)return!0x1;let\\x20_0x1f2416=_0x57051b+_0x3a840c;if(this[\\x27_bufferLength\\x27]<_0x1f2416){_0x1f2416-=this[\\x27_bufferLength\\x27];for(let\\x20_0x2c6a73=0x0;_0x2c6a73<this[_0x38296d(0x2a7)];_0x2c6a73++){const\\x20_0x497278=this[_0x38296d(0x312)][_0x2c6a73][\\x27subarray\\x27](_0x57051b),_0x5a0c79=this[\\x27_channelData\\x27][_0x2c6a73][_0x38296d(0x36d)](0x0,_0x1f2416);_0x28d2de[_0x2c6a73][_0x38296d(0x361)](_0x497278),_0x28d2de[_0x2c6a73][_0x38296d(0x361)](_0x5a0c79,_0x497278[_0x38296d(0x3c0)]);}}else{for(let\\x20_0x5691db=0x0;_0x5691db<this[_0x38296d(0x2a7)];++_0x5691db)_0x28d2de[_0x5691db][_0x38296d(0x361)](this[\\x27_channelData\\x27][_0x5691db][_0x38296d(0x36d)](_0x57051b,_0x1f2416));_0x1f2416===this[_0x38296d(0x211)]&&(_0x1f2416=0x0);}return\\x20Atomics[_0x38296d(0x34d)](this[_0x38296d(0x2bc)],_0x34df62[_0x38296d(0x23c)],_0x1f2416),!0x0;}[\\x27printAvailableReadAndWrite\\x27](){const\\x20_0x4400ca=_0x217d3c,_0x2692ba=Atomics[_0x4400ca(0x3ea)](this[_0x4400ca(0x2bc)],_0x34df62[\\x27READ_INDEX\\x27]),_0x9e8eca=Atomics[_0x4400ca(0x3ea)](this[_0x4400ca(0x2bc)],_0x34df62[_0x4400ca(0x3da)]);_0x5927f8[_0x4400ca(0x2f1)][_0x4400ca(0x386)](this,{\\x27availableRead\\x27:this[_0x4400ca(0x217)](_0x2692ba,_0x9e8eca),\\x27availableWrite\\x27:this[\\x27_getAvailableWrite\\x27](_0x2692ba,_0x9e8eca)});}[_0x217d3c(0x2f4)](){const\\x20_0x5487ce=_0x217d3c,_0x35c68a=Atomics[_0x5487ce(0x3ea)](this[_0x5487ce(0x2bc)],_0x34df62[_0x5487ce(0x23c)]),_0x236a6d=Atomics[_0x5487ce(0x3ea)](this[\\x27_state\\x27],_0x34df62[_0x5487ce(0x3da)]);return\\x20this[\\x27_getAvailableRead\\x27](_0x35c68a,_0x236a6d);}[_0x217d3c(0x316)](_0x42fb62){const\\x20_0x595d8b=_0x217d3c;return\\x20this[_0x595d8b(0x2f4)]()>=_0x42fb62;}[\\x27getBufferLength\\x27](){const\\x20_0x1e5d10=_0x217d3c;return\\x20this[_0x1e5d10(0x211)]-0x1;}[_0x217d3c(0x24d)](_0xe15001,_0x5378e9){const\\x20_0x57ff90=_0x217d3c;return\\x20_0x5378e9>=_0xe15001?this[_0x57ff90(0x211)]-_0x5378e9+_0xe15001-0x1:_0xe15001-_0x5378e9-0x1;}[_0x217d3c(0x217)](_0x1da4ca,_0x2bd242){const\\x20_0x1228f3=_0x217d3c;return\\x20_0x2bd242>=_0x1da4ca?_0x2bd242-_0x1da4ca:_0x2bd242+this[_0x1228f3(0x211)]-_0x1da4ca;}}_0x3a28a5[_0x217d3c(0x234)]=_0x59e67a;},0x126:function(_0x32d34e,_0x425f04){const\\x20_0x50d447=a0_0x1cfe;var\\x20_0x2b9794=this&&this[_0x50d447(0x278)]||function(_0x27c07f,_0x65cc5a,_0x146fde,_0x3fed3a){return\\x20new(_0x146fde||(_0x146fde=Promise))(function(_0x98b19a,_0x27aa4f){const\\x20_0xc20d53=a0_0x1cfe;function\\x20_0xfaea97(_0x1ef552){try{_0x7f4fec(_0x3fed3a[\\x27next\\x27](_0x1ef552));}catch(_0x4692c7){_0x27aa4f(_0x4692c7);}}function\\x20_0x14dd2c(_0x6c858e){const\\x20_0x9264cb=a0_0x1cfe;try{_0x7f4fec(_0x3fed3a[_0x9264cb(0x216)](_0x6c858e));}catch(_0x428f8d){_0x27aa4f(_0x428f8d);}}function\\x20_0x7f4fec(_0x36b6d0){const\\x20_0x10d75f=a0_0x1cfe;var\\x20_0x4fbf53;_0x36b6d0[_0x10d75f(0x391)]?_0x98b19a(_0x36b6d0[_0x10d75f(0x20b)]):(_0x4fbf53=_0x36b6d0[\\x27value\\x27],_0x4fbf53\\x20instanceof\\x20_0x146fde?_0x4fbf53:new\\x20_0x146fde(function(_0x1b7caf){_0x1b7caf(_0x4fbf53);}))[_0x10d75f(0x309)](_0xfaea97,_0x14dd2c);}_0x7f4fec((_0x3fed3a=_0x3fed3a[\\x27apply\\x27](_0x27c07f,_0x65cc5a||[]))[_0xc20d53(0x348)]());});};Object[_0x50d447(0x2c5)](_0x425f04,_0x50d447(0x2e1),{\\x27value\\x27:!0x0}),_0x425f04[_0x50d447(0x2a3)]=_0x425f04[_0x50d447(0x304)]=_0x425f04[_0x50d447(0x3d7)]=void\\x200x0,_0x425f04[_0x50d447(0x3d7)]=function(_0x31ac90){return\\x20_0x2b9794(this,void\\x200x0,void\\x200x0,function*(){return\\x20new\\x20Promise((_0x55f3ef,_0x2a9c9e)=>{const\\x20_0x3f43c4=a0_0x1cfe,_0x4e25a5=new\\x20FileReader();_0x4e25a5[\\x27onloadend\\x27]=()=>_0x55f3ef(_0x4e25a5[_0x3f43c4(0x2c8)]),_0x4e25a5[_0x3f43c4(0x298)](_0x31ac90);});});},_0x425f04[\\x27downloadBlob\\x27]=function(_0x54c73c,_0x56c05b){const\\x20_0x533cbd=_0x50d447,_0x244343=window[\\x27URL\\x27][\\x27createObjectURL\\x27](_0x56c05b),_0x4feb0b=document[_0x533cbd(0x3ac)](\\x27a\\x27);_0x4feb0b[_0x533cbd(0x3d5)]=_0x244343,_0x4feb0b[_0x533cbd(0x263)]=_0x54c73c||_0x533cbd(0x39c),_0x4feb0b[\\x27click\\x27]();},_0x425f04[_0x50d447(0x2a3)]=function(_0x4bc502,_0x181d8f){const\\x20_0x4f5e2d=_0x50d447;if(!_0x4bc502[_0x4f5e2d(0x3c0)])return\\x20new\\x20Blob([],{\\x27type\\x27:_0x4f5e2d(0x367)});const\\x20_0xe27d9c=_0x4bc502[0x0][_0x4f5e2d(0x3c0)],_0x40c6f9=new\\x20Float32Array(_0xe27d9c*_0x4bc502[\\x27length\\x27]);_0x4bc502[_0x4f5e2d(0x2a9)]((_0x3c8b24,_0x5d4007)=>{const\\x20_0x535200=_0x4f5e2d;_0x40c6f9[_0x535200(0x361)](_0x3c8b24,_0x5d4007*_0xe27d9c);});const\\x20_0x3663fb=function(_0x207403,_0x3f1efe){const\\x20_0x2520c9=_0x4f5e2d,_0x587144=_0x3f1efe[_0x2520c9(0x388)]?Float32Array:Uint16Array,_0x520525=_0x207403[\\x27byteLength\\x27]/_0x587144[\\x27BYTES_PER_ELEMENT\\x27],_0x5383ca=function(_0x11c344){const\\x20_0x3f0c9b=_0x2520c9,_0x5440f4=_0x11c344[_0x3f0c9b(0x3e2)],_0x8c0c0d=_0x11c344[_0x3f0c9b(0x20a)]||0x2,_0x134949=_0x11c344[\\x27isFloat\\x27]?0x4:0x2,_0x2e608f=_0x11c344[_0x3f0c9b(0x388)]?0x3:0x1,_0x1c855a=_0x11c344[_0x3f0c9b(0x34f)],_0x50ad79=_0x8c0c0d*_0x134949,_0x2952f8=_0x1c855a*_0x50ad79,_0x3528a2=_0x5440f4*_0x50ad79,_0x317392=new\\x20ArrayBuffer(0x2c),_0x4f9ed3=new\\x20DataView(_0x317392);let\\x20_0x4878c4=0x0;function\\x20_0x5bfd10(_0x5a8801){const\\x20_0x241905=_0x3f0c9b;for(let\\x20_0x5c18ce=0x0;_0x5c18ce<_0x5a8801[\\x27length\\x27];_0x5c18ce++)_0x4f9ed3[_0x241905(0x389)](_0x4878c4+_0x5c18ce,_0x5a8801[_0x241905(0x2fa)](_0x5c18ce));_0x4878c4+=_0x5a8801[_0x241905(0x3c0)];}function\\x20_0xd5fbbb(_0x6f7b5c){const\\x20_0x4b877b=_0x3f0c9b;_0x4f9ed3[_0x4b877b(0x2dd)](_0x4878c4,_0x6f7b5c,!0x0),_0x4878c4+=0x4;}function\\x20_0x25d5ed(_0x2b2a6d){const\\x20_0xcd71b4=_0x3f0c9b;_0x4f9ed3[_0xcd71b4(0x33a)](_0x4878c4,_0x2b2a6d,!0x0),_0x4878c4+=0x2;}return\\x20_0x5bfd10(_0x3f0c9b(0x3a3)),_0xd5fbbb(_0x3528a2+0x24),_0x5bfd10(_0x3f0c9b(0x2c7)),_0x5bfd10(\\x27fmt\\x5cx20\\x27),_0xd5fbbb(0x10),_0x25d5ed(_0x2e608f),_0x25d5ed(_0x8c0c0d),_0xd5fbbb(_0x1c855a),_0xd5fbbb(_0x2952f8),_0x25d5ed(_0x50ad79),_0x25d5ed(0x8*_0x134949),_0x5bfd10(_0x3f0c9b(0x2f8)),_0xd5fbbb(_0x3528a2),new\\x20Uint8Array(_0x317392);}(Object[_0x2520c9(0x321)]({},_0x3f1efe,{\\x27numFrames\\x27:_0x520525})),_0x4240aa=new\\x20Uint8Array(_0x5383ca[_0x2520c9(0x3c0)]+_0x207403[_0x2520c9(0x362)]);return\\x20_0x4240aa[\\x27set\\x27](_0x5383ca,0x0),_0x4240aa[_0x2520c9(0x361)](new\\x20Uint8Array(_0x207403),_0x5383ca[_0x2520c9(0x3c0)]),_0x4240aa;}(_0x40c6f9[_0x4f5e2d(0x296)],{\\x27isFloat\\x27:!0x0,\\x27numChannels\\x27:0x1,\\x27sampleRate\\x27:_0x181d8f});return\\x20new\\x20Blob([_0x3663fb],{\\x27type\\x27:_0x4f5e2d(0x2ad)});};},0x15c:(_0x30d871,_0x237511,_0x3ae9e5)=>{const\\x20_0x5a67d1=a0_0x1cfe;Object[_0x5a67d1(0x2c5)](_0x237511,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x237511[_0x5a67d1(0x29c)]=_0x237511[_0x5a67d1(0x20c)]=void\\x200x0;const\\x20_0x6a62b6=_0x3ae9e5(0xa),_0x147cdd=_0x3ae9e5(0x29a);_0x237511[\\x27STATE\\x27]={\\x27REQUEST_NOISE_CANCELLATION\\x27:0x0},_0x237511[\\x27createSharedBuffers\\x27]=function(_0x5aad25){const\\x20_0x3d6f5c=_0x5a67d1,_0xa7169b=0x2*_0x147cdd[_0x3d6f5c(0x355)]*_0x5aad25[_0x3d6f5c(0x34f)]/0x3e8*_0x147cdd[_0x3d6f5c(0x33c)];return{\\x27inputRingBuffer\\x27:new\\x20_0x6a62b6[(_0x3d6f5c(0x234))](_0xa7169b,_0x5aad25[_0x3d6f5c(0x290)]||0x1),\\x27outputRingBuffer\\x27:new\\x20_0x6a62b6[\\x27SharedRingBuffer\\x27](_0xa7169b,_0x5aad25[_0x3d6f5c(0x290)]||0x1),\\x27atomicState\\x27:new\\x20Int32Array(new\\x20SharedArrayBuffer(Object[_0x3d6f5c(0x3a2)](_0x237511[_0x3d6f5c(0x20c)])[_0x3d6f5c(0x3c0)]*Int32Array[_0x3d6f5c(0x207)]))};};},0x29a:(_0x4e762e,_0x1a6b04)=>{const\\x20_0x5adb80=a0_0x1cfe;Object[_0x5adb80(0x2c5)](_0x1a6b04,\\x27__esModule\\x27,{\\x27value\\x27:!0x0}),_0x1a6b04[_0x5adb80(0x1f5)]=_0x1a6b04[_0x5adb80(0x208)]=_0x1a6b04[\\x27MIN_BVC_SUPPORT_SAMPLE_RATE\\x27]=_0x1a6b04[_0x5adb80(0x39e)]=_0x1a6b04[_0x5adb80(0x343)]=_0x1a6b04[\\x27SDK_FRAME_DURATION_10MS\\x27]=_0x1a6b04[_0x5adb80(0x2be)]=_0x1a6b04[\\x27BUFFER_DROP_KEEP_MS\\x27]=_0x1a6b04[_0x5adb80(0x221)]=_0x1a6b04[_0x5adb80(0x2ed)]=_0x1a6b04[_0x5adb80(0x33c)]=void\\x200x0,_0x1a6b04[_0x5adb80(0x33c)]=0x80,_0x1a6b04[\\x27WORKLET_PROCESSOR_NAME\\x27]=_0x5adb80(0x36c),_0x1a6b04[_0x5adb80(0x221)]=0x1f4,_0x1a6b04[\\x27BUFFER_DROP_KEEP_MS\\x27]=0x28,_0x1a6b04[_0x5adb80(0x2be)]=0xc8,_0x1a6b04[\\x27SDK_FRAME_DURATION_10MS\\x27]=0xa,_0x1a6b04[\\x27SUPPORTED_SAMPLE_RATES\\x27]=[0x1f40,0x3e80,0x5dc0,0x7d00,0xac44,0xbb80,0x15888,0x17700],_0x1a6b04[\\x27SUPPORTED_INBOUND_SAMPLE_RATES\\x27]=[0x1f40],_0x1a6b04[_0x5adb80(0x2ff)]=0x3e80,_0x1a6b04[_0x5adb80(0x208)]=[],_0x1a6b04[_0x5adb80(0x1f5)]=[\\x27macbook\\x5cx20pro\\x27,_0x5adb80(0x398),\\x27echo\\x5cx20dot\\x27,\\x27srs-xb\\x27,_0x5adb80(0x3a9),\\x27soundflower\\x27,_0x5adb80(0x3a7),_0x5adb80(0x2d5),_0x5adb80(0x2b0),_0x5adb80(0x324),\\x27jabra\\x5cx20speak\\x5cx20\\x27,_0x5adb80(0x300),_0x5adb80(0x35e),_0x5adb80(0x394),_0x5adb80(0x31c),_0x5adb80(0x1f8),_0x5adb80(0x24c),_0x5adb80(0x313),\\x27elgato\\x5cx20wave\\x27,\\x27rode\\x5cx20nt-usb\\x27,_0x5adb80(0x3be),\\x27hyperx\\x5cx20quadcast\\x27,_0x5adb80(0x30a),_0x5adb80(0x2c6),_0x5adb80(0x22a),\\x27gamedac\\x27,_0x5adb80(0x35a),\\x27axcs\\x5cx20speaker\\x27,_0x5adb80(0x2cf),_0x5adb80(0x347),\\x27conferencecam\\x27,_0x5adb80(0x2a6),_0x5adb80(0x283),_0x5adb80(0x2cd),_0x5adb80(0x345),\\x27cam\\x5cx20sync\\x5cx201080p\\x27,\\x27logi\\x5cx20group\\x5cx20speakerphone\\x27,_0x5adb80(0x335),_0x5adb80(0x242),_0x5adb80(0x21c),_0x5adb80(0x34a),_0x5adb80(0x2c0),_0x5adb80(0x2b7),\\x27stf\\x5cx20coloso\\x27,_0x5adb80(0x3d1),_0x5adb80(0x2d6),_0x5adb80(0x275),_0x5adb80(0x359),_0x5adb80(0x3ce),_0x5adb80(0x397),_0x5adb80(0x23a),_0x5adb80(0x3dc),\\x27edifier\\x5cx20luna\\x5cx20eclipse\\x27,\\x27edifier\\x5cx20m1370bt\\x27,\\x27edifier\\x5cx20mp120\\x27,_0x5adb80(0x295),_0x5adb80(0x366),_0x5adb80(0x238),_0x5adb80(0x32c),\\x27emeet\\x27,_0x5adb80(0x270),_0x5adb80(0x267),\\x27eneby20\\x27,_0x5adb80(0x262),_0x5adb80(0x27a),_0x5adb80(0x3c5),\\x27rode\\x5cx20podcaster\\x27,_0x5adb80(0x315),_0x5adb80(0x258),\\x27sb\\x5cx20katana\\x27,_0x5adb80(0x39d),_0x5adb80(0x2b9),\\x27thronmax\\x5cx20mdrill\\x5cx20\\x27,_0x5adb80(0x325),_0x5adb80(0x38d),_0x5adb80(0x26f),\\x27room\\x5cx20kit\\x5cx20mini\\x5cx20digital\\x5cx20audio\\x27,_0x5adb80(0x2ee),_0x5adb80(0x243),\\x27razer\\x5cx20base\\x5cx20station\\x5cx20v2\\x5cx20chroma\\x27,_0x5adb80(0x29f),_0x5adb80(0x2f6),_0x5adb80(0x381),_0x5adb80(0x351),\\x27obsbot\\x5cx20tiny\\x5cx20audio\\x27,_0x5adb80(0x334),_0x5adb80(0x3a6),_0x5adb80(0x2d2),_0x5adb80(0x2d0),_0x5adb80(0x2f9),_0x5adb80(0x33d),\\x27jbl\\x5cx20charge\\x27,_0x5adb80(0x2a4),_0x5adb80(0x2e6),\\x27room\\x5cx20speakerphone\\x27,_0x5adb80(0x299),_0x5adb80(0x26a),_0x5adb80(0x3b7),_0x5adb80(0x1f6),_0x5adb80(0x320),_0x5adb80(0x2a2),_0x5adb80(0x3d0),\\x27spark\\x5cx2040\\x5cx20usb\\x27,\\x27speechmike\\x5cx20iii\\x27,_0x5adb80(0x32b),_0x5adb80(0x22f),_0x5adb80(0x266),_0x5adb80(0x1fb),_0x5adb80(0x39f),\\x27akg\\x5cx20s30\\x27,_0x5adb80(0x261),\\x27dm-40bt\\x27,_0x5adb80(0x2fb),_0x5adb80(0x251),_0x5adb80(0x302),_0x5adb80(0x38a),_0x5adb80(0x37c),_0x5adb80(0x3e8),_0x5adb80(0x372),_0x5adb80(0x3e1),_0x5adb80(0x346),_0x5adb80(0x339),\\x27ready\\x5cx20elite\\x27,_0x5adb80(0x3d2),_0x5adb80(0x273),_0x5adb80(0x2c4),_0x5adb80(0x2d7),\\x27yoyo\\x27,_0x5adb80(0x360),_0x5adb80(0x294),_0x5adb80(0x21b),_0x5adb80(0x2aa),_0x5adb80(0x252),_0x5adb80(0x399),\\x27behringer\\x5cx20mpa40bt\\x5cx20pro\\x27,_0x5adb80(0x24e),\\x27belkin\\x5cx20\\x27,_0x5adb80(0x350),_0x5adb80(0x233),\\x27bose\\x5cx20solo\\x27,_0x5adb80(0x3b1),_0x5adb80(0x244),_0x5adb80(0x2a5),\\x27at2005usb\\x27,_0x5adb80(0x256),_0x5adb80(0x2e5),_0x5adb80(0x284),\\x27chat\\x5cx20150\\x27,_0x5adb80(0x3df),\\x27edifier\\x5cx20s880db\\x27,_0x5adb80(0x374),_0x5adb80(0x230),_0x5adb80(0x22c),\\x27jbl\\x5cx20clip\\x5cx20\\x27,_0x5adb80(0x292),_0x5adb80(0x228),_0x5adb80(0x22b),_0x5adb80(0x301),\\x27mi\\x5cx20portable\\x5cx20bluetooth\\x5cx20speaker\\x27,_0x5adb80(0x36b),_0x5adb80(0x269),\\x27sk010\\x27,_0x5adb80(0x240),_0x5adb80(0x33f),_0x5adb80(0x264),_0x5adb80(0x2c1),\\x27ziisound\\x5cx20d5\\x27,_0x5adb80(0x229),_0x5adb80(0x2eb),\\x27vivan\\x5cx20vs12\\x27,_0x5adb80(0x2a1),_0x5adb80(0x2e2),_0x5adb80(0x395),_0x5adb80(0x341),\\x27logic\\x5cx20sp2\\x27,_0x5adb80(0x3b4),_0x5adb80(0x3c1),_0x5adb80(0x30f),_0x5adb80(0x3a0),_0x5adb80(0x250),_0x5adb80(0x329),_0x5adb80(0x3b8),_0x5adb80(0x3bb),_0x5adb80(0x2af),\\x27wireless\\x5cx20controller\\x27,_0x5adb80(0x2a8),_0x5adb80(0x246),\\x27pc-lm1e\\x27,\\x27ak5370\\x27,_0x5adb80(0x214),_0x5adb80(0x393),_0x5adb80(0x39b),\\x27boom\\x5cx203\\x27,_0x5adb80(0x2b2),\\x27logi\\x5cx20mx\\x5cx20sound\\x27,\\x27sennheiser\\x5cx20sp\\x5cx2020\\x5cx20for\\x5cx20lync\\x27,_0x5adb80(0x3e9),\\x27soundsticks\\x27,_0x5adb80(0x336),_0x5adb80(0x205),_0x5adb80(0x38b),_0x5adb80(0x285),_0x5adb80(0x282),\\x27logi\\x5cx20rally\\x5cx20bar\\x5cx20mini\\x5cx20audio\\x27,_0x5adb80(0x36e),_0x5adb80(0x37d),\\x27sennheiser\\x5cx20xs\\x5cx20lav\\x5cx20usb-c\\x27,_0x5adb80(0x3b3),_0x5adb80(0x35d),_0x5adb80(0x3cb),\\x27klim\\x5cx20talk\\x27,_0x5adb80(0x3de),\\x27zv-e10\\x27,_0x5adb80(0x215),_0x5adb80(0x331),_0x5adb80(0x257),_0x5adb80(0x382),_0x5adb80(0x332),_0x5adb80(0x210),_0x5adb80(0x28c),\\x27hk\\x5cx20onyx\\x5cx20studio\\x27,\\x27hk\\x5cx20esquire\\x5cx20mini\\x27,_0x5adb80(0x220),_0x5adb80(0x3a5),_0x5adb80(0x2fc),\\x27huawei\\x5cx20sound\\x5cx20joy-14974\\x27,_0x5adb80(0x291),_0x5adb80(0x29d),_0x5adb80(0x2ce),_0x5adb80(0x31b),\\x27mu900\\x27,_0x5adb80(0x277),_0x5adb80(0x322),_0x5adb80(0x279),_0x5adb80(0x28b),_0x5adb80(0x2ae),_0x5adb80(0x293),_0x5adb80(0x2ef),_0x5adb80(0x3bf),_0x5adb80(0x27d),_0x5adb80(0x376),_0x5adb80(0x2ab),_0x5adb80(0x344),_0x5adb80(0x268),_0x5adb80(0x328),\\x27edifier\\x5cx20s880\\x27,\\x27bedroom\\x5cx20speaker\\x27,_0x5adb80(0x352),_0x5adb80(0x1ff),_0x5adb80(0x2e3),_0x5adb80(0x235),_0x5adb80(0x36a),_0x5adb80(0x2de),_0x5adb80(0x248),_0x5adb80(0x2e8),_0x5adb80(0x2ea),\\x27lg\\x5cx20sh5(58)\\x27,_0x5adb80(0x254),_0x5adb80(0x30c),_0x5adb80(0x327),_0x5adb80(0x383),\\x27dell\\x5cx20speakerphone\\x5cx20sp3022\\x27,\\x27ian\\x5cx20layugan\u2019s\\x5cx20double\\x5cx20chill\\x5cx20speaker\\x27,\\x27impulse\\x27,_0x5adb80(0x30b),_0x5adb80(0x2b8),_0x5adb80(0x227),\\x27mifa_a1\\x27,_0x5adb80(0x26c),_0x5adb80(0x3db),_0x5adb80(0x371),_0x5adb80(0x3e6),_0x5adb80(0x31f),_0x5adb80(0x3b0),_0x5adb80(0x368),_0x5adb80(0x226),\\x27sdh-201\\x27,_0x5adb80(0x3ab),\\x27sony:srs-x5\\x27,_0x5adb80(0x3d3),\\x27spa4040b\\x27,\\x27sembrandt\\x5cx20ms200\\x27,_0x5adb80(0x237),_0x5adb80(0x201),_0x5adb80(0x32f),_0x5adb80(0x364),_0x5adb80(0x330),_0x5adb80(0x3b5),\\x27iloud\\x5cx20micro-monitor\\x27,_0x5adb80(0x2f7),_0x5adb80(0x2b6),_0x5adb80(0x2bb),_0x5adb80(0x1f4),_0x5adb80(0x318),_0x5adb80(0x231),_0x5adb80(0x260),_0x5adb80(0x385),_0x5adb80(0x38c),_0x5adb80(0x375),\\x27vipex\\x5cx20vx-sk001\\x27,_0x5adb80(0x25a),\\x27wba31\\x27,_0x5adb80(0x35c),_0x5adb80(0x373),_0x5adb80(0x25c),_0x5adb80(0x28e),_0x5adb80(0x2a0),_0x5adb80(0x1f7),\\x27blue\\x5cx20eyeball\\x5cx202.0\\x27,_0x5adb80(0x3c8),_0x5adb80(0x3a1),_0x5adb80(0x2dc),\\x27t27hv-20\\x27,\\x27anua\\x5cx20mic\\x5cx20cm\\x5cx20900\\x27,_0x5adb80(0x274),\\x27beoplay\\x5cx20a\\x27,\\x27beosound\\x5cx20a\\x27,_0x5adb80(0x219),_0x5adb80(0x36f),_0x5adb80(0x3ba),\\x27cybertrack\\x5cx20h6\\x27,_0x5adb80(0x21e),_0x5adb80(0x31d),_0x5adb80(0x29b),_0x5adb80(0x396),_0x5adb80(0x305),_0x5adb80(0x287),\\x27razer\\x5cx20seiren\\x27,_0x5adb80(0x314),\\x27live\\x5cx20microphone\\x27,_0x5adb80(0x30d),_0x5adb80(0x342),_0x5adb80(0x2bf),_0x5adb80(0x29a),\\x27fifine\\x5cx20k658\\x5cx20microphone\\x27,\\x27fifine\\x5cx20k669\\x5cx20microphone\\x27,_0x5adb80(0x2c2),_0x5adb80(0x3a8),_0x5adb80(0x2d8),_0x5adb80(0x2ca),_0x5adb80(0x24f),_0x5adb80(0x245),\\x27fifine\\x5cx20k690\\x5cx20microphone\\x27,\\x27gxt\\x5cx20258\\x5cx20microphone\\x27,_0x5adb80(0x23b),_0x5adb80(0x3d6),_0x5adb80(0x338),_0x5adb80(0x32e),_0x5adb80(0x3c6),_0x5adb80(0x378),_0x5adb80(0x3cd),_0x5adb80(0x390),\\x27sm950\\x5cx20microphone\\x27,\\x27razer\\x5cx20stargazer-microphone\\x27,_0x5adb80(0x2df),_0x5adb80(0x225),_0x5adb80(0x2cb),\\x27cwc5\\x5cx20microphone\\x27,_0x5adb80(0x1f3),_0x5adb80(0x3c2),_0x5adb80(0x30e),_0x5adb80(0x289),_0x5adb80(0x2c9),\\x27polycom\\x27,\\x27poly\\x5cx20studio\\x27,\\x27live\\x5cx20streamer\\x5cx20cam313\\x5cx20microphone\\x27,_0x5adb80(0x308),\\x27fifine\\x5cx20k670\\x5cx20microphone\\x27,_0x5adb80(0x33b),_0x5adb80(0x38f),_0x5adb80(0x24b),\\x27gxt\\x5cx20244\\x5cx20microphone\\x27,_0x5adb80(0x317),_0x5adb80(0x3d8),_0x5adb80(0x369),_0x5adb80(0x39a),\\x27mobiola\\x5cx20microphone\\x27,_0x5adb80(0x357),\\x27baf-0845\\x27,\\x27emberton\\x27,_0x5adb80(0x35f),\\x27hd\\x5cx20450bt\\x27,\\x27hd\\x5cx20458bt\\x27,_0x5adb80(0x3ca),\\x27srs-xb23\\x27,_0x5adb80(0x37a),\\x27srs-xb43\\x27,\\x27c2422he\\x27,_0x5adb80(0x377),\\x27ugreen-40758e\\x27,\\x27ugreen-70303e\\x27,_0x5adb80(0x3bd),_0x5adb80(0x3cc),_0x5adb80(0x1fa),_0x5adb80(0x26e),_0x5adb80(0x2db),_0x5adb80(0x2d1),_0x5adb80(0x272),_0x5adb80(0x356),_0x5adb80(0x1fd),_0x5adb80(0x354),\\x27taotronics\\x5cx20tt-sk023\\x27,_0x5adb80(0x3c4),_0x5adb80(0x25e),_0x5adb80(0x3e4),_0x5adb80(0x26d),_0x5adb80(0x2d4),\\x27boom2\\x27];},0x1c5:(_0x104e47,_0xbc760f,_0x1c80e7)=>{const\\x20_0x1e90c9=a0_0x1cfe;Object[_0x1e90c9(0x2c5)](_0xbc760f,_0x1e90c9(0x2e1),{\\x27value\\x27:!0x0}),_0xbc760f[_0x1e90c9(0x307)]=void\\x200x0;const\\x20_0x3e4ac5=_0x1c80e7(0x2ce);_0xbc760f[_0x1e90c9(0x307)]=class{constructor(_0x44be1a,_0x1780e4){const\\x20_0x3c286d=_0x1e90c9;this[_0x3c286d(0x32a)]=_0x44be1a,this[_0x3c286d(0x276)]=_0x1780e4,this[\\x27_isReady\\x27]=!0x1,this[_0x3c286d(0x271)]=!0x1,this[_0x3c286d(0x365)]=!0x1,this[_0x3c286d(0x3b2)]=0x0,this[_0x3c286d(0x2ec)]=Date[_0x3c286d(0x340)](),this[\\x27_receivedPackagesCount\\x27]=0x0,this[_0x3c286d(0x349)]=0x0,this[_0x3c286d(0x20d)]=0x0,this[_0x3c286d(0x21a)]=0x0,this[_0x3c286d(0x25b)]={},this[_0x3c286d(0x32a)][_0x3c286d(0x28d)]=this[\\x27_onMessage\\x27][\\x27bind\\x27](this),this[\\x27on\\x27](_0x3c286d(0x2f0),this[_0x3c286d(0x232)]),this[\\x27on\\x27](\\x27SUSPEND\\x27,this[_0x3c286d(0x23d)]),this[\\x27on\\x27](_0x3c286d(0x3ec),this[\\x27resume\\x27]),this[\\x27on\\x27](_0x3c286d(0x27f),this[_0x3c286d(0x265)]),this[\\x27on\\x27](_0x3c286d(0x3aa),this[\\x27setReady\\x27]),_0x3e4ac5[_0x3c286d(0x2f1)][\\x27setOptions\\x27](_0x1780e4[\\x27debugLogs\\x27]);}[\\x27on\\x27](_0x585301,_0x45e34f){const\\x20_0x550086=_0x1e90c9;this[_0x550086(0x25b)][_0x585301]=_0x45e34f;}[_0x1e90c9(0x265)](_0x559a81,_0x332302){const\\x20_0x187d55=_0x1e90c9;_0x3e4ac5[\\x27Logger\\x27][_0x187d55(0x265)](_0x332302[\\x27ports\\x27][0x0]);}[_0x1e90c9(0x3e3)](_0x5a2037){const\\x20_0x216fcf=_0x1e90c9;var\\x20_0xe4fc9;const\\x20{event:_0xb597a,data:_0x3219b4}=_0x5a2037[_0x216fcf(0x2f8)];if(this[\\x27events\\x27][_0xb597a])return\\x20null===(_0xe4fc9=this[_0x216fcf(0x25b)][_0xb597a])||void\\x200x0===_0xe4fc9?void\\x200x0:_0xe4fc9[\\x27call\\x27](this,_0x3219b4,_0x5a2037);_0x3e4ac5[_0x216fcf(0x2f1)][_0x216fcf(0x379)](\\x27AudioProcessor:_onMessage\\x27,_0x216fcf(0x28f),_0x5a2037);}get[\\x27isEnabled\\x27](){const\\x20_0xb834c7=_0x1e90c9;return\\x20this[_0xb834c7(0x365)];}get[_0x1e90c9(0x206)](){return\\x20this[\\x27_suspended\\x27];}get[_0x1e90c9(0x3eb)](){const\\x20_0x480434=_0x1e90c9;return\\x20this[_0x480434(0x241)];}[\\x27toggle\\x27](_0x455c23){const\\x20_0x116d87=_0x1e90c9;this[_0x116d87(0x21a)]=0x0,this[_0x116d87(0x365)]=void\\x200x0===_0x455c23?!this[_0x116d87(0x365)]:_0x455c23;}[_0x1e90c9(0x23d)](){this[\\x27_suspended\\x27]=!0x0;}[_0x1e90c9(0x3af)](){const\\x20_0x2af71a=_0x1e90c9;this[_0x2af71a(0x271)]=!0x1;}[_0x1e90c9(0x3b6)](){const\\x20_0x25bf16=_0x1e90c9;this[_0x25bf16(0x241)]=!0x0;}[\\x27_copyInputToOutput\\x27](_0x1d8f30,_0x27771d){const\\x20_0x23fd17=_0x1e90c9;var\\x20_0x2f220a;if(!(null===(_0x2f220a=_0x1d8f30[0x0])||void\\x200x0===_0x2f220a?void\\x200x0:_0x2f220a[_0x23fd17(0x3c0)]))return!0x0;for(let\\x20_0x1e8448=0x0;_0x1e8448<_0x27771d[0x0][_0x23fd17(0x3c0)];++_0x1e8448)_0x27771d[0x0][_0x1e8448][\\x27set\\x27](_0x1d8f30[0x0][_0x1e8448]);return!0x0;}[\\x27log\\x27](_0x37926e,_0x4a49ff){const\\x20_0x555714=_0x1e90c9,_0x453821=0x3e8*_0x4a49ff/this[_0x555714(0x276)][_0x555714(0x34f)];this[_0x555714(0x276)][_0x555714(0x239)]&&(this[_0x555714(0x3b2)]!=_0x37926e[_0x555714(0x303)][0x0]&&(this[\\x27_previousLogNumber\\x27]=_0x37926e[_0x555714(0x303)][0x0],_0x3e4ac5[_0x555714(0x2f1)][_0x555714(0x3ad)](\\x27AudioProcessor:log\\x27,JSON[_0x555714(0x34e)]({\\x27seconds\\x27:this[_0x555714(0x3b2)],\\x27packagesCount\\x27:this[_0x555714(0x32d)],\\x27bufferDelayMS\\x27:0x3e8*_0x4a49ff/this[_0x555714(0x276)][_0x555714(0x34f)],\\x27maxPackageDelay\\x27:this[_0x555714(0x349)]})),this[_0x555714(0x32d)]=0x0,this[\\x27_maxPackageDelay\\x27]=0x0),this[_0x555714(0x32d)]++,this[_0x555714(0x349)]=Math[_0x555714(0x1fc)](this[_0x555714(0x349)],Date[_0x555714(0x340)]()-this[_0x555714(0x2ec)]),this[_0x555714(0x2ec)]=Date[_0x555714(0x340)]()),_0x453821-this[\\x27_previousReportedDelay\\x27]>=this[_0x555714(0x276)][_0x555714(0x3e0)]&&this[_0x555714(0x29e)](_0x453821,!0x1);}[_0x1e90c9(0x29e)](_0x1a02c1,_0x1a674f=!0x1){const\\x20_0x755e72=_0x1e90c9;this[\\x27_overflowCount\\x27]++,this[_0x755e72(0x21a)]=_0x1a02c1,this[_0x755e72(0x32a)][_0x755e72(0x204)]({\\x27event\\x27:\\x27BUFFER_OVERFLOW\\x27,\\x27data\\x27:{\\x27overflowCount\\x27:this[_0x755e72(0x20d)],\\x27bufferSizeMS\\x27:this[_0x755e72(0x21a)],\\x27isBufferDropped\\x27:_0x1a674f}});}};},0x2a1:function(_0x3d5f88,_0x5b097b,_0x20e27e){const\\x20_0x4f1339=a0_0x1cfe;var\\x20_0x5a04e2=this&&this[_0x4f1339(0x26b)]||function(_0x5a0940){const\\x20_0x1dd5a0=_0x4f1339;return\\x20_0x5a0940&&_0x5a0940[_0x1dd5a0(0x2e1)]?_0x5a0940:{\\x27default\\x27:_0x5a0940};};Object[_0x4f1339(0x2c5)](_0x5b097b,_0x4f1339(0x2e1),{\\x27value\\x27:!0x0}),_0x5b097b[_0x4f1339(0x224)]=void\\x200x0;const\\x20_0x2ae3d3=_0x20e27e(0x29a),_0x556587=_0x5a04e2(_0x20e27e(0x36)),_0xd04fcd=_0x20e27e(0x1c5),_0x13cb4c=_0x20e27e(0x2ce);class\\x20_0x294265\\x20extends\\x20_0xd04fcd[_0x4f1339(0x307)]{constructor(_0x14e9ba,_0x42a9a2){const\\x20_0x2c1b9e=_0x4f1339;super(_0x14e9ba,_0x42a9a2),this[\\x27_outputBuffer\\x27]=new\\x20_0x556587[\\x27default\\x27](),this[\\x27on\\x27](_0x2c1b9e(0x353),this[_0x2c1b9e(0x21d)]),this[\\x27on\\x27](_0x2c1b9e(0x2f0),this[_0x2c1b9e(0x232)]);}[_0x4f1339(0x232)](_0x366736){const\\x20_0x5f0f22=_0x4f1339;super[\\x27toggle\\x27](_0x366736),_0x366736||this[\\x27_outputBuffer\\x27][_0x5f0f22(0x23f)]();}[_0x4f1339(0x34c)](_0x3ac4fc,_0x175284,_0x176c5e){const\\x20_0x2e4595=_0x4f1339;var\\x20_0x2a89b3,_0x50d27d,_0x5068d2,_0x3cc977;if(this[\\x27isSuspended\\x27])return!0x1;if(!(null===(_0x2a89b3=_0x3ac4fc[0x0])||void\\x200x0===_0x2a89b3?void\\x200x0:_0x2a89b3[_0x2e4595(0x3c0)]))return!0x0;if(this[_0x2e4595(0x386)](_0x176c5e,this[_0x2e4595(0x319)][_0x2e4595(0x3c0)]()),_0x13cb4c[\\x27Logger\\x27][\\x27logAudioInputSamples\\x27](_0x3ac4fc[0x0][0x0]),!this[\\x27isEnabled\\x27]||!this[_0x2e4595(0x3eb)])return\\x20this[_0x2e4595(0x326)](_0x3ac4fc,_0x175284),_0x13cb4c[\\x27Logger\\x27][_0x2e4595(0x2b5)](_0x175284[0x0][0x0]),!0x0;if(this[_0x2e4595(0x32a)][_0x2e4595(0x204)]({\\x27event\\x27:_0x2e4595(0x20f),\\x27data\\x27:null===(_0x50d27d=null==_0x3ac4fc?void\\x200x0:_0x3ac4fc[0x0])||void\\x200x0===_0x50d27d?void\\x200x0:_0x50d27d[0x0]},[null===(_0x3cc977=null===(_0x5068d2=null==_0x3ac4fc?void\\x200x0:_0x3ac4fc[0x0])||void\\x200x0===_0x5068d2?void\\x200x0:_0x5068d2[0x0])||void\\x200x0===_0x3cc977?void\\x200x0:_0x3cc977[_0x2e4595(0x296)]]),this[_0x2e4595(0x319)][_0x2e4595(0x3c0)]()>=_0x2ae3d3[_0x2e4595(0x33c)]){const\\x20_0x3090d0=this[_0x2e4595(0x319)][_0x2e4595(0x2b4)](_0x2ae3d3[_0x2e4595(0x33c)]);for(let\\x20_0x2a09db=0x0;_0x2a09db<_0x175284[0x0][_0x2e4595(0x3c0)];++_0x2a09db)_0x175284[0x0][_0x2a09db][_0x2e4595(0x361)](_0x3090d0);}return\\x20_0x13cb4c[_0x2e4595(0x2f1)][_0x2e4595(0x2b5)](_0x175284[0x0][0x0]),!0x0;}[\\x27getOutputBuffer\\x27](){const\\x20_0x3479c9=_0x4f1339;return\\x20this[_0x3479c9(0x319)];}[_0x4f1339(0x21d)](_0x34f554){const\\x20_0x23d836=_0x4f1339;this[_0x23d836(0x25f)]&&this[_0x23d836(0x319)][\\x27push\\x27](_0x34f554),this[\\x27_outputBuffer\\x27][\\x27length\\x27]()>_0x2ae3d3[_0x23d836(0x221)]/0xa*_0x34f554[\\x27length\\x27]&&(this[\\x27sendBufferOverflowEvent\\x27](this[_0x23d836(0x319)][\\x27length\\x27](),!0x0),this[_0x23d836(0x319)][_0x23d836(0x306)](_0x34f554[\\x27length\\x27]));}}_0x5b097b[_0x4f1339(0x224)]=_0x294265;},0xf9:(_0x638303,_0x365efe,_0x57c087)=>{const\\x20_0x1d8814=a0_0x1cfe;Object[_0x1d8814(0x2c5)](_0x365efe,_0x1d8814(0x2e1),{\\x27value\\x27:!0x0}),_0x365efe[_0x1d8814(0x1f9)]=void\\x200x0;const\\x20_0x20da81=_0x57c087(0x1c5),_0x8e8197=_0x57c087(0x15c),_0x2a280e=_0x57c087(0xa),_0x4f612f=_0x57c087(0x29a),_0x3acf8a=_0x57c087(0x2ce);class\\x20_0x1c2330\\x20extends\\x20_0x20da81[_0x1d8814(0x307)]{constructor(_0x4da5ce,_0x2f8379){const\\x20_0x312685=_0x1d8814;super(_0x4da5ce,_0x2f8379),this[_0x312685(0x212)]=0x0,this[_0x312685(0x319)]=new\\x20Float32Array(_0x4f612f[_0x312685(0x33c)]);const\\x20{sharedBuffers:_0x1aacd6}=_0x2f8379;if(!_0x1aacd6)throw\\x20new\\x20Error(_0x312685(0x31a));this[_0x312685(0x2bc)]=_0x1aacd6[_0x312685(0x253)],this[_0x312685(0x3e5)]=_0x2a280e[_0x312685(0x234)][\\x27from\\x27](_0x1aacd6[\\x27inputRingBuffer\\x27]),this[_0x312685(0x209)]=_0x2a280e[_0x312685(0x234)][\\x27from\\x27](_0x1aacd6[\\x27outputRingBuffer\\x27]);}[_0x1d8814(0x34c)](_0x3bc553,_0x334424,_0x130f8f){const\\x20_0x27941a=_0x1d8814;var\\x20_0x13dfcd,_0x3fe454,_0x4e8898,_0x418bfe,_0x20266d;if(this[_0x27941a(0x206)])return!0x1;if(!this[\\x27_state\\x27]||!(null===(_0x13dfcd=_0x3bc553[0x0])||void\\x200x0===_0x13dfcd?void\\x200x0:_0x13dfcd[_0x27941a(0x3c0)]))return!0x0;if(this[_0x27941a(0x386)](_0x130f8f,(null===(_0x3fe454=this[\\x27_outputRingBuffer\\x27])||void\\x200x0===_0x3fe454?void\\x200x0:_0x3fe454[_0x27941a(0x2f4)]())||0x0),_0x3acf8a[\\x27Logger\\x27][\\x27logAudioInputSamples\\x27](_0x3bc553[0x0][0x0]),!this[_0x27941a(0x25f)]||!this[_0x27941a(0x3eb)])return\\x20this[_0x27941a(0x326)](_0x3bc553,_0x334424),_0x3acf8a[_0x27941a(0x2f1)][_0x27941a(0x2b5)](_0x334424[0x0][0x0]),!0x0;const\\x20_0x568443=_0x3bc553[0x0][0x0];null===(_0x4e8898=this[_0x27941a(0x3e5)])||void\\x200x0===_0x4e8898||_0x4e8898[_0x27941a(0x3cf)]([_0x568443],_0x4f612f[_0x27941a(0x33c)]);if(null===(_0x418bfe=this[\\x27_outputRingBuffer\\x27])||void\\x200x0===_0x418bfe?void\\x200x0:_0x418bfe[_0x27941a(0x2b4)]([this[\\x27_outputBuffer\\x27]],_0x4f612f[_0x27941a(0x33c)])){for(let\\x20_0x2df488=0x0;_0x2df488<_0x334424[0x0][\\x27length\\x27];++_0x2df488)_0x334424[0x0][_0x2df488][\\x27set\\x27](this[\\x27_outputBuffer\\x27]);}return(null===(_0x20266d=this[_0x27941a(0x3e5)])||void\\x200x0===_0x20266d?void\\x200x0:_0x20266d[\\x27isFrameAvailable\\x27](this[_0x27941a(0x212)]))&&Atomics[_0x27941a(0x3c3)](this[_0x27941a(0x2bc)],_0x8e8197[_0x27941a(0x20c)][_0x27941a(0x2d3)]),_0x3acf8a[_0x27941a(0x2f1)][_0x27941a(0x2b5)](_0x334424[0x0][0x0]),!0x0;}}_0x365efe[_0x1d8814(0x1f9)]=_0x1c2330;}},_0x20a5b4={};function\\x20_0x20a106(_0x3ddb04){const\\x20_0x4395a5=a0_0x1cfe;var\\x20_0x36a15a=_0x20a5b4[_0x3ddb04];if(void\\x200x0!==_0x36a15a)return\\x20_0x36a15a[\\x27exports\\x27];var\\x20_0x43820c=_0x20a5b4[_0x3ddb04]={\\x27exports\\x27:{}};return\\x20_0x1478b2[_0x3ddb04][_0x4395a5(0x3dd)](_0x43820c[_0x4395a5(0x2e9)],_0x43820c,_0x43820c[_0x4395a5(0x2e9)],_0x20a106),_0x43820c[_0x4395a5(0x2e9)];}((()=>{const\\x20_0x249b04=a0_0x1cfe,_0x9f4f3e=_0x20a106(0x2a1),_0x167fbc=_0x20a106(0xf9),_0x3a96fa=_0x20a106(0x29a);registerProcessor(_0x3a96fa[_0x249b04(0x2ed)],class\\x20extends\\x20AudioWorkletProcessor{constructor(_0x89f258){const\\x20_0x1a1cfb=_0x249b04;super();const\\x20_0x65c03d=_0x89f258[_0x1a1cfb(0x384)];_0x65c03d[_0x1a1cfb(0x3a4)]?this[_0x1a1cfb(0x323)]=new\\x20_0x167fbc[\\x27SharedBufferAudioProcessor\\x27](this[_0x1a1cfb(0x32a)],_0x65c03d):this[_0x1a1cfb(0x323)]=new\\x20_0x9f4f3e[(_0x1a1cfb(0x224))](this[_0x1a1cfb(0x32a)],_0x65c03d);}static\\x20get[_0x249b04(0x286)](){const\\x20_0x3a2bd9=_0x249b04;return[{\\x27name\\x27:_0x3a2bd9(0x303),\\x27defaultValue\\x27:0x0,\\x27minValue\\x27:0x0,\\x27maxValue\\x27:0x8ca0,\\x27automationRate\\x27:_0x3a2bd9(0x2e4)}];}[_0x249b04(0x34c)](_0x51665f,_0x2b31a7,_0x431714){const\\x20_0x584f29=_0x249b04;return\\x20this[\\x27audioProcessor\\x27][_0x584f29(0x34c)](_0x51665f,_0x2b31a7,_0x431714);}});})());})()));';},0x8c:(_0x4d9e7d,_0x10aba2,_0x405f1a)=>{const _0x3de7c9=a0_0x249e;Object[_0x3de7c9(0x32f)](_0x10aba2,_0x3de7c9(0x211),{'value':!0x0}),_0x10aba2[_0x3de7c9(0x360)]=void 0x0;const _0x415054=_0x405f1a(0x2f9),_0x2458cd=_0x405f1a(0x3c7);_0x10aba2['BVC']=class{constructor(){const _0x3bba30=_0x3de7c9;this[_0x3bba30(0x1b0)]=[..._0x415054[_0x3bba30(0x352)]],this[_0x3bba30(0x3bb)]=_0x415054[_0x3bba30(0x277)],this[_0x3bba30(0x213)]=[];}async[_0x3de7c9(0x19f)](_0x23ddb3){const _0x2050ed=_0x3de7c9;_0x23ddb3[_0x2050ed(0x2fc)]&&_0x23ddb3[_0x2050ed(0x1d3)]&&(_0x2458cd[_0x2050ed(0x23b)][_0x2050ed(0x22d)](_0x2050ed(0x24a),'Preparing\\x20BVC\\x20compatible\\x20devices\\x20list'),_0x23ddb3['bvc'][_0x2050ed(0x1b0)]&&await this['loadFromURL'](_0x23ddb3['bvc'][_0x2050ed(0x1b0)]),_0x23ddb3[_0x2050ed(0x1d3)][_0x2050ed(0x31b)]&&await this[_0x2050ed(0x301)](_0x23ddb3[_0x2050ed(0x1d3)][_0x2050ed(0x31b)]));}async[_0x3de7c9(0x31f)](){const _0x39240a=_0x3de7c9;this[_0x39240a(0x213)]['splice'](0x0);}[_0x3de7c9(0x3b2)](_0x477b2d,_0x5d5f07=!0x1){const _0x10caaf=_0x3de7c9;if(_0x477b2d=_0x477b2d[_0x10caaf(0x254)](),!_0x5d5f07){for(let _0x11c90d of this[_0x10caaf(0x3bb)])if(_0x477b2d['includes'](_0x11c90d))return _0x2458cd[_0x10caaf(0x23b)][_0x10caaf(0x2a3)](_0x10caaf(0x24b),_0x477b2d+'\\x20is\\x20blocked\\x20for\\x20BVC\\x20compatibility'),!0x1;}return this['runtimeAllowedDevices'][_0x10caaf(0x310)]({'pattern':_0x477b2d,'force':_0x5d5f07}),_0x2458cd[_0x10caaf(0x23b)][_0x10caaf(0x22d)](_0x10caaf(0x24b),'Adding\\x20Runtime\\x20BVC\\x20allowed\\x20device',_0x477b2d),!0x0;}[_0x3de7c9(0x2e8)](_0x4ce670){const _0x49745e=_0x3de7c9;_0x4ce670=_0x4ce670[_0x49745e(0x254)]();const _0x3c0057=this[_0x49745e(0x213)][_0x49745e(0x34a)](_0x3deadf=>_0x3deadf['pattern']===_0x4ce670);return!(_0x3c0057<0x0)&&(this[_0x49745e(0x213)]['splice'](_0x3c0057,0x1),_0x2458cd[_0x49745e(0x23b)]['info'](_0x49745e(0x2a8),'Removing\\x20Runtime\\x20BVC\\x20device',_0x4ce670),!0x0);}async[_0x3de7c9(0x301)](_0xa0236e){const _0x4cacef=_0x3de7c9;_0x2458cd[_0x4cacef(0x23b)][_0x4cacef(0x22d)](_0x4cacef(0x39a),_0x4cacef(0x174)+_0xa0236e);try{const _0x273005=await fetch(_0xa0236e);if(!_0x273005['ok'])return void _0x2458cd['Logger'][_0x4cacef(0x235)]('BVC:loadFromURL','Unable\\x20to\\x20retrieve\\x20BVC\\x20compatible\\x20device\\x20list');const _0x50251f=await _0x273005[_0x4cacef(0x2a5)]();this[_0x4cacef(0x1b0)]['push'](..._0x50251f[_0x4cacef(0x1bc)]('\\x0a')[_0x4cacef(0x1e4)](_0x1adab6=>_0x1adab6['trim']()['toLowerCase']())[_0x4cacef(0x378)](_0x13e8da=>_0x13e8da['length']>=0x1));}catch(_0x58183e){_0x2458cd[_0x4cacef(0x23b)][_0x4cacef(0x235)]('BVC:loadFromURL','Error\\x20while\\x20fetching\\x20bvc\\x20compatible\\x20devices\\x20list');}}[_0x3de7c9(0x268)](_0x564e8c){const _0x482d78=_0x3de7c9;let _0x3e765b=_0x564e8c['label'][_0x482d78(0x254)]();_0x3e765b['startsWith']('default\\x20-')&&(_0x3e765b=_0x3e765b['slice'](0xa));for(let _0x55cf77 of this[_0x482d78(0x213)])if(_0x3e765b[_0x482d78(0x163)](_0x55cf77['pattern']))return _0x2458cd['Logger'][_0x482d78(0x22d)](_0x482d78(0x231),_0x3e765b+'\\x20is\\x20force\\x20BVC\\x20compatible'),!0x0;for(let _0x1c65d6 of this['blockedDevices'])if(_0x3e765b[_0x482d78(0x163)](_0x1c65d6))return _0x2458cd['Logger']['info'](_0x482d78(0x231),_0x3e765b+_0x482d78(0x1d6)),!0x1;for(let _0x38f381 of this[_0x482d78(0x1b0)])if(_0x3e765b['includes'](_0x38f381))return _0x2458cd[_0x482d78(0x23b)][_0x482d78(0x22d)](_0x482d78(0x231),_0x3e765b+_0x482d78(0x2f0)),!0x0;return _0x2458cd['Logger'][_0x482d78(0x22d)](_0x482d78(0x231),_0x3e765b+_0x482d78(0x161)),!0x1;}[_0x3de7c9(0x3aa)](_0x38723e){const _0x1bf9af=_0x3de7c9,_0x3f58c5=_0x38723e[_0x1bf9af(0x24e)]()[0x0];return!!_0x3f58c5&&this[_0x1bf9af(0x268)](_0x3f58c5);}};},0x3e:(_0x44c22f,_0x59e82f,_0x116807)=>{const _0x1d2820=a0_0x249e;Object[_0x1d2820(0x32f)](_0x59e82f,_0x1d2820(0x211),{'value':!0x0}),_0x59e82f[_0x1d2820(0x267)]=void 0x0;const _0x4c352c=_0x116807(0x2f9),_0x37bdc7=_0x116807(0x4b),_0xb888d1=_0x116807(0x18),_0x548c00=_0x116807(0x35e),_0x5a6ad3=_0x116807(0x260),_0x861790=_0x116807(0x1df),_0x905941=_0x116807(0x3c7),_0x42e8c8=_0x116807(0x353),_0x5e2cff=_0x116807(0x8c);class _0x26bc89{constructor(_0x3cd4d5){const _0x1c4742=_0x1d2820;this[_0x1c4742(0x3a4)]=_0x1c4742(0x194);const _0x56d92a=!!_0x3cd4d5?.['params']?.[_0x1c4742(0x295)];_0x905941[_0x1c4742(0x23b)][_0x1c4742(0x24c)](_0x56d92a),_0x905941[_0x1c4742(0x23b)][_0x1c4742(0x1e9)](window,{});const _0x47d088=_0x3cd4d5?.[_0x1c4742(0x260)],[_0x3610d1,_0x311d01]=(0x0,_0x5a6ad3[_0x1c4742(0x2b5)])(_0x47d088?.[_0x1c4742(0x1fc)]),[_0x22a665,_0x4b5577]=(0x0,_0x5a6ad3[_0x1c4742(0x2b5)])(_0x47d088?.[_0x1c4742(0x219)]);if(!_0x26bc89[_0x1c4742(0x187)]())throw new Error(_0x1c4742(0x2d2));if(!_0x47d088)throw new Error('INVALID_OPTIONS');if(_0x47d088?.[_0x1c4742(0x2df)]&&_0x1c4742(0x1b9)==typeof SharedArrayBuffer&&(_0x905941[_0x1c4742(0x23b)][_0x1c4742(0x2a3)](_0x1c4742(0x171)),_0x47d088[_0x1c4742(0x2df)]=!0x1),!0x0===_0x47d088[_0x1c4742(0x2fc)]){if(!_0x47d088[_0x1c4742(0x1d3)]||!_0x47d088[_0x1c4742(0x1d3)]['allowedDevices']||(0x0,_0x5a6ad3[_0x1c4742(0x37f)])(_0x47d088[_0x1c4742(0x1d3)]))throw _0x905941[_0x1c4742(0x23b)][_0x1c4742(0x235)](_0x1c4742(0x1ad)),new Error(_0x1c4742(0x234));if(!_0x3610d1[_0x1c4742(0x313)])throw _0x905941[_0x1c4742(0x23b)][_0x1c4742(0x235)](_0x1c4742(0x1ba)),new Error(_0x1c4742(0x266));}this[_0x1c4742(0x260)]={'useSharedArrayBuffer':!!_0x3cd4d5['params']?.[_0x1c4742(0x2df)],'logProcessStats':!!_0x3cd4d5[_0x1c4742(0x260)]?.[_0x1c4742(0x335)],'useBVC':!!_0x3cd4d5?.[_0x1c4742(0x260)]?.[_0x1c4742(0x2fc)],'bufferOverflowMS':_0x3cd4d5?.['params']?.[_0x1c4742(0x155)]||_0x4c352c[_0x1c4742(0x239)],'preloadModels':_0x311d01,'preloadInboundModels':_0x4b5577,'models':_0x3610d1,'inboundModels':_0x22a665,'bvc':{'allowedDevices':_0x3cd4d5?.[_0x1c4742(0x260)]?.[_0x1c4742(0x1d3)]?.['allowedDevices'],'allowedDevicesExt':_0x3cd4d5?.[_0x1c4742(0x260)]?.[_0x1c4742(0x1d3)]?.['allowedDevicesExt']},'debugLogs':_0x56d92a},this[_0x1c4742(0x360)]=new _0x5e2cff[(_0x1c4742(0x360))](),this['debugLogs']&&_0x905941[_0x1c4742(0x23b)][_0x1c4742(0x22d)](_0x1c4742(0x2a9),JSON['stringify'](this[_0x1c4742(0x260)]));}get[_0x1d2820(0x295)](){const _0x4f0cdb=_0x1d2820;return this[_0x4f0cdb(0x260)][_0x4f0cdb(0x295)];}static[_0x1d2820(0x187)](){const _0x2eaed3=_0x1d2820;return!(0x0,_0x861790[_0x2eaed3(0x3be)])()&&!(0x0,_0x861790['isMobile'])();}async[_0x1d2820(0x19f)](){const _0x4c00da=_0x1d2820;if(_0x4c00da(0x35e)===this['state'])throw _0x905941['Logger'][_0x4c00da(0x235)](_0x4c00da(0x29b),'SDK\\x20already\\x20initialized'),new Error(_0x4c00da(0x382));this[_0x4c00da(0x260)][_0x4c00da(0x2fc)]&&await this[_0x4c00da(0x360)][_0x4c00da(0x19f)](this[_0x4c00da(0x260)]),Object['keys'](this[_0x4c00da(0x260)][_0x4c00da(0x293)])[_0x4c00da(0x393)]&&await this['preload'](this[_0x4c00da(0x260)][_0x4c00da(0x293)]),Object['keys'](this[_0x4c00da(0x260)][_0x4c00da(0x1cb)])[_0x4c00da(0x393)]&&await this[_0x4c00da(0x31a)](this[_0x4c00da(0x260)]['preloadInboundModels']),this[_0x4c00da(0x295)]&&(0x0,_0xb888d1['createDebugWidget'])(),this[_0x4c00da(0x3a4)]=_0x4c00da(0x35e);}async[_0x1d2820(0x296)](_0x59063d,_0x12a78f,_0xda2225){const _0x5c7896=_0x1d2820,_0x390095=_0x59063d instanceof AudioContext?_0x59063d:_0x59063d[_0x5c7896(0x1fe)],_0x199906=_0x59063d instanceof AudioContext?void 0x0:_0x59063d[_0x5c7896(0x350)],_0x925d52=!(_0x59063d instanceof AudioContext)&&!!_0x59063d['isInbound'],_0x4b6af9=!(_0x59063d instanceof AudioContext)&&!!_0x59063d['forceAllowBVC'],_0x4a9259=!(_0x59063d instanceof AudioContext)&&!!_0x59063d?.['enableOnceReady'],_0x836a58={...this[_0x5c7896(0x260)],'enableOnceReady':_0x4a9259,'allowBVC':_0x4b6af9,'isInbound':_0x925d52};if(_0x199906&&!(_0x199906 instanceof MediaStream))throw _0x905941[_0x5c7896(0x23b)][_0x5c7896(0x235)](_0x5c7896(0x315),'Given\\x20invalid\\x20stream\\x20property'),new Error(_0x5c7896(0x31d));if(this[_0x5c7896(0x295)]&&_0x905941[_0x5c7896(0x23b)][_0x5c7896(0x22d)](_0x5c7896(0x315),JSON[_0x5c7896(0x3b0)]({'userAgent':navigator[_0x5c7896(0x377)],'devices':await navigator[_0x5c7896(0x363)][_0x5c7896(0x1f3)]()})),_0x5c7896(0x35e)!==this['state'])throw _0x905941[_0x5c7896(0x23b)]['error'](_0x5c7896(0x315),_0x5c7896(0x156)),new Error('SDK_NOT_INITIALIZED');if(!_0x390095||!_0x390095[_0x5c7896(0x286)])throw this[_0x5c7896(0x295)]&&_0x905941[_0x5c7896(0x23b)][_0x5c7896(0x235)](_0x5c7896(0x315),_0x5c7896(0x3a8)),new Error(_0x5c7896(0x21d));if(_0x4c352c[_0x5c7896(0x262)][_0x5c7896(0x276)](_0x390095[_0x5c7896(0x345)])<0x0)throw new Error(_0x5c7896(0x2eb));_0x390095[_0x5c7896(0x345)]>=_0x4c352c[_0x5c7896(0x18a)]&&this[_0x5c7896(0x360)]&&_0x199906&&(await this[_0x5c7896(0x360)][_0x5c7896(0x3aa)](_0x199906)&&(_0x905941[_0x5c7896(0x23b)][_0x5c7896(0x22d)](_0x5c7896(0x315),'BVC\\x20is\\x20ON'),_0x836a58[_0x5c7896(0x17a)]=!0x0));try{_0x905941[_0x5c7896(0x23b)]['info']('KrispSDK:createNoiseFilter',_0x5c7896(0x373)),await _0x390095['audioWorklet'][_0x5c7896(0x1b3)](_0x548c00[_0x5c7896(0x37b)]);}catch(_0x1979f6){throw _0x905941['Logger'][_0x5c7896(0x235)]('KrispSDK:createNoiseFilter',_0x1979f6),new Error(_0x5c7896(0x18b));}return new _0x37bdc7[(_0x5c7896(0x1df))](_0x390095,_0x836a58,_0x12a78f,_0xda2225);}async[_0x1d2820(0x31a)](_0x394522){const _0x5d4e93=_0x1d2820;try{return await Promise[_0x5d4e93(0x339)](Object[_0x5d4e93(0x16f)](_0x394522)[_0x5d4e93(0x1e4)](_0x3bfb2d=>(_0x905941[_0x5d4e93(0x23b)]['info'](_0x5d4e93(0x2ae),'Preloading\\x20model:',_0x3bfb2d),_0x42e8c8['ModelLoader'][_0x5d4e93(0x31a)](_0x3bfb2d)))),!0x0;}catch(_0x32aef9){return _0x905941['Logger']['error'](_0x5d4e93(0x2ae),'Error\\x20while\\x20Preloading\\x20models',_0x32aef9),!0x1;}}['downloadReport'](){const _0x31aa02=_0x1d2820;return _0x905941[_0x31aa02(0x23b)]['downloadReport']();}[_0x1d2820(0x31f)](){const _0x7448cd=_0x1d2820;this[_0x7448cd(0x3a4)]='INITIAL',this[_0x7448cd(0x360)][_0x7448cd(0x31f)](),this[_0x7448cd(0x295)]&&(0x0,_0xb888d1[_0x7448cd(0x35c)])();}}_0x59e82f[_0x1d2820(0x267)]=_0x26bc89;},0x4b:(_0x2221ed,_0x80f310,_0x28a620)=>{const _0x38acef=a0_0x249e;Object['defineProperty'](_0x80f310,'__esModule',{'value':!0x0}),_0x80f310[_0x38acef(0x1df)]=void 0x0;const _0x47cd03=_0x28a620(0x178),_0x3303ae=_0x28a620(0x196),_0x55a162=_0x28a620(0x2f9),_0x34b3ee=_0x28a620(0x260),_0x28c3ba=_0x28a620(0x35e),_0x326a10=_0x28a620(0x3c7);class _0x8dbd74 extends AudioWorkletNode{constructor(_0x380c73,_0x3d8e45,_0x94463f,_0x184607){const _0x3913e5=_0x38acef,_0x26ccac=_0x380c73[_0x3913e5(0x345)],_0x266a87=_0x3d8e45[_0x3913e5(0x2df)]?(0x0,_0x3303ae[_0x3913e5(0x326)])({'sampleRate':_0x26ccac}):void 0x0;let _0x1de962,_0x5d81b2;_0x3d8e45[_0x3913e5(0x28b)]?[_0x1de962,_0x5d81b2]=(0x0,_0x34b3ee[_0x3913e5(0x2d3)])(_0x3d8e45['inboundModels'],_0x26ccac):_0x3d8e45[_0x3913e5(0x17a)]&&_0x3d8e45[_0x3913e5(0x1fc)]?.[_0x3913e5(0x313)]?(_0x1de962='modelBVC',_0x5d81b2=(0x0,_0x34b3ee[_0x3913e5(0x298)])(_0x3d8e45['models']['modelBVC'])):[_0x1de962,_0x5d81b2]=(0x0,_0x34b3ee['pickModel'])(_0x3d8e45[_0x3913e5(0x1fc)],_0x26ccac);const _0x2a2648={..._0x3d8e45,'sampleRate':_0x26ccac,'modelName':_0x1de962,'modelPath':_0x5d81b2,'sharedBuffers':_0x266a87};if(!_0x5d81b2)throw _0x326a10['Logger'][_0x3913e5(0x235)](_0x3913e5(0x21e),_0x3913e5(0x198),JSON['stringify']({'sampleRate':_0x26ccac,'modelName':_0x1de962})),new Error('MODEL_IS_NOT_PROVIDED');super(_0x380c73,_0x55a162[_0x3913e5(0x191)],{'processorOptions':_0x2a2648}),this['params']=_0x3d8e45,this[_0x3913e5(0x26e)]=!0x1,this[_0x3913e5(0x18c)]=!0x1,this[_0x3913e5(0x2e2)]=_0x2a2648,this[_0x3913e5(0x295)]&&_0x2a2648[_0x3913e5(0x31c)]&&_0x326a10[_0x3913e5(0x23b)]['info']('AudioFilterNode:constructor',_0x3913e5(0x25d));try{_0x94463f&&this[_0x3913e5(0x283)](_0x3913e5(0x1e7),_0x94463f),_0x184607&&this[_0x3913e5(0x283)](_0x3913e5(0x31f),_0x184607),this[_0x3913e5(0x295)]&&_0x326a10['Logger'][_0x3913e5(0x22d)](_0x3913e5(0x172),'creating\\x20web\\x20worker\\x20(type:\\x20module)'),this['worker']=new _0x47cd03[(_0x3913e5(0x33c))](_0x28c3ba['WORKER_URL'],{'type':'module'}),this[_0x3913e5(0x295)]&&_0x326a10[_0x3913e5(0x23b)]['info'](_0x3913e5(0x172),'adding\\x20event\\x20listener\\x20for\\x20worker'),this[_0x3913e5(0x317)][_0x3913e5(0x283)](_0x3913e5(0x2f3),this[_0x3913e5(0x1a9)][_0x3913e5(0x314)](this)),this[_0x3913e5(0x295)]&&(_0x326a10[_0x3913e5(0x23b)][_0x3913e5(0x22d)]('AudioFilterNode:constructor',_0x3913e5(0x358)),_0x326a10[_0x3913e5(0x23b)][_0x3913e5(0x1e9)](this[_0x3913e5(0x317)],_0x2a2648),_0x326a10[_0x3913e5(0x23b)][_0x3913e5(0x1e9)](this[_0x3913e5(0x3ba)],_0x2a2648)),this['debugLogs']&&_0x326a10[_0x3913e5(0x23b)][_0x3913e5(0x22d)](_0x3913e5(0x172),_0x3913e5(0x33a)),this[_0x3913e5(0x317)][_0x3913e5(0x2dc)]({'event':_0x3913e5(0x23f),'data':this[_0x3913e5(0x2e2)]},this['params']['useSharedArrayBuffer']?[]:[this[_0x3913e5(0x3ba)]]);}catch(_0x352752){throw this['debugLogs']&&_0x326a10['Logger'][_0x3913e5(0x235)](_0x3913e5(0x172),_0x352752),new Error(_0x3913e5(0x19d));}this['debugLogs']&&this[_0x3913e5(0x3a2)](_0x380c73);}get[_0x38acef(0x295)](){const _0x20a0f1=_0x38acef;return this[_0x20a0f1(0x260)]['debugLogs'];}['_onWasmWorkerMessage'](_0x50631c){const _0x4e45cf=_0x38acef,{event:_0x389e9d,data:_0x21c946}=_0x50631c['data'];switch(_0x389e9d){case'WASM_PROCESSOR_INITIALIZED':this[_0x4e45cf(0x295)]&&_0x326a10['Logger'][_0x4e45cf(0x22d)]('AudioFilterNode:_onWasmWorkerMessage',_0x4e45cf(0x3b1)),this['_isReady']=!0x0,this[_0x4e45cf(0x2cd)](new MessageEvent(_0x4e45cf(0x1e7))),this['postMessage']({'event':_0x4e45cf(0x25c),'data':_0x21c946}),this['params']['enableOnceReady']&&this['enable']();break;case _0x4e45cf(0x395):this[_0x4e45cf(0x295)]&&_0x326a10['Logger'][_0x4e45cf(0x22d)](_0x4e45cf(0x177),_0x4e45cf(0x1be),JSON['stringify'](_0x21c946)),this[_0x4e45cf(0x2cd)](new MessageEvent(_0x4e45cf(0x214),{'data':_0x21c946}));}}[_0x38acef(0x2dc)](_0x58d097,_0x380ce3){const _0x214bda=_0x38acef,_0x13c7d3=this[_0x214bda(0x260)][_0x214bda(0x2df)]?this[_0x214bda(0x3ba)]:this[_0x214bda(0x317)];_0x380ce3?_0x13c7d3[_0x214bda(0x2dc)](_0x58d097,_0x380ce3):_0x13c7d3['postMessage'](_0x58d097);}[_0x38acef(0x39c)](){const _0x5bf6ff=_0x38acef;if(this[_0x5bf6ff(0x295)]&&_0x326a10['Logger']['info'](_0x5bf6ff(0x303),JSON['stringify']({'isReady':this['_isReady']})),!this['_isReady'])throw new Error('WASM_OR_WORKER_NOT_READY');}['isReady'](){const _0x296bcd=_0x38acef;return this[_0x296bcd(0x26e)];}['isBVCEnabled'](){const _0x366c49=_0x38acef;return this['params'][_0x366c49(0x17a)];}['isEnabled'](){const _0x187053=_0x38acef;return this['debugLogs']&&_0x326a10[_0x187053(0x23b)][_0x187053(0x22d)]('AudioFilterNode:isEnabled',JSON['stringify']({'isEnabled':this[_0x187053(0x18c)]})),this['enabled'];}[_0x38acef(0x1c7)](){const _0x398de3=_0x38acef;this['checkReadiness'](),this[_0x398de3(0x295)]&&_0x326a10['Logger']['info'](_0x398de3(0x2ff),'send\\x20enable\\x20NC\\x20message'),this[_0x398de3(0x18c)]=!0x0,this[_0x398de3(0x2dc)]({'event':'TOGGLE','data':!0x0});}[_0x38acef(0x217)](){const _0x3ef3e4=_0x38acef;this[_0x3ef3e4(0x39c)](),this[_0x3ef3e4(0x295)]&&_0x326a10[_0x3ef3e4(0x23b)][_0x3ef3e4(0x22d)](_0x3ef3e4(0x355),_0x3ef3e4(0x26f)),this[_0x3ef3e4(0x18c)]=!0x1,this[_0x3ef3e4(0x2dc)]({'event':'TOGGLE','data':!0x1});}[_0x38acef(0x179)](){const _0x3667e0=_0x38acef;this[_0x3667e0(0x39c)](),this[_0x3667e0(0x295)]&&_0x326a10['Logger'][_0x3667e0(0x22d)](_0x3667e0(0x1c3),_0x3667e0(0x229)),this['enabled']=!this[_0x3667e0(0x18c)],this[_0x3667e0(0x2dc)]({'event':_0x3667e0(0x39b),'data':this[_0x3667e0(0x18c)]});}[_0x38acef(0x31f)](){const _0x177388=_0x38acef;try{this[_0x177388(0x295)]&&_0x326a10['Logger']['info'](_0x177388(0x1ff),_0x177388(0x1dd)),this['postMessage']({'event':_0x177388(0x3ac),'data':void 0x0}),this[_0x177388(0x317)][_0x177388(0x1d7)](_0x177388(0x2f3),this[_0x177388(0x1a9)][_0x177388(0x314)](this)),this['worker']['terminate'](),this['dispatchEvent'](new MessageEvent(_0x177388(0x31f))),clearInterval(this[_0x177388(0x20c)]);}catch(_0x50e019){this[_0x177388(0x295)]&&_0x326a10[_0x177388(0x23b)]['error']('AudioFilterNode:dispose',_0x50e019);}}[_0x38acef(0x3a2)](_0x5c452a){const _0x5e84ff=_0x38acef;let _0x56e360=0x0;this[_0x5e84ff(0x20c)]=setInterval(()=>{const _0x1af854=_0x5e84ff;_0x56e360++,this[_0x1af854(0x27d)][_0x1af854(0x323)](_0x1af854(0x2d5))['setValueAtTime'](_0x56e360,0x0),_0x326a10[_0x1af854(0x23b)]['info']('AudioFilterNode:interval',JSON[_0x1af854(0x3b0)]({'seconds':_0x56e360,'baseLatency':_0x5c452a[_0x1af854(0x209)],'outputLatency':_0x5c452a[_0x1af854(0x394)]}));},0x3e8);}}_0x80f310[_0x38acef(0x1df)]=_0x8dbd74;},0x43:(_0x3d9778,_0x339729,_0x3ea253)=>{const _0xe02094=a0_0x249e;Object[_0xe02094(0x32f)](_0x339729,_0xe02094(0x211),{'value':!0x0}),_0x339729[_0xe02094(0x2e4)]=void 0x0;const _0x2c0cf2=_0x3ea253(0x2af);_0x339729[_0xe02094(0x2e4)]=class{constructor(_0x646c91){const _0x4d8241=_0xe02094;this[_0x4d8241(0x345)]=_0x646c91,this['_inputData']=[],this['_outputData']=[];}[_0xe02094(0x154)](_0x426ae9){const _0x4014a5=_0xe02094;this[_0x4014a5(0x1e2)][_0x4014a5(0x310)](_0x426ae9);}['pushOutput'](_0x39d2c9){const _0x1f5ebb=_0xe02094;this[_0x1f5ebb(0x20a)][_0x1f5ebb(0x310)](_0x39d2c9);}[_0xe02094(0x297)](){const _0x366f7f=_0xe02094;return{'input':(0x0,_0x2c0cf2[_0x366f7f(0x2d9)])(this[_0x366f7f(0x1e2)],this[_0x366f7f(0x345)]),'output':(0x0,_0x2c0cf2[_0x366f7f(0x2d9)])(this[_0x366f7f(0x20a)],this[_0x366f7f(0x345)])};}};},0x178:(_0x4cf39d,_0x4eecfa)=>{const _0x476e24=a0_0x249e;Object[_0x476e24(0x32f)](_0x4eecfa,_0x476e24(0x211),{'value':!0x0}),_0x4eecfa[_0x476e24(0x33c)]=void 0x0;class _0x43dda9 extends Worker{constructor(_0x333291,_0x39148b){super(_0x333291,_0x39148b);}[_0x476e24(0x2dc)](_0x2499ad,_0x243274){_0x243274?super['postMessage'](_0x2499ad,_0x243274):super['postMessage'](_0x2499ad);}}_0x4eecfa['KWebWorker']=_0x43dda9;},0x18:(_0x39c27e,_0x4b5901,_0x29a4f5)=>{const _0x355a75=a0_0x249e;Object[_0x355a75(0x32f)](_0x4b5901,'__esModule',{'value':!0x0}),_0x4b5901[_0x355a75(0x35c)]=_0x4b5901['createDebugWidget']=void 0x0;const _0x298bc6=_0x29a4f5(0x3c7),_0x272b22=_0x355a75(0x32e);_0x4b5901[_0x355a75(0x183)]=function(){const _0x2d9792=_0x355a75;if(document[_0x2d9792(0x27c)](_0x272b22))return;const _0x119dc5=document[_0x2d9792(0x2c5)](_0x272b22);document[_0x2d9792(0x2b4)][_0x2d9792(0x16c)](_0x119dc5);},_0x4b5901[_0x355a75(0x35c)]=function(){const _0x35e703=_0x355a75,_0x3ab1f8=document[_0x35e703(0x27c)](_0x272b22);_0x3ab1f8&&_0x3ab1f8[_0x35e703(0x2e8)]();},void 0x0===customElements[_0x355a75(0x323)](_0x272b22)?customElements['define'](_0x272b22,class extends HTMLElement{constructor(){const _0x9c0de6=_0x355a75;super();const _0x3ee550=document[_0x9c0de6(0x2c5)](_0x9c0de6(0x238));_0x3ee550[_0x9c0de6(0x220)]='\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<style>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20*\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20color:\\x20#131032;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20.krisp-widget\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20display:\\x20block;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20width:\\x20200px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border:\\x201px\\x20solid\\x20#aaa;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border-radius:\\x205px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20background-color:\\x20#e4e7ea;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20.krisp-widget\\x20.krisp-header\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border-bottom:\\x201px\\x20solid\\x20#aaa;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20padding:\\x2010px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20cursor:\\x20move;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20.krisp-widget\\x20.krisp-content\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20padding:\\x2010px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20button\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20height:\\x2032px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20font-size:\\x2014px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20line-height:\\x2028px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20padding:\\x200\\x2018px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border-radius:\\x204px;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border:\\x201px\\x20solid\\x20#614efa;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20color:\\x20#614efa;\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20button:hover\\x20{\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20background-color:\\x20#5544dc;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20border-color:\\x20#5544dc;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20cursor:\\x20pointer;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20color:\\x20#fff;\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20}\\x0a\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</style>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class=\\x22krisp-widget\\x22>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class=\\x22krisp-header\\x22>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<b>Krisp</b>\\x20is\\x20in\\x20debug\\x20mode\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</div>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class=\\x22krisp-content\\x22>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<button>Download\\x20Log\\x20Report</button>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</div>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20</div>\\x0a\\x20\\x20\\x20\\x20\\x20\\x20',this[_0x9c0de6(0x200)]({'mode':_0x9c0de6(0x2d6)}),this[_0x9c0de6(0x1c5)]?.[_0x9c0de6(0x16c)](_0x3ee550[_0x9c0de6(0x2e1)][_0x9c0de6(0x375)](!0x0));}[_0x355a75(0x30a)](){const _0x1a9214=_0x355a75;let _0x3b08a9=0x0,_0x2e9e2e=0x0,_0x1a7644=0x0,_0x1b32d0=0x0;this[_0x1a9214(0x35d)][_0x1a9214(0x289)]=_0x1a9214(0x226),this[_0x1a9214(0x35d)]['top']=_0x1a9214(0x246),this[_0x1a9214(0x35d)]['right']=_0x1a9214(0x246),this[_0x1a9214(0x2cb)]=_0x489438=>{const _0xd7176=_0x1a9214;_0x1a7644=_0x489438[_0xd7176(0x25a)],_0x1b32d0=_0x489438[_0xd7176(0x212)],document[_0xd7176(0x245)]=()=>{const _0x5ad631=_0xd7176;document[_0x5ad631(0x245)]=null,document[_0x5ad631(0x370)]=null;},document[_0xd7176(0x370)]=_0x1c8977=>{const _0x2b88d6=_0xd7176;_0x1c8977['preventDefault'](),_0x3b08a9=_0x1a7644-_0x1c8977[_0x2b88d6(0x25a)],_0x2e9e2e=_0x1b32d0-_0x1c8977['clientY'],_0x1a7644=_0x1c8977[_0x2b88d6(0x25a)],_0x1b32d0=_0x1c8977['clientY'],this['style'][_0x2b88d6(0x261)]=this['offsetTop']-_0x2e9e2e+'px',this['style'][_0x2b88d6(0x272)]=this['offsetLeft']-_0x3b08a9+'px';};},this[_0x1a9214(0x1c5)]?.[_0x1a9214(0x27c)](_0x1a9214(0x236))?.[_0x1a9214(0x283)](_0x1a9214(0x3b4),()=>_0x298bc6[_0x1a9214(0x23b)][_0x1a9214(0x2ce)]());}}):_0x298bc6[_0x355a75(0x23b)][_0x355a75(0x2a3)](_0x355a75(0x348));},0x3c7:(_0xfca52a,_0x5a5055,_0x276545)=>{const _0x57a4a9=a0_0x249e;Object[_0x57a4a9(0x32f)](_0x5a5055,_0x57a4a9(0x211),{'value':!0x0}),_0x5a5055[_0x57a4a9(0x23b)]=void 0x0;const _0x1e928d=_0x276545(0x2af),_0x35de99=_0x276545(0x43);_0x5a5055['Logger']=new class{constructor(){const _0x2fefbe=_0x57a4a9;this['logs']='',this['threadName']=_0x2fefbe(0x2ca),this[_0x2fefbe(0x176)]=[],this[_0x2fefbe(0x295)]=!0x1;let _0x35df3d=_0x2fefbe(0x2ca);_0x2fefbe(0x1b9)!=typeof WorkerGlobalScope?_0x35df3d=_0x2fefbe(0x317):'undefined'!=typeof AudioWorkletProcessor&&(_0x35df3d=_0x2fefbe(0x307)),this[_0x2fefbe(0x15b)]=_0x35df3d;}['setOptions'](_0xf02f90=!0x1){this['debugLogs']=_0xf02f90;}[_0x57a4a9(0x36d)](_0x24e535){const _0x225d25=_0x57a4a9;this[_0x225d25(0x204)]=_0x24e535;}[_0x57a4a9(0x22d)](..._0x418146){const _0x20c63f=_0x57a4a9;this['debugLogs']&&(this[_0x20c63f(0x312)]('I',_0x418146[_0x20c63f(0x22e)]('\\x09')),console[_0x20c63f(0x22d)](_0x20c63f(0x178),..._0x418146));}[_0x57a4a9(0x2a3)](..._0x45ad0b){const _0x3c45f8=_0x57a4a9;this[_0x3c45f8(0x295)]&&this[_0x3c45f8(0x312)]('W',_0x45ad0b['join']('\\x09')),console[_0x3c45f8(0x22d)](_0x3c45f8(0x178),..._0x45ad0b);}[_0x57a4a9(0x235)](..._0x1273ed){const _0x98c3c9=_0x57a4a9;this[_0x98c3c9(0x295)]&&this[_0x98c3c9(0x312)]('E',_0x1273ed['join']('\\x09')),console['error'](_0x98c3c9(0x178),..._0x1273ed);}[_0x57a4a9(0x2b7)](..._0x330176){const _0x59c037=_0x57a4a9;this[_0x59c037(0x295)]&&(this[_0x59c037(0x312)]('I',_0x330176[_0x59c037(0x22e)]('\\x09')),console[_0x59c037(0x2b7)]('KrispSDK\\x20-',..._0x330176));}[_0x57a4a9(0x15a)](_0x5f3520){const _0x39bfc5=_0x57a4a9;this['logAudio'](_0x39bfc5(0x1d9),_0x5f3520);}['logAudioOutputSamples'](_0x3451c4){const _0x522946=_0x57a4a9;this[_0x522946(0x250)](_0x522946(0x258),_0x3451c4);}[_0x57a4a9(0x1e9)](_0x5050ae,_0x25dda3){const _0x57eb1a=_0x57a4a9,_0x21a1d6={'channel':new MessageChannel(),'recorder':void 0x0,'startedAt':new Date(),'options':_0x25dda3};_0x5050ae instanceof MessagePort&&(_0x21a1d6[_0x57eb1a(0x181)]=new _0x35de99['DebugRecorder'](_0x25dda3['sampleRate'])),_0x5050ae instanceof Window?this[_0x57eb1a(0x204)]=_0x21a1d6['channel'][_0x57eb1a(0x1d4)]:_0x5050ae[_0x57eb1a(0x2dc)]({'event':_0x57eb1a(0x34e),'data':void 0x0},[_0x21a1d6[_0x57eb1a(0x386)][_0x57eb1a(0x1d4)]]),_0x21a1d6[_0x57eb1a(0x386)]['port1']['addEventListener'](_0x57eb1a(0x2f3),_0x4a33e6=>{const _0x3f7cf8=_0x57eb1a;_0x3f7cf8(0x1a4)==typeof _0x4a33e6[_0x3f7cf8(0x288)]?this['logs']+=_0x4a33e6[_0x3f7cf8(0x288)]:_0x21a1d6[_0x3f7cf8(0x181)]&&'LOG_INPUT_AUDIO'===_0x4a33e6[_0x3f7cf8(0x288)]?.['event']?_0x21a1d6[_0x3f7cf8(0x181)][_0x3f7cf8(0x154)](_0x4a33e6[_0x3f7cf8(0x288)][_0x3f7cf8(0x288)]):_0x21a1d6[_0x3f7cf8(0x181)]&&_0x3f7cf8(0x258)===_0x4a33e6[_0x3f7cf8(0x288)]?.[_0x3f7cf8(0x2c7)]&&_0x21a1d6['recorder'][_0x3f7cf8(0x243)](_0x4a33e6[_0x3f7cf8(0x288)][_0x3f7cf8(0x288)]);}),this[_0x57eb1a(0x176)][_0x57eb1a(0x310)](_0x21a1d6),_0x21a1d6[_0x57eb1a(0x386)][_0x57eb1a(0x333)][_0x57eb1a(0x1b6)]();}async[_0x57a4a9(0x2ce)](){const _0x557df6=_0x57a4a9;try{const _0x34299c=[];for(let _0x469c33 in this[_0x557df6(0x176)]){const _0x40354e=this[_0x557df6(0x176)][_0x469c33];if(_0x40354e[_0x557df6(0x181)]){const {input:_0x1271c7,output:_0x1f2203}=_0x40354e[_0x557df6(0x181)][_0x557df6(0x297)]();_0x34299c['push'](_0x557df6(0x299)+_0x40354e[_0x557df6(0x1ed)]+_0x557df6(0x271)+_0x469c33+'\\x22><source\\x20src=\\x22'+await(0x0,_0x1e928d[_0x557df6(0x168)])(_0x1271c7)+_0x557df6(0x1c1)+_0x469c33+_0x557df6(0x1fa)+await(0x0,_0x1e928d[_0x557df6(0x168)])(_0x1f2203)+_0x557df6(0x341));}}const _0x4476be=_0x557df6(0x1d8)+_0x34299c+_0x557df6(0x242)+this[_0x557df6(0x1a1)]+_0x557df6(0x15e);return(0x0,_0x1e928d['downloadBlob'])(_0x557df6(0x2c9)+new Date()[_0x557df6(0x21a)]()+'.html',new Blob([_0x4476be],{'type':_0x557df6(0x2e5)})),!0x0;}catch(_0x5efafc){return console[_0x557df6(0x235)](_0x557df6(0x294)),!0x1;}}[_0x57a4a9(0x250)](_0x255709,_0xc39ef2){const _0x14ad9f=_0x57a4a9;if(this['debugLogs']&&this[_0x14ad9f(0x204)]){const _0x3d1f76=new Float32Array(_0xc39ef2['length']);_0x3d1f76[_0x14ad9f(0x2a4)](_0xc39ef2,0x0),this[_0x14ad9f(0x204)]['postMessage']({'event':_0x255709,'data':_0x3d1f76},[_0x3d1f76[_0x14ad9f(0x2d1)]]);}}['postLog'](_0x35b586,_0x2bc2e0){const _0x277894=_0x57a4a9,_0x2fccda='['+new Date()['toLocaleString']()+']['+this[_0x277894(0x15b)]+']['+_0x35b586+_0x277894(0x376)+_0x2bc2e0+'\\x0a';if(!this['logPort'])return console[_0x277894(0x235)]('KrispSDK\\x20-',_0x277894(0x27b),_0x2fccda);this['logPort'][_0x277894(0x2dc)](_0x2fccda);}}();},0x353:(_0x4ea1b5,_0x32ca2a)=>{const _0x450cdb=a0_0x249e;Object['defineProperty'](_0x32ca2a,'__esModule',{'value':!0x0}),_0x32ca2a[_0x450cdb(0x237)]=void 0x0,_0x32ca2a[_0x450cdb(0x237)]=class{constructor(_0x208ee5={}){const _0x49617d=_0x450cdb;this[_0x49617d(0x22a)]=_0x208ee5,this['dataCache']={};}static async['preload'](_0x49f704){const _0x27d55f=_0x450cdb,_0x308267='string'==typeof _0x49f704?_0x49f704:_0x49f704['url'];return fetch(_0x308267,{'cache':_0x27d55f(0x25b)});}['addPath'](_0x59f597,_0x293dab){const _0x42680c=_0x450cdb;this[_0x42680c(0x22a)][_0x59f597]=_0x293dab;}['removePath'](_0x23dc24){const _0x455a60=_0x450cdb;this[_0x455a60(0x22a)][_0x23dc24]&&(this['unloadModel'](_0x23dc24),delete this[_0x455a60(0x22a)][_0x23dc24]);}[_0x450cdb(0x33f)](_0x2d5dbc){const _0x15b761=_0x450cdb;if(!this[_0x15b761(0x22a)][_0x2d5dbc])throw new Error('Krisp\\x20SDK\\x20-\\x20Please\\x20add\\x20model\\x20path\\x20before\\x20loading');return this[_0x15b761(0x205)][_0x2d5dbc]?this[_0x15b761(0x205)][_0x2d5dbc]:new Promise((_0x37fe23,_0x1e2d7c)=>{const _0x34230a=_0x15b761;this[_0x34230a(0x170)](this[_0x34230a(0x22a)][_0x2d5dbc],_0x1bd2fe=>{const _0x294416=_0x34230a;this[_0x294416(0x205)][_0x2d5dbc]=_0x1bd2fe,_0x37fe23(_0x1bd2fe);},_0x1e2d7c);});}async[_0x450cdb(0x36b)](_0x183480,_0x298658){const _0x1e21a4=_0x450cdb;try{const _0x2ce709=await this['loadModel'](_0x298658),_0x4a1a25=new Uint8Array(_0x2ce709),_0x337385=_0x183480[_0x1e21a4(0x2b0)](_0x4a1a25[_0x1e21a4(0x1a6)]);return _0x183480[_0x1e21a4(0x361)][_0x1e21a4(0x2e6)](_0x337385,_0x337385+_0x4a1a25[_0x1e21a4(0x1a6)])[_0x1e21a4(0x2a4)](_0x4a1a25),{'bufferAddress':_0x337385,'bufferLength':_0x4a1a25[_0x1e21a4(0x1a6)]};}catch(_0x45e330){throw new Error(_0x1e21a4(0x1ae)+_0x45e330);}}[_0x450cdb(0x274)](_0x4f35f9,_0x27030f){const _0x5e471c=_0x450cdb;_0x4f35f9[_0x5e471c(0x1e0)](_0x27030f);}[_0x450cdb(0x1aa)](_0x1e28a1){const _0x3d1245=_0x450cdb;this[_0x3d1245(0x205)][_0x1e28a1]&&delete this['dataCache'][_0x1e28a1];}[_0x450cdb(0x170)](_0x2710f8,_0x4fd5e7,_0xf30c55){const _0x53c1c1=_0x450cdb;var _0x358188=new XMLHttpRequest();_0x358188[_0x53c1c1(0x2d6)]('GET',_0x2710f8,!0x0),_0x358188[_0x53c1c1(0x331)]=_0x53c1c1(0x35a),_0x358188[_0x53c1c1(0x279)]=function(){_0xf30c55('Network\\x20error\\x20during\\x20model\\x20loading');},_0x358188[_0x53c1c1(0x2db)]=function(){const _0x10f3d=_0x53c1c1;0xc8==_0x358188[_0x10f3d(0x1b2)]||0x130==_0x358188[_0x10f3d(0x1b2)]||0xce==_0x358188[_0x10f3d(0x1b2)]||0x0==_0x358188[_0x10f3d(0x1b2)]&&_0x358188[_0x10f3d(0x2a7)]?_0x4fd5e7(_0x358188[_0x10f3d(0x2a7)]):_0xf30c55(_0x358188['statusText']+'\\x20:\\x20'+_0x358188[_0x10f3d(0x1f6)]);},_0x358188[_0x53c1c1(0x165)](null);}[_0x450cdb(0x31f)](){const _0x7897f9=_0x450cdb;this['dataCache']={},this[_0x7897f9(0x22a)]={};}};},0x311:(_0x2c23e8,_0x2af462,_0x5148cf)=>{const _0x35915f=a0_0x249e;Object[_0x35915f(0x32f)](_0x2af462,'__esModule',{'value':!0x0}),_0x2af462['SharedRingBuffer']=void 0x0;const _0x48287b=_0x5148cf(0x3c7),_0xa9921d={'READ_INDEX':0x0,'WRITE_INDEX':0x1};class _0x20f501{constructor(_0x3a87a6,_0x487441=0x1){const _0x513ad1=_0x35915f;this['_channelData']=[],this[_0x513ad1(0x1c9)]=_0x487441,this[_0x513ad1(0x2ef)]=new Uint32Array(new SharedArrayBuffer(Object[_0x513ad1(0x371)](_0xa9921d)[_0x513ad1(0x393)]*Uint32Array[_0x513ad1(0x1e6)])),this['_bufferLength']=_0x3a87a6+0x1;for(let _0x21b612=0x0;_0x21b612<_0x487441;_0x21b612++)this[_0x513ad1(0x2b2)]['push'](new Float32Array(new SharedArrayBuffer(this[_0x513ad1(0x380)]*Float32Array[_0x513ad1(0x1e6)])));}static[_0x35915f(0x224)](_0x1f9a48){const _0x26891a=_0x35915f;return Object[_0x26891a(0x27a)](_0x1f9a48,_0x20f501['prototype']);}['push'](_0x3f9060,_0xb93eba){const _0xa177b8=_0x35915f,_0x36c5a3=Atomics[_0xa177b8(0x33d)](this[_0xa177b8(0x2ef)],_0xa9921d[_0xa177b8(0x281)]),_0x5671c0=Atomics[_0xa177b8(0x33d)](this['_state'],_0xa9921d[_0xa177b8(0x175)]);if(this['_getAvailableWrite'](_0x36c5a3,_0x5671c0)<_0xb93eba)return!0x1;let _0x56fa11=_0x5671c0+_0xb93eba;if(this[_0xa177b8(0x380)]<_0x56fa11){_0x56fa11-=this[_0xa177b8(0x380)];for(let _0x5546a1=0x0;_0x5546a1<this[_0xa177b8(0x1c9)];_0x5546a1++){const _0x23a3aa=this['_channelData'][_0x5546a1][_0xa177b8(0x2e6)](_0x5671c0),_0x5a483a=this[_0xa177b8(0x2b2)][_0x5546a1][_0xa177b8(0x2e6)](0x0,_0x56fa11);_0x23a3aa[_0xa177b8(0x2a4)](_0x3f9060[_0x5546a1][_0xa177b8(0x2e6)](0x0,_0x23a3aa[_0xa177b8(0x393)])),_0x5a483a[_0xa177b8(0x2a4)](_0x3f9060[_0x5546a1][_0xa177b8(0x2e6)](_0x23a3aa[_0xa177b8(0x393)]));}}else{for(let _0x1d72e7=0x0;_0x1d72e7<this[_0xa177b8(0x1c9)];_0x1d72e7++)this[_0xa177b8(0x2b2)][_0x1d72e7]['subarray'](_0x5671c0,_0x56fa11)[_0xa177b8(0x2a4)](_0x3f9060[_0x1d72e7]['subarray'](0x0,_0xb93eba));_0x56fa11===this[_0xa177b8(0x380)]&&(_0x56fa11=0x0);}return Atomics['store'](this[_0xa177b8(0x2ef)],_0xa9921d['WRITE_INDEX'],_0x56fa11),!0x0;}['pull'](_0x2fffba,_0x131985){const _0x5b02d5=_0x35915f,_0x4e46e3=Atomics[_0x5b02d5(0x33d)](this['_state'],_0xa9921d[_0x5b02d5(0x281)]),_0xd73330=Atomics[_0x5b02d5(0x33d)](this[_0x5b02d5(0x2ef)],_0xa9921d[_0x5b02d5(0x175)]);if(this['_getAvailableRead'](_0x4e46e3,_0xd73330)<_0x131985)return!0x1;let _0x3230ec=_0x4e46e3+_0x131985;if(this[_0x5b02d5(0x380)]<_0x3230ec){_0x3230ec-=this['_bufferLength'];for(let _0x51c0d8=0x0;_0x51c0d8<this[_0x5b02d5(0x1c9)];_0x51c0d8++){const _0x50ea38=this[_0x5b02d5(0x2b2)][_0x51c0d8][_0x5b02d5(0x2e6)](_0x4e46e3),_0x46cd39=this[_0x5b02d5(0x2b2)][_0x51c0d8][_0x5b02d5(0x2e6)](0x0,_0x3230ec);_0x2fffba[_0x51c0d8]['set'](_0x50ea38),_0x2fffba[_0x51c0d8]['set'](_0x46cd39,_0x50ea38[_0x5b02d5(0x393)]);}}else{for(let _0x78dfe7=0x0;_0x78dfe7<this['_channelCount'];++_0x78dfe7)_0x2fffba[_0x78dfe7][_0x5b02d5(0x2a4)](this[_0x5b02d5(0x2b2)][_0x78dfe7][_0x5b02d5(0x2e6)](_0x4e46e3,_0x3230ec));_0x3230ec===this['_bufferLength']&&(_0x3230ec=0x0);}return Atomics[_0x5b02d5(0x1af)](this[_0x5b02d5(0x2ef)],_0xa9921d[_0x5b02d5(0x281)],_0x3230ec),!0x0;}[_0x35915f(0x2c4)](){const _0x1ea778=_0x35915f,_0x52f664=Atomics[_0x1ea778(0x33d)](this[_0x1ea778(0x2ef)],_0xa9921d[_0x1ea778(0x281)]),_0x5bef5f=Atomics['load'](this[_0x1ea778(0x2ef)],_0xa9921d[_0x1ea778(0x175)]);_0x48287b[_0x1ea778(0x23b)][_0x1ea778(0x2b7)](this,{'availableRead':this[_0x1ea778(0x2a6)](_0x52f664,_0x5bef5f),'availableWrite':this[_0x1ea778(0x17c)](_0x52f664,_0x5bef5f)});}[_0x35915f(0x2d4)](){const _0x184171=_0x35915f,_0x371384=Atomics['load'](this['_state'],_0xa9921d['READ_INDEX']),_0x2540cd=Atomics[_0x184171(0x33d)](this[_0x184171(0x2ef)],_0xa9921d[_0x184171(0x175)]);return this[_0x184171(0x2a6)](_0x371384,_0x2540cd);}[_0x35915f(0x185)](_0x21fadb){const _0x137c16=_0x35915f;return this[_0x137c16(0x2d4)]()>=_0x21fadb;}['getBufferLength'](){const _0x57d5d9=_0x35915f;return this[_0x57d5d9(0x380)]-0x1;}[_0x35915f(0x17c)](_0x568419,_0x1fa32b){const _0x4c8129=_0x35915f;return _0x1fa32b>=_0x568419?this[_0x4c8129(0x380)]-_0x1fa32b+_0x568419-0x1:_0x568419-_0x1fa32b-0x1;}[_0x35915f(0x2a6)](_0x11acce,_0x1c8c9b){return _0x1c8c9b>=_0x11acce?_0x1c8c9b-_0x11acce:_0x1c8c9b+this['_bufferLength']-_0x11acce;}}_0x2af462[_0x35915f(0x2a1)]=_0x20f501;},0x14d:(_0x1b03d4,_0x41a160)=>{const _0x13a26a=a0_0x249e;Object['defineProperty'](_0x41a160,_0x13a26a(0x211),{'value':!0x0}),_0x41a160['sampleModelMap']=void 0x0,_0x41a160[_0x13a26a(0x2ee)]={0x1f40:_0x13a26a(0x356),0x3e80:_0x13a26a(0x15c),0x5dc0:_0x13a26a(0x1c4),0x7d00:_0x13a26a(0x1c4),0xac44:_0x13a26a(0x1c4),0xbb80:_0x13a26a(0x1c4),0x15888:_0x13a26a(0x1c4),0x17700:'model32'};},0x35e:(_0x29f31d,_0x4aa35c,_0x5169dd)=>{const _0x31c1ff=a0_0x249e;Object[_0x31c1ff(0x32f)](_0x4aa35c,_0x31c1ff(0x211),{'value':!0x0}),_0x4aa35c[_0x31c1ff(0x23c)]=_0x4aa35c[_0x31c1ff(0x37b)]=void 0x0;const _0x2a9086=_0x5169dd(0x3),_0x32b70d=_0x5169dd(0x290);function _0x4adf4c(_0xaf45a8){const _0x11e4cf=_0x31c1ff;return window[_0x11e4cf(0x397)][_0x11e4cf(0x1ab)](new Blob([_0xaf45a8],{'type':_0x11e4cf(0x2b8)}));}_0x4aa35c['WORKLET_URL']=_0x4adf4c(_0x2a9086),_0x4aa35c[_0x31c1ff(0x23c)]=_0x4adf4c(_0x32b70d);},0x2af:(_0x33ec2b,_0x1bd3d9)=>{const _0x55006b=a0_0x249e;Object[_0x55006b(0x32f)](_0x1bd3d9,'__esModule',{'value':!0x0}),_0x1bd3d9[_0x55006b(0x2d9)]=_0x1bd3d9[_0x55006b(0x28d)]=_0x1bd3d9['blobToBase64']=void 0x0,_0x1bd3d9[_0x55006b(0x168)]=async function(_0x459422){return new Promise((_0x1f9c99,_0x1203e6)=>{const _0x10d22e=a0_0x249e,_0x4f8669=new FileReader();_0x4f8669[_0x10d22e(0x351)]=()=>_0x1f9c99(_0x4f8669['result']),_0x4f8669[_0x10d22e(0x199)](_0x459422);});},_0x1bd3d9[_0x55006b(0x28d)]=function(_0x2426c9,_0x36a992){const _0x572d2f=_0x55006b,_0x126ed6=window[_0x572d2f(0x397)][_0x572d2f(0x1ab)](_0x36a992),_0x590d71=document[_0x572d2f(0x2c5)]('a');_0x590d71[_0x572d2f(0x1cc)]=_0x126ed6,_0x590d71[_0x572d2f(0x37c)]=_0x2426c9||_0x572d2f(0x2ac),_0x590d71[_0x572d2f(0x3b4)]();},_0x1bd3d9[_0x55006b(0x2d9)]=function(_0x4f6b9d,_0x3e4784){const _0x226b15=_0x55006b;if(!_0x4f6b9d[_0x226b15(0x393)])return new Blob([],{'type':_0x226b15(0x392)});const _0x4f9ed2=_0x4f6b9d[0x0][_0x226b15(0x393)],_0x2f982b=new Float32Array(_0x4f9ed2*_0x4f6b9d[_0x226b15(0x393)]);_0x4f6b9d[_0x226b15(0x38d)]((_0x110141,_0x28154f)=>{const _0x2f10b6=_0x226b15;_0x2f982b[_0x2f10b6(0x2a4)](_0x110141,_0x28154f*_0x4f9ed2);});const _0x5a1341=function(_0x302c59,_0x2b2def){const _0xe5e05e=_0x226b15,_0x3f821e=_0x2b2def[_0xe5e05e(0x22c)]?Float32Array:Uint16Array,_0x4ddb6c=_0x302c59[_0xe5e05e(0x1a6)]/_0x3f821e[_0xe5e05e(0x1e6)],_0x59c4b8=function(_0x519f37){const _0x57bfaa=_0xe5e05e,_0x5995ec=_0x519f37[_0x57bfaa(0x2aa)],_0x23ac48=_0x519f37[_0x57bfaa(0x329)]||0x2,_0x310084=_0x519f37[_0x57bfaa(0x22c)]?0x4:0x2,_0x903382=_0x519f37[_0x57bfaa(0x22c)]?0x3:0x1,_0x22f5da=_0x519f37['sampleRate'],_0x27a867=_0x23ac48*_0x310084,_0x2bb106=_0x22f5da*_0x27a867,_0x40ba05=_0x5995ec*_0x27a867,_0x2d4b75=new ArrayBuffer(0x2c),_0x11a7b2=new DataView(_0x2d4b75);let _0x1b3033=0x0;function _0x5d7c26(_0x5899d7){const _0x2ab581=_0x57bfaa;for(let _0x425958=0x0;_0x425958<_0x5899d7['length'];_0x425958++)_0x11a7b2['setUint8'](_0x1b3033+_0x425958,_0x5899d7[_0x2ab581(0x22b)](_0x425958));_0x1b3033+=_0x5899d7['length'];}function _0x1ce79e(_0x35c32f){const _0x2f70d8=_0x57bfaa;_0x11a7b2[_0x2f70d8(0x221)](_0x1b3033,_0x35c32f,!0x0),_0x1b3033+=0x4;}function _0x4473e3(_0x13edd4){const _0x149d2e=_0x57bfaa;_0x11a7b2[_0x149d2e(0x1c2)](_0x1b3033,_0x13edd4,!0x0),_0x1b3033+=0x2;}return _0x5d7c26(_0x57bfaa(0x1a2)),_0x1ce79e(_0x40ba05+0x24),_0x5d7c26(_0x57bfaa(0x18f)),_0x5d7c26(_0x57bfaa(0x1e8)),_0x1ce79e(0x10),_0x4473e3(_0x903382),_0x4473e3(_0x23ac48),_0x1ce79e(_0x22f5da),_0x1ce79e(_0x2bb106),_0x4473e3(_0x27a867),_0x4473e3(0x8*_0x310084),_0x5d7c26('data'),_0x1ce79e(_0x40ba05),new Uint8Array(_0x2d4b75);}(Object[_0xe5e05e(0x36f)]({},_0x2b2def,{'numFrames':_0x4ddb6c})),_0x1a9cfb=new Uint8Array(_0x59c4b8[_0xe5e05e(0x393)]+_0x302c59[_0xe5e05e(0x1a6)]);return _0x1a9cfb[_0xe5e05e(0x2a4)](_0x59c4b8,0x0),_0x1a9cfb[_0xe5e05e(0x2a4)](new Uint8Array(_0x302c59),_0x59c4b8['length']),_0x1a9cfb;}(_0x2f982b['buffer'],{'isFloat':!0x0,'numChannels':0x1,'sampleRate':_0x3e4784});return new Blob([_0x5a1341],{'type':_0x226b15(0x2be)});};},0x1df:(_0x23a97b,_0xd495ef)=>{const _0x3fb394=a0_0x249e;Object['defineProperty'](_0xd495ef,_0x3fb394(0x211),{'value':!0x0}),_0xd495ef['isMobile']=_0xd495ef['isSafari']=void 0x0,_0xd495ef[_0x3fb394(0x3be)]=function(){const _0x28e0ea=_0x3fb394;return navigator[_0x28e0ea(0x160)]&&navigator[_0x28e0ea(0x160)][_0x28e0ea(0x276)](_0x28e0ea(0x290))>-0x1&&navigator[_0x28e0ea(0x377)]&&-0x1==navigator[_0x28e0ea(0x377)][_0x28e0ea(0x276)](_0x28e0ea(0x334))&&-0x1==navigator[_0x28e0ea(0x377)]['indexOf']('FxiOS');},_0xd495ef[_0x3fb394(0x318)]=function(){const _0x294989=_0x3fb394,_0x3bffdf=navigator[_0x294989(0x377)]||navigator[_0x294989(0x160)]||window['opera'];return/iPhone|iPad|iPod|Android|IEMobile|Windows Phone|BlackBerry|webOS|Opera Mini|Nexus 7|Nexus 10|KFAPWI/i[_0x294989(0x34d)](_0x3bffdf)||/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i['test'](_0x3bffdf)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i[_0x294989(0x34d)](_0x3bffdf[_0x294989(0x2f9)](0x0,0x4));};},0x196:(_0x35883e,_0x39cada,_0x225ea7)=>{const _0x5c53a1=a0_0x249e;Object[_0x5c53a1(0x32f)](_0x39cada,_0x5c53a1(0x211),{'value':!0x0}),_0x39cada[_0x5c53a1(0x326)]=_0x39cada[_0x5c53a1(0x1f8)]=void 0x0;const _0x17e7f8=_0x225ea7(0x311),_0xcbb4ef=_0x225ea7(0x2f9);_0x39cada[_0x5c53a1(0x1f8)]={'REQUEST_NOISE_CANCELLATION':0x0},_0x39cada[_0x5c53a1(0x326)]=function(_0x5e304c){const _0x517c85=_0x5c53a1,_0x3161b1=0x2*_0xcbb4ef['SDK_FRAME_DURATION_10MS']*_0x5e304c['sampleRate']/0x3e8*_0xcbb4ef[_0x517c85(0x300)];return{'inputRingBuffer':new _0x17e7f8[(_0x517c85(0x2a1))](_0x3161b1,_0x5e304c[_0x517c85(0x390)]||0x1),'outputRingBuffer':new _0x17e7f8[(_0x517c85(0x2a1))](_0x3161b1,_0x5e304c['channelCount']||0x1),'atomicState':new Int32Array(new SharedArrayBuffer(Object[_0x517c85(0x371)](_0x39cada[_0x517c85(0x1f8)])[_0x517c85(0x393)]*Int32Array['BYTES_PER_ELEMENT']))};};},0x2f9:(_0x4da7e0,_0x4483c2)=>{const _0x6979a3=a0_0x249e;Object[_0x6979a3(0x32f)](_0x4483c2,_0x6979a3(0x211),{'value':!0x0}),_0x4483c2['BVC_BLOCKED_DEVICES']=_0x4483c2[_0x6979a3(0x352)]=_0x4483c2['MIN_BVC_SUPPORT_SAMPLE_RATE']=_0x4483c2[_0x6979a3(0x201)]=_0x4483c2[_0x6979a3(0x262)]=_0x4483c2[_0x6979a3(0x39f)]=_0x4483c2[_0x6979a3(0x239)]=_0x4483c2[_0x6979a3(0x2fd)]=_0x4483c2[_0x6979a3(0x369)]=_0x4483c2[_0x6979a3(0x191)]=_0x4483c2[_0x6979a3(0x300)]=void 0x0,_0x4483c2['WEB_AUDIO_CHUNK_SIZE']=0x80,_0x4483c2[_0x6979a3(0x191)]=_0x6979a3(0x320),_0x4483c2['BUFFER_DROP_SIZE_MS']=0x1f4,_0x4483c2['BUFFER_DROP_KEEP_MS']=0x28,_0x4483c2[_0x6979a3(0x239)]=0xc8,_0x4483c2[_0x6979a3(0x39f)]=0xa,_0x4483c2[_0x6979a3(0x262)]=[0x1f40,0x3e80,0x5dc0,0x7d00,0xac44,0xbb80,0x15888,0x17700],_0x4483c2['SUPPORTED_INBOUND_SAMPLE_RATES']=[0x1f40],_0x4483c2[_0x6979a3(0x18a)]=0x3e80,_0x4483c2[_0x6979a3(0x352)]=[],_0x4483c2[_0x6979a3(0x277)]=['macbook\\x20pro',_0x6979a3(0x2c0),_0x6979a3(0x396),_0x6979a3(0x195),_0x6979a3(0x372),_0x6979a3(0x2c1),_0x6979a3(0x275),_0x6979a3(0x1f1),_0x6979a3(0x1d0),_0x6979a3(0x34f),_0x6979a3(0x203),_0x6979a3(0x278),'razer\\x20kiyo','streamcam',_0x6979a3(0x16d),_0x6979a3(0x29e),_0x6979a3(0x349),_0x6979a3(0x306),_0x6979a3(0x232),_0x6979a3(0x322),_0x6979a3(0x164),'hyperx\\x20quadcast',_0x6979a3(0x2bd),_0x6979a3(0x193),_0x6979a3(0x2ba),'gamedac',_0x6979a3(0x19a),'axcs\\x20speaker','mateview',_0x6979a3(0x30c),_0x6979a3(0x15f),'pebble\\x20v3','jabra\\x20speak',_0x6979a3(0x2d7),'samson\\x20gomic',_0x6979a3(0x19e),_0x6979a3(0x1ce),_0x6979a3(0x20e),'amazonbasics\\x20desktop\\x20mini\\x20mic',_0x6979a3(0x3a3),_0x6979a3(0x1ac),_0x6979a3(0x2c8),_0x6979a3(0x222),'stf\\x20coloso',_0x6979a3(0x2c2),_0x6979a3(0x36a),_0x6979a3(0x3b3),_0x6979a3(0x280),_0x6979a3(0x2ec),_0x6979a3(0x328),_0x6979a3(0x2f8),_0x6979a3(0x21b),'edifier\\x20luna\\x20eclipse',_0x6979a3(0x324),_0x6979a3(0x18d),_0x6979a3(0x1b7),_0x6979a3(0x291),_0x6979a3(0x30e),_0x6979a3(0x311),_0x6979a3(0x31e),'trio8800','edifier\\x20s3000\\x20pro','eneby20',_0x6979a3(0x39e),_0x6979a3(0x18e),_0x6979a3(0x391),_0x6979a3(0x2c3),'thronmax\\x20mdrill','thronmax\\x20pulse',_0x6979a3(0x2b3),_0x6979a3(0x398),_0x6979a3(0x385),_0x6979a3(0x1eb),_0x6979a3(0x3ab),_0x6979a3(0x252),_0x6979a3(0x30d),_0x6979a3(0x379),_0x6979a3(0x192),_0x6979a3(0x225),'razer\\x20base\\x20station\\x20v2\\x20chroma',_0x6979a3(0x388),_0x6979a3(0x399),'audioengine',_0x6979a3(0x2e3),_0x6979a3(0x38e),_0x6979a3(0x17f),'anker\\x20soundcore',_0x6979a3(0x383),_0x6979a3(0x184),_0x6979a3(0x364),'pc-lm1e\\x20audio',_0x6979a3(0x1e5),_0x6979a3(0x1b1),'jabra\\x20panacast',_0x6979a3(0x321),'samsung\\x20slimfit\\x20cam',_0x6979a3(0x2ad),'usb\\x20mic',_0x6979a3(0x38c),'teufel\\x20cinebar\\x20one',_0x6979a3(0x2e9),'soundtech',_0x6979a3(0x19b),'speechmike\\x20iii',_0x6979a3(0x3bc),_0x6979a3(0x2f2),_0x6979a3(0x2da),'simmons\\x20sd600',_0x6979a3(0x304),_0x6979a3(0x202),_0x6979a3(0x327),_0x6979a3(0x23a),_0x6979a3(0x257),'inc2000',_0x6979a3(0x302),_0x6979a3(0x3af),_0x6979a3(0x233),'lg-pk3','lgtg-210',_0x6979a3(0x2b6),'office\\x20node\\x20bt','iconf','ready\\x20elite',_0x6979a3(0x264),_0x6979a3(0x21f),_0x6979a3(0x374),_0x6979a3(0x206),_0x6979a3(0x218),_0x6979a3(0x287),'bose\\x20sliii','soundlink','powerconf\\x20s3',_0x6979a3(0x38b),_0x6979a3(0x3b5),_0x6979a3(0x32b),'bss\\x204803',_0x6979a3(0x1b8),_0x6979a3(0x253),_0x6979a3(0x1ec),'bose\\x20solo','bugani\\x20m83','cambridge\\x20audio\\x20one','soundcore\\x20mini',_0x6979a3(0x37a),_0x6979a3(0x3a1),_0x6979a3(0x27f),'by-pm500',_0x6979a3(0x188),_0x6979a3(0x2f7),'edifier\\x20s880db',_0x6979a3(0x1ef),'fantech\\x20luminous\\x20c30','anker\\x20soundcore\\x20boost',_0x6979a3(0x20f),_0x6979a3(0x38f),'jbl\\x20pulse\\x204',_0x6979a3(0x1b4),_0x6979a3(0x316),'mi\\x20portable\\x20bluetooth\\x20speaker','sb-50',_0x6979a3(0x169),_0x6979a3(0x251),'soundcore\\x202','soundcore\\x20motion\\x20b',_0x6979a3(0x330),_0x6979a3(0x332),'ziisound\\x20d5',_0x6979a3(0x3a0),'presence',_0x6979a3(0x3a6),_0x6979a3(0x207),_0x6979a3(0x387),_0x6979a3(0x36c),'ln01a',_0x6979a3(0x1f9),_0x6979a3(0x3bd),'monster\\x20s310','pyleusa','phonak\\x20compilot\\x20ii',_0x6979a3(0x1e1),_0x6979a3(0x186),_0x6979a3(0x2f4),_0x6979a3(0x189),_0x6979a3(0x25e),'wireless\\x20controller','epson\\x20projector\\x20mpp\\x20audio',_0x6979a3(0x1bd),_0x6979a3(0x32d),_0x6979a3(0x1da),'at2020\\x20usb',_0x6979a3(0x26c),_0x6979a3(0x152),_0x6979a3(0x338),'hk\\x20onyx\\x20studio\\x204',_0x6979a3(0x259),_0x6979a3(0x196),_0x6979a3(0x2b1),_0x6979a3(0x159),'zv-1',_0x6979a3(0x2f6),_0x6979a3(0x366),'creative\\x20t60',_0x6979a3(0x2af),_0x6979a3(0x182),_0x6979a3(0x1f2),_0x6979a3(0x1a5),_0x6979a3(0x3b9),'tonor\\x20tc-2030\\x20audio\\x20device','wireless\\x20go\\x20ii\\x20rx','kandao\\x20meeting','klim\\x20talk',_0x6979a3(0x35f),_0x6979a3(0x20b),_0x6979a3(0x30f),'verbatim\\x201080p\\x20mic',_0x6979a3(0x1db),_0x6979a3(0x29d),_0x6979a3(0x3b6),_0x6979a3(0x1bb),_0x6979a3(0x2f1),_0x6979a3(0x1d2),_0x6979a3(0x230),_0x6979a3(0x365),_0x6979a3(0x2b9),_0x6979a3(0x2ea),_0x6979a3(0x26a),'infinity\\x20fuze\\x20100',_0x6979a3(0x24f),_0x6979a3(0x342),_0x6979a3(0x3b8),_0x6979a3(0x346),_0x6979a3(0x337),_0x6979a3(0x25f),_0x6979a3(0x384),'m799b',_0x6979a3(0x23d),'kz-dc4k\\x20audio','shure\\x20mv5',_0x6979a3(0x308),'room1\\x20bluetooth',_0x6979a3(0x35b),'creative\\x20live!\\x20mic\\x20m3',_0x6979a3(0x1b5),_0x6979a3(0x389),'edifier\\x20mp380',_0x6979a3(0x1f0),'bedroom\\x20speaker',_0x6979a3(0x1fb),'hk_allure_portable','megablast',_0x6979a3(0x2fa),'oppo\\x20wireless\\x20speaker',_0x6979a3(0x33e),_0x6979a3(0x167),'oontz\\x20angle\\x203\\x20plus',_0x6979a3(0x1cd),_0x6979a3(0x16e),'redmi\\x20tv\\x20soundbar',_0x6979a3(0x1d1),_0x6979a3(0x1c8),'audiohub\\x20speaker',_0x6979a3(0x32a),'ian\\x20layugan\u2019s\\x20double\\x20chill\\x20speaker',_0x6979a3(0x208),_0x6979a3(0x2a0),_0x6979a3(0x367),_0x6979a3(0x357),_0x6979a3(0x325),'ndz-03-ga',_0x6979a3(0x284),_0x6979a3(0x1c6),_0x6979a3(0x3a7),_0x6979a3(0x39d),'razer\\x20leviathan','s2025',_0x6979a3(0x354),'sdh-201',_0x6979a3(0x26d),_0x6979a3(0x247),_0x6979a3(0x15d),'spa4040b',_0x6979a3(0x362),_0x6979a3(0x30b),_0x6979a3(0x255),'stone\\x201400\\x20mini','at-csp5',_0x6979a3(0x33b),_0x6979a3(0x343),_0x6979a3(0x1a3),_0x6979a3(0x37d),_0x6979a3(0x34c),_0x6979a3(0x17e),_0x6979a3(0x249),_0x6979a3(0x2bf),_0x6979a3(0x28c),'tcl\\x20ts5000',_0x6979a3(0x162),'[samsung]\\x20airtrack',_0x6979a3(0x29c),_0x6979a3(0x2e7),_0x6979a3(0x263),_0x6979a3(0x153),_0x6979a3(0x2f5),_0x6979a3(0x241),_0x6979a3(0x2de),'yu6\\x20by\\x20kanto','yvc-330\\x20yamaha',_0x6979a3(0x273),_0x6979a3(0x2c6),_0x6979a3(0x16b),_0x6979a3(0x29a),_0x6979a3(0x190),_0x6979a3(0x340),_0x6979a3(0x22f),_0x6979a3(0x1dc),_0x6979a3(0x248),_0x6979a3(0x256),_0x6979a3(0x17b),_0x6979a3(0x1e3),'crestron\\x20mercury',_0x6979a3(0x28e),_0x6979a3(0x2e0),_0x6979a3(0x282),_0x6979a3(0x28a),_0x6979a3(0x1ea),_0x6979a3(0x166),_0x6979a3(0x23e),'razer\\x20seiren',_0x6979a3(0x158),_0x6979a3(0x1fd),_0x6979a3(0x32c),_0x6979a3(0x270),_0x6979a3(0x2a2),_0x6979a3(0x157),_0x6979a3(0x2dd),'fifine\\x20k669\\x20microphone',_0x6979a3(0x215),_0x6979a3(0x2ed),_0x6979a3(0x227),'aoni\\x20microphone',_0x6979a3(0x309),_0x6979a3(0x336),'fifine\\x20k690\\x20microphone',_0x6979a3(0x3b7),_0x6979a3(0x344),_0x6979a3(0x37e),_0x6979a3(0x292),_0x6979a3(0x381),_0x6979a3(0x28f),_0x6979a3(0x1f5),'trust\\x20gxt\\x20242\\x20microphone',_0x6979a3(0x359),_0x6979a3(0x36e),_0x6979a3(0x180),_0x6979a3(0x1a0),_0x6979a3(0x3ae),_0x6979a3(0x34b),_0x6979a3(0x1bf),'polycom\\x20voxbox',_0x6979a3(0x1d5),'wireless\\x20microphone\\x20rx','poly\\x20sync',_0x6979a3(0x26b),_0x6979a3(0x27e),_0x6979a3(0x197),_0x6979a3(0x2cf),_0x6979a3(0x2bc),'fifine\\x20k670\\x20microphone','obsbot\\x20meet\\x204k\\x20microphone','obsbot\\x20tiny\\x204k\\x20microphone',_0x6979a3(0x210),'gxt\\x20244\\x20microphone',_0x6979a3(0x368),_0x6979a3(0x223),_0x6979a3(0x19c),_0x6979a3(0x20d),_0x6979a3(0x1a7),_0x6979a3(0x38a),_0x6979a3(0x285),_0x6979a3(0x3a5),'sony:srs-x2',_0x6979a3(0x216),_0x6979a3(0x240),_0x6979a3(0x16a),_0x6979a3(0x2d8),_0x6979a3(0x2fb),_0x6979a3(0x1f4),'c2422he','emeet\\x20m2',_0x6979a3(0x1ee),_0x6979a3(0x265),_0x6979a3(0x353),'ht-s100f',_0x6979a3(0x3a9),_0x6979a3(0x2fe),_0x6979a3(0x269),_0x6979a3(0x2ab),'bw02-bt','hw01','soundcore\\x20mini\\x203\\x20pro',_0x6979a3(0x17d),'taotronics\\x20tt-sk023','tribit\\x20maxsound\\x20plus','anker\\x20powerconf\\x20s3\uFF08\u5927\u4F1A\u8B70\u5BA4\uFF09',_0x6979a3(0x2d0),_0x6979a3(0x1ca),'wonderboom',_0x6979a3(0x2bb)];},0x260:(_0x2c7df0,_0x39062f,_0xac8c7a)=>{const _0x484930=a0_0x249e;Object[_0x484930(0x32f)](_0x39062f,_0x484930(0x211),{'value':!0x0}),_0x39062f[_0x484930(0x2d3)]=_0x39062f['validateModels']=_0x39062f[_0x484930(0x298)]=_0x39062f[_0x484930(0x37f)]=_0x39062f[_0x484930(0x24d)]=void 0x0;const _0x3ecf6d=_0xac8c7a(0x3c7),_0x281143=_0xac8c7a(0x14d),_0x56c481=_0xac8c7a(0x2f9);function _0x3bd2f1(_0x2fc38b){const _0x47bf93=_0x484930;return _0x281143[_0x47bf93(0x2ee)][_0x2fc38b];}function _0x2f6fde(_0x936826){const _0x3bb755=_0x484930;return/^https?\\:\\/\\//i[_0x3bb755(0x34d)](_0x936826)||/^file\\:\\/\\//i[_0x3bb755(0x34d)](_0x936826)||/^chrome-extension\\:\\/\\//i['test'](_0x936826)||/^moz-extension\\:\\/\\//i[_0x3bb755(0x34d)](_0x936826)?new URL(_0x936826)[_0x3bb755(0x173)]():('/'!=_0x936826?.[0x0]&&(_0x936826='/'+_0x936826),new URL(window[_0x3bb755(0x3ad)]['origin']+_0x936826)[_0x3bb755(0x173)]());}_0x39062f[_0x484930(0x24d)]=_0x3bd2f1,_0x39062f[_0x484930(0x37f)]=function(_0x5ef00c){const _0x3f5541=_0x484930;try{return Object['values'](_0x5ef00c)[_0x3f5541(0x38d)](_0xb84b3c=>_0x2f6fde(_0xb84b3c)),!0x1;}catch(_0x1f2b1a){return!0x0;}},_0x39062f[_0x484930(0x298)]=_0x2f6fde,_0x39062f['validateModels']=function(_0x6df280){const _0xd1549b=_0x484930,_0x5973a0={},_0x6a1e46={};try{for(let _0x49bb35 in _0x6df280){const _0x5a4439=_0x6df280[_0x49bb35];if(_0xd1549b(0x1a4)==typeof _0x5a4439)_0x5973a0[_0x49bb35]=_0x2f6fde(_0x5a4439);else{if('object'!=typeof _0x5a4439)throw new Error(_0xd1549b(0x266));{const _0x2f0b80=_0x2f6fde(_0x5a4439['url']);_0x5973a0[_0x49bb35]=_0x2f0b80,_0x5a4439['preload']&&(_0x6a1e46[_0x49bb35]=_0x2f0b80);}}}}catch(_0x4f394e){throw _0x3ecf6d['Logger']['error'](_0xd1549b(0x1cf),_0x4f394e),_0x4f394e;}return[_0x5973a0,_0x6a1e46];},_0x39062f[_0x484930(0x2d3)]=function(_0x49b113,_0x505d72){const _0x115bfc=_0x484930;let _0x120864=_0x56c481['SUPPORTED_SAMPLE_RATES'][_0x115bfc(0x276)](_0x505d72);for(;_0x120864>=0x0;){const _0x12b8a2=_0x3bd2f1(_0x56c481[_0x115bfc(0x262)][_0x120864]);if(_0x49b113[_0x12b8a2])return[_0x12b8a2,_0x2f6fde(_0x49b113[_0x12b8a2])];_0x120864--;}throw new Error('MODEL_NOT_FOUND');};}},I={};function g(_0x4b13d1){const _0x2a48b2=a0_0x249e;var _0x7805d2=I[_0x4b13d1];if(void 0x0!==_0x7805d2)return _0x7805d2[_0x2a48b2(0x319)];var _0x12b062=I[_0x4b13d1]={'exports':{}};return A[_0x4b13d1](_0x12b062,_0x12b062[_0x2a48b2(0x319)],g),_0x12b062['exports'];}var C={};((()=>{const _0x4751f8=a0_0x249e;var _0x3006dd=C;Object[_0x4751f8(0x32f)](_0x3006dd,'X',{'value':!0x0});const _0x56ed5a=g(0x3e);_0x3006dd['Z']=_0x56ed5a[_0x4751f8(0x267)];})());var Q=C['X'],B=C['Z'];export{Q as __esModule,B as default};", "import { DomainCategory } from \"@100mslive/hms-video-store\";\n\nexport const getAnalyticsEvent = (eventName: string) => {\n  return {\n    name: eventName,\n    level: 1,\n    includesPII: false,\n    properties: { plugin_name: \"HMSKrispPlugin\" },\n    metadata: { peer: {}, userAgent: \"\" },\n    timestamp: Date.now(),\n    device_id: \"\",\n    event_id: Date.now().toString(),\n    toSignalParams: () => {\n      return {\n        name: eventName,\n        info: { domain: DomainCategory.CUSTOM, timestamp: Date.now() },\n        timestamp: Date.now(),\n      };\n    },\n  };\n};\n"],
  "mappings": "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",
  "names": ["import_lodash", "import_eventemitter2", "import_eventemitter2", "require_package", "__commonJSMin", "exports", "module", "HMSRoomState", "HMSMessageType", "HMSNotificationSeverity", "HMSNotificationTypes", "HMSPlaylistType", "getScreenSharesByPeer", "tracks", "peer", "videoTrack", "audioTrack", "trackID", "track", "isScreenShare", "isAudio", "isVideo", "isAudioPlaylist", "isVideoPlaylist", "isDegraded", "isTrackEnabled", "store", "isRoleAllowedToPublish", "role", "_a", "video", "audio", "screen", "HMSLogLevel", "isTestEnv", "HMSLogger", "tag", "data", "mark", "level", "entry", "error", "parsedUserAgent", "UAParser", "isBrowser", "_a", "isNode", "checkIsSupported", "isSupported", "_a", "_b", "isSafari", "parsedUserAgent", "isFirefox", "DomainCategory", "getDomainCategory", "isBrowser", "baseurl", "domainCategory", "ErrorCodes", "HMSException", "_HMSException", "code", "name", "action", "message", "description", "isTerminal", "error", "HMSTrackException", "trackType", "__spreadProps", "__spreadValues", "HMSTrackExceptionTrackType", "terminalActions", "ErrorFactory", "action", "description", "HMSException", "ErrorCodes", "code", "isTerminal", "HMSTrackException", "deviceInfo", "message", "deviceType", "jsonMessage", "entity", "LocalStorage", "key", "val", "i", "initializeLocalstoragePolyfill", "isBrowser", "e", "HMSLogger", "_a", "stringItem", "value", "stringValue", "getAnalyticsDeviceId", "id", "storage", "storageId", "uuid", "isPresent", "value", "sdk_version", "createUserAgent", "sdkEnv", "frameworkInfo", "sdk", "env", "domainCategory", "isNode", "convertObjectToString", "parsedOs", "parsedUserAgent", "parsedDevice", "parsedBrowser", "os", "replaceSpaces", "os_version", "browser", "device_model", "s", "object", "delimiter", "key", "isPresent", "AnalyticsEvent", "name", "level", "properties", "includesPII", "timestamp", "uuid", "getAnalyticsDeviceId", "__spreadProps", "__spreadValues", "AnalyticsEventFactory", "error", "additionalProperties", "requestedAt", "respondedAt", "endpoint", "_a", "_b", "props", "__objRest", "_c", "_d", "devices", "settings", "message", "type", "status", "isUserSelection", "selection", "stats", "track", "isDegraded", "restoredAt", "duration", "device", "started", "reason", "deviceInfo", "ok", "initialProperties", "errorProperties", "HMSException", "DeviceStorage", "LocalStorage", "devices", "value", "type", "deviceId", "groupId", "newSelection", "device", "HMSLogger", "selectedDevices", "current", "DeviceStorageManager", "HMSAudioPluginType", "HMSPluginUnsupportedTypes", "HMSAudioDeviceCategory", "debounce", "fn", "delay", "timer", "args", "context", "HMSPeerType", "HMSRecordingState", "HLSPlaylistType", "HLSStreamType", "HMSTranscriptionState", "HMSTranscriptionMode", "HMSAudioMode", "DeviceType", "HMSIntersectionObserverWrapper", "element", "onIntersection", "_a", "entries", "entry", "isSupported", "isBrowser", "HMSLogger", "HMSIntersectionObserver", "HMSResizeObserverWrapper", "onResize", "options", "debounce", "HMSResizeObserver", "HMSVideoPluginType", "HMSVideoPluginCanvasContextType", "CLIENT_ANAYLTICS_PROD_ENDPOINT", "CLIENT_ANAYLTICS_QA_ENDPOINT", "MAX_SAFE_INTEGER", "HMSIdFactory", "uuidv4", "selectRoom", "store", "selectErrors", "selectRecentError", "createSelector", "errors", "selectRoomID", "room", "selectPeersMap", "selectMessagesMap", "selectMessageIDsInOrder", "selectTracksMap", "selectFullAppData", "store", "selectSpeakers", "store", "selectIsConnectedToRoom", "createSelector", "selectRoom", "room", "selectPeerCount", "isConnected", "selectHideLocalPeer", "store", "selectPeers", "selectPeersMap", "storePeers", "hideLocalPeer", "peerID", "selectTracks", "selectTracksMap", "storeTracks", "selectLocalPeer", "peers", "selectLocalPeerID", "selectLocalPeerName", "peer", "selectLocalPeerRoleName", "selectLocalAudioTrackID", "selectLocalVideoTrackID", "selectLocalAuxiliaryTrackIDs", "selectLocalTrackIDs", "audioTrackID", "videoTrackID", "auxiliaryTrackIDs", "trackIDs", "selectRemotePeers", "p", "selectDominantSpeaker", "selectSpeakers", "peersMap", "speakers", "speakersInOrder", "s1", "s2", "_a", "_b", "s1Level", "selectIsLocalScreenShared", "createSelector", "selectLocalPeer", "selectTracksMap", "localPeer", "tracksMap", "video", "audio", "getScreenSharesByPeer", "selectPeerScreenSharing", "selectPeersMap", "peersMap", "screensharePeer", "peerID", "peer", "selectIsSomeoneScreenSharing", "selectPeerSharingAudio", "selectPeersScreenSharing", "videoPeers", "audioPeers", "selectPeerSharingVideoPlaylist", "trackId", "track", "isVideoPlaylist", "isVideo", "selectPeerSharingAudioPlaylist", "isAudioPlaylist", "selectDegradedTracks", "selectTracks", "tracks", "isDegraded", "selectHMSMessagesCount", "selectMessageIDsInOrder", "messageIDs", "selectUnreadHMSMessagesCount", "selectMessagesMap", "messages", "m", "selectHMSMessages", "msgIDs", "msgMap", "msgId", "selectHMSBroadcastMessages", "_a", "selectUnreadHMSBroadcastMessagesCount", "selectRoomState", "selectRoom", "room", "selectIsInPreview", "roomState", "selectRoomStarted", "selectIsTranscriptionEnabled", "transcription", "selectRolesMap", "store", "selectAvailableRoleNames", "rolesMap", "selectLocalPeerRole", "selectPreviewRoleName", "selectPreviewRole", "roleName", "selectIsAllowedToSubscribe", "role", "selectPermissions", "selectRecordingState", "selectRTMPState", "selectHLSState", "selectTranscriptionsState", "selectSessionId", "selectRoomStartTime", "selectIsLargeRoom", "selectIsEffectsEnabled", "selectIsVBEnabled", "selectEffectsKey", "selectPollsMap", "store", "selectHandRaisedPeers", "createSelector", "selectPeers", "peers", "peer", "selectWhiteboards", "store", "selectWhiteboard", "whiteboards", "selectPlaylistMap", "type", "selectPlaylistSelection", "selectPlaylistProgress", "selectPlaylistCurrentTime", "selectPlaylistPlaybackRate", "selectPlaylistVolume", "selectPlaylist", "storePlaylist", "selectPlaylistSelectedItem", "currentSelection", "selectAudioPlaylist", "selectVideoPlaylist", "byIDCurry", "selector", "id", "HMS_STORE_TAG", "HMSLogger", "tag", "data", "mark", "level", "entry", "error", "selectPeerID", "_store", "peerID", "selectTrackID", "trackID", "selectRoleName", "roleName", "selectAppDataKey", "key", "selectPollID", "pollID", "selectPeerByIDBare", "selectPeersMap", "storePeers", "selectTrackByIDBare", "selectTracksMap", "storeTracks", "selectVideoTrackByIDBare", "track", "selectAudioTrackByIDBare", "selectScreenAudioTrackByIDBare", "selectScreenVideoTrackByIDBare", "selectPollByIDBare", "selectPollsMap", "storePolls", "selectPeerByID", "selectAppData", "selectFullAppData", "appData", "selectPeerNameByID", "byIDCurry", "createSelector", "selectPeerByIDBare", "peer", "selectPeerTypeByID", "selectTrackByID", "selectTrackByIDBare", "selectVideoTrackByID", "selectVideoTrackByIDBare", "selectAudioTrackByID", "selectAudioTrackByIDBare", "selectScreenAudioTrackByID", "selectScreenAudioTrackByIDBare", "selectScreenVideoTrackByID", "selectScreenVideoTrackByIDBare", "selectVideoTrackByPeerID", "store", "peerID", "selectAudioTrackByPeerID", "selectAuxiliaryTracksByPeerID", "byIDCurry", "store", "peerID", "peer", "selectPeerByIDBare", "trackID", "selectSpeakerByTrackID", "selectTrackAudioByID", "createSelector", "speaker", "selectSpeakerByPeerID", "peerAudioTrack", "selectAudioTrackByPeerID", "selectPeerAudioByID", "selectConnectionQualityByPeerID", "selectAuxiliaryAudioByPeerID", "isAudio", "selectVideoPlaylistVideoTrackByPeerID", "selectTracksMap", "tracks", "track", "isVideoPlaylist", "isVideo", "selectVideoPlaylistAudioTrackByPeerID", "selectAudioPlaylistTrackByPeerID", "isAudioPlaylist", "selectScreenSharesByPeerId", "getScreenSharesByPeer", "selectScreenShareAudioByPeerID", "id", "createSelector", "selectScreenSharesByPeerId", "screenshare", "selectIsPeerAudioEnabled", "byIDCurry", "store", "peerID", "peer", "selectPeerByIDBare", "isTrackEnabled", "selectIsPeerVideoEnabled", "selectIsAudioLocallyMuted", "trackID", "selectIsLocallyMutedByPeerID", "selectIsScreenShareLocallyMutedByPeerID", "track", "selectAudioTrackVolume", "selectTrackByIDBare", "HMSLogger", "selectAudioVolumeByPeerID", "selectScreenshareAudioVolumeByPeerID", "selectSimulcastLayerByTrack", "selectMessagesByPeerIDInternal", "selectHMSMessages", "selectLocalPeerID", "selectPeerID", "messages", "localPeerID", "message", "_a", "selectMessagesByRoleInternal", "selectRoleName", "roleName", "_b", "selectBroadcastMessages", "selectUnreadMessageCountByRole", "m", "selectUnreadMessageCountByPeerID", "selectBroadcastMessagesUnreadCount", "selectMessagesByPeerID", "selectMessagesByRole", "selectMessagesUnreadCountByRole", "selectMessagesUnreadCountByPeerID", "selectPollByID", "byIDCurry", "selectPollByIDBare", "selectPeersWithAudioStatus", "createSelector", "selectPeersMap", "selectTracksMap", "peersMap", "tracksMap", "peer", "_a", "selectRoleChangeStoreRequest", "store", "selectRoleChangeRequest", "selectRolesMap", "request", "rolesMap", "selectIsAllowedToPublish", "selectLocalPeerRole", "role", "isRoleAllowedToPublish", "selectIsAllowedToPreviewMedia", "selectPreviewRole", "selectLocalVideoPlugins", "createSelector", "selectLocalVideoTrackID", "selectTracksMap", "trackID", "tracksMap", "track", "selectLocalAudioPlugins", "selectLocalAudioTrackID", "ConnectivityState", "ClientAnalyticsTransport", "LocalStorage", "env", "ws", "event", "requestBody", "url", "CLIENT_ANAYLTICS_PROD_ENDPOINT", "CLIENT_ANAYLTICS_QA_ENDPOINT", "response", "error", "HMSLogger", "events", "existingEvents", "existingEvent", "index", "storageEvent", "HTTPAnalyticsTransport", "FeedbackService", "response", "ErrorFactory", "_0", "__async", "token", "eventEndpoint", "info", "feedback", "HMSLogger", "url", "body", "__spreadProps", "__spreadValues", "err", "HMSException", "error", "message", "InitFlags", "TransportFailureCategory", "TransportState", "HMSConnectionRole", "selectLocalPeerID", "store", "selectLocalAudioTrackID", "selectLocalVideoTrackID", "selectPeerID", "_store", "peerID", "selectTrackID", "trackID", "selectRemoteTrackStatsMap", "selectPeerStatsMap", "selectLocalTrackStatsMap", "localPeerStats", "createSelector", "storePeerStats", "localPeerID", "packetsLost", "_a", "jitter", "publishBitrate", "subscribeBitrate", "availablePublishBitrate", "availableSubscribeBitrate", "totalBytesSent", "totalBytesReceived", "selectPeerStatsByIDBare", "selectTrackStatsByIDBare", "storeTrackStats", "selectLocalTrackStatsByIDBare", "storeLocalTrackStats", "peerStatsByID", "byIDCurry", "trackStatsByID", "localAudioTrackStats", "trackStats", "localAudioTrackStatsByID", "localVideoTrackStats", "localVideoTrackStatsByID", "a0_0x4e70", "_0x5d6085", "a0_0x249e", "_0x5a8e04", "_0x3c59dd", "_0x4e702e", "_0x249eac", "_0x11dadc", "_0x1468b0", "_0x55af7e", "_0x28bb0e", "_0x2a7361", "_0x5d72b7", "A", "_0x2759ad", "_0x280c4b", "_0x4f1d52", "_0x54757c", "_0x4d9e7d", "_0x10aba2", "_0x405f1a", "_0x3de7c9", "_0x415054", "_0x2458cd", "_0x3bba30", "_0x23ddb3", "__async", "_0x2050ed", "_0x477b2d", "_0x5d5f07", "_0x10caaf", "_0x11c90d", "_0x4ce670", "_0x49745e", "_0x3c0057", "_0x3deadf", "_0xa0236e", "_0x4cacef", "_0x273005", "_0x50251f", "_0x1adab6", "_0x13e8da", "_0x58183e", "_0x564e8c", "_0x482d78", "_0x3e765b", "_0x55cf77", "_0x1c65d6", "_0x38f381", "_0x38723e", "_0x1bf9af", "_0x3f58c5", "_0x44c22f", "_0x59e82f", "_0x116807", "_0x1d2820", "_0x4c352c", "_0x37bdc7", "_0xb888d1", "_0x548c00", "_0x5a6ad3", "_0x861790", "_0x905941", "_0x42e8c8", "_0x5e2cff", "_0x26bc89", "_0x3cd4d5", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_0x1c4742", "_0x56d92a", "_0x47d088", "_0x3610d1", "_0x311d01", "_0x22a665", "_0x4b5577", "_0x4f0cdb", "_0x4c00da", "_0x59063d", "_0x12a78f", "_0xda2225", "_0x5c7896", "_0x390095", "_0x199906", "_0x925d52", "_0x4b6af9", "_0x4a9259", "_0x836a58", "__spreadProps", "__spreadValues", "_0x1979f6", "_0x394522", "_0x5d4e93", "_0x3bfb2d", "_0x32aef9", "_0x7448cd", "_0x2221ed", "_0x80f310", "_0x28a620", "_0x38acef", "_0x47cd03", "_0x3303ae", "_0x55a162", "_0x34b3ee", "_0x28c3ba", "_0x326a10", "_0x8dbd74", "_0x380c73", "_0x3d8e45", "_0x94463f", "_0x184607", "_0x3913e5", "_0x26ccac", "_0x266a87", "_0x1de962", "_0x5d81b2", "_0x2a2648", "_0x352752", "_0x50631c", "_0x4e45cf", "_0x389e9d", "_0x21c946", "_0x58d097", "_0x380ce3", "_0x214bda", "_0x13c7d3", "_0x5bf6ff", "_0x366c49", "_0x187053", "_0x398de3", "_0x3ef3e4", "_0x3667e0", "_0x177388", "_0x50e019", "_0x5c452a", "_0x5e84ff", "_0x56e360", "_0x1af854", "_0x3d9778", "_0x339729", "_0x3ea253", "_0xe02094", "_0x2c0cf2", "_0x646c91", "_0x4d8241", "_0x426ae9", "_0x4014a5", "_0x39d2c9", "_0x1f5ebb", "_0x366f7f", "_0x4cf39d", "_0x4eecfa", "_0x476e24", "_0x43dda9", "_0x333291", "_0x39148b", "_0x2499ad", "_0x243274", "_0x39c27e", "_0x4b5901", "_0x29a4f5", "_0x355a75", "_0x298bc6", "_0x272b22", "_0x2d9792", "_0x119dc5", "_0x35e703", "_0x3ab1f8", "_0x9c0de6", "_0x3ee550", "_0x1a9214", "_0x3b08a9", "_0x2e9e2e", "_0x1a7644", "_0x1b32d0", "_0x489438", "_0xd7176", "_0x5ad631", "_0x1c8977", "_0x2b88d6", "_0xfca52a", "_0x5a5055", "_0x276545", "_0x57a4a9", "_0x1e928d", "_0x35de99", "_0x2fefbe", "_0x35df3d", "_0xf02f90", "_0x24e535", "_0x225d25", "_0x418146", "_0x20c63f", "_0x45ad0b", "_0x3c45f8", "_0x1273ed", "_0x98c3c9", "_0x330176", "_0x59c037", "_0x5f3520", "_0x39bfc5", "_0x3451c4", "_0x522946", "_0x5050ae", "_0x25dda3", "_0x57eb1a", "_0x21a1d6", "_0x4a33e6", "_0x3f7cf8", "_0x557df6", "_0x34299c", "_0x469c33", "_0x40354e", "_0x1271c7", "_0x1f2203", "_0x4476be", "_0x5efafc", "_0x255709", "_0xc39ef2", "_0x14ad9f", "_0x3d1f76", "_0x35b586", "_0x2bc2e0", "_0x277894", "_0x2fccda", "_0x4ea1b5", "_0x32ca2a", "_0x450cdb", "_0x208ee5", "_0x49617d", "_0x49f704", "_0x27d55f", "_0x308267", "_0x59f597", "_0x293dab", "_0x42680c", "_0x23dc24", "_0x455a60", "_0x2d5dbc", "_0x15b761", "_0x37fe23", "_0x1e2d7c", "_0x34230a", "_0x1bd2fe", "_0x294416", "_0x183480", "_0x298658", "_0x1e21a4", "_0x2ce709", "_0x4a1a25", "_0x337385", "_0x45e330", "_0x4f35f9", "_0x27030f", "_0x1e28a1", "_0x2710f8", "_0x4fd5e7", "_0xf30c55", "_0x53c1c1", "_0x358188", "_0x10f3d", "_0x7897f9", "_0x2c23e8", "_0x2af462", "_0x5148cf", "_0x35915f", "_0x48287b", "_0xa9921d", "_0x20f501", "_0x3a87a6", "_0x487441", "_0x513ad1", "_0x21b612", "_0x1f9a48", "_0x3f9060", "_0xb93eba", "_0xa177b8", "_0x36c5a3", "_0x5671c0", "_0x56fa11", "_0x5546a1", "_0x23a3aa", "_0x5a483a", "_0x1d72e7", "_0x2fffba", "_0x131985", "_0x5b02d5", "_0x4e46e3", "_0xd73330", "_0x3230ec", "_0x51c0d8", "_0x50ea38", "_0x46cd39", "_0x78dfe7", "_0x1ea778", "_0x52f664", "_0x5bef5f", "_0x184171", "_0x371384", "_0x2540cd", "_0x21fadb", "_0x568419", "_0x1fa32b", "_0x4c8129", "_0x11acce", "_0x1c8c9b", "_0x1b03d4", "_0x41a160", "_0x13a26a", "_0x29f31d", "_0x4aa35c", "_0x5169dd", "_0x31c1ff", "_0x2a9086", "_0x32b70d", "_0x4adf4c", "_0xaf45a8", "_0x11e4cf", "_0x33ec2b", "_0x1bd3d9", "_0x55006b", "_0x459422", "_0x1f9c99", "_0x1203e6", "_0x10d22e", "_0x4f8669", "_0x2426c9", "_0x36a992", "_0x572d2f", "_0x126ed6", "_0x590d71", "_0x4f6b9d", "_0x3e4784", "_0x226b15", "_0x4f9ed2", "_0x2f982b", "_0x110141", "_0x28154f", "_0x5a1341", "_0x302c59", "_0x2b2def", "_0xe5e05e", "_0x3f821e", "_0x4ddb6c", "_0x59c4b8", "_0x519f37", "_0x57bfaa", "_0x5995ec", "_0x23ac48", "_0x310084", "_0x903382", "_0x22f5da", "_0x27a867", "_0x2bb106", "_0x40ba05", "_0x2d4b75", "_0x11a7b2", "_0x1b3033", "_0x5d7c26", "_0x5899d7", "_0x2ab581", "_0x425958", "_0x1ce79e", "_0x35c32f", "_0x4473e3", "_0x13edd4", "_0x1a9cfb", "_0x23a97b", "_0xd495ef", "_0x3fb394", "_0x28e0ea", "_0x294989", "_0x3bffdf", "_0x35883e", "_0x39cada", "_0x225ea7", "_0x5c53a1", "_0x17e7f8", "_0xcbb4ef", "_0x5e304c", "_0x517c85", "_0x3161b1", "_0x4da7e0", "_0x4483c2", "_0x6979a3", "_0x2c7df0", "_0x39062f", "_0xac8c7a", "_0x484930", "_0x3ecf6d", "_0x281143", "_0x56c481", "_0x3bd2f1", "_0x2fc38b", "_0x2f6fde", "_0x936826", "_0x3bb755", "_0x5ef00c", "_0x3f5541", "_0xb84b3c", "_0x1f2b1a", "_0x6df280", "_0xd1549b", "_0x5973a0", "_0x6a1e46", "_0x49bb35", "_0x5a4439", "_0x2f0b80", "_0x4f394e", "_0x49b113", "_0x505d72", "_0x115bfc", "_0x120864", "_0x12b8a2", "I", "g", "_0x4b13d1", "_0x2a48b2", "_0x7805d2", "_0x12b062", "C", "_0x4751f8", "_0x3006dd", "_0x56ed5a", "Q", "B", "getAnalyticsEvent", "eventName", "DomainCategory", "HMSKrispPlugin", "eventBus", "HMSAudioPluginType", "ctx", "source"]
}
